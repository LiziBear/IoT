ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"modem.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	iter
  19              		.bss
  20              		.align	2
  21              		.type	iter, %object
  22              		.size	iter, 4
  23              	iter:
  24 0000 00000000 		.space	4
  25              		.comm	modem_state,1,1
  26              		.global	lock_acquired
  27              		.type	lock_acquired, %object
  28              		.size	lock_acquired, 1
  29              	lock_acquired:
  30 0004 00       		.space	1
  31              		.global	ready
  32              		.type	ready, %object
  33              		.size	ready, 1
  34              	ready:
  35 0005 00       		.space	1
  36              		.global	uart_string_index
  37              		.align	1
  38              		.type	uart_string_index, %object
  39              		.size	uart_string_index, 2
  40              	uart_string_index:
  41 0006 0000     		.space	2
  42              		.comm	feed_id,4,4
  43              		.global	uart_received_string
  44              		.align	2
  45              		.type	uart_received_string, %object
  46              		.size	uart_received_string, 1000
  47              	uart_received_string:
  48 0008 00000000 		.space	1000
  48      00000000 
  48      00000000 
  48      00000000 
  48      00000000 
  49              		.comm	api_key,4,4
  50              		.global	modem_apn
  51              		.section	.rodata
  52              		.align	2
  53              	.LC0:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 2


  54 0000 6570632E 		.ascii	"epc.tmobile.com\000"
  54      746D6F62 
  54      696C652E 
  54      636F6D00 
  55              		.data
  56              		.align	2
  57              		.type	modem_apn, %object
  58              		.size	modem_apn, 4
  59              	modem_apn:
  60 0000 00000000 		.word	.LC0
  61              		.section	.text.modem_set_api_feed,"ax",%progbits
  62              		.align	2
  63              		.global	modem_set_api_feed
  64              		.thumb
  65              		.thumb_func
  66              		.type	modem_set_api_feed, %function
  67              	modem_set_api_feed:
  68              	.LFB56:
  69              		.file 1 ".\\modem.c"
   1:.\modem.c     **** ///* ========================================
   2:.\modem.c     **** // *
   3:.\modem.c     **** // * Copyright YOUR COMPANY, THE YEAR
   4:.\modem.c     **** // * All Rights Reserved
   5:.\modem.c     **** // * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\modem.c     **** // *
   7:.\modem.c     **** // * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\modem.c     **** // * WHICH IS THE PROPERTY OF your company.
   9:.\modem.c     **** // *
  10:.\modem.c     **** // * ========================================
  11:.\modem.c     **** //*/
  12:.\modem.c     **** //
  13:.\modem.c     **** 
  14:.\modem.c     **** #include <device.h>
  15:.\modem.c     **** #include <stdio.h>
  16:.\modem.c     **** #include <string.h>
  17:.\modem.c     **** #include "modem.h"
  18:.\modem.c     **** #include "packet.h"
  19:.\modem.c     **** //#include "debug.h" TODO: ACCOUNT FOR THIS
  20:.\modem.c     **** 
  21:.\modem.c     **** // declare varaiables
  22:.\modem.c     **** int	   iter = 0;
  23:.\modem.c     **** uint8  modem_state, lock_acquired = 0u, ready = 0u;
  24:.\modem.c     **** uint16 uart_string_index = 0u;
  25:.\modem.c     **** uint32 feed_id;
  26:.\modem.c     **** char   uart_received_string[1000] = {0}, *api_key;
  27:.\modem.c     **** char*  modem_apn = "epc.tmobile.com";
  28:.\modem.c     **** 
  29:.\modem.c     **** 
  30:.\modem.c     **** 
  31:.\modem.c     **** // prototype modem interrupt
  32:.\modem.c     **** CY_ISR_PROTO(Telit_isr_rx);
  33:.\modem.c     **** void uart_string_reset();
  34:.\modem.c     **** 
  35:.\modem.c     **** uint8 modem_set_api_feed(uint32 id, char* key){
  70              		.loc 1 35 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 3


  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75 0000 80B4     		push	{r7}
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
  36:.\modem.c     ****     feed_id = id;
  84              		.loc 1 36 0
  85 000a 064B     		ldr	r3, .L3
  86 000c 7A68     		ldr	r2, [r7, #4]
  87 000e 1A60     		str	r2, [r3]
  37:.\modem.c     ****     api_key = key;
  88              		.loc 1 37 0
  89 0010 054B     		ldr	r3, .L3+4
  90 0012 3A68     		ldr	r2, [r7]
  91 0014 1A60     		str	r2, [r3]
  38:.\modem.c     ****     return 1u;
  92              		.loc 1 38 0
  93 0016 0123     		movs	r3, #1
  39:.\modem.c     **** }
  94              		.loc 1 39 0
  95 0018 1846     		mov	r0, r3
  96 001a 0C37     		adds	r7, r7, #12
  97 001c BD46     		mov	sp, r7
  98              		@ sp needed
  99 001e 5DF8047B 		ldr	r7, [sp], #4
 100 0022 7047     		bx	lr
 101              	.L4:
 102              		.align	2
 103              	.L3:
 104 0024 00000000 		.word	feed_id
 105 0028 00000000 		.word	api_key
 106              		.cfi_endproc
 107              	.LFE56:
 108              		.size	modem_set_api_feed, .-modem_set_api_feed
 109              		.section	.text.modem_startup,"ax",%progbits
 110              		.align	2
 111              		.global	modem_startup
 112              		.thumb
 113              		.thumb_func
 114              		.type	modem_startup, %function
 115              	modem_startup:
 116              	.LFB57:
  40:.\modem.c     **** 
  41:.\modem.c     **** // startup sequence to power on the modem, start modem
  42:.\modem.c     **** // components and prepare for sending/receiving messages
  43:.\modem.c     **** // over the network
  44:.\modem.c     **** uint8	modem_startup() {
 117              		.loc 1 44 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 4


 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
  45:.\modem.c     **** 	iter = 0, ready = 0u;
 127              		.loc 1 45 0
 128 0004 1A4B     		ldr	r3, .L10
 129 0006 0022     		movs	r2, #0
 130 0008 1A60     		str	r2, [r3]
 131 000a 1A4B     		ldr	r3, .L10+4
 132 000c 0022     		movs	r2, #0
 133 000e 1A70     		strb	r2, [r3]
  46:.\modem.c     **** 
  47:.\modem.c     **** 	modem_start();
 134              		.loc 1 47 0
 135 0010 FFF7FEFF 		bl	modem_start
  48:.\modem.c     **** 	
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 136              		.loc 1 49 0
 137 0014 24E0     		b	.L6
 138              	.L9:
  50:.\modem.c     **** 		iter++;
 139              		.loc 1 50 0
 140 0016 164B     		ldr	r3, .L10
 141 0018 1B68     		ldr	r3, [r3]
 142 001a 5A1C     		adds	r2, r3, #1
 143 001c 144B     		ldr	r3, .L10
 144 001e 1A60     		str	r2, [r3]
  51:.\modem.c     **** 
  52:.\modem.c     **** 		/* Set up the modem */
  53:.\modem.c     **** 		//LED_Write(!LED_Read());
  54:.\modem.c     **** 		ready = modem_power_on();
 145              		.loc 1 54 0
 146 0020 FFF7FEFF 		bl	modem_power_on
 147 0024 0346     		mov	r3, r0
 148 0026 1A46     		mov	r2, r3
 149 0028 124B     		ldr	r3, .L10+4
 150 002a 1A70     		strb	r2, [r3]
  55:.\modem.c     **** 		//LED_Write(!LED_Read());
  56:.\modem.c     **** 		//ready = at_write_command("AT\r","OK",1000u);      
  57:.\modem.c     **** 		modem_set_flow_control(0u);	
 151              		.loc 1 57 0
 152 002c 0020     		movs	r0, #0
 153 002e FFF7FEFF 		bl	modem_set_flow_control
  58:.\modem.c     **** 		modem_setup();
 154              		.loc 1 58 0
 155 0032 FFF7FEFF 		bl	modem_setup
  59:.\modem.c     **** 		
  60:.\modem.c     **** 		if ( ready == 1u ) {
 156              		.loc 1 60 0
 157 0036 0F4B     		ldr	r3, .L10+4
 158 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 003a 012B     		cmp	r3, #1
 160 003c 0ED1     		bne	.L7
  61:.\modem.c     **** 			// Connect modem to network
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 5


  62:.\modem.c     **** 			// (modem_connect already accounts for retries)
  63:.\modem.c     **** 			//LED_Write(!LED_Read());
  64:.\modem.c     **** 			ready = modem_connect();
 161              		.loc 1 64 0
 162 003e FFF7FEFF 		bl	modem_connect
 163 0042 0346     		mov	r3, r0
 164 0044 1A46     		mov	r2, r3
 165 0046 0B4B     		ldr	r3, .L10+4
 166 0048 1A70     		strb	r2, [r3]
  65:.\modem.c     **** 			
  66:.\modem.c     **** 			if( ready == 3u ) {
 167              		.loc 1 66 0
 168 004a 0A4B     		ldr	r3, .L10+4
 169 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 004e 032B     		cmp	r3, #3
 171 0050 06D1     		bne	.L6
  67:.\modem.c     **** 								
  68:.\modem.c     **** 				iter = MAX_CONN_ATTEMPTS;//break;	
 172              		.loc 1 68 0
 173 0052 074B     		ldr	r3, .L10
 174 0054 0522     		movs	r2, #5
 175 0056 1A60     		str	r2, [r3]
  69:.\modem.c     **** 				return 1u;
 176              		.loc 1 69 0
 177 0058 0123     		movs	r3, #1
 178 005a 06E0     		b	.L8
 179              	.L7:
  70:.\modem.c     **** 			}
  71:.\modem.c     **** 		}
  72:.\modem.c     **** 		else {
  73:.\modem.c     **** 			modem_reset();
 180              		.loc 1 73 0
 181 005c FFF7FEFF 		bl	modem_reset
 182              	.L6:
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 183              		.loc 1 49 0 discriminator 1
 184 0060 034B     		ldr	r3, .L10
 185 0062 1B68     		ldr	r3, [r3]
 186 0064 042B     		cmp	r3, #4
 187 0066 D6DD     		ble	.L9
  74:.\modem.c     **** 		}
  75:.\modem.c     **** 	}
  76:.\modem.c     **** 	
  77:.\modem.c     **** 	// Timed out -- Failed to connect
  78:.\modem.c     **** 	return 0u;
 188              		.loc 1 78 0
 189 0068 0023     		movs	r3, #0
 190              	.L8:
  79:.\modem.c     **** }
 191              		.loc 1 79 0
 192 006a 1846     		mov	r0, r3
 193 006c 80BD     		pop	{r7, pc}
 194              	.L11:
 195 006e 00BF     		.align	2
 196              	.L10:
 197 0070 00000000 		.word	iter
 198 0074 00000000 		.word	ready
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 6


 199              		.cfi_endproc
 200              	.LFE57:
 201              		.size	modem_startup, .-modem_startup
 202              		.section	.text.modem_shutdown,"ax",%progbits
 203              		.align	2
 204              		.global	modem_shutdown
 205              		.thumb
 206              		.thumb_func
 207              		.type	modem_shutdown, %function
 208              	modem_shutdown:
 209              	.LFB58:
  80:.\modem.c     **** 
  81:.\modem.c     **** // shutdown sequence to stop modem components
  82:.\modem.c     **** // and power down the modem
  83:.\modem.c     **** uint8 	modem_shutdown() {
 210              		.loc 1 83 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
  84:.\modem.c     **** 	if (modem_power_off()){
 220              		.loc 1 84 0
 221 0004 FFF7FEFF 		bl	modem_power_off
 222 0008 0346     		mov	r3, r0
 223 000a 002B     		cmp	r3, #0
 224 000c 01D0     		beq	.L13
  85:.\modem.c     **** 		return 1u;	
 225              		.loc 1 85 0
 226 000e 0123     		movs	r3, #1
 227 0010 00E0     		b	.L14
 228              	.L13:
  86:.\modem.c     **** 	}
  87:.\modem.c     **** 	
  88:.\modem.c     **** 	return 0u;
 229              		.loc 1 88 0
 230 0012 0023     		movs	r3, #0
 231              	.L14:
  89:.\modem.c     **** }
 232              		.loc 1 89 0
 233 0014 1846     		mov	r0, r3
 234 0016 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE58:
 237              		.size	modem_shutdown, .-modem_shutdown
 238              		.section	.text.modem_start,"ax",%progbits
 239              		.align	2
 240              		.global	modem_start
 241              		.thumb
 242              		.thumb_func
 243              		.type	modem_start, %function
 244              	modem_start:
 245              	.LFB59:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 7


  90:.\modem.c     **** 
  91:.\modem.c     **** // initialize modem
  92:.\modem.c     **** void modem_start(){
 246              		.loc 1 92 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  93:.\modem.c     ****     Telit_UART_Start();
 256              		.loc 1 93 0
 257 0004 FFF7FEFF 		bl	Telit_UART_Start
  94:.\modem.c     ****     Telit_ControlReg_Write(0u);
 258              		.loc 1 94 0
 259 0008 0020     		movs	r0, #0
 260 000a FFF7FEFF 		bl	Telit_ControlReg_Write
  95:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
  96:.\modem.c     **** 	Telit_ON_Write(1u);			// Prep modem for "push button"
 261              		.loc 1 96 0
 262 000e 0120     		movs	r0, #1
 263 0010 FFF7FEFF 		bl	Telit_ON_Write
  97:.\modem.c     **** 	Telit_RST_Write(1u);		// Prep modem for "push button"
 264              		.loc 1 97 0
 265 0014 0120     		movs	r0, #1
 266 0016 FFF7FEFF 		bl	Telit_RST_Write
  98:.\modem.c     ****     Telit_isr_rx_StartEx(Telit_isr_rx);
 267              		.loc 1 98 0
 268 001a 0348     		ldr	r0, .L16
 269 001c FFF7FEFF 		bl	Telit_isr_rx_StartEx
  99:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 270              		.loc 1 99 0
 271 0020 024B     		ldr	r3, .L16+4
 272 0022 0022     		movs	r2, #0
 273 0024 1A70     		strb	r2, [r3]
 100:.\modem.c     **** }
 274              		.loc 1 100 0
 275 0026 80BD     		pop	{r7, pc}
 276              	.L17:
 277              		.align	2
 278              	.L16:
 279 0028 00000000 		.word	Telit_isr_rx
 280 002c 00000000 		.word	modem_state
 281              		.cfi_endproc
 282              	.LFE59:
 283              		.size	modem_start, .-modem_start
 284              		.section	.text.modem_stop,"ax",%progbits
 285              		.align	2
 286              		.global	modem_stop
 287              		.thumb
 288              		.thumb_func
 289              		.type	modem_stop, %function
 290              	modem_stop:
 291              	.LFB60:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 8


 101:.\modem.c     **** 
 102:.\modem.c     **** // deinitialize modem
 103:.\modem.c     **** void modem_stop(){
 292              		.loc 1 103 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 104:.\modem.c     ****     Telit_UART_Stop();
 302              		.loc 1 104 0
 303 0004 FFF7FEFF 		bl	Telit_UART_Stop
 105:.\modem.c     ****     Telit_ControlReg_Write(0u);
 304              		.loc 1 105 0
 305 0008 0020     		movs	r0, #0
 306 000a FFF7FEFF 		bl	Telit_ControlReg_Write
 106:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
 107:.\modem.c     **** 	Telit_ON_Write(0u);			// Save energy by pulling down "push button"
 307              		.loc 1 107 0
 308 000e 0020     		movs	r0, #0
 309 0010 FFF7FEFF 		bl	Telit_ON_Write
 108:.\modem.c     **** 	Telit_RST_Write(0u);		// Save energy by pulling down "push button"
 310              		.loc 1 108 0
 311 0014 0020     		movs	r0, #0
 312 0016 FFF7FEFF 		bl	Telit_RST_Write
 109:.\modem.c     ****     Telit_isr_rx_Stop();
 313              		.loc 1 109 0
 314 001a FFF7FEFF 		bl	Telit_isr_rx_Stop
 110:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 315              		.loc 1 110 0
 316 001e 024B     		ldr	r3, .L19
 317 0020 0022     		movs	r2, #0
 318 0022 1A70     		strb	r2, [r3]
 111:.\modem.c     **** }
 319              		.loc 1 111 0
 320 0024 80BD     		pop	{r7, pc}
 321              	.L20:
 322 0026 00BF     		.align	2
 323              	.L19:
 324 0028 00000000 		.word	modem_state
 325              		.cfi_endproc
 326              	.LFE60:
 327              		.size	modem_stop, .-modem_stop
 328              		.section	.text.at_write_command,"ax",%progbits
 329              		.align	2
 330              		.global	at_write_command
 331              		.thumb
 332              		.thumb_func
 333              		.type	at_write_command, %function
 334              	at_write_command:
 335              	.LFB61:
 112:.\modem.c     **** 
 113:.\modem.c     **** // send at-command to modem
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 9


 114:.\modem.c     **** uint8 at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout){
 336              		.loc 1 114 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 40
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 8AB0     		sub	sp, sp, #40
 345              		.cfi_def_cfa_offset 48
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 F860     		str	r0, [r7, #12]
 349 0008 B960     		str	r1, [r7, #8]
 350 000a 7A60     		str	r2, [r7, #4]
 115:.\modem.c     ****     uint8 response = 0u;
 351              		.loc 1 115 0
 352 000c 0023     		movs	r3, #0
 353 000e 87F82730 		strb	r3, [r7, #39]
 116:.\modem.c     ****     uint32 i = 0u, delay = 100u, interval = uart_timeout/delay;
 354              		.loc 1 116 0
 355 0012 0023     		movs	r3, #0
 356 0014 3B62     		str	r3, [r7, #32]
 357 0016 6423     		movs	r3, #100
 358 0018 FB61     		str	r3, [r7, #28]
 359 001a 7A68     		ldr	r2, [r7, #4]
 360 001c FB69     		ldr	r3, [r7, #28]
 361 001e B2FBF3F3 		udiv	r3, r2, r3
 362 0022 BB61     		str	r3, [r7, #24]
 117:.\modem.c     ****     
 118:.\modem.c     ****     uart_string_reset();
 363              		.loc 1 118 0
 364 0024 FFF7FEFF 		bl	uart_string_reset
 119:.\modem.c     ****     Telit_UART_PutString(uart_string);//Telit_UART_PutString("AT\r");
 365              		.loc 1 119 0
 366 0028 F868     		ldr	r0, [r7, #12]
 367 002a FFF7FEFF 		bl	Telit_UART_PutString
 120:.\modem.c     ****     
 121:.\modem.c     ****     if( strcmp(expected_response, "") != 0){
 368              		.loc 1 121 0
 369 002e BB68     		ldr	r3, [r7, #8]
 370 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371 0032 002B     		cmp	r3, #0
 372 0034 18D0     		beq	.L22
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 373              		.loc 1 122 0
 374 0036 0023     		movs	r3, #0
 375 0038 3B62     		str	r3, [r7, #32]
 376 003a 11E0     		b	.L23
 377              	.L25:
 378              	.LBB2:
 123:.\modem.c     ****             char* valid = strstr(uart_received_string, expected_response);
 379              		.loc 1 123 0
 380 003c 0D48     		ldr	r0, .L27
 381 003e B968     		ldr	r1, [r7, #8]
 382 0040 FFF7FEFF 		bl	strstr
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 10


 383 0044 7861     		str	r0, [r7, #20]
 124:.\modem.c     ****             if(valid != NULL){
 384              		.loc 1 124 0
 385 0046 7B69     		ldr	r3, [r7, #20]
 386 0048 002B     		cmp	r3, #0
 387 004a 03D0     		beq	.L24
 125:.\modem.c     ****                 response = 1u;
 388              		.loc 1 125 0
 389 004c 0123     		movs	r3, #1
 390 004e 87F82730 		strb	r3, [r7, #39]
 126:.\modem.c     ****                 break;
 391              		.loc 1 126 0
 392 0052 09E0     		b	.L22
 393              	.L24:
 127:.\modem.c     ****             }
 128:.\modem.c     ****             CyDelay(delay);
 394              		.loc 1 128 0
 395 0054 F869     		ldr	r0, [r7, #28]
 396 0056 FFF7FEFF 		bl	CyDelay
 397              	.LBE2:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 398              		.loc 1 122 0
 399 005a 3B6A     		ldr	r3, [r7, #32]
 400 005c 0133     		adds	r3, r3, #1
 401 005e 3B62     		str	r3, [r7, #32]
 402              	.L23:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 403              		.loc 1 122 0 is_stmt 0 discriminator 1
 404 0060 3A6A     		ldr	r2, [r7, #32]
 405 0062 BB69     		ldr	r3, [r7, #24]
 406 0064 9A42     		cmp	r2, r3
 407 0066 E9D3     		bcc	.L25
 408              	.L22:
 129:.\modem.c     ****         }
 130:.\modem.c     ****     }
 131:.\modem.c     ****     
 132:.\modem.c     ****     return response;
 409              		.loc 1 132 0 is_stmt 1
 410 0068 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 133:.\modem.c     **** }
 411              		.loc 1 133 0
 412 006c 1846     		mov	r0, r3
 413 006e 2837     		adds	r7, r7, #40
 414 0070 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0072 80BD     		pop	{r7, pc}
 417              	.L28:
 418              		.align	2
 419              	.L27:
 420 0074 00000000 		.word	uart_received_string
 421              		.cfi_endproc
 422              	.LFE61:
 423              		.size	at_write_command, .-at_write_command
 424              		.section	.rodata
 425              		.align	2
 426              	.LC1:
 427 0010 41540D00 		.ascii	"AT\015\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 11


 428              		.align	2
 429              	.LC2:
 430 0014 4F4B00   		.ascii	"OK\000"
 431              		.section	.text.modem_power_on,"ax",%progbits
 432              		.align	2
 433              		.global	modem_power_on
 434              		.thumb
 435              		.thumb_func
 436              		.type	modem_power_on, %function
 437              	modem_power_on:
 438              	.LFB62:
 134:.\modem.c     **** 
 135:.\modem.c     **** uint8 modem_power_on(){
 439              		.loc 1 135 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 136:.\modem.c     **** 
 137:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) {
 449              		.loc 1 137 0
 450 0004 174B     		ldr	r3, .L33
 451 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0008 002B     		cmp	r3, #0
 453 000a 01D0     		beq	.L30
 138:.\modem.c     ****         // Modem is already on
 139:.\modem.c     ****         return 1u;
 454              		.loc 1 139 0
 455 000c 0123     		movs	r3, #1
 456 000e 26E0     		b	.L31
 457              	.L30:
 140:.\modem.c     ****     }
 141:.\modem.c     ****     
 142:.\modem.c     ****     // Set ON, PWR pins low
 143:.\modem.c     ****     Telit_ON_Write(0u); 
 458              		.loc 1 143 0
 459 0010 0020     		movs	r0, #0
 460 0012 FFF7FEFF 		bl	Telit_ON_Write
 144:.\modem.c     ****     Telit_RST_Write(0u);
 461              		.loc 1 144 0
 462 0016 0020     		movs	r0, #0
 463 0018 FFF7FEFF 		bl	Telit_RST_Write
 145:.\modem.c     ****     
 146:.\modem.c     ****     // Provide power to Telit module
 147:.\modem.c     ****     //Telit_PWR_Write(0u); //provide power to modem
 148:.\modem.c     ****     Telit_ControlReg_Write(1u);
 464              		.loc 1 148 0
 465 001c 0120     		movs	r0, #1
 466 001e FFF7FEFF 		bl	Telit_ControlReg_Write
 149:.\modem.c     ****     
 150:.\modem.c     ****     // "Push" the ON button for 2 seconds
 151:.\modem.c     ****     Telit_ON_Write(1u); 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 12


 467              		.loc 1 151 0
 468 0022 0120     		movs	r0, #1
 469 0024 FFF7FEFF 		bl	Telit_ON_Write
 152:.\modem.c     ****     CyDelay(2000u);     // the pad ON# must be tied low for at least 1 second and then released.
 470              		.loc 1 152 0
 471 0028 4FF4FA60 		mov	r0, #2000
 472 002c FFF7FEFF 		bl	CyDelay
 153:.\modem.c     ****     //CyDelay(1500u);     // At least 3 seconds if VBAT < 3.4 for GC 864
 154:.\modem.c     ****     Telit_ON_Write(0u); 
 473              		.loc 1 154 0
 474 0030 0020     		movs	r0, #0
 475 0032 FFF7FEFF 		bl	Telit_ON_Write
 155:.\modem.c     ****     
 156:.\modem.c     ****     CyDelay(5000u);  
 476              		.loc 1 156 0
 477 0036 41F28830 		movw	r0, #5000
 478 003a FFF7FEFF 		bl	CyDelay
 157:.\modem.c     ****     /* NOTE:
 158:.\modem.c     ****         "To get the desirable stability, 
 159:.\modem.c     ****         CC864-DUAL needs at least 10 seconds 
 160:.\modem.c     ****         after the PWRMON goes HIGH.*/
 161:.\modem.c     **** 	
 162:.\modem.c     **** 	if(at_write_command("AT\r","OK",1000u) == 1){    
 479              		.loc 1 162 0
 480 003e 0A48     		ldr	r0, .L33+4
 481 0040 0A49     		ldr	r1, .L33+8
 482 0042 4FF47A72 		mov	r2, #1000
 483 0046 FFF7FEFF 		bl	at_write_command
 484 004a 0346     		mov	r3, r0
 485 004c 012B     		cmp	r3, #1
 486 004e 05D1     		bne	.L32
 163:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 487              		.loc 1 163 0
 488 0050 044B     		ldr	r3, .L33
 489 0052 0122     		movs	r2, #1
 490 0054 1A70     		strb	r2, [r3]
 164:.\modem.c     ****         return modem_state;
 491              		.loc 1 164 0
 492 0056 034B     		ldr	r3, .L33
 493 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 005a 00E0     		b	.L31
 495              	.L32:
 165:.\modem.c     ****     }	
 166:.\modem.c     **** 	
 167:.\modem.c     **** 	// Failed to turn on
 168:.\modem.c     ****     return 0u;
 496              		.loc 1 168 0
 497 005c 0023     		movs	r3, #0
 498              	.L31:
 169:.\modem.c     **** }
 499              		.loc 1 169 0
 500 005e 1846     		mov	r0, r3
 501 0060 80BD     		pop	{r7, pc}
 502              	.L34:
 503 0062 00BF     		.align	2
 504              	.L33:
 505 0064 00000000 		.word	modem_state
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 13


 506 0068 10000000 		.word	.LC1
 507 006c 14000000 		.word	.LC2
 508              		.cfi_endproc
 509              	.LFE62:
 510              		.size	modem_power_on, .-modem_power_on
 511              		.section	.text.modem_power_off,"ax",%progbits
 512              		.align	2
 513              		.global	modem_power_off
 514              		.thumb
 515              		.thumb_func
 516              		.type	modem_power_off, %function
 517              	modem_power_off:
 518              	.LFB63:
 170:.\modem.c     **** 
 171:.\modem.c     **** uint8 modem_power_off(){
 519              		.loc 1 171 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 172:.\modem.c     **** 	
 173:.\modem.c     ****     if (modem_state == MODEM_STATE_OFF) {
 529              		.loc 1 173 0
 530 0004 104B     		ldr	r3, .L38
 531 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0008 002B     		cmp	r3, #0
 533 000a 01D1     		bne	.L36
 174:.\modem.c     ****         // Modem is already off
 175:.\modem.c     ****         return 1u;
 534              		.loc 1 175 0
 535 000c 0123     		movs	r3, #1
 536 000e 19E0     		b	.L37
 537              	.L36:
 176:.\modem.c     ****     }
 177:.\modem.c     **** 	
 178:.\modem.c     ****     // Try to disconnect the modem.  
 179:.\modem.c     ****     // Continue whether or not disconnect is successful
 180:.\modem.c     ****     modem_disconnect();
 538              		.loc 1 180 0
 539 0010 FFF7FEFF 		bl	modem_disconnect
 181:.\modem.c     ****     
 182:.\modem.c     ****     // "Push" the ON button for 
 183:.\modem.c     ****     Telit_ON_Write(1u);
 540              		.loc 1 183 0
 541 0014 0120     		movs	r0, #1
 542 0016 FFF7FEFF 		bl	Telit_ON_Write
 184:.\modem.c     ****     CyDelay(2500u);  // To turn the CC864-DUAL off, the ON/OFF Pin must be tied low for 2 second an
 543              		.loc 1 184 0
 544 001a 40F6C410 		movw	r0, #2500
 545 001e FFF7FEFF 		bl	CyDelay
 185:.\modem.c     ****     Telit_ON_Write(0u);
 546              		.loc 1 185 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 14


 547 0022 0020     		movs	r0, #0
 548 0024 FFF7FEFF 		bl	Telit_ON_Write
 186:.\modem.c     ****     
 187:.\modem.c     ****     CyDelay(5000u); 
 549              		.loc 1 187 0
 550 0028 41F28830 		movw	r0, #5000
 551 002c FFF7FEFF 		bl	CyDelay
 188:.\modem.c     ****     /* CyDelay(5000u); // wait for module to turn off
 189:.\modem.c     ****         "Normally it will be above 10 seconds later from releasing
 190:.\modem.c     ****         ON/OFF# and DTE should monitor the status of PWRMON to see the
 191:.\modem.c     ****         actual power off."  */
 192:.\modem.c     ****     
 193:.\modem.c     ****     // Book keeping
 194:.\modem.c     ****     Telit_ControlReg_Write(0u);    
 552              		.loc 1 194 0
 553 0030 0020     		movs	r0, #0
 554 0032 FFF7FEFF 		bl	Telit_ControlReg_Write
 195:.\modem.c     ****     //Telit_PWR_Write(1u); // Cut power to modem; 1u Disables power to the modem
 196:.\modem.c     ****     Telit_RST_Write(0u); // Make sure the RESET "button" is not pressed
 555              		.loc 1 196 0
 556 0036 0020     		movs	r0, #0
 557 0038 FFF7FEFF 		bl	Telit_RST_Write
 197:.\modem.c     ****     
 198:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 558              		.loc 1 198 0
 559 003c 024B     		ldr	r3, .L38
 560 003e 0022     		movs	r2, #0
 561 0040 1A70     		strb	r2, [r3]
 199:.\modem.c     ****     return 1u;
 562              		.loc 1 199 0
 563 0042 0123     		movs	r3, #1
 564              	.L37:
 200:.\modem.c     **** }
 565              		.loc 1 200 0
 566 0044 1846     		mov	r0, r3
 567 0046 80BD     		pop	{r7, pc}
 568              	.L39:
 569              		.align	2
 570              	.L38:
 571 0048 00000000 		.word	modem_state
 572              		.cfi_endproc
 573              	.LFE63:
 574              		.size	modem_power_off, .-modem_power_off
 575              		.section	.text.modem_reset,"ax",%progbits
 576              		.align	2
 577              		.global	modem_reset
 578              		.thumb
 579              		.thumb_func
 580              		.type	modem_reset, %function
 581              	modem_reset:
 582              	.LFB64:
 201:.\modem.c     **** 
 202:.\modem.c     **** uint8 modem_reset(){
 583              		.loc 1 202 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 15


 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 203:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) { // The modem is idle/ready (powered on)
 593              		.loc 1 203 0
 594 0004 0C4B     		ldr	r3, .L43
 595 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596 0008 002B     		cmp	r3, #0
 597 000a 10D0     		beq	.L41
 204:.\modem.c     ****         
 205:.\modem.c     ****         Telit_RST_Write(1u);
 598              		.loc 1 205 0
 599 000c 0120     		movs	r0, #1
 600 000e FFF7FEFF 		bl	Telit_RST_Write
 206:.\modem.c     ****         CyDelay(500u);  //   To reset and to reboot the module, 
 601              		.loc 1 206 0
 602 0012 4FF4FA70 		mov	r0, #500
 603 0016 FFF7FEFF 		bl	CyDelay
 207:.\modem.c     ****                         // the RESET pin must be tied low for at least 200 milliseconds and then re
 208:.\modem.c     ****         Telit_RST_Write(0u);
 604              		.loc 1 208 0
 605 001a 0020     		movs	r0, #0
 606 001c FFF7FEFF 		bl	Telit_RST_Write
 209:.\modem.c     ****         
 210:.\modem.c     ****         CyDelay(5000u); //CyDelay(5000u);
 607              		.loc 1 210 0
 608 0020 41F28830 		movw	r0, #5000
 609 0024 FFF7FEFF 		bl	CyDelay
 211:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 610              		.loc 1 211 0
 611 0028 034B     		ldr	r3, .L43
 612 002a 0122     		movs	r2, #1
 613 002c 1A70     		strb	r2, [r3]
 614              	.L41:
 212:.\modem.c     ****     }
 213:.\modem.c     ****     return modem_state;
 615              		.loc 1 213 0
 616 002e 024B     		ldr	r3, .L43
 617 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214:.\modem.c     **** }
 618              		.loc 1 214 0
 619 0032 1846     		mov	r0, r3
 620 0034 80BD     		pop	{r7, pc}
 621              	.L44:
 622 0036 00BF     		.align	2
 623              	.L43:
 624 0038 00000000 		.word	modem_state
 625              		.cfi_endproc
 626              	.LFE64:
 627              		.size	modem_reset, .-modem_reset
 628              		.section	.text.modem_setup,"ax",%progbits
 629              		.align	2
 630              		.global	modem_setup
 631              		.thumb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 16


 632              		.thumb_func
 633              		.type	modem_setup, %function
 634              	modem_setup:
 635              	.LFB65:
 215:.\modem.c     **** 
 216:.\modem.c     **** uint8 modem_setup() {
 636              		.loc 1 216 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 217:.\modem.c     **** /* Initialize configurations for the modem */
 218:.\modem.c     **** 	// Set Error Reports to verbose mode
 219:.\modem.c     **** 	if (modem_set_error_reports(2u) != 1u) {
 646              		.loc 1 219 0
 647 0004 0220     		movs	r0, #2
 648 0006 FFF7FEFF 		bl	modem_set_error_reports
 649 000a 0346     		mov	r3, r0
 650 000c 012B     		cmp	r3, #1
 651 000e 01D0     		beq	.L46
 220:.\modem.c     **** 		return 0u;
 652              		.loc 1 220 0
 653 0010 0023     		movs	r3, #0
 654 0012 00E0     		b	.L47
 655              	.L46:
 221:.\modem.c     **** 	}
 222:.\modem.c     **** 	
 223:.\modem.c     **** 	/* UNCOMMENT when using GC864 instead of CC864
 224:.\modem.c     **** 	// Set the APN for GC864-Dual-V2
 225:.\modem.c     **** 	if (modem_set_apn() != 1u) {
 226:.\modem.c     **** 		return 0u;
 227:.\modem.c     **** 	}
 228:.\modem.c     **** 		
 229:.\modem.c     **** 	// Select the band for GC864-Dual-V2
 230:.\modem.c     **** 	if (modem_set_band(1u) != 1u) {
 231:.\modem.c     **** 		return 0u;
 232:.\modem.c     **** 	}
 233:.\modem.c     **** 	*/
 234:.\modem.c     **** 	
 235:.\modem.c     **** 	return 1u;
 656              		.loc 1 235 0
 657 0014 0123     		movs	r3, #1
 658              	.L47:
 236:.\modem.c     **** }
 659              		.loc 1 236 0
 660 0016 1846     		mov	r0, r3
 661 0018 80BD     		pop	{r7, pc}
 662              		.cfi_endproc
 663              	.LFE65:
 664              		.size	modem_setup, .-modem_setup
 665 001a 00BF     		.section	.rodata
 666 0017 00       		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 17


 667              	.LC3:
 668 0018 41542353 		.ascii	"AT#SGACT=1,1\015\000"
 668      47414354 
 668      3D312C31 
 668      0D00
 669              		.section	.text.modem_connect,"ax",%progbits
 670              		.align	2
 671              		.global	modem_connect
 672              		.thumb
 673              		.thumb_func
 674              		.type	modem_connect, %function
 675              	modem_connect:
 676              	.LFB66:
 237:.\modem.c     **** 
 238:.\modem.c     **** uint8 modem_connect(){
 677              		.loc 1 238 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 239:.\modem.c     **** /* Establish modem connection with the network */	
 240:.\modem.c     **** 	uint8 count = 0u, network_status = 0u;
 689              		.loc 1 240 0
 690 0006 0023     		movs	r3, #0
 691 0008 FB71     		strb	r3, [r7, #7]
 692 000a 0023     		movs	r3, #0
 693 000c BB71     		strb	r3, [r7, #6]
 241:.\modem.c     **** 	
 242:.\modem.c     **** 	// Check if modem is registered on home network
 243:.\modem.c     **** 	// Buffer should return +CREG: 0,1
 244:.\modem.c     **** 	// modem_check_network returns 1u if buffer contains ",1"
 245:.\modem.c     **** 	network_status = modem_check_network();
 694              		.loc 1 245 0
 695 000e FFF7FEFF 		bl	modem_check_network
 696 0012 0346     		mov	r3, r0
 697 0014 BB71     		strb	r3, [r7, #6]
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 698              		.loc 1 246 0
 699 0016 0AE0     		b	.L49
 700              	.L51:
 247:.\modem.c     **** 
 248:.\modem.c     **** 		network_status = modem_check_network();
 701              		.loc 1 248 0
 702 0018 FFF7FEFF 		bl	modem_check_network
 703 001c 0346     		mov	r3, r0
 704 001e BB71     		strb	r3, [r7, #6]
 249:.\modem.c     **** 		CyDelay(3000u);
 705              		.loc 1 249 0
 706 0020 40F6B830 		movw	r0, #3000
 707 0024 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 18


 250:.\modem.c     **** 		count++;
 708              		.loc 1 250 0
 709 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 710 002a 0133     		adds	r3, r3, #1
 711 002c FB71     		strb	r3, [r7, #7]
 712              	.L49:
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 713              		.loc 1 246 0 discriminator 1
 714 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 715 0030 002B     		cmp	r3, #0
 716 0032 02D1     		bne	.L50
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 717              		.loc 1 246 0 is_stmt 0 discriminator 2
 718 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 0036 042B     		cmp	r3, #4
 720 0038 EED9     		bls	.L51
 721              	.L50:
 251:.\modem.c     **** 	}
 252:.\modem.c     **** 	
 253:.\modem.c     **** 	if (network_status == 1u) {		
 722              		.loc 1 253 0 is_stmt 1
 723 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 724 003c 012B     		cmp	r3, #1
 725 003e 0ED1     		bne	.L52
 254:.\modem.c     **** 		// Try to activate network context
 255:.\modem.c     **** 		// #SGACT1,<0,1> is for multisocket
 256:.\modem.c     **** 		// For now, use #GPRS, which is from Enhanced Easy IP commands
 257:.\modem.c     **** 	    if(at_write_command("AT#SGACT=1,1\r","OK",5000u) == 1){    
 726              		.loc 1 257 0
 727 0040 0A48     		ldr	r0, .L54
 728 0042 0B49     		ldr	r1, .L54+4
 729 0044 41F28832 		movw	r2, #5000
 730 0048 FFF7FEFF 		bl	at_write_command
 731 004c 0346     		mov	r3, r0
 732 004e 012B     		cmp	r3, #1
 733 0050 05D1     		bne	.L52
 258:.\modem.c     **** 		//if(at_write_command("AT#GPRS=1\r","OK",5000u) == 1){    // Used for GSM (ATT, TMobile)
 259:.\modem.c     **** 	        modem_state = MODEM_STATE_READY;
 734              		.loc 1 259 0
 735 0052 084B     		ldr	r3, .L54+8
 736 0054 0322     		movs	r2, #3
 737 0056 1A70     		strb	r2, [r3]
 260:.\modem.c     **** 	        return modem_state;
 738              		.loc 1 260 0
 739 0058 064B     		ldr	r3, .L54+8
 740 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 005c 01E0     		b	.L53
 742              	.L52:
 261:.\modem.c     **** 	    }		
 262:.\modem.c     **** 	}
 263:.\modem.c     **** 	
 264:.\modem.c     ****     /* Write to SD Card debugger
 265:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 266:.\modem.c     ****     */
 267:.\modem.c     **** 
 268:.\modem.c     ****     return modem_state;
 743              		.loc 1 268 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 19


 744 005e 054B     		ldr	r3, .L54+8
 745 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746              	.L53:
 269:.\modem.c     ****     
 270:.\modem.c     **** /*
 271:.\modem.c     ****     if(at_write_command("AT+CREG=1\r","OK",5000u)){
 272:.\modem.c     ****         if(at_write_command("AT+CREG?\r","OK",5000u)){
 273:.\modem.c     ****         //if(!at_write_command("AT#CGPADDR=1\r","\"",5000u)){
 274:.\modem.c     ****             if(at_write_command("AT#SGACT=1,1\r","OK",30000u)){
 275:.\modem.c     ****                 modem_state = MODEM_STATE_READY;
 276:.\modem.c     ****                 //return 1u; // connected to network
 277:.\modem.c     ****             }
 278:.\modem.c     ****             else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 279:.\modem.c     ****         }
 280:.\modem.c     ****        else debug_write("(AT#CGPADDR=1) No IP Address Exists.");   Returns IP address.. should be c
 281:.\modem.c     ****     }
 282:.\modem.c     ****     else debug_write("(AT+CREG=1) Could not register to network."); CREG reports registration statu
 283:.\modem.c     ****     
 284:.\modem.c     ****     return 0u;
 285:.\modem.c     **** */
 286:.\modem.c     **** /*
 287:.\modem.c     ****     at_write_command("AT+CSQ\r","OK",5000u); // get signal strength
 288:.\modem.c     ****     
 289:.\modem.c     ****     if (!at_write_command("AT+CREG=1\r","OK",5000u)) { // look for network
 290:.\modem.c     ****         debug_write("(AT+CREG=1) Could not register to network.");
 291:.\modem.c     ****     }
 292:.\modem.c     ****     
 293:.\modem.c     ****     at_write_command("AT#SCFG=1,1,0,0,1200,0\r","OK",5000u); // config parameter
 294:.\modem.c     ****     
 295:.\modem.c     ****     if (at_write_command("AT#CGPADDR=1\r","OK",5000u)) {// check if ip address exists
 296:.\modem.c     ****         debug_write("(AT#CGPADDR=1) No IP Address Exists.");    
 297:.\modem.c     ****     }
 298:.\modem.c     ****     
 299:.\modem.c     ****     at_write_command("AT#SGACT?","OK",30000u);
 300:.\modem.c     ****     
 301:.\modem.c     ****     uint8 success  = at_write_command("AT#SGACT=1,1\r","OK",30000u); // This command should return 
 302:.\modem.c     ****     //success = at_write_command("AT#SD=1,0,50000,\"141.212.136.222\",0,0,1\r","OK",5000u); // conn
 303:.\modem.c     ****     
 304:.\modem.c     ****     if (!success) {
 305:.\modem.c     ****         debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 306:.\modem.c     ****     }
 307:.\modem.c     ****     
 308:.\modem.c     ****     return success;
 309:.\modem.c     ****     */
 310:.\modem.c     ****     
 311:.\modem.c     **** }
 747              		.loc 1 311 0
 748 0062 1846     		mov	r0, r3
 749 0064 0837     		adds	r7, r7, #8
 750 0066 BD46     		mov	sp, r7
 751              		@ sp needed
 752 0068 80BD     		pop	{r7, pc}
 753              	.L55:
 754 006a 00BF     		.align	2
 755              	.L54:
 756 006c 18000000 		.word	.LC3
 757 0070 14000000 		.word	.LC2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 20


 758 0074 00000000 		.word	modem_state
 759              		.cfi_endproc
 760              	.LFE66:
 761              		.size	modem_connect, .-modem_connect
 762              		.section	.rodata
 763 0026 0000     		.align	2
 764              	.LC4:
 765 0028 41542353 		.ascii	"AT#SGACT=1,0\015\000"
 765      47414354 
 765      3D312C30 
 765      0D00
 766              		.section	.text.modem_disconnect,"ax",%progbits
 767              		.align	2
 768              		.global	modem_disconnect
 769              		.thumb
 770              		.thumb_func
 771              		.type	modem_disconnect, %function
 772              	modem_disconnect:
 773              	.LFB67:
 312:.\modem.c     **** 
 313:.\modem.c     **** uint8 modem_disconnect(){
 774              		.loc 1 313 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778 0000 80B5     		push	{r7, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 314:.\modem.c     **** /* Close modem connection to network */
 315:.\modem.c     **** 	
 316:.\modem.c     ****     // Proceed if modem is not connected to network.  Otherwise, try to disconnect from the network
 317:.\modem.c     ****     if(modem_state != MODEM_STATE_READY) {
 784              		.loc 1 317 0
 785 0004 094B     		ldr	r3, .L59
 786 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 0008 032B     		cmp	r3, #3
 788 000a 0CD0     		beq	.L57
 318:.\modem.c     ****         /* Can use this statement instead for GSM (ATT, TMobile)
 319:.\modem.c     **** 		return (at_write_command("AT#GPRS=0\r","OK",5000u) == 1u);
 320:.\modem.c     **** 		*/
 321:.\modem.c     **** 		return (at_write_command("AT#SGACT=1,0\r","OK",5000u) == 1u);
 789              		.loc 1 321 0
 790 000c 0848     		ldr	r0, .L59+4
 791 000e 0949     		ldr	r1, .L59+8
 792 0010 41F28832 		movw	r2, #5000
 793 0014 FFF7FEFF 		bl	at_write_command
 794 0018 0346     		mov	r3, r0
 795 001a 012B     		cmp	r3, #1
 796 001c 14BF     		ite	ne
 797 001e 0023     		movne	r3, #0
 798 0020 0123     		moveq	r3, #1
 799 0022 DBB2     		uxtb	r3, r3
 800 0024 00E0     		b	.L58
 801              	.L57:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 21


 322:.\modem.c     **** 			
 323:.\modem.c     **** 		/*
 324:.\modem.c     **** 		if(at_write_command("AT#SH=1","OK",10000u) == 1){
 325:.\modem.c     ****             if(at_write_command("AT#SGACT=1,0","OK",10000u) == 1){
 326:.\modem.c     ****                 modem_state = MODEM_STATE_IDLE;
 327:.\modem.c     ****                 return 1u;
 328:.\modem.c     ****             }
 329:.\modem.c     ****             // Write to SD Card debugger
 330:.\modem.c     ****             else {
 331:.\modem.c     ****                 debug_write("(AT#SGACT=1,0) Could not disconnect.");
 332:.\modem.c     ****             }
 333:.\modem.c     ****             
 334:.\modem.c     ****         }
 335:.\modem.c     ****         Write to SD Card debugger
 336:.\modem.c     ****         else {
 337:.\modem.c     ****             debug_write("(AT#SH=1) Could not close socket.");
 338:.\modem.c     ****         }
 339:.\modem.c     ****         */
 340:.\modem.c     ****     }
 341:.\modem.c     ****     /* Write to SD Card debugger
 342:.\modem.c     ****     else {
 343:.\modem.c     ****         if (modem_state == MODEM_STATE_OFF) {
 344:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_OFF" );
 345:.\modem.c     ****         }
 346:.\modem.c     ****         else if (modem_state == MODEM_STATE_IDLE) {
 347:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_IDLE" );
 348:.\modem.c     ****         }
 349:.\modem.c     ****     }
 350:.\modem.c     ****     */
 351:.\modem.c     ****     return 0u; // failed to disconnect
 802              		.loc 1 351 0
 803 0026 0023     		movs	r3, #0
 804              	.L58:
 352:.\modem.c     **** }
 805              		.loc 1 352 0
 806 0028 1846     		mov	r0, r3
 807 002a 80BD     		pop	{r7, pc}
 808              	.L60:
 809              		.align	2
 810              	.L59:
 811 002c 00000000 		.word	modem_state
 812 0030 28000000 		.word	.LC4
 813 0034 14000000 		.word	.LC2
 814              		.cfi_endproc
 815              	.LFE67:
 816              		.size	modem_disconnect, .-modem_disconnect
 817              		.section	.rodata
 818 0036 0000     		.align	2
 819              	.LC5:
 820 0038 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"%s\"\015\000"
 820      4744434F 
 820      4E543D31 
 820      2C224950 
 820      222C2225 
 821              		.section	.text.modem_set_apn,"ax",%progbits
 822              		.align	2
 823              		.global	modem_set_apn
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 22


 824              		.thumb
 825              		.thumb_func
 826              		.type	modem_set_apn, %function
 827              	modem_set_apn:
 828              	.LFB68:
 353:.\modem.c     **** 
 354:.\modem.c     **** uint8 modem_set_apn() {
 829              		.loc 1 354 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 104
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 9AB0     		sub	sp, sp, #104
 838              		.cfi_def_cfa_offset 112
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 355:.\modem.c     **** /* 
 356:.\modem.c     **** 	Set the access point that the modem connects to.
 357:.\modem.c     **** 	The APN is defined in "modem_apn" at the
 358:.\modem.c     **** 	top of this file 
 359:.\modem.c     **** */
 360:.\modem.c     ****     char cmd[100];
 361:.\modem.c     ****     sprintf(cmd,"AT+CGDCONT=1,\"IP\",\"%s\"\r",modem_apn);
 841              		.loc 1 361 0
 842 0006 0C4B     		ldr	r3, .L65
 843 0008 1B68     		ldr	r3, [r3]
 844 000a 3A1D     		adds	r2, r7, #4
 845 000c 1046     		mov	r0, r2
 846 000e 0B49     		ldr	r1, .L65+4
 847 0010 1A46     		mov	r2, r3
 848 0012 FFF7FEFF 		bl	sprintf
 362:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 849              		.loc 1 362 0
 850 0016 3B1D     		adds	r3, r7, #4
 851 0018 1846     		mov	r0, r3
 852 001a 0949     		ldr	r1, .L65+8
 853 001c 4FF4FA62 		mov	r2, #2000
 854 0020 FFF7FEFF 		bl	at_write_command
 855 0024 0346     		mov	r3, r0
 856 0026 012B     		cmp	r3, #1
 857 0028 01D1     		bne	.L62
 363:.\modem.c     ****         return 1u;
 858              		.loc 1 363 0
 859 002a 0123     		movs	r3, #1
 860 002c 00E0     		b	.L64
 861              	.L62:
 364:.\modem.c     ****     }
 365:.\modem.c     ****     /* Write to SD Card debugger
 366:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 367:.\modem.c     ****     */
 368:.\modem.c     **** 
 369:.\modem.c     ****     return 0u; 
 862              		.loc 1 369 0
 863 002e 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 23


 864              	.L64:
 370:.\modem.c     **** }
 865              		.loc 1 370 0
 866 0030 1846     		mov	r0, r3
 867 0032 6837     		adds	r7, r7, #104
 868 0034 BD46     		mov	sp, r7
 869              		@ sp needed
 870 0036 80BD     		pop	{r7, pc}
 871              	.L66:
 872              		.align	2
 873              	.L65:
 874 0038 00000000 		.word	modem_apn
 875 003c 38000000 		.word	.LC5
 876 0040 14000000 		.word	.LC2
 877              		.cfi_endproc
 878              	.LFE68:
 879              		.size	modem_set_apn, .-modem_set_apn
 880              		.section	.rodata
 881              		.align	2
 882              	.LC6:
 883 0050 41542342 		.ascii	"AT#BND=%d\015\000"
 883      4E443D25 
 883      640D00
 884              		.section	.text.modem_set_band,"ax",%progbits
 885              		.align	2
 886              		.global	modem_set_band
 887              		.thumb
 888              		.thumb_func
 889              		.type	modem_set_band, %function
 890              	modem_set_band:
 891              	.LFB69:
 371:.\modem.c     **** 
 372:.\modem.c     **** uint8 modem_set_band(uint8 band) {
 892              		.loc 1 372 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 112
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896 0000 80B5     		push	{r7, lr}
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 7, -8
 899              		.cfi_offset 14, -4
 900 0002 9CB0     		sub	sp, sp, #112
 901              		.cfi_def_cfa_offset 120
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 904 0006 0346     		mov	r3, r0
 905 0008 FB71     		strb	r3, [r7, #7]
 373:.\modem.c     **** /* 
 374:.\modem.c     **** 	Set the band on which the modem should communicate on
 375:.\modem.c     **** 	Band ranges from <0,3>
 376:.\modem.c     **** 	"epc.tmobile.com" uses band 1
 377:.\modem.c     **** */
 378:.\modem.c     ****     char cmd[100];
 379:.\modem.c     ****     sprintf(cmd,"AT#BND=%d\r",band);
 906              		.loc 1 379 0
 907 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 908 000c 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 24


 909 0010 1046     		mov	r0, r2
 910 0012 0B49     		ldr	r1, .L71
 911 0014 1A46     		mov	r2, r3
 912 0016 FFF7FEFF 		bl	sprintf
 380:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 913              		.loc 1 380 0
 914 001a 07F10C03 		add	r3, r7, #12
 915 001e 1846     		mov	r0, r3
 916 0020 0849     		ldr	r1, .L71+4
 917 0022 4FF4FA62 		mov	r2, #2000
 918 0026 FFF7FEFF 		bl	at_write_command
 919 002a 0346     		mov	r3, r0
 920 002c 012B     		cmp	r3, #1
 921 002e 01D1     		bne	.L68
 381:.\modem.c     ****         return 1u;
 922              		.loc 1 381 0
 923 0030 0123     		movs	r3, #1
 924 0032 00E0     		b	.L70
 925              	.L68:
 382:.\modem.c     ****     }
 383:.\modem.c     ****     /* Write to SD Card debugger
 384:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 385:.\modem.c     ****     */
 386:.\modem.c     **** 
 387:.\modem.c     ****     return 0u; 
 926              		.loc 1 387 0
 927 0034 0023     		movs	r3, #0
 928              	.L70:
 388:.\modem.c     **** }
 929              		.loc 1 388 0
 930 0036 1846     		mov	r0, r3
 931 0038 7037     		adds	r7, r7, #112
 932 003a BD46     		mov	sp, r7
 933              		@ sp needed
 934 003c 80BD     		pop	{r7, pc}
 935              	.L72:
 936 003e 00BF     		.align	2
 937              	.L71:
 938 0040 50000000 		.word	.LC6
 939 0044 14000000 		.word	.LC2
 940              		.cfi_endproc
 941              	.LFE69:
 942              		.size	modem_set_band, .-modem_set_band
 943              		.section	.rodata
 944 005b 00       		.align	2
 945              	.LC7:
 946 005c 41542B43 		.ascii	"AT+CCLK?\015\000"
 946      434C4B3F 
 946      0D00
 947              		.section	.text.modem_get_time,"ax",%progbits
 948              		.align	2
 949              		.global	modem_get_time
 950              		.thumb
 951              		.thumb_func
 952              		.type	modem_get_time, %function
 953              	modem_get_time:
 954              	.LFB70:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 25


 389:.\modem.c     **** 
 390:.\modem.c     **** uint8 modem_get_time(){
 955              		.loc 1 390 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 391:.\modem.c     ****     if(at_write_command("AT+CCLK?\r","OK",1000u) == 1u){      
 965              		.loc 1 391 0
 966 0004 0648     		ldr	r0, .L76
 967 0006 0749     		ldr	r1, .L76+4
 968 0008 4FF47A72 		mov	r2, #1000
 969 000c FFF7FEFF 		bl	at_write_command
 970 0010 0346     		mov	r3, r0
 971 0012 012B     		cmp	r3, #1
 972 0014 01D1     		bne	.L74
 392:.\modem.c     ****         return 1u;
 973              		.loc 1 392 0
 974 0016 0123     		movs	r3, #1
 975 0018 00E0     		b	.L75
 976              	.L74:
 393:.\modem.c     ****     }
 394:.\modem.c     ****     /* Write to SD Card debugger
 395:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 396:.\modem.c     ****     */
 397:.\modem.c     ****     
 398:.\modem.c     ****     /* Parse Time from data packet */
 399:.\modem.c     **** 
 400:.\modem.c     ****     return 0u;  
 977              		.loc 1 400 0
 978 001a 0023     		movs	r3, #0
 979              	.L75:
 401:.\modem.c     **** }
 980              		.loc 1 401 0
 981 001c 1846     		mov	r0, r3
 982 001e 80BD     		pop	{r7, pc}
 983              	.L77:
 984              		.align	2
 985              	.L76:
 986 0020 5C000000 		.word	.LC7
 987 0024 14000000 		.word	.LC2
 988              		.cfi_endproc
 989              	.LFE70:
 990              		.size	modem_get_time, .-modem_get_time
 991              		.section	.rodata
 992 0066 0000     		.align	2
 993              	.LC8:
 994 0068 41542B43 		.ascii	"AT+CREG?\015\000"
 994      5245473F 
 994      0D00
 995 0072 0000     		.align	2
 996              	.LC9:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 26


 997 0074 2C3100   		.ascii	",1\000"
 998              		.section	.text.modem_check_network,"ax",%progbits
 999              		.align	2
 1000              		.global	modem_check_network
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	modem_check_network, %function
 1004              	modem_check_network:
 1005              	.LFB71:
 402:.\modem.c     **** 
 403:.\modem.c     **** uint8 modem_check_network() {
 1006              		.loc 1 403 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 00AF     		add	r7, sp, #0
 1015              		.cfi_def_cfa_register 7
 404:.\modem.c     ****     if(at_write_command("AT+CREG?\r",",1",1000u) == 1u){      
 1016              		.loc 1 404 0
 1017 0004 0648     		ldr	r0, .L81
 1018 0006 0749     		ldr	r1, .L81+4
 1019 0008 4FF47A72 		mov	r2, #1000
 1020 000c FFF7FEFF 		bl	at_write_command
 1021 0010 0346     		mov	r3, r0
 1022 0012 012B     		cmp	r3, #1
 1023 0014 01D1     		bne	.L79
 405:.\modem.c     ****         return 1u;
 1024              		.loc 1 405 0
 1025 0016 0123     		movs	r3, #1
 1026 0018 00E0     		b	.L80
 1027              	.L79:
 406:.\modem.c     ****     }
 407:.\modem.c     ****     /* Write to SD Card debugger
 408:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 409:.\modem.c     ****     */
 410:.\modem.c     ****     
 411:.\modem.c     ****     /* Parse Time from data packet */
 412:.\modem.c     **** 
 413:.\modem.c     ****     return 0u;      
 1028              		.loc 1 413 0
 1029 001a 0023     		movs	r3, #0
 1030              	.L80:
 414:.\modem.c     **** }
 1031              		.loc 1 414 0
 1032 001c 1846     		mov	r0, r3
 1033 001e 80BD     		pop	{r7, pc}
 1034              	.L82:
 1035              		.align	2
 1036              	.L81:
 1037 0020 68000000 		.word	.LC8
 1038 0024 74000000 		.word	.LC9
 1039              		.cfi_endproc
 1040              	.LFE71:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 27


 1041              		.size	modem_check_network, .-modem_check_network
 1042              		.section	.rodata
 1043 0077 00       		.align	2
 1044              	.LC10:
 1045 0078 41542B43 		.ascii	"AT+CSQ\015\000"
 1045      53510D00 
 1046              		.section	.text.modem_get_signal_quality,"ax",%progbits
 1047              		.align	2
 1048              		.global	modem_get_signal_quality
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	modem_get_signal_quality, %function
 1052              	modem_get_signal_quality:
 1053              	.LFB72:
 415:.\modem.c     **** uint8 modem_get_signal_quality(){
 1054              		.loc 1 415 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 416:.\modem.c     ****     if(at_write_command("AT+CSQ\r","OK",1000u) == 1u){      
 1064              		.loc 1 416 0
 1065 0004 0648     		ldr	r0, .L86
 1066 0006 0749     		ldr	r1, .L86+4
 1067 0008 4FF47A72 		mov	r2, #1000
 1068 000c FFF7FEFF 		bl	at_write_command
 1069 0010 0346     		mov	r3, r0
 1070 0012 012B     		cmp	r3, #1
 1071 0014 01D1     		bne	.L84
 417:.\modem.c     ****         return 1u;
 1072              		.loc 1 417 0
 1073 0016 0123     		movs	r3, #1
 1074 0018 00E0     		b	.L85
 1075              	.L84:
 418:.\modem.c     ****     }
 419:.\modem.c     ****     /* Write to SD Card debugger
 420:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 421:.\modem.c     ****     */
 422:.\modem.c     ****     
 423:.\modem.c     ****     /* Parse Time from data packet */
 424:.\modem.c     **** 
 425:.\modem.c     ****     return 0u;  
 1076              		.loc 1 425 0
 1077 001a 0023     		movs	r3, #0
 1078              	.L85:
 426:.\modem.c     **** }
 1079              		.loc 1 426 0
 1080 001c 1846     		mov	r0, r3
 1081 001e 80BD     		pop	{r7, pc}
 1082              	.L87:
 1083              		.align	2
 1084              	.L86:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 28


 1085 0020 78000000 		.word	.LC10
 1086 0024 14000000 		.word	.LC2
 1087              		.cfi_endproc
 1088              	.LFE72:
 1089              		.size	modem_get_signal_quality, .-modem_get_signal_quality
 1090              		.section	.rodata
 1091              		.align	2
 1092              	.LC11:
 1093 0080 41542B43 		.ascii	"AT+CGSN\015\000"
 1093      47534E0D 
 1093      00
 1094              		.section	.text.modem_get_serial_number,"ax",%progbits
 1095              		.align	2
 1096              		.global	modem_get_serial_number
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	modem_get_serial_number, %function
 1100              	modem_get_serial_number:
 1101              	.LFB73:
 427:.\modem.c     **** 
 428:.\modem.c     **** uint8 modem_get_serial_number(){
 1102              		.loc 1 428 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 429:.\modem.c     ****     if(at_write_command("AT+CGSN\r","OK",1000u) == 1u){      
 1112              		.loc 1 429 0
 1113 0004 0648     		ldr	r0, .L91
 1114 0006 0749     		ldr	r1, .L91+4
 1115 0008 4FF47A72 		mov	r2, #1000
 1116 000c FFF7FEFF 		bl	at_write_command
 1117 0010 0346     		mov	r3, r0
 1118 0012 012B     		cmp	r3, #1
 1119 0014 01D1     		bne	.L89
 430:.\modem.c     ****         return 1u;
 1120              		.loc 1 430 0
 1121 0016 0123     		movs	r3, #1
 1122 0018 00E0     		b	.L90
 1123              	.L89:
 431:.\modem.c     ****     }
 432:.\modem.c     ****     /* Write to SD Card debugger
 433:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 434:.\modem.c     ****     */
 435:.\modem.c     **** 
 436:.\modem.c     ****     return 0u;  
 1124              		.loc 1 436 0
 1125 001a 0023     		movs	r3, #0
 1126              	.L90:
 437:.\modem.c     **** }
 1127              		.loc 1 437 0
 1128 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 29


 1129 001e 80BD     		pop	{r7, pc}
 1130              	.L92:
 1131              		.align	2
 1132              	.L91:
 1133 0020 80000000 		.word	.LC11
 1134 0024 14000000 		.word	.LC2
 1135              		.cfi_endproc
 1136              	.LFE73:
 1137              		.size	modem_get_serial_number, .-modem_get_serial_number
 1138              		.section	.rodata
 1139 0089 000000   		.align	2
 1140              	.LC12:
 1141 008c 41542656 		.ascii	"AT&V\015\000"
 1141      0D00
 1142              		.section	.text.modem_get_profile,"ax",%progbits
 1143              		.align	2
 1144              		.global	modem_get_profile
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	modem_get_profile, %function
 1148              	modem_get_profile:
 1149              	.LFB74:
 438:.\modem.c     **** 
 439:.\modem.c     **** 
 440:.\modem.c     **** uint8 modem_get_profile(){
 1150              		.loc 1 440 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 441:.\modem.c     ****     if(at_write_command("AT&V\r","OK",1000u) == 1u){      
 1160              		.loc 1 441 0
 1161 0004 0648     		ldr	r0, .L96
 1162 0006 0749     		ldr	r1, .L96+4
 1163 0008 4FF47A72 		mov	r2, #1000
 1164 000c FFF7FEFF 		bl	at_write_command
 1165 0010 0346     		mov	r3, r0
 1166 0012 012B     		cmp	r3, #1
 1167 0014 01D1     		bne	.L94
 442:.\modem.c     ****         return 1u;
 1168              		.loc 1 442 0
 1169 0016 0123     		movs	r3, #1
 1170 0018 00E0     		b	.L95
 1171              	.L94:
 443:.\modem.c     ****     }
 444:.\modem.c     ****     /* Write to SD Card debugger
 445:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 446:.\modem.c     ****     */
 447:.\modem.c     **** 
 448:.\modem.c     ****     return 0u;  
 1172              		.loc 1 448 0
 1173 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 30


 1174              	.L95:
 449:.\modem.c     **** }
 1175              		.loc 1 449 0
 1176 001c 1846     		mov	r0, r3
 1177 001e 80BD     		pop	{r7, pc}
 1178              	.L97:
 1179              		.align	2
 1180              	.L96:
 1181 0020 8C000000 		.word	.LC12
 1182 0024 14000000 		.word	.LC2
 1183              		.cfi_endproc
 1184              	.LFE74:
 1185              		.size	modem_get_profile, .-modem_get_profile
 1186              		.section	.rodata
 1187 0092 0000     		.align	2
 1188              	.LC13:
 1189 0094 4154264B 		.ascii	"AT&K%u\015\000"
 1189      25750D00 
 1190              		.section	.text.modem_set_flow_control,"ax",%progbits
 1191              		.align	2
 1192              		.global	modem_set_flow_control
 1193              		.thumb
 1194              		.thumb_func
 1195              		.type	modem_set_flow_control, %function
 1196              	modem_set_flow_control:
 1197              	.LFB75:
 450:.\modem.c     **** 
 451:.\modem.c     **** uint8 modem_set_flow_control(uint8 param){
 1198              		.loc 1 451 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 112
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 9CB0     		sub	sp, sp, #112
 1207              		.cfi_def_cfa_offset 120
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB71     		strb	r3, [r7, #7]
 452:.\modem.c     ****     char cmd[100];
 453:.\modem.c     ****     sprintf(cmd,"AT&K%u\r",param);
 1212              		.loc 1 453 0
 1213 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 000c 07F10C02 		add	r2, r7, #12
 1215 0010 1046     		mov	r0, r2
 1216 0012 0B49     		ldr	r1, .L102
 1217 0014 1A46     		mov	r2, r3
 1218 0016 FFF7FEFF 		bl	sprintf
 454:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1219              		.loc 1 454 0
 1220 001a 07F10C03 		add	r3, r7, #12
 1221 001e 1846     		mov	r0, r3
 1222 0020 0849     		ldr	r1, .L102+4
 1223 0022 4FF47A72 		mov	r2, #1000
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 31


 1224 0026 FFF7FEFF 		bl	at_write_command
 1225 002a 0346     		mov	r3, r0
 1226 002c 012B     		cmp	r3, #1
 1227 002e 01D1     		bne	.L99
 455:.\modem.c     ****         return 1u;
 1228              		.loc 1 455 0
 1229 0030 0123     		movs	r3, #1
 1230 0032 00E0     		b	.L101
 1231              	.L99:
 456:.\modem.c     ****     }
 457:.\modem.c     ****     /* Write to SD Card debugger
 458:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 459:.\modem.c     ****     */
 460:.\modem.c     **** 
 461:.\modem.c     ****     return 0u;  
 1232              		.loc 1 461 0
 1233 0034 0023     		movs	r3, #0
 1234              	.L101:
 462:.\modem.c     **** }
 1235              		.loc 1 462 0
 1236 0036 1846     		mov	r0, r3
 1237 0038 7037     		adds	r7, r7, #112
 1238 003a BD46     		mov	sp, r7
 1239              		@ sp needed
 1240 003c 80BD     		pop	{r7, pc}
 1241              	.L103:
 1242 003e 00BF     		.align	2
 1243              	.L102:
 1244 0040 94000000 		.word	.LC13
 1245 0044 14000000 		.word	.LC2
 1246              		.cfi_endproc
 1247              	.LFE75:
 1248              		.size	modem_set_flow_control, .-modem_set_flow_control
 1249              		.section	.rodata
 1250              		.align	2
 1251              	.LC14:
 1252 009c 41542B43 		.ascii	"AT+CMEE=%u\015\000"
 1252      4D45453D 
 1252      25750D00 
 1253              		.section	.text.modem_set_error_reports,"ax",%progbits
 1254              		.align	2
 1255              		.global	modem_set_error_reports
 1256              		.thumb
 1257              		.thumb_func
 1258              		.type	modem_set_error_reports, %function
 1259              	modem_set_error_reports:
 1260              	.LFB76:
 463:.\modem.c     **** 
 464:.\modem.c     **** uint8 modem_set_error_reports(uint8 param){
 1261              		.loc 1 464 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 112
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 32


 1269 0002 9CB0     		sub	sp, sp, #112
 1270              		.cfi_def_cfa_offset 120
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 0346     		mov	r3, r0
 1274 0008 FB71     		strb	r3, [r7, #7]
 465:.\modem.c     **** 	/*
 466:.\modem.c     **** 	2.4. Enable Extended Error Result codes
 467:.\modem.c     **** 	Disable the Error Report in numerical and verbose format:
 468:.\modem.c     **** 	AT+CMEE=0
 469:.\modem.c     **** 	OK
 470:.\modem.c     **** 	Enable the Error Report in numerical format:
 471:.\modem.c     **** 	AT+CMEE=1
 472:.\modem.c     **** 	OK
 473:.\modem.c     **** 	Enable the Error Report in verbose format:
 474:.\modem.c     **** 	AT+CMEE=2
 475:.\modem.c     **** 	OK
 476:.\modem.c     **** 	*/
 477:.\modem.c     **** 	
 478:.\modem.c     ****     char cmd[100];
 479:.\modem.c     ****     sprintf(cmd,"AT+CMEE=%u\r",param);
 1275              		.loc 1 479 0
 1276 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1277 000c 07F10C02 		add	r2, r7, #12
 1278 0010 1046     		mov	r0, r2
 1279 0012 0B49     		ldr	r1, .L108
 1280 0014 1A46     		mov	r2, r3
 1281 0016 FFF7FEFF 		bl	sprintf
 480:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1282              		.loc 1 480 0
 1283 001a 07F10C03 		add	r3, r7, #12
 1284 001e 1846     		mov	r0, r3
 1285 0020 0849     		ldr	r1, .L108+4
 1286 0022 4FF47A72 		mov	r2, #1000
 1287 0026 FFF7FEFF 		bl	at_write_command
 1288 002a 0346     		mov	r3, r0
 1289 002c 012B     		cmp	r3, #1
 1290 002e 01D1     		bne	.L105
 481:.\modem.c     ****         return 1u;
 1291              		.loc 1 481 0
 1292 0030 0123     		movs	r3, #1
 1293 0032 00E0     		b	.L107
 1294              	.L105:
 482:.\modem.c     ****     }
 483:.\modem.c     ****     /* Write to SD Card debugger
 484:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 485:.\modem.c     ****     */
 486:.\modem.c     **** 
 487:.\modem.c     ****     return 0u;  
 1295              		.loc 1 487 0
 1296 0034 0023     		movs	r3, #0
 1297              	.L107:
 488:.\modem.c     **** }
 1298              		.loc 1 488 0
 1299 0036 1846     		mov	r0, r3
 1300 0038 7037     		adds	r7, r7, #112
 1301 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 33


 1302              		@ sp needed
 1303 003c 80BD     		pop	{r7, pc}
 1304              	.L109:
 1305 003e 00BF     		.align	2
 1306              	.L108:
 1307 0040 9C000000 		.word	.LC14
 1308 0044 14000000 		.word	.LC2
 1309              		.cfi_endproc
 1310              	.LFE76:
 1311              		.size	modem_set_error_reports, .-modem_set_error_reports
 1312              		.section	.rodata
 1313              		.align	2
 1314              	.LC15:
 1315 00a8 41542B43 		.ascii	"AT+CGMR\015\000"
 1315      474D520D 
 1315      00
 1316              		.section	.text.modem_get_sw_version,"ax",%progbits
 1317              		.align	2
 1318              		.global	modem_get_sw_version
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	modem_get_sw_version, %function
 1322              	modem_get_sw_version:
 1323              	.LFB77:
 489:.\modem.c     **** 
 490:.\modem.c     **** uint8 modem_get_sw_version(){
 1324              		.loc 1 490 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
 491:.\modem.c     ****     if(at_write_command("AT+CGMR\r","OK",1000u) == 1u){      
 1334              		.loc 1 491 0
 1335 0004 0648     		ldr	r0, .L113
 1336 0006 0749     		ldr	r1, .L113+4
 1337 0008 4FF47A72 		mov	r2, #1000
 1338 000c FFF7FEFF 		bl	at_write_command
 1339 0010 0346     		mov	r3, r0
 1340 0012 012B     		cmp	r3, #1
 1341 0014 01D1     		bne	.L111
 492:.\modem.c     ****         return 1u;
 1342              		.loc 1 492 0
 1343 0016 0123     		movs	r3, #1
 1344 0018 00E0     		b	.L112
 1345              	.L111:
 493:.\modem.c     ****     }
 494:.\modem.c     ****     /* Write to SD Card debugger
 495:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 496:.\modem.c     ****     */
 497:.\modem.c     **** 
 498:.\modem.c     ****     return 0u;  
 1346              		.loc 1 498 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 34


 1347 001a 0023     		movs	r3, #0
 1348              	.L112:
 499:.\modem.c     **** }
 1349              		.loc 1 499 0
 1350 001c 1846     		mov	r0, r3
 1351 001e 80BD     		pop	{r7, pc}
 1352              	.L114:
 1353              		.align	2
 1354              	.L113:
 1355 0020 A8000000 		.word	.LC15
 1356 0024 14000000 		.word	.LC2
 1357              		.cfi_endproc
 1358              	.LFE77:
 1359              		.size	modem_get_sw_version, .-modem_get_sw_version
 1360              		.section	.rodata
 1361 00b1 000000   		.align	2
 1362              	.LC16:
 1363 00b4 41542343 		.ascii	"AT#CDMADC=%u\015\000"
 1363      444D4144 
 1363      433D2575 
 1363      0D00
 1364              		.section	.text.modem_enable_CDMA_data,"ax",%progbits
 1365              		.align	2
 1366              		.global	modem_enable_CDMA_data
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	modem_enable_CDMA_data, %function
 1370              	modem_enable_CDMA_data:
 1371              	.LFB78:
 500:.\modem.c     **** 
 501:.\modem.c     **** uint8 modem_enable_CDMA_data(uint8 param){
 1372              		.loc 1 501 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 112
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 9CB0     		sub	sp, sp, #112
 1381              		.cfi_def_cfa_offset 120
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 1384 0006 0346     		mov	r3, r0
 1385 0008 FB71     		strb	r3, [r7, #7]
 502:.\modem.c     **** 	/*
 503:.\modem.c     **** 	4.2.12 CDMA Data Connection
 504:.\modem.c     **** 	0 - CDMA Data connection deactivation request
 505:.\modem.c     **** 	1 - CDMA Data connection activation request
 506:.\modem.c     **** 	*/
 507:.\modem.c     **** 	
 508:.\modem.c     ****     char cmd[100];
 509:.\modem.c     ****     sprintf(cmd,"AT#CDMADC=%u\r",param);
 1386              		.loc 1 509 0
 1387 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1388 000c 07F10C02 		add	r2, r7, #12
 1389 0010 1046     		mov	r0, r2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 35


 1390 0012 0B49     		ldr	r1, .L119
 1391 0014 1A46     		mov	r2, r3
 1392 0016 FFF7FEFF 		bl	sprintf
 510:.\modem.c     ****     if(at_write_command(cmd,"OK",5000u) == 1u){      
 1393              		.loc 1 510 0
 1394 001a 07F10C03 		add	r3, r7, #12
 1395 001e 1846     		mov	r0, r3
 1396 0020 0849     		ldr	r1, .L119+4
 1397 0022 41F28832 		movw	r2, #5000
 1398 0026 FFF7FEFF 		bl	at_write_command
 1399 002a 0346     		mov	r3, r0
 1400 002c 012B     		cmp	r3, #1
 1401 002e 01D1     		bne	.L116
 511:.\modem.c     ****         return 1u;
 1402              		.loc 1 511 0
 1403 0030 0123     		movs	r3, #1
 1404 0032 00E0     		b	.L118
 1405              	.L116:
 512:.\modem.c     ****     }
 513:.\modem.c     ****     /* Write to SD Card debugger
 514:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 515:.\modem.c     ****     */
 516:.\modem.c     **** 
 517:.\modem.c     ****     return 0u;  
 1406              		.loc 1 517 0
 1407 0034 0023     		movs	r3, #0
 1408              	.L118:
 518:.\modem.c     **** }
 1409              		.loc 1 518 0
 1410 0036 1846     		mov	r0, r3
 1411 0038 7037     		adds	r7, r7, #112
 1412 003a BD46     		mov	sp, r7
 1413              		@ sp needed
 1414 003c 80BD     		pop	{r7, pc}
 1415              	.L120:
 1416 003e 00BF     		.align	2
 1417              	.L119:
 1418 0040 B4000000 		.word	.LC16
 1419 0044 14000000 		.word	.LC2
 1420              		.cfi_endproc
 1421              	.LFE78:
 1422              		.size	modem_enable_CDMA_data, .-modem_enable_CDMA_data
 1423              		.section	.rodata
 1424 00c2 0000     		.align	2
 1425              	.LC17:
 1426 00c4 41542343 		.ascii	"AT#CDMADC?\015\000"
 1426      444D4144 
 1426      433F0D00 
 1427              		.section	.text.modem_test_CDMA_data,"ax",%progbits
 1428              		.align	2
 1429              		.global	modem_test_CDMA_data
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	modem_test_CDMA_data, %function
 1433              	modem_test_CDMA_data:
 1434              	.LFB79:
 519:.\modem.c     **** 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 36


 520:.\modem.c     **** uint8 modem_test_CDMA_data(){
 1435              		.loc 1 520 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 00AF     		add	r7, sp, #0
 1444              		.cfi_def_cfa_register 7
 521:.\modem.c     **** 	
 522:.\modem.c     ****     if(at_write_command("AT#CDMADC?\r","OK",1000u) == 1u){      
 1445              		.loc 1 522 0
 1446 0004 0648     		ldr	r0, .L124
 1447 0006 0749     		ldr	r1, .L124+4
 1448 0008 4FF47A72 		mov	r2, #1000
 1449 000c FFF7FEFF 		bl	at_write_command
 1450 0010 0346     		mov	r3, r0
 1451 0012 012B     		cmp	r3, #1
 1452 0014 01D1     		bne	.L122
 523:.\modem.c     ****         return 1u;
 1453              		.loc 1 523 0
 1454 0016 0123     		movs	r3, #1
 1455 0018 00E0     		b	.L123
 1456              	.L122:
 524:.\modem.c     ****     }
 525:.\modem.c     ****     /* Write to SD Card debugger
 526:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 527:.\modem.c     ****     */
 528:.\modem.c     **** 
 529:.\modem.c     ****     return 0u;	
 1457              		.loc 1 529 0
 1458 001a 0023     		movs	r3, #0
 1459              	.L123:
 530:.\modem.c     **** }
 1460              		.loc 1 530 0
 1461 001c 1846     		mov	r0, r3
 1462 001e 80BD     		pop	{r7, pc}
 1463              	.L125:
 1464              		.align	2
 1465              	.L124:
 1466 0020 C4000000 		.word	.LC17
 1467 0024 14000000 		.word	.LC2
 1468              		.cfi_endproc
 1469              	.LFE79:
 1470              		.size	modem_test_CDMA_data, .-modem_test_CDMA_data
 1471              		.section	.rodata
 1472              		.align	2
 1473              	.LC18:
 1474 00d0 41542355 		.ascii	"AT#USERID=\"%s\"\015\000"
 1474      53455249 
 1474      443D2225 
 1474      73220D00 
 1475              		.section	.text.modem_set_user,"ax",%progbits
 1476              		.align	2
 1477              		.global	modem_set_user
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 37


 1478              		.thumb
 1479              		.thumb_func
 1480              		.type	modem_set_user, %function
 1481              	modem_set_user:
 1482              	.LFB80:
 531:.\modem.c     **** 
 532:.\modem.c     **** uint8 modem_set_user(char* user) {
 1483              		.loc 1 532 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 112
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 9CB0     		sub	sp, sp, #112
 1492              		.cfi_def_cfa_offset 120
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 533:.\modem.c     **** 	
 534:.\modem.c     ****     char cmd[100];
 535:.\modem.c     ****     sprintf(cmd,"AT#USERID=\"%s\"\r",user);		
 1496              		.loc 1 535 0
 1497 0008 07F10C03 		add	r3, r7, #12
 1498 000c 1846     		mov	r0, r3
 1499 000e 0B49     		ldr	r1, .L130
 1500 0010 7A68     		ldr	r2, [r7, #4]
 1501 0012 FFF7FEFF 		bl	sprintf
 536:.\modem.c     **** 	
 537:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1502              		.loc 1 537 0
 1503 0016 07F10C03 		add	r3, r7, #12
 1504 001a 1846     		mov	r0, r3
 1505 001c 0849     		ldr	r1, .L130+4
 1506 001e 4FF47A72 		mov	r2, #1000
 1507 0022 FFF7FEFF 		bl	at_write_command
 1508 0026 0346     		mov	r3, r0
 1509 0028 012B     		cmp	r3, #1
 1510 002a 01D1     		bne	.L127
 538:.\modem.c     ****         return 1u;
 1511              		.loc 1 538 0
 1512 002c 0123     		movs	r3, #1
 1513 002e 00E0     		b	.L129
 1514              	.L127:
 539:.\modem.c     ****     }
 540:.\modem.c     ****     /* Write to SD Card debugger
 541:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 542:.\modem.c     ****     */
 543:.\modem.c     **** 	
 544:.\modem.c     **** 	return 0u;	
 1515              		.loc 1 544 0
 1516 0030 0023     		movs	r3, #0
 1517              	.L129:
 545:.\modem.c     **** }
 1518              		.loc 1 545 0
 1519 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 38


 1520 0034 7037     		adds	r7, r7, #112
 1521 0036 BD46     		mov	sp, r7
 1522              		@ sp needed
 1523 0038 80BD     		pop	{r7, pc}
 1524              	.L131:
 1525 003a 00BF     		.align	2
 1526              	.L130:
 1527 003c D0000000 		.word	.LC18
 1528 0040 14000000 		.word	.LC2
 1529              		.cfi_endproc
 1530              	.LFE80:
 1531              		.size	modem_set_user, .-modem_set_user
 1532              		.section	.rodata
 1533              		.align	2
 1534              	.LC19:
 1535 00e0 41542350 		.ascii	"AT#PASSW=\"%s\"\015\000"
 1535      41535357 
 1535      3D222573 
 1535      220D00
 1536              		.section	.text.modem_set_password,"ax",%progbits
 1537              		.align	2
 1538              		.global	modem_set_password
 1539              		.thumb
 1540              		.thumb_func
 1541              		.type	modem_set_password, %function
 1542              	modem_set_password:
 1543              	.LFB81:
 546:.\modem.c     **** 
 547:.\modem.c     **** uint8 modem_set_password(char* pass) {
 1544              		.loc 1 547 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 112
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 9CB0     		sub	sp, sp, #112
 1553              		.cfi_def_cfa_offset 120
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 7860     		str	r0, [r7, #4]
 548:.\modem.c     **** 	
 549:.\modem.c     ****     char cmd[100];
 550:.\modem.c     ****     sprintf(cmd,"AT#PASSW=\"%s\"\r",pass);		
 1557              		.loc 1 550 0
 1558 0008 07F10C03 		add	r3, r7, #12
 1559 000c 1846     		mov	r0, r3
 1560 000e 0B49     		ldr	r1, .L136
 1561 0010 7A68     		ldr	r2, [r7, #4]
 1562 0012 FFF7FEFF 		bl	sprintf
 551:.\modem.c     **** 	
 552:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1563              		.loc 1 552 0
 1564 0016 07F10C03 		add	r3, r7, #12
 1565 001a 1846     		mov	r0, r3
 1566 001c 0849     		ldr	r1, .L136+4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 39


 1567 001e 4FF47A72 		mov	r2, #1000
 1568 0022 FFF7FEFF 		bl	at_write_command
 1569 0026 0346     		mov	r3, r0
 1570 0028 012B     		cmp	r3, #1
 1571 002a 01D1     		bne	.L133
 553:.\modem.c     ****         return 1u;
 1572              		.loc 1 553 0
 1573 002c 0123     		movs	r3, #1
 1574 002e 00E0     		b	.L135
 1575              	.L133:
 554:.\modem.c     ****     }
 555:.\modem.c     ****     /* Write to SD Card debugger
 556:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 557:.\modem.c     ****     */
 558:.\modem.c     **** 	
 559:.\modem.c     **** 	return 0u;	
 1576              		.loc 1 559 0
 1577 0030 0023     		movs	r3, #0
 1578              	.L135:
 560:.\modem.c     **** }
 1579              		.loc 1 560 0
 1580 0032 1846     		mov	r0, r3
 1581 0034 7037     		adds	r7, r7, #112
 1582 0036 BD46     		mov	sp, r7
 1583              		@ sp needed
 1584 0038 80BD     		pop	{r7, pc}
 1585              	.L137:
 1586 003a 00BF     		.align	2
 1587              	.L136:
 1588 003c E0000000 		.word	.LC19
 1589 0040 14000000 		.word	.LC2
 1590              		.cfi_endproc
 1591              	.LFE81:
 1592              		.size	modem_set_password, .-modem_set_password
 1593              		.section	.rodata
 1594 00ef 00       		.align	2
 1595              	.LC20:
 1596 00f0 41542353 		.ascii	"AT#SKTD=0,80,\"www.google.com\"\015\012\000"
 1596      4B54443D 
 1596      302C3830 
 1596      2C227777 
 1596      772E676F 
 1597              		.align	2
 1598              	.LC21:
 1599 0110 434F4E4E 		.ascii	"CONNECT\000"
 1599      45435400 
 1600              		.align	2
 1601              	.LC22:
 1602 0118 47455420 		.ascii	"GET /get_status/ HTTP/1.0\015\012\000"
 1602      2F676574 
 1602      5F737461 
 1602      7475732F 
 1602      20485454 
 1603              		.align	2
 1604              	.LC23:
 1605 0134 00       		.ascii	"\000"
 1606 0135 000000   		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 40


 1607              	.LC24:
 1608 0138 0D0A00   		.ascii	"\015\012\000"
 1609              		.section	.text.modem_get_google,"ax",%progbits
 1610              		.align	2
 1611              		.global	modem_get_google
 1612              		.thumb
 1613              		.thumb_func
 1614              		.type	modem_get_google, %function
 1615              	modem_get_google:
 1616              	.LFB82:
 561:.\modem.c     **** uint8 modem_get_google(){
 1617              		.loc 1 561 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 1000
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 ADF57A7D 		sub	sp, sp, #1000
 1626              		.cfi_def_cfa_offset 1008
 1627 0006 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
 562:.\modem.c     **** 
 563:.\modem.c     ****     // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 564:.\modem.c     ****     if( modem_state == MODEM_STATE_READY || modem_connect() != 0 ){ 
 1629              		.loc 1 564 0
 1630 0008 1D4B     		ldr	r3, .L142
 1631 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 000c 032B     		cmp	r3, #3
 1633 000e 04D0     		beq	.L139
 1634              		.loc 1 564 0 is_stmt 0 discriminator 1
 1635 0010 FFF7FEFF 		bl	modem_connect
 1636 0014 0346     		mov	r3, r0
 1637 0016 002B     		cmp	r3, #0
 1638 0018 2AD0     		beq	.L140
 1639              	.L139:
 565:.\modem.c     ****         
 566:.\modem.c     ****         if(at_write_command("AT#SKTD=0,80,\"www.google.com\"\r\n","CONNECT",10000u) != 0){
 1640              		.loc 1 566 0 is_stmt 1
 1641 001a 1A48     		ldr	r0, .L142+4
 1642 001c 1A49     		ldr	r1, .L142+8
 1643 001e 42F21072 		movw	r2, #10000
 1644 0022 FFF7FEFF 		bl	at_write_command
 1645 0026 0346     		mov	r3, r0
 1646 0028 002B     		cmp	r3, #0
 1647 002a 21D0     		beq	.L140
 1648              	.LBB3:
 567:.\modem.c     ****             
 568:.\modem.c     ****             char get_str[MAX_PACKET_LENGTH], key_str[100];
 569:.\modem.c     ****             
 570:.\modem.c     ****             //sprintf(get_str,"GET / HTTP/1.0\r\n");
 571:.\modem.c     ****             //sprintf(key_str,"Host: www.google.com\r\n");
 572:.\modem.c     ****             //sprintf(get_str,"GET /\r\n");
 573:.\modem.c     ****             //sprintf(get_str,"%s%s",
 574:.\modem.c     ****             //    get_str,
 575:.\modem.c     ****             //    "\r\n");
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 41


 576:.\modem.c     ****             
 577:.\modem.c     ****             uart_string_reset();
 1649              		.loc 1 577 0
 1650 002c FFF7FEFF 		bl	uart_string_reset
 578:.\modem.c     ****             
 579:.\modem.c     ****             //at_write_command(get_str,"",15000u);
 580:.\modem.c     **** 			
 581:.\modem.c     **** 			at_write_command("GET /get_status/ HTTP/1.0\r\n","",15000u);
 1651              		.loc 1 581 0
 1652 0030 1648     		ldr	r0, .L142+12
 1653 0032 1749     		ldr	r1, .L142+16
 1654 0034 43F69822 		movw	r2, #15000
 1655 0038 FFF7FEFF 		bl	at_write_command
 582:.\modem.c     **** 			//CyDelay(1000u);
 583:.\modem.c     **** 			//at_write_command("Host: www.google.com\r\n","",15000u);
 584:.\modem.c     **** 			CyDelay(1000u);
 1656              		.loc 1 584 0
 1657 003c 4FF47A70 		mov	r0, #1000
 1658 0040 FFF7FEFF 		bl	CyDelay
 585:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1659              		.loc 1 585 0
 1660 0044 1348     		ldr	r0, .L142+20
 1661 0046 1249     		ldr	r1, .L142+16
 1662 0048 43F69822 		movw	r2, #15000
 1663 004c FFF7FEFF 		bl	at_write_command
 586:.\modem.c     **** 			CyDelay(1000u);
 1664              		.loc 1 586 0
 1665 0050 4FF47A70 		mov	r0, #1000
 1666 0054 FFF7FEFF 		bl	CyDelay
 587:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1667              		.loc 1 587 0
 1668 0058 0E48     		ldr	r0, .L142+20
 1669 005a 0D49     		ldr	r1, .L142+16
 1670 005c 43F69822 		movw	r2, #15000
 1671 0060 FFF7FEFF 		bl	at_write_command
 588:.\modem.c     **** 			
 589:.\modem.c     **** 			CyDelay(15000u);
 1672              		.loc 1 589 0
 1673 0064 43F69820 		movw	r0, #15000
 1674 0068 FFF7FEFF 		bl	CyDelay
 590:.\modem.c     ****             
 591:.\modem.c     **** 			// Just return regardless
 592:.\modem.c     **** 			return 1u;
 1675              		.loc 1 592 0
 1676 006c 0123     		movs	r3, #1
 1677 006e 02E0     		b	.L141
 1678              	.L140:
 1679              	.LBE3:
 593:.\modem.c     ****             /*
 594:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 595:.\modem.c     ****                 // Read GET response from the buffer
 596:.\modem.c     ****                 uart_string_reset();
 597:.\modem.c     ****                 //CyDelay(5000u);
 598:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 599:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 600:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 601:.\modem.c     ****                 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 42


 602:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 603:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 604:.\modem.c     **** 
 605:.\modem.c     ****             }
 606:.\modem.c     ****             */
 607:.\modem.c     ****         }
 608:.\modem.c     ****         
 609:.\modem.c     ****     }
 610:.\modem.c     ****     
 611:.\modem.c     ****     //debug_write("MAX_GET_ATTEMPTS Exceeded.");
 612:.\modem.c     ****     modem_disconnect();
 1680              		.loc 1 612 0
 1681 0070 FFF7FEFF 		bl	modem_disconnect
 613:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1682              		.loc 1 613 0
 1683 0074 0023     		movs	r3, #0
 1684              	.L141:
 614:.\modem.c     **** }
 1685              		.loc 1 614 0
 1686 0076 1846     		mov	r0, r3
 1687 0078 07F57A77 		add	r7, r7, #1000
 1688 007c BD46     		mov	sp, r7
 1689              		@ sp needed
 1690 007e 80BD     		pop	{r7, pc}
 1691              	.L143:
 1692              		.align	2
 1693              	.L142:
 1694 0080 00000000 		.word	modem_state
 1695 0084 F0000000 		.word	.LC20
 1696 0088 10010000 		.word	.LC21
 1697 008c 18010000 		.word	.LC22
 1698 0090 34010000 		.word	.LC23
 1699 0094 38010000 		.word	.LC24
 1700              		.cfi_endproc
 1701              	.LFE82:
 1702              		.size	modem_get_google, .-modem_get_google
 1703              		.section	.rodata
 1704 013b 00       		.align	2
 1705              	.LC25:
 1706 013c 41542353 		.ascii	"AT#SD=1,0,80,\"api.thingspeak.com\",0,0,1\015\000"
 1706      443D312C 
 1706      302C3830 
 1706      2C226170 
 1706      692E7468 
 1707 0165 000000   		.align	2
 1708              	.LC26:
 1709 0168 41542353 		.ascii	"AT#SSEND=1\015\000"
 1709      53454E44 
 1709      3D310D00 
 1710              		.align	2
 1711              	.LC27:
 1712 0174 3E00     		.ascii	">\000"
 1713 0176 0000     		.align	2
 1714              	.LC28:
 1715 0178 504F5354 		.ascii	"POST /update HTTP/1.0\015\012\000"
 1715      202F7570 
 1715      64617465 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 43


 1715      20485454 
 1715      502F312E 
 1716              		.align	2
 1717              	.LC29:
 1718 0190 25732573 		.ascii	"%s%s%s%s%s%s%d%s%s%s\000"
 1718      25732573 
 1718      25732573 
 1718      25642573 
 1718      25732573 
 1719 01a5 000000   		.align	2
 1720              	.LC30:
 1721 01a8 486F7374 		.ascii	"Host: api.thingspeak.com\015\012\000"
 1721      3A206170 
 1721      692E7468 
 1721      696E6773 
 1721      7065616B 
 1722 01c3 00       		.align	2
 1723              	.LC31:
 1724 01c4 436F6E6E 		.ascii	"Connection: close\015\012\000"
 1724      65637469 
 1724      6F6E3A20 
 1724      636C6F73 
 1724      650D0A00 
 1725              		.align	2
 1726              	.LC32:
 1727 01d8 582D5448 		.ascii	"X-THINGSPEAKAPIKEY: 4QT5GSDADNCZKVDA\015\012\000"
 1727      494E4753 
 1727      5045414B 
 1727      4150494B 
 1727      45593A20 
 1728 01ff 00       		.align	2
 1729              	.LC33:
 1730 0200 436F6E74 		.ascii	"Content-Type: application/x-www-form-urlencoded\015"
 1730      656E742D 
 1730      54797065 
 1730      3A206170 
 1730      706C6963 
 1731 0230 0A00     		.ascii	"\012\000"
 1732 0232 0000     		.align	2
 1733              	.LC34:
 1734 0234 436F6E74 		.ascii	"Content-Length: \000"
 1734      656E742D 
 1734      4C656E67 
 1734      74683A20 
 1734      00
 1735 0245 000000   		.align	2
 1736              	.LC35:
 1737 0248 0D0A0D0A 		.ascii	"\015\012\015\012\000"
 1737      00
 1738 024d 000000   		.align	2
 1739              	.LC36:
 1740 0250 0D0A0D0A 		.ascii	"\015\012\015\012\032\000"
 1740      1A00
 1741 0256 0000     		.align	2
 1742              	.LC37:
 1743 0258 5352494E 		.ascii	"SRING: 1\000"
 1743      473A2031 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 44


 1743      00
 1744 0261 000000   		.align	2
 1745              	.LC38:
 1746 0264 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1746      52454356 
 1746      3D312C31 
 1746      3030300D 
 1746      00
 1747 0275 000000   		.align	2
 1748              	.LC39:
 1749 0278 32303020 		.ascii	"200 OK\000"
 1749      4F4B00
 1750              		.section	.text.modem_send_packet,"ax",%progbits
 1751              		.align	2
 1752              		.global	modem_send_packet
 1753              		.thumb
 1754              		.thumb_func
 1755              		.type	modem_send_packet, %function
 1756              	modem_send_packet:
 1757              	.LFB83:
 615:.\modem.c     **** 
 616:.\modem.c     **** // send packet to Xively server
 617:.\modem.c     **** uint8 modem_send_packet(char* body){
 1758              		.loc 1 617 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 1008
 1761              		@ frame_needed = 1, uses_anonymous_args = 0
 1762 0000 B0B5     		push	{r4, r5, r7, lr}
 1763              		.cfi_def_cfa_offset 16
 1764              		.cfi_offset 4, -16
 1765              		.cfi_offset 5, -12
 1766              		.cfi_offset 7, -8
 1767              		.cfi_offset 14, -4
 1768 0002 ADF5826D 		sub	sp, sp, #1040
 1769              		.cfi_def_cfa_offset 1056
 1770 0006 08AF     		add	r7, sp, #32
 1771              		.cfi_def_cfa 7, 1024
 1772 0008 3B1D     		adds	r3, r7, #4
 1773 000a 1860     		str	r0, [r3]
 618:.\modem.c     **** 
 619:.\modem.c     **** 	// Handle retries in main()
 620:.\modem.c     ****     //uint8 attempts = 0;
 621:.\modem.c     ****     //for(attempts = 0; attempts < MAX_SEND_ATTEMPTS; attempts++) {
 622:.\modem.c     ****         
 623:.\modem.c     ****     // Proceed if modem is already connected.
 624:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1774              		.loc 1 624 0
 1775 000c 2F4B     		ldr	r3, .L148
 1776 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1777 0010 032B     		cmp	r3, #3
 1778 0012 54D1     		bne	.L145
 625:.\modem.c     **** 		// Reset uart for incoming data from modem
 626:.\modem.c     ****         uart_string_reset();
 1779              		.loc 1 626 0
 1780 0014 FFF7FEFF 		bl	uart_string_reset
 627:.\modem.c     **** 			
 628:.\modem.c     **** 		// Connect to web server
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 45


 629:.\modem.c     ****         //if(at_write_command("AT#SKTD=1,80,\"api.xively.com\",0,0\r","CONNECT",5000u) != 0){
 630:.\modem.c     **** 		if(at_write_command("AT#SD=1,0,80,\"api.thingspeak.com\",0,0,1\r","OK",15000u) != 0){
 1781              		.loc 1 630 0
 1782 0018 2D48     		ldr	r0, .L148+4
 1783 001a 2E49     		ldr	r1, .L148+8
 1784 001c 43F69822 		movw	r2, #15000
 1785 0020 FFF7FEFF 		bl	at_write_command
 1786 0024 0346     		mov	r3, r0
 1787 0026 002B     		cmp	r3, #0
 1788 0028 49D0     		beq	.L145
 631:.\modem.c     **** 		//if(at_write_command("AT#SD=1,0,80,\"www.google.com\",0,0\r\n","CONNECT",15000u) != 0){
 632:.\modem.c     **** 			
 633:.\modem.c     **** 			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 1789              		.loc 1 633 0
 1790 002a 2B48     		ldr	r0, .L148+12
 1791 002c 2B49     		ldr	r1, .L148+16
 1792 002e 42F21072 		movw	r2, #10000
 1793 0032 FFF7FEFF 		bl	at_write_command
 1794 0036 0346     		mov	r3, r0
 1795 0038 002B     		cmp	r3, #0
 1796 003a 40D0     		beq	.L145
 1797              	.LBB4:
 634:.\modem.c     **** 			// Write packet information to serial and send
 635:.\modem.c     **** 	            char put_str[MAX_PACKET_LENGTH], key_str[100];
 636:.\modem.c     **** //	            sprintf(put_str, "POST /update?key=4QT5GSDADNCZKVDA&field1=100 HTTP/1.0\r\n");
 637:.\modem.c     **** 	            sprintf(put_str,"POST /update HTTP/1.0\r\n");
 1798              		.loc 1 637 0
 1799 003c 07F10802 		add	r2, r7, #8
 1800 0040 274B     		ldr	r3, .L148+20
 1801 0042 1446     		mov	r4, r2
 1802 0044 1D46     		mov	r5, r3
 1803 0046 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1804 0048 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1805 004a 95E80300 		ldmia	r5, {r0, r1}
 1806 004e 84E80300 		stmia	r4, {r0, r1}
 638:.\modem.c     **** 	            sprintf(put_str,"%s%s%s%s%s%s%d%s%s%s",
 1807              		.loc 1 638 0
 1808 0052 3B1D     		adds	r3, r7, #4
 1809 0054 1868     		ldr	r0, [r3]
 1810 0056 FFF7FEFF 		bl	strlen
 1811 005a 0146     		mov	r1, r0
 1812 005c 07F10802 		add	r2, r7, #8
 1813 0060 07F10803 		add	r3, r7, #8
 1814 0064 1F48     		ldr	r0, .L148+24
 1815 0066 0090     		str	r0, [sp]
 1816 0068 1F48     		ldr	r0, .L148+28
 1817 006a 0190     		str	r0, [sp, #4]
 1818 006c 1F48     		ldr	r0, .L148+32
 1819 006e 0290     		str	r0, [sp, #8]
 1820 0070 1F48     		ldr	r0, .L148+36
 1821 0072 0390     		str	r0, [sp, #12]
 1822 0074 0491     		str	r1, [sp, #16]
 1823 0076 1F49     		ldr	r1, .L148+40
 1824 0078 0591     		str	r1, [sp, #20]
 1825 007a 391D     		adds	r1, r7, #4
 1826 007c 0968     		ldr	r1, [r1]
 1827 007e 0691     		str	r1, [sp, #24]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 46


 1828 0080 1D49     		ldr	r1, .L148+44
 1829 0082 0791     		str	r1, [sp, #28]
 1830 0084 1046     		mov	r0, r2
 1831 0086 1D49     		ldr	r1, .L148+48
 1832 0088 1A46     		mov	r2, r3
 1833 008a 1D4B     		ldr	r3, .L148+52
 1834 008c FFF7FEFF 		bl	sprintf
 639:.\modem.c     **** 	                put_str,
 640:.\modem.c     ****                     "Host: api.thingspeak.com\r\n",
 641:.\modem.c     ****                     "Connection: close\r\n",
 642:.\modem.c     **** 	                "X-THINGSPEAKAPIKEY: 4QT5GSDADNCZKVDA\r\n",
 643:.\modem.c     ****                     "Content-Type: application/x-www-form-urlencoded\r\n",
 644:.\modem.c     ****                     "Content-Length: ", strlen(body), "\r\n\r\n",
 645:.\modem.c     **** 	                body, "\r\n\r\n\032");
 646:.\modem.c     **** 	                // change second from last back to body
 647:.\modem.c     **** 				// Reset uart for incoming data from modem
 648:.\modem.c     **** 	            uart_string_reset();
 1835              		.loc 1 648 0
 1836 0090 FFF7FEFF 		bl	uart_string_reset
 649:.\modem.c     **** 
 650:.\modem.c     **** 				if(at_write_command(put_str,"SRING: 1",10000u) != 0){
 1837              		.loc 1 650 0
 1838 0094 07F10803 		add	r3, r7, #8
 1839 0098 1846     		mov	r0, r3
 1840 009a 1A49     		ldr	r1, .L148+56
 1841 009c 42F21072 		movw	r2, #10000
 1842 00a0 FFF7FEFF 		bl	at_write_command
 1843 00a4 0346     		mov	r3, r0
 1844 00a6 002B     		cmp	r3, #0
 1845 00a8 09D0     		beq	.L145
 651:.\modem.c     ****                     // Read GET response from the buffer
 652:.\modem.c     ****                     uart_string_reset();
 1846              		.loc 1 652 0
 1847 00aa FFF7FEFF 		bl	uart_string_reset
 653:.\modem.c     ****                     //CyDelay(5000u);
 654:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","200 OK",10000u);
 1848              		.loc 1 654 0
 1849 00ae 1648     		ldr	r0, .L148+60
 1850 00b0 1649     		ldr	r1, .L148+64
 1851 00b2 42F21072 		movw	r2, #10000
 1852 00b6 FFF7FEFF 		bl	at_write_command
 655:.\modem.c     **** 					
 656:.\modem.c     ****                     return 1u;   // return 1 if succesfully sent sms
 1853              		.loc 1 656 0
 1854 00ba 0123     		movs	r3, #1
 1855 00bc 00E0     		b	.L147
 1856              	.L145:
 1857              	.LBE4:
 657:.\modem.c     **** 
 658:.\modem.c     ****                 }
 659:.\modem.c     **** 				/* GC 864
 660:.\modem.c     **** 	            if(at_write_command(put_str,"200 OK",15000u) != 0){
 661:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 662:.\modem.c     **** 	            }
 663:.\modem.c     **** 				*/
 664:.\modem.c     ****             }
 665:.\modem.c     ****             /* Write to SD Card debugger
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 47


 666:.\modem.c     ****             else {
 667:.\modem.c     ****                 debug_write("(AT#SSEND=1) Could not send data through connected socket.");
 668:.\modem.c     ****             }
 669:.\modem.c     ****             */
 670:.\modem.c     ****         }
 671:.\modem.c     ****         /* Write to SD Card debugger
 672:.\modem.c     ****         else {
 673:.\modem.c     ****             debug_write("(AT#SD=1,0,8081,\"api.xively.com\",0,0,1\r) Could not connect to server.")
 674:.\modem.c     ****         }
 675:.\modem.c     ****         */
 676:.\modem.c     ****     }        
 677:.\modem.c     ****     //}  
 678:.\modem.c     **** 	//modem_reset();
 679:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1858              		.loc 1 679 0
 1859 00be 0023     		movs	r3, #0
 1860              	.L147:
 680:.\modem.c     **** }
 1861              		.loc 1 680 0
 1862 00c0 1846     		mov	r0, r3
 1863 00c2 07F57C77 		add	r7, r7, #1008
 1864 00c6 BD46     		mov	sp, r7
 1865              		@ sp needed
 1866 00c8 B0BD     		pop	{r4, r5, r7, pc}
 1867              	.L149:
 1868 00ca 00BF     		.align	2
 1869              	.L148:
 1870 00cc 00000000 		.word	modem_state
 1871 00d0 3C010000 		.word	.LC25
 1872 00d4 14000000 		.word	.LC2
 1873 00d8 68010000 		.word	.LC26
 1874 00dc 74010000 		.word	.LC27
 1875 00e0 78010000 		.word	.LC28
 1876 00e4 C4010000 		.word	.LC31
 1877 00e8 D8010000 		.word	.LC32
 1878 00ec 00020000 		.word	.LC33
 1879 00f0 34020000 		.word	.LC34
 1880 00f4 48020000 		.word	.LC35
 1881 00f8 50020000 		.word	.LC36
 1882 00fc 90010000 		.word	.LC29
 1883 0100 A8010000 		.word	.LC30
 1884 0104 58020000 		.word	.LC37
 1885 0108 64020000 		.word	.LC38
 1886 010c 78020000 		.word	.LC39
 1887              		.cfi_endproc
 1888              	.LFE83:
 1889              		.size	modem_send_packet, .-modem_send_packet
 1890              		.section	.rodata
 1891 027f 00       		.align	2
 1892              	.LC40:
 1893 0280 41542353 		.ascii	"AT#SD=1,0,80,\"api.xively.com\",0,0,1\015\012\000"
 1893      443D312C 
 1893      302C3830 
 1893      2C226170 
 1893      692E7869 
 1894 02a6 0000     		.align	2
 1895              	.LC41:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 48


 1896 02a8 47455420 		.ascii	"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\015\012"
 1896      2F76322F 
 1896      66656564 
 1896      732F256C 
 1896      752E6373 
 1897 02d7 00       		.ascii	"\000"
 1898              		.align	2
 1899              	.LC42:
 1900 02d8 582D4170 		.ascii	"X-ApiKey: %s\015\012\000"
 1900      694B6579 
 1900      3A202573 
 1900      0D0A00
 1901 02e7 00       		.align	2
 1902              	.LC43:
 1903 02e8 25732573 		.ascii	"%s%s%s%s%s\000"
 1903      25732573 
 1903      257300
 1904 02f3 00       		.align	2
 1905              	.LC44:
 1906 02f4 486F7374 		.ascii	"Host: api.xively.com\015\012\000"
 1906      3A206170 
 1906      692E7869 
 1906      76656C79 
 1906      2E636F6D 
 1907 030b 00       		.align	2
 1908              	.LC45:
 1909 030c 41636365 		.ascii	"Accept: text/csv\015\012\000"
 1909      70743A20 
 1909      74657874 
 1909      2F637376 
 1909      0D0A00
 1910 031f 00       		.align	2
 1911              	.LC46:
 1912 0320 0D0A1A0D 		.ascii	"\015\012\032\015\000"
 1912      00
 1913              		.section	.text.modem_get_packet,"ax",%progbits
 1914              		.align	2
 1915              		.global	modem_get_packet
 1916              		.thumb
 1917              		.thumb_func
 1918              		.type	modem_get_packet, %function
 1919              	modem_get_packet:
 1920              	.LFB84:
 681:.\modem.c     **** 
 682:.\modem.c     **** 
 683:.\modem.c     **** // read packet from Xively server
 684:.\modem.c     **** uint8 modem_get_packet(char* packet, char* csv){    
 1921              		.loc 1 684 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 1112
 1924              		@ frame_needed = 1, uses_anonymous_args = 0
 1925 0000 80B5     		push	{r7, lr}
 1926              		.cfi_def_cfa_offset 8
 1927              		.cfi_offset 7, -8
 1928              		.cfi_offset 14, -4
 1929 0002 ADF58D6D 		sub	sp, sp, #1128
 1930              		.cfi_def_cfa_offset 1136
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 49


 1931 0006 04AF     		add	r7, sp, #16
 1932              		.cfi_def_cfa 7, 1120
 1933 0008 3B1D     		adds	r3, r7, #4
 1934 000a 1860     		str	r0, [r3]
 1935 000c 3B46     		mov	r3, r7
 1936 000e 1960     		str	r1, [r3]
 685:.\modem.c     **** 
 686:.\modem.c     **** 	// Check if request is too long
 687:.\modem.c     ****     if (strlen(csv) > 125) {
 1937              		.loc 1 687 0
 1938 0010 3B46     		mov	r3, r7
 1939 0012 1868     		ldr	r0, [r3]
 1940 0014 FFF7FEFF 		bl	strlen
 1941 0018 0346     		mov	r3, r0
 1942 001a 7D2B     		cmp	r3, #125
 1943 001c 01D9     		bls	.L151
 688:.\modem.c     ****         /* Write to SD Card debugger
 689:.\modem.c     ****         debug_write("modem_get_packet(): csv length > 100");
 690:.\modem.c     ****         */
 691:.\modem.c     ****         return 0u;
 1944              		.loc 1 691 0
 1945 001e 0023     		movs	r3, #0
 1946 0020 5BE0     		b	.L152
 1947              	.L151:
 692:.\modem.c     ****     }
 693:.\modem.c     **** 	
 694:.\modem.c     **** 	// Changed to handle looping in main()
 695:.\modem.c     ****     //uint8 attempts = 0;            
 696:.\modem.c     ****     //for(attempts = 0; attempts < MAX_GET_ATTEMPTS; attempts++) {
 697:.\modem.c     ****         // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 698:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1948              		.loc 1 698 0
 1949 0022 304B     		ldr	r3, .L155
 1950 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 0026 032B     		cmp	r3, #3
 1952 0028 56D1     		bne	.L153
 699:.\modem.c     **** 		// Connect to server
 700:.\modem.c     ****         if(at_write_command("AT#SD=1,0,80,\"api.xively.com\",0,0,1\r\n","OK",20000u) != 0){
 1953              		.loc 1 700 0
 1954 002a 2F48     		ldr	r0, .L155+4
 1955 002c 2F49     		ldr	r1, .L155+8
 1956 002e 44F62062 		movw	r2, #20000
 1957 0032 FFF7FEFF 		bl	at_write_command
 1958 0036 0346     		mov	r3, r0
 1959 0038 002B     		cmp	r3, #0
 1960 003a 4DD0     		beq	.L153
 701:.\modem.c     **** 			
 702:.\modem.c     **** 			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 1961              		.loc 1 702 0
 1962 003c 2C48     		ldr	r0, .L155+12
 1963 003e 2D49     		ldr	r1, .L155+16
 1964 0040 42F21072 		movw	r2, #10000
 1965 0044 FFF7FEFF 		bl	at_write_command
 1966 0048 0346     		mov	r3, r0
 1967 004a 002B     		cmp	r3, #0
 1968 004c 44D0     		beq	.L153
 1969              	.LBB5:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 50


 703:.\modem.c     **** 				// Write packet information to serial and send
 704:.\modem.c     **** 	            char get_str[MAX_PACKET_LENGTH], key_str[100];
 705:.\modem.c     **** 				
 706:.\modem.c     **** 	            sprintf(get_str,"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\r\n", feed_id, csv);
 1970              		.loc 1 706 0
 1971 004e 2A4B     		ldr	r3, .L155+20
 1972 0050 1A68     		ldr	r2, [r3]
 1973 0052 07F17001 		add	r1, r7, #112
 1974 0056 3B46     		mov	r3, r7
 1975 0058 0846     		mov	r0, r1
 1976 005a 2849     		ldr	r1, .L155+24
 1977 005c 1B68     		ldr	r3, [r3]
 1978 005e FFF7FEFF 		bl	sprintf
 707:.\modem.c     **** 	            sprintf(key_str,"X-ApiKey: %s\r\n", api_key);
 1979              		.loc 1 707 0
 1980 0062 274B     		ldr	r3, .L155+28
 1981 0064 1B68     		ldr	r3, [r3]
 1982 0066 07F10C02 		add	r2, r7, #12
 1983 006a 1046     		mov	r0, r2
 1984 006c 2549     		ldr	r1, .L155+32
 1985 006e 1A46     		mov	r2, r3
 1986 0070 FFF7FEFF 		bl	sprintf
 708:.\modem.c     **** 	            sprintf(get_str,"%s%s%s%s%s",
 1987              		.loc 1 708 0
 1988 0074 07F17001 		add	r1, r7, #112
 1989 0078 07F17002 		add	r2, r7, #112
 1990 007c 07F10C03 		add	r3, r7, #12
 1991 0080 2148     		ldr	r0, .L155+36
 1992 0082 0090     		str	r0, [sp]
 1993 0084 2148     		ldr	r0, .L155+40
 1994 0086 0190     		str	r0, [sp, #4]
 1995 0088 2148     		ldr	r0, .L155+44
 1996 008a 0290     		str	r0, [sp, #8]
 1997 008c 0846     		mov	r0, r1
 1998 008e 2149     		ldr	r1, .L155+48
 1999 0090 FFF7FEFF 		bl	sprintf
 709:.\modem.c     **** 	                get_str,
 710:.\modem.c     **** 	                key_str,
 711:.\modem.c     **** 	                "Host: api.xively.com\r\n",
 712:.\modem.c     **** 	                "Accept: text/csv\r\n",
 713:.\modem.c     **** 	                "\r\n\032\r");
 714:.\modem.c     **** 	            
 715:.\modem.c     **** 				// Reset uart for incoming data from modem
 716:.\modem.c     **** 	            uart_string_reset();
 2000              		.loc 1 716 0
 2001 0094 FFF7FEFF 		bl	uart_string_reset
 717:.\modem.c     **** 				
 718:.\modem.c     **** 			    if(at_write_command(get_str,"SRING: 1",10000u) != 0){
 2002              		.loc 1 718 0
 2003 0098 07F17003 		add	r3, r7, #112
 2004 009c 1846     		mov	r0, r3
 2005 009e 1E49     		ldr	r1, .L155+52
 2006 00a0 42F21072 		movw	r2, #10000
 2007 00a4 FFF7FEFF 		bl	at_write_command
 2008 00a8 0346     		mov	r3, r0
 2009 00aa 002B     		cmp	r3, #0
 2010 00ac 14D0     		beq	.L153
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 51


 719:.\modem.c     ****                     // Read GET response from the buffer
 720:.\modem.c     ****                     uart_string_reset();
 2011              		.loc 1 720 0
 2012 00ae FFF7FEFF 		bl	uart_string_reset
 721:.\modem.c     ****                     //CyDelay(5000u);
 722:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","OK",10000u);
 2013              		.loc 1 722 0
 2014 00b2 1A48     		ldr	r0, .L155+56
 2015 00b4 0D49     		ldr	r1, .L155+8
 2016 00b6 42F21072 		movw	r2, #10000
 2017 00ba FFF7FEFF 		bl	at_write_command
 723:.\modem.c     ****                     //strcpy(packet, uart_received_string);
 724:.\modem.c     ****                     strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 2018              		.loc 1 724 0
 2019 00be 1848     		ldr	r0, .L155+60
 2020 00c0 1849     		ldr	r1, .L155+64
 2021 00c2 FFF7FEFF 		bl	strstr
 2022 00c6 0346     		mov	r3, r0
 2023 00c8 0433     		adds	r3, r3, #4
 2024 00ca 3A1D     		adds	r2, r7, #4
 2025 00cc 1068     		ldr	r0, [r2]
 2026 00ce 1946     		mov	r1, r3
 2027 00d0 FFF7FEFF 		bl	strcpy
 725:.\modem.c     ****                     
 726:.\modem.c     ****                     //debug_write("Packet received successfully.");
 727:.\modem.c     ****                     return 1u;   // return 1 if successful
 2028              		.loc 1 727 0
 2029 00d4 0123     		movs	r3, #1
 2030 00d6 00E0     		b	.L152
 2031              	.L153:
 2032              	.LBE5:
 728:.\modem.c     **** 
 729:.\modem.c     ****                 }
 730:.\modem.c     **** 				
 731:.\modem.c     **** 				/* GC864
 732:.\modem.c     **** 	            if(at_write_command(get_str,"200 OK",15000u) != 0){
 733:.\modem.c     **** 					strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 734:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 735:.\modem.c     **** 	            }
 736:.\modem.c     **** 				*/
 737:.\modem.c     ****             }
 738:.\modem.c     **** 			/* OLD, method used AT#SD=1,0,80,\"api.xively.com\",0,0,1 combined with SSEND
 739:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 740:.\modem.c     ****                 // Read GET response from the buffer
 741:.\modem.c     ****                 uart_string_reset();
 742:.\modem.c     ****                 //CyDelay(5000u);
 743:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 744:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 745:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 746:.\modem.c     ****                 
 747:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 748:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 749:.\modem.c     **** 
 750:.\modem.c     ****             }
 751:.\modem.c     **** 			*/
 752:.\modem.c     **** 			
 753:.\modem.c     ****             /* Write to SD Card debugger
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 52


 754:.\modem.c     ****             else {
 755:.\modem.c     ****                 debug_write("(at_write_command(sendBuffer,\"OK\"...) Data sent unsuccessfully.");
 756:.\modem.c     ****             }
 757:.\modem.c     ****             */
 758:.\modem.c     **** 
 759:.\modem.c     ****             //uint8 disconnected = modem_disconnect();
 760:.\modem.c     ****         }
 761:.\modem.c     ****             /* Write to SD Card debugger
 762:.\modem.c     ****             else {
 763:.\modem.c     ****                 debug_write("(AT#SD=1,0,80,\"api.xively.com\",0,0,1) Could not connect to server.")
 764:.\modem.c     ****             }
 765:.\modem.c     ****             */
 766:.\modem.c     ****         /*}
 767:.\modem.c     ****         
 768:.\modem.c     ****         if (attempts < MAX_GET_ATTEMPTS-1) { // Don't reset the modem on the last attempt since it 
 769:.\modem.c     ****             modem_reset();
 770:.\modem.c     ****         }
 771:.\modem.c     ****         */
 772:.\modem.c     ****     }
 773:.\modem.c     ****     //modem_disconnect();
 774:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 2033              		.loc 1 774 0
 2034 00d8 0023     		movs	r3, #0
 2035              	.L152:
 775:.\modem.c     **** }
 2036              		.loc 1 775 0
 2037 00da 1846     		mov	r0, r3
 2038 00dc 07F58B67 		add	r7, r7, #1112
 2039 00e0 BD46     		mov	sp, r7
 2040              		@ sp needed
 2041 00e2 80BD     		pop	{r7, pc}
 2042              	.L156:
 2043              		.align	2
 2044              	.L155:
 2045 00e4 00000000 		.word	modem_state
 2046 00e8 80020000 		.word	.LC40
 2047 00ec 14000000 		.word	.LC2
 2048 00f0 68010000 		.word	.LC26
 2049 00f4 74010000 		.word	.LC27
 2050 00f8 00000000 		.word	feed_id
 2051 00fc A8020000 		.word	.LC41
 2052 0100 00000000 		.word	api_key
 2053 0104 D8020000 		.word	.LC42
 2054 0108 F4020000 		.word	.LC44
 2055 010c 0C030000 		.word	.LC45
 2056 0110 20030000 		.word	.LC46
 2057 0114 E8020000 		.word	.LC43
 2058 0118 58020000 		.word	.LC37
 2059 011c 64020000 		.word	.LC38
 2060 0120 00000000 		.word	uart_received_string
 2061 0124 48020000 		.word	.LC35
 2062              		.cfi_endproc
 2063              	.LFE84:
 2064              		.size	modem_get_packet, .-modem_get_packet
 2065              		.section	.rodata
 2066 0325 000000   		.align	2
 2067              	.LC47:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 53


 2068 0328 6C6F636B 		.ascii	"lock\000"
 2068      00
 2069 032d 000000   		.align	2
 2070              	.LC48:
 2071 0330 7B226D65 		.ascii	"{\"method\":\"put\",\"resource\":\"/feeds/%lu\",\"h"
 2071      74686F64 
 2071      223A2270 
 2071      7574222C 
 2071      22726573 
 2072 035a 65616465 		.ascii	"eaders\":{\"X-ApiKey\":\"%s\"},\"body\":{\"version\""
 2072      7273223A 
 2072      7B22582D 
 2072      4170694B 
 2072      6579223A 
 2073 0385 3A22312E 		.ascii	":\"1.0.0\",\"datastreams\":[{ \"id\" : \"lock\", \""
 2073      302E3022 
 2073      2C226461 
 2073      74617374 
 2073      7265616D 
 2074 03af 63757272 		.ascii	"current_value\" : \"%u\"}]}}\000"
 2074      656E745F 
 2074      76616C75 
 2074      6522203A 
 2074      20222575 
 2075 03c9 000000   		.section	.text.modem_acquire_lock,"ax",%progbits
 2076              		.align	2
 2077              		.global	modem_acquire_lock
 2078              		.thumb
 2079              		.thumb_func
 2080              		.type	modem_acquire_lock, %function
 2081              	modem_acquire_lock:
 2082              	.LFB85:
 776:.\modem.c     **** 
 777:.\modem.c     **** uint8 modem_acquire_lock(){
 2083              		.loc 1 777 0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 320
 2086              		@ frame_needed = 1, uses_anonymous_args = 0
 2087 0000 80B5     		push	{r7, lr}
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 7, -8
 2090              		.cfi_offset 14, -4
 2091 0002 D2B0     		sub	sp, sp, #328
 2092              		.cfi_def_cfa_offset 336
 2093 0004 02AF     		add	r7, sp, #8
 2094              		.cfi_def_cfa 7, 328
 778:.\modem.c     ****     
 779:.\modem.c     ****     /*
 780:.\modem.c     ****     if (lock_acquired == 1u) {
 781:.\modem.c     ****         return 1u;
 782:.\modem.c     ****     }
 783:.\modem.c     ****     */
 784:.\modem.c     ****     
 785:.\modem.c     ****     uint8 lock = 0u;
 2095              		.loc 1 785 0
 2096 0006 0023     		movs	r3, #0
 2097 0008 87F83331 		strb	r3, [r7, #307]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 54


 786:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2098              		.loc 1 786 0
 2099 000c 0023     		movs	r3, #0
 2100 000e C7F83C31 		str	r3, [r7, #316]
 2101 0012 6423     		movs	r3, #100
 2102 0014 C7F83831 		str	r3, [r7, #312]
 2103 0018 0223     		movs	r3, #2
 2104 001a C7F83431 		str	r3, [r7, #308]
 787:.\modem.c     ****     char data_packet[300] = {0};
 2105              		.loc 1 787 0
 2106 001e 3B1D     		adds	r3, r7, #4
 2107 0020 1A46     		mov	r2, r3
 2108 0022 4FF49673 		mov	r3, #300
 2109 0026 1046     		mov	r0, r2
 2110 0028 0021     		movs	r1, #0
 2111 002a 1A46     		mov	r2, r3
 2112 002c FFF7FEFF 		bl	memset
 788:.\modem.c     ****             
 789:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2113              		.loc 1 789 0
 2114 0030 0023     		movs	r3, #0
 2115 0032 C7F83C31 		str	r3, [r7, #316]
 2116 0036 3DE0     		b	.L158
 2117              	.L161:
 790:.\modem.c     ****         if(modem_get_packet(data_packet,"lock")){
 2118              		.loc 1 790 0
 2119 0038 3B1D     		adds	r3, r7, #4
 2120 003a 1846     		mov	r0, r3
 2121 003c 2349     		ldr	r1, .L163
 2122 003e FFF7FEFF 		bl	modem_get_packet
 2123 0042 0346     		mov	r3, r0
 2124 0044 002B     		cmp	r3, #0
 2125 0046 2CD0     		beq	.L159
 791:.\modem.c     ****             if(packet_get_uint8(data_packet, "lock", &lock) && lock == 0u){
 2126              		.loc 1 791 0
 2127 0048 3A1D     		adds	r2, r7, #4
 2128 004a 07F23313 		addw	r3, r7, #307
 2129 004e 1046     		mov	r0, r2
 2130 0050 1E49     		ldr	r1, .L163
 2131 0052 1A46     		mov	r2, r3
 2132 0054 FFF7FEFF 		bl	packet_get_uint8
 2133 0058 0346     		mov	r3, r0
 2134 005a 002B     		cmp	r3, #0
 2135 005c 21D0     		beq	.L159
 2136              		.loc 1 791 0 is_stmt 0 discriminator 1
 2137 005e 97F83331 		ldrb	r3, [r7, #307]	@ zero_extendqisi2
 2138 0062 002B     		cmp	r3, #0
 2139 0064 1DD1     		bne	.L159
 792:.\modem.c     ****             
 793:.\modem.c     ****                 memset(&data_packet[0],0,sizeof(data_packet));
 2140              		.loc 1 793 0 is_stmt 1
 2141 0066 3B1D     		adds	r3, r7, #4
 2142 0068 1846     		mov	r0, r3
 2143 006a 0021     		movs	r1, #0
 2144 006c 4FF49672 		mov	r2, #300
 2145 0070 FFF7FEFF 		bl	memset
 794:.\modem.c     ****                 sprintf(data_packet, "{"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 55


 2146              		.loc 1 794 0
 2147 0074 164B     		ldr	r3, .L163+4
 2148 0076 1A68     		ldr	r2, [r3]
 2149 0078 164B     		ldr	r3, .L163+8
 2150 007a 1B68     		ldr	r3, [r3]
 2151 007c 391D     		adds	r1, r7, #4
 2152 007e 0120     		movs	r0, #1
 2153 0080 0090     		str	r0, [sp]
 2154 0082 0846     		mov	r0, r1
 2155 0084 1449     		ldr	r1, .L163+12
 2156 0086 FFF7FEFF 		bl	sprintf
 795:.\modem.c     ****                       "\"method\":\"put\","
 796:.\modem.c     ****                       "\"resource\":\"/feeds/%lu\","
 797:.\modem.c     ****                       "\"headers\":{\"X-ApiKey\":\"%s\"},"
 798:.\modem.c     ****                       "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 799:.\modem.c     ****                             "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 800:.\modem.c     ****                       "]}}",
 801:.\modem.c     ****                       feed_id,api_key,1u);
 802:.\modem.c     ****                       
 803:.\modem.c     ****                 if(modem_send_packet(data_packet)) {
 2157              		.loc 1 803 0
 2158 008a 3B1D     		adds	r3, r7, #4
 2159 008c 1846     		mov	r0, r3
 2160 008e FFF7FEFF 		bl	modem_send_packet
 2161 0092 0346     		mov	r3, r0
 2162 0094 002B     		cmp	r3, #0
 2163 0096 04D0     		beq	.L159
 804:.\modem.c     ****                     lock_acquired = 1u;
 2164              		.loc 1 804 0
 2165 0098 104B     		ldr	r3, .L163+16
 2166 009a 0122     		movs	r2, #1
 2167 009c 1A70     		strb	r2, [r3]
 805:.\modem.c     ****                     return 1u;
 2168              		.loc 1 805 0
 2169 009e 0123     		movs	r3, #1
 2170 00a0 0FE0     		b	.L162
 2171              	.L159:
 806:.\modem.c     ****                 }
 807:.\modem.c     ****             }  
 808:.\modem.c     ****         }
 809:.\modem.c     ****         CyDelay(delay);
 2172              		.loc 1 809 0
 2173 00a2 D7F83801 		ldr	r0, [r7, #312]
 2174 00a6 FFF7FEFF 		bl	CyDelay
 789:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2175              		.loc 1 789 0
 2176 00aa D7F83C31 		ldr	r3, [r7, #316]
 2177 00ae 0133     		adds	r3, r3, #1
 2178 00b0 C7F83C31 		str	r3, [r7, #316]
 2179              	.L158:
 789:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2180              		.loc 1 789 0 is_stmt 0 discriminator 1
 2181 00b4 D7F83C21 		ldr	r2, [r7, #316]
 2182 00b8 D7F83431 		ldr	r3, [r7, #308]
 2183 00bc 9A42     		cmp	r2, r3
 2184 00be BBD3     		bcc	.L161
 810:.\modem.c     ****     }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 56


 811:.\modem.c     ****          
 812:.\modem.c     ****     return 0u;
 2185              		.loc 1 812 0 is_stmt 1
 2186 00c0 0023     		movs	r3, #0
 2187              	.L162:
 813:.\modem.c     **** }
 2188              		.loc 1 813 0
 2189 00c2 1846     		mov	r0, r3
 2190 00c4 07F5A077 		add	r7, r7, #320
 2191 00c8 BD46     		mov	sp, r7
 2192              		@ sp needed
 2193 00ca 80BD     		pop	{r7, pc}
 2194              	.L164:
 2195              		.align	2
 2196              	.L163:
 2197 00cc 28030000 		.word	.LC47
 2198 00d0 00000000 		.word	feed_id
 2199 00d4 00000000 		.word	api_key
 2200 00d8 30030000 		.word	.LC48
 2201 00dc 00000000 		.word	lock_acquired
 2202              		.cfi_endproc
 2203              	.LFE85:
 2204              		.size	modem_acquire_lock, .-modem_acquire_lock
 2205              		.section	.text.modem_release_lock,"ax",%progbits
 2206              		.align	2
 2207              		.global	modem_release_lock
 2208              		.thumb
 2209              		.thumb_func
 2210              		.type	modem_release_lock, %function
 2211              	modem_release_lock:
 2212              	.LFB86:
 814:.\modem.c     **** 
 815:.\modem.c     **** uint8 modem_release_lock(){
 2213              		.loc 1 815 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 312
 2216              		@ frame_needed = 1, uses_anonymous_args = 0
 2217 0000 80B5     		push	{r7, lr}
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 D0B0     		sub	sp, sp, #320
 2222              		.cfi_def_cfa_offset 328
 2223 0004 02AF     		add	r7, sp, #8
 2224              		.cfi_def_cfa 7, 320
 816:.\modem.c     ****     /*
 817:.\modem.c     ****     if (lock_acquired == 0u) {
 818:.\modem.c     ****         return 1u;
 819:.\modem.c     ****     }
 820:.\modem.c     ****     */
 821:.\modem.c     ****     
 822:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2225              		.loc 1 822 0
 2226 0006 0023     		movs	r3, #0
 2227 0008 C7F83431 		str	r3, [r7, #308]
 2228 000c 6423     		movs	r3, #100
 2229 000e C7F83031 		str	r3, [r7, #304]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 57


 2230 0012 0223     		movs	r3, #2
 2231 0014 C7F82C31 		str	r3, [r7, #300]
 823:.\modem.c     ****     char data_packet[300] = {0};
 2232              		.loc 1 823 0
 2233 0018 3B46     		mov	r3, r7
 2234 001a 1A46     		mov	r2, r3
 2235 001c 4FF49673 		mov	r3, #300
 2236 0020 1046     		mov	r0, r2
 2237 0022 0021     		movs	r1, #0
 2238 0024 1A46     		mov	r2, r3
 2239 0026 FFF7FEFF 		bl	memset
 824:.\modem.c     ****     
 825:.\modem.c     ****     sprintf(data_packet, "{"
 2240              		.loc 1 825 0
 2241 002a 184B     		ldr	r3, .L171
 2242 002c 1A68     		ldr	r2, [r3]
 2243 002e 184B     		ldr	r3, .L171+4
 2244 0030 1B68     		ldr	r3, [r3]
 2245 0032 3946     		mov	r1, r7
 2246 0034 0020     		movs	r0, #0
 2247 0036 0090     		str	r0, [sp]
 2248 0038 0846     		mov	r0, r1
 2249 003a 1649     		ldr	r1, .L171+8
 2250 003c FFF7FEFF 		bl	sprintf
 826:.\modem.c     ****           "\"method\":\"put\","
 827:.\modem.c     ****           "\"resource\":\"/feeds/%lu\","
 828:.\modem.c     ****           "\"headers\":{\"X-ApiKey\":\"%s\"},"
 829:.\modem.c     ****           "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 830:.\modem.c     ****                 "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 831:.\modem.c     ****           "]}}",
 832:.\modem.c     ****           feed_id, api_key, 0u);
 833:.\modem.c     ****         
 834:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2251              		.loc 1 834 0
 2252 0040 0023     		movs	r3, #0
 2253 0042 C7F83431 		str	r3, [r7, #308]
 2254 0046 14E0     		b	.L166
 2255              	.L169:
 835:.\modem.c     **** 
 836:.\modem.c     ****         if(modem_send_packet(data_packet)) {
 2256              		.loc 1 836 0
 2257 0048 3B46     		mov	r3, r7
 2258 004a 1846     		mov	r0, r3
 2259 004c FFF7FEFF 		bl	modem_send_packet
 2260 0050 0346     		mov	r3, r0
 2261 0052 002B     		cmp	r3, #0
 2262 0054 04D0     		beq	.L167
 837:.\modem.c     ****             lock_acquired = 0u;
 2263              		.loc 1 837 0
 2264 0056 104B     		ldr	r3, .L171+12
 2265 0058 0022     		movs	r2, #0
 2266 005a 1A70     		strb	r2, [r3]
 838:.\modem.c     ****             return 1u;
 2267              		.loc 1 838 0
 2268 005c 0123     		movs	r3, #1
 2269 005e 0FE0     		b	.L170
 2270              	.L167:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 58


 839:.\modem.c     ****         }
 840:.\modem.c     ****         
 841:.\modem.c     ****         CyDelay(delay);
 2271              		.loc 1 841 0
 2272 0060 D7F83001 		ldr	r0, [r7, #304]
 2273 0064 FFF7FEFF 		bl	CyDelay
 834:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2274              		.loc 1 834 0
 2275 0068 D7F83431 		ldr	r3, [r7, #308]
 2276 006c 0133     		adds	r3, r3, #1
 2277 006e C7F83431 		str	r3, [r7, #308]
 2278              	.L166:
 834:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2279              		.loc 1 834 0 is_stmt 0 discriminator 1
 2280 0072 D7F83421 		ldr	r2, [r7, #308]
 2281 0076 D7F82C31 		ldr	r3, [r7, #300]
 2282 007a 9A42     		cmp	r2, r3
 2283 007c E4D3     		bcc	.L169
 842:.\modem.c     ****     }
 843:.\modem.c     ****          
 844:.\modem.c     ****     return 0u;
 2284              		.loc 1 844 0 is_stmt 1
 2285 007e 0023     		movs	r3, #0
 2286              	.L170:
 845:.\modem.c     **** }
 2287              		.loc 1 845 0
 2288 0080 1846     		mov	r0, r3
 2289 0082 07F59C77 		add	r7, r7, #312
 2290 0086 BD46     		mov	sp, r7
 2291              		@ sp needed
 2292 0088 80BD     		pop	{r7, pc}
 2293              	.L172:
 2294 008a 00BF     		.align	2
 2295              	.L171:
 2296 008c 00000000 		.word	feed_id
 2297 0090 00000000 		.word	api_key
 2298 0094 30030000 		.word	.LC48
 2299 0098 00000000 		.word	lock_acquired
 2300              		.cfi_endproc
 2301              	.LFE86:
 2302              		.size	modem_release_lock, .-modem_release_lock
 2303              		.section	.text.uart_string_reset,"ax",%progbits
 2304              		.align	2
 2305              		.global	uart_string_reset
 2306              		.thumb
 2307              		.thumb_func
 2308              		.type	uart_string_reset, %function
 2309              	uart_string_reset:
 2310              	.LFB87:
 846:.\modem.c     **** 
 847:.\modem.c     **** void uart_string_reset(){
 2311              		.loc 1 847 0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 1, uses_anonymous_args = 0
 2315 0000 80B5     		push	{r7, lr}
 2316              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 59


 2317              		.cfi_offset 7, -8
 2318              		.cfi_offset 14, -4
 2319 0002 00AF     		add	r7, sp, #0
 2320              		.cfi_def_cfa_register 7
 848:.\modem.c     ****     // reset uart_received_string to zero
 849:.\modem.c     ****     /*
 850:.\modem.c     ****     uint16 i = 0;
 851:.\modem.c     ****     
 852:.\modem.c     ****     for(i = 0; i < 700; i++){
 853:.\modem.c     ****         uart_received_string[i] = 0;
 854:.\modem.c     ****     }
 855:.\modem.c     ****     */
 856:.\modem.c     ****     memset(&uart_received_string[0],0,sizeof(uart_received_string));
 2321              		.loc 1 856 0
 2322 0004 0548     		ldr	r0, .L174
 2323 0006 0021     		movs	r1, #0
 2324 0008 4FF47A72 		mov	r2, #1000
 2325 000c FFF7FEFF 		bl	memset
 857:.\modem.c     ****     uart_string_index = 0;
 2326              		.loc 1 857 0
 2327 0010 034B     		ldr	r3, .L174+4
 2328 0012 0022     		movs	r2, #0
 2329 0014 1A80     		strh	r2, [r3]	@ movhi
 858:.\modem.c     ****     Telit_UART_ClearRxBuffer();
 2330              		.loc 1 858 0
 2331 0016 FFF7FEFF 		bl	Telit_UART_ClearRxBuffer
 859:.\modem.c     **** //    uart_ClearTxBuffer();
 860:.\modem.c     **** }
 2332              		.loc 1 860 0
 2333 001a 80BD     		pop	{r7, pc}
 2334              	.L175:
 2335              		.align	2
 2336              	.L174:
 2337 001c 00000000 		.word	uart_received_string
 2338 0020 00000000 		.word	uart_string_index
 2339              		.cfi_endproc
 2340              	.LFE87:
 2341              		.size	uart_string_reset, .-uart_string_reset
 2342              		.section	.text.Telit_isr_rx,"ax",%progbits
 2343              		.align	2
 2344              		.global	Telit_isr_rx
 2345              		.thumb
 2346              		.thumb_func
 2347              		.type	Telit_isr_rx, %function
 2348              	Telit_isr_rx:
 2349              	.LFB88:
 861:.\modem.c     **** 
 862:.\modem.c     **** // this function fires when uart rx receives bytes (when modem is sending bytes)
 863:.\modem.c     **** CY_ISR(Telit_isr_rx){
 2350              		.loc 1 863 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 8
 2353              		@ frame_needed = 1, uses_anonymous_args = 0
 2354 0000 80B5     		push	{r7, lr}
 2355              		.cfi_def_cfa_offset 8
 2356              		.cfi_offset 7, -8
 2357              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 60


 2358 0002 82B0     		sub	sp, sp, #8
 2359              		.cfi_def_cfa_offset 16
 2360 0004 00AF     		add	r7, sp, #0
 2361              		.cfi_def_cfa_register 7
 864:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2362              		.loc 1 864 0
 2363 0006 11E0     		b	.L177
 2364              	.L178:
 2365              	.LBB6:
 865:.\modem.c     ****         // hold the next char in the rx register as a temporary variable
 866:.\modem.c     ****         char rx_char_hold = Telit_UART_GetChar();
 2366              		.loc 1 866 0
 2367 0008 FFF7FEFF 		bl	Telit_UART_GetChar
 2368 000c 0346     		mov	r3, r0
 2369 000e FB71     		strb	r3, [r7, #7]
 867:.\modem.c     ****         
 868:.\modem.c     ****         // store the char in uart_received_string
 869:.\modem.c     ****         if(rx_char_hold){
 2370              		.loc 1 869 0
 2371 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2372 0012 002B     		cmp	r3, #0
 2373 0014 0AD0     		beq	.L177
 870:.\modem.c     ****             uart_received_string[uart_string_index] = rx_char_hold;
 2374              		.loc 1 870 0
 2375 0016 094B     		ldr	r3, .L179
 2376 0018 1B88     		ldrh	r3, [r3]
 2377 001a 094A     		ldr	r2, .L179+4
 2378 001c F979     		ldrb	r1, [r7, #7]
 2379 001e D154     		strb	r1, [r2, r3]
 871:.\modem.c     ****             uart_string_index++;
 2380              		.loc 1 871 0
 2381 0020 064B     		ldr	r3, .L179
 2382 0022 1B88     		ldrh	r3, [r3]
 2383 0024 0133     		adds	r3, r3, #1
 2384 0026 9AB2     		uxth	r2, r3
 2385 0028 044B     		ldr	r3, .L179
 2386 002a 1A80     		strh	r2, [r3]	@ movhi
 2387              	.L177:
 2388              	.LBE6:
 864:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2389              		.loc 1 864 0 discriminator 1
 2390 002c FFF7FEFF 		bl	Telit_UART_GetRxBufferSize
 2391 0030 0346     		mov	r3, r0
 2392 0032 002B     		cmp	r3, #0
 2393 0034 E8D1     		bne	.L178
 872:.\modem.c     ****         }
 873:.\modem.c     ****     }
 874:.\modem.c     **** }
 2394              		.loc 1 874 0
 2395 0036 0837     		adds	r7, r7, #8
 2396 0038 BD46     		mov	sp, r7
 2397              		@ sp needed
 2398 003a 80BD     		pop	{r7, pc}
 2399              	.L180:
 2400              		.align	2
 2401              	.L179:
 2402 003c 00000000 		.word	uart_string_index
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 61


 2403 0040 00000000 		.word	uart_received_string
 2404              		.cfi_endproc
 2405              	.LFE88:
 2406              		.size	Telit_isr_rx, .-Telit_isr_rx
 2407              		.text
 2408              	.Letext0:
 2409              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2410              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2411              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2412              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 2413              		.section	.debug_info,"",%progbits
 2414              	.Ldebug_info0:
 2415 0000 73070000 		.4byte	0x773
 2416 0004 0400     		.2byte	0x4
 2417 0006 00000000 		.4byte	.Ldebug_abbrev0
 2418 000a 04       		.byte	0x4
 2419 000b 01       		.uleb128 0x1
 2420 000c C7000000 		.4byte	.LASF83
 2421 0010 01       		.byte	0x1
 2422 0011 5A000000 		.4byte	.LASF84
 2423 0015 9E010000 		.4byte	.LASF85
 2424 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2425 001d 00000000 		.4byte	0
 2426 0021 00000000 		.4byte	.Ldebug_line0
 2427 0025 02       		.uleb128 0x2
 2428 0026 01       		.byte	0x1
 2429 0027 06       		.byte	0x6
 2430 0028 D4020000 		.4byte	.LASF0
 2431 002c 02       		.uleb128 0x2
 2432 002d 01       		.byte	0x1
 2433 002e 08       		.byte	0x8
 2434 002f AE020000 		.4byte	.LASF1
 2435 0033 02       		.uleb128 0x2
 2436 0034 02       		.byte	0x2
 2437 0035 05       		.byte	0x5
 2438 0036 B3000000 		.4byte	.LASF2
 2439 003a 02       		.uleb128 0x2
 2440 003b 02       		.byte	0x2
 2441 003c 07       		.byte	0x7
 2442 003d 14030000 		.4byte	.LASF3
 2443 0041 03       		.uleb128 0x3
 2444 0042 0C040000 		.4byte	.LASF9
 2445 0046 02       		.byte	0x2
 2446 0047 37       		.byte	0x37
 2447 0048 4C000000 		.4byte	0x4c
 2448 004c 02       		.uleb128 0x2
 2449 004d 04       		.byte	0x4
 2450 004e 05       		.byte	0x5
 2451 004f 28020000 		.4byte	.LASF4
 2452 0053 02       		.uleb128 0x2
 2453 0054 04       		.byte	0x4
 2454 0055 07       		.byte	0x7
 2455 0056 B2030000 		.4byte	.LASF5
 2456 005a 02       		.uleb128 0x2
 2457 005b 08       		.byte	0x8
 2458 005c 05       		.byte	0x5
 2459 005d FA010000 		.4byte	.LASF6
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 62


 2460 0061 02       		.uleb128 0x2
 2461 0062 08       		.byte	0x8
 2462 0063 07       		.byte	0x7
 2463 0064 E0020000 		.4byte	.LASF7
 2464 0068 04       		.uleb128 0x4
 2465 0069 04       		.byte	0x4
 2466 006a 05       		.byte	0x5
 2467 006b 696E7400 		.ascii	"int\000"
 2468 006f 02       		.uleb128 0x2
 2469 0070 04       		.byte	0x4
 2470 0071 07       		.byte	0x7
 2471 0072 F7020000 		.4byte	.LASF8
 2472 0076 03       		.uleb128 0x3
 2473 0077 4E030000 		.4byte	.LASF10
 2474 007b 03       		.byte	0x3
 2475 007c 41       		.byte	0x41
 2476 007d 41000000 		.4byte	0x41
 2477 0081 03       		.uleb128 0x3
 2478 0082 82030000 		.4byte	.LASF11
 2479 0086 04       		.byte	0x4
 2480 0087 A1       		.byte	0xa1
 2481 0088 2C000000 		.4byte	0x2c
 2482 008c 03       		.uleb128 0x3
 2483 008d 58010000 		.4byte	.LASF12
 2484 0091 04       		.byte	0x4
 2485 0092 A2       		.byte	0xa2
 2486 0093 3A000000 		.4byte	0x3a
 2487 0097 03       		.uleb128 0x3
 2488 0098 9F030000 		.4byte	.LASF13
 2489 009c 04       		.byte	0x4
 2490 009d A3       		.byte	0xa3
 2491 009e 53000000 		.4byte	0x53
 2492 00a2 02       		.uleb128 0x2
 2493 00a3 04       		.byte	0x4
 2494 00a4 04       		.byte	0x4
 2495 00a5 D5010000 		.4byte	.LASF14
 2496 00a9 02       		.uleb128 0x2
 2497 00aa 08       		.byte	0x8
 2498 00ab 04       		.byte	0x4
 2499 00ac D2030000 		.4byte	.LASF15
 2500 00b0 02       		.uleb128 0x2
 2501 00b1 01       		.byte	0x1
 2502 00b2 08       		.byte	0x8
 2503 00b3 36030000 		.4byte	.LASF16
 2504 00b7 02       		.uleb128 0x2
 2505 00b8 04       		.byte	0x4
 2506 00b9 07       		.byte	0x7
 2507 00ba 31020000 		.4byte	.LASF17
 2508 00be 05       		.uleb128 0x5
 2509 00bf 04       		.byte	0x4
 2510 00c0 B0000000 		.4byte	0xb0
 2511 00c4 06       		.uleb128 0x6
 2512 00c5 79020000 		.4byte	.LASF22
 2513 00c9 01       		.byte	0x1
 2514 00ca 23       		.byte	0x23
 2515 00cb 81000000 		.4byte	0x81
 2516 00cf 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 63


 2517 00d3 2C000000 		.4byte	.LFE56-.LFB56
 2518 00d7 01       		.uleb128 0x1
 2519 00d8 9C       		.byte	0x9c
 2520 00d9 F9000000 		.4byte	0xf9
 2521 00dd 07       		.uleb128 0x7
 2522 00de 696400   		.ascii	"id\000"
 2523 00e1 01       		.byte	0x1
 2524 00e2 23       		.byte	0x23
 2525 00e3 97000000 		.4byte	0x97
 2526 00e7 02       		.uleb128 0x2
 2527 00e8 91       		.byte	0x91
 2528 00e9 74       		.sleb128 -12
 2529 00ea 07       		.uleb128 0x7
 2530 00eb 6B657900 		.ascii	"key\000"
 2531 00ef 01       		.byte	0x1
 2532 00f0 23       		.byte	0x23
 2533 00f1 BE000000 		.4byte	0xbe
 2534 00f5 02       		.uleb128 0x2
 2535 00f6 91       		.byte	0x91
 2536 00f7 70       		.sleb128 -16
 2537 00f8 00       		.byte	0
 2538 00f9 08       		.uleb128 0x8
 2539 00fa 8D000000 		.4byte	.LASF18
 2540 00fe 01       		.byte	0x1
 2541 00ff 2C       		.byte	0x2c
 2542 0100 81000000 		.4byte	0x81
 2543 0104 00000000 		.4byte	.LFB57
 2544 0108 78000000 		.4byte	.LFE57-.LFB57
 2545 010c 01       		.uleb128 0x1
 2546 010d 9C       		.byte	0x9c
 2547 010e 08       		.uleb128 0x8
 2548 010f EB030000 		.4byte	.LASF19
 2549 0113 01       		.byte	0x1
 2550 0114 53       		.byte	0x53
 2551 0115 81000000 		.4byte	0x81
 2552 0119 00000000 		.4byte	.LFB58
 2553 011d 18000000 		.4byte	.LFE58-.LFB58
 2554 0121 01       		.uleb128 0x1
 2555 0122 9C       		.byte	0x9c
 2556 0123 09       		.uleb128 0x9
 2557 0124 93030000 		.4byte	.LASF20
 2558 0128 01       		.byte	0x1
 2559 0129 5C       		.byte	0x5c
 2560 012a 00000000 		.4byte	.LFB59
 2561 012e 30000000 		.4byte	.LFE59-.LFB59
 2562 0132 01       		.uleb128 0x1
 2563 0133 9C       		.byte	0x9c
 2564 0134 09       		.uleb128 0x9
 2565 0135 88030000 		.4byte	.LASF21
 2566 0139 01       		.byte	0x1
 2567 013a 67       		.byte	0x67
 2568 013b 00000000 		.4byte	.LFB60
 2569 013f 2C000000 		.4byte	.LFE60-.LFB60
 2570 0143 01       		.uleb128 0x1
 2571 0144 9C       		.byte	0x9c
 2572 0145 0A       		.uleb128 0xa
 2573 0146 3F020000 		.4byte	.LASF23
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 64


 2574 014a 01       		.byte	0x1
 2575 014b 72       		.byte	0x72
 2576 014c 81000000 		.4byte	0x81
 2577 0150 00000000 		.4byte	.LFB61
 2578 0154 78000000 		.4byte	.LFE61-.LFB61
 2579 0158 01       		.uleb128 0x1
 2580 0159 9C       		.byte	0x9c
 2581 015a D7010000 		.4byte	0x1d7
 2582 015e 0B       		.uleb128 0xb
 2583 015f 52040000 		.4byte	.LASF24
 2584 0163 01       		.byte	0x1
 2585 0164 72       		.byte	0x72
 2586 0165 BE000000 		.4byte	0xbe
 2587 0169 02       		.uleb128 0x2
 2588 016a 91       		.byte	0x91
 2589 016b 5C       		.sleb128 -36
 2590 016c 0B       		.uleb128 0xb
 2591 016d 17000000 		.4byte	.LASF25
 2592 0171 01       		.byte	0x1
 2593 0172 72       		.byte	0x72
 2594 0173 BE000000 		.4byte	0xbe
 2595 0177 02       		.uleb128 0x2
 2596 0178 91       		.byte	0x91
 2597 0179 58       		.sleb128 -40
 2598 017a 0B       		.uleb128 0xb
 2599 017b E7040000 		.4byte	.LASF26
 2600 017f 01       		.byte	0x1
 2601 0180 72       		.byte	0x72
 2602 0181 97000000 		.4byte	0x97
 2603 0185 02       		.uleb128 0x2
 2604 0186 91       		.byte	0x91
 2605 0187 54       		.sleb128 -44
 2606 0188 0C       		.uleb128 0xc
 2607 0189 E2030000 		.4byte	.LASF27
 2608 018d 01       		.byte	0x1
 2609 018e 73       		.byte	0x73
 2610 018f 81000000 		.4byte	0x81
 2611 0193 02       		.uleb128 0x2
 2612 0194 91       		.byte	0x91
 2613 0195 77       		.sleb128 -9
 2614 0196 0D       		.uleb128 0xd
 2615 0197 6900     		.ascii	"i\000"
 2616 0199 01       		.byte	0x1
 2617 019a 74       		.byte	0x74
 2618 019b 97000000 		.4byte	0x97
 2619 019f 02       		.uleb128 0x2
 2620 01a0 91       		.byte	0x91
 2621 01a1 70       		.sleb128 -16
 2622 01a2 0C       		.uleb128 0xc
 2623 01a3 AD000000 		.4byte	.LASF28
 2624 01a7 01       		.byte	0x1
 2625 01a8 74       		.byte	0x74
 2626 01a9 97000000 		.4byte	0x97
 2627 01ad 02       		.uleb128 0x2
 2628 01ae 91       		.byte	0x91
 2629 01af 6C       		.sleb128 -20
 2630 01b0 0C       		.uleb128 0xc
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 65


 2631 01b1 D9030000 		.4byte	.LASF29
 2632 01b5 01       		.byte	0x1
 2633 01b6 74       		.byte	0x74
 2634 01b7 97000000 		.4byte	0x97
 2635 01bb 02       		.uleb128 0x2
 2636 01bc 91       		.byte	0x91
 2637 01bd 68       		.sleb128 -24
 2638 01be 0E       		.uleb128 0xe
 2639 01bf 3C000000 		.4byte	.LBB2
 2640 01c3 1E000000 		.4byte	.LBE2-.LBB2
 2641 01c7 0C       		.uleb128 0xc
 2642 01c8 00000000 		.4byte	.LASF30
 2643 01cc 01       		.byte	0x1
 2644 01cd 7B       		.byte	0x7b
 2645 01ce BE000000 		.4byte	0xbe
 2646 01d2 02       		.uleb128 0x2
 2647 01d3 91       		.byte	0x91
 2648 01d4 64       		.sleb128 -28
 2649 01d5 00       		.byte	0
 2650 01d6 00       		.byte	0
 2651 01d7 08       		.uleb128 0x8
 2652 01d8 27030000 		.4byte	.LASF31
 2653 01dc 01       		.byte	0x1
 2654 01dd 87       		.byte	0x87
 2655 01de 81000000 		.4byte	0x81
 2656 01e2 00000000 		.4byte	.LFB62
 2657 01e6 70000000 		.4byte	.LFE62-.LFB62
 2658 01ea 01       		.uleb128 0x1
 2659 01eb 9C       		.byte	0x9c
 2660 01ec 08       		.uleb128 0x8
 2661 01ed EA010000 		.4byte	.LASF32
 2662 01f1 01       		.byte	0x1
 2663 01f2 AB       		.byte	0xab
 2664 01f3 81000000 		.4byte	0x81
 2665 01f7 00000000 		.4byte	.LFB63
 2666 01fb 4C000000 		.4byte	.LFE63-.LFB63
 2667 01ff 01       		.uleb128 0x1
 2668 0200 9C       		.byte	0x9c
 2669 0201 08       		.uleb128 0x8
 2670 0202 BC020000 		.4byte	.LASF33
 2671 0206 01       		.byte	0x1
 2672 0207 CA       		.byte	0xca
 2673 0208 81000000 		.4byte	0x81
 2674 020c 00000000 		.4byte	.LFB64
 2675 0210 3C000000 		.4byte	.LFE64-.LFB64
 2676 0214 01       		.uleb128 0x1
 2677 0215 9C       		.byte	0x9c
 2678 0216 08       		.uleb128 0x8
 2679 0217 A6030000 		.4byte	.LASF34
 2680 021b 01       		.byte	0x1
 2681 021c D8       		.byte	0xd8
 2682 021d 81000000 		.4byte	0x81
 2683 0221 00000000 		.4byte	.LFB65
 2684 0225 1A000000 		.4byte	.LFE65-.LFB65
 2685 0229 01       		.uleb128 0x1
 2686 022a 9C       		.byte	0x9c
 2687 022b 0F       		.uleb128 0xf
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 66


 2688 022c 8C020000 		.4byte	.LASF38
 2689 0230 01       		.byte	0x1
 2690 0231 EE       		.byte	0xee
 2691 0232 81000000 		.4byte	0x81
 2692 0236 00000000 		.4byte	.LFB66
 2693 023a 78000000 		.4byte	.LFE66-.LFB66
 2694 023e 01       		.uleb128 0x1
 2695 023f 9C       		.byte	0x9c
 2696 0240 61020000 		.4byte	0x261
 2697 0244 0C       		.uleb128 0xc
 2698 0245 74010000 		.4byte	.LASF35
 2699 0249 01       		.byte	0x1
 2700 024a F0       		.byte	0xf0
 2701 024b 81000000 		.4byte	0x81
 2702 024f 02       		.uleb128 0x2
 2703 0250 91       		.byte	0x91
 2704 0251 77       		.sleb128 -9
 2705 0252 0C       		.uleb128 0xc
 2706 0253 08020000 		.4byte	.LASF36
 2707 0257 01       		.byte	0x1
 2708 0258 F0       		.byte	0xf0
 2709 0259 81000000 		.4byte	0x81
 2710 025d 02       		.uleb128 0x2
 2711 025e 91       		.byte	0x91
 2712 025f 76       		.sleb128 -10
 2713 0260 00       		.byte	0
 2714 0261 10       		.uleb128 0x10
 2715 0262 2E040000 		.4byte	.LASF37
 2716 0266 01       		.byte	0x1
 2717 0267 3901     		.2byte	0x139
 2718 0269 81000000 		.4byte	0x81
 2719 026d 00000000 		.4byte	.LFB67
 2720 0271 38000000 		.4byte	.LFE67-.LFB67
 2721 0275 01       		.uleb128 0x1
 2722 0276 9C       		.byte	0x9c
 2723 0277 11       		.uleb128 0x11
 2724 0278 64000000 		.4byte	.LASF39
 2725 027c 01       		.byte	0x1
 2726 027d 6201     		.2byte	0x162
 2727 027f 81000000 		.4byte	0x81
 2728 0283 00000000 		.4byte	.LFB68
 2729 0287 44000000 		.4byte	.LFE68-.LFB68
 2730 028b 01       		.uleb128 0x1
 2731 028c 9C       		.byte	0x9c
 2732 028d A2020000 		.4byte	0x2a2
 2733 0291 12       		.uleb128 0x12
 2734 0292 636D6400 		.ascii	"cmd\000"
 2735 0296 01       		.byte	0x1
 2736 0297 6801     		.2byte	0x168
 2737 0299 A2020000 		.4byte	0x2a2
 2738 029d 03       		.uleb128 0x3
 2739 029e 91       		.byte	0x91
 2740 029f 947F     		.sleb128 -108
 2741 02a1 00       		.byte	0
 2742 02a2 13       		.uleb128 0x13
 2743 02a3 B0000000 		.4byte	0xb0
 2744 02a7 B2020000 		.4byte	0x2b2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 67


 2745 02ab 14       		.uleb128 0x14
 2746 02ac B7000000 		.4byte	0xb7
 2747 02b0 63       		.byte	0x63
 2748 02b1 00       		.byte	0
 2749 02b2 15       		.uleb128 0x15
 2750 02b3 9A020000 		.4byte	.LASF40
 2751 02b7 01       		.byte	0x1
 2752 02b8 7401     		.2byte	0x174
 2753 02ba 81000000 		.4byte	0x81
 2754 02be 00000000 		.4byte	.LFB69
 2755 02c2 48000000 		.4byte	.LFE69-.LFB69
 2756 02c6 01       		.uleb128 0x1
 2757 02c7 9C       		.byte	0x9c
 2758 02c8 ED020000 		.4byte	0x2ed
 2759 02cc 16       		.uleb128 0x16
 2760 02cd 0A030000 		.4byte	.LASF41
 2761 02d1 01       		.byte	0x1
 2762 02d2 7401     		.2byte	0x174
 2763 02d4 81000000 		.4byte	0x81
 2764 02d8 03       		.uleb128 0x3
 2765 02d9 91       		.byte	0x91
 2766 02da 8F7F     		.sleb128 -113
 2767 02dc 12       		.uleb128 0x12
 2768 02dd 636D6400 		.ascii	"cmd\000"
 2769 02e1 01       		.byte	0x1
 2770 02e2 7A01     		.2byte	0x17a
 2771 02e4 A2020000 		.4byte	0x2a2
 2772 02e8 03       		.uleb128 0x3
 2773 02e9 91       		.byte	0x91
 2774 02ea 947F     		.sleb128 -108
 2775 02ec 00       		.byte	0
 2776 02ed 10       		.uleb128 0x10
 2777 02ee DB010000 		.4byte	.LASF42
 2778 02f2 01       		.byte	0x1
 2779 02f3 8601     		.2byte	0x186
 2780 02f5 81000000 		.4byte	0x81
 2781 02f9 00000000 		.4byte	.LFB70
 2782 02fd 28000000 		.4byte	.LFE70-.LFB70
 2783 0301 01       		.uleb128 0x1
 2784 0302 9C       		.byte	0x9c
 2785 0303 10       		.uleb128 0x10
 2786 0304 B1040000 		.4byte	.LASF43
 2787 0308 01       		.byte	0x1
 2788 0309 9301     		.2byte	0x193
 2789 030b 81000000 		.4byte	0x81
 2790 030f 00000000 		.4byte	.LFB71
 2791 0313 28000000 		.4byte	.LFE71-.LFB71
 2792 0317 01       		.uleb128 0x1
 2793 0318 9C       		.byte	0x9c
 2794 0319 10       		.uleb128 0x10
 2795 031a 5B030000 		.4byte	.LASF44
 2796 031e 01       		.byte	0x1
 2797 031f 9F01     		.2byte	0x19f
 2798 0321 81000000 		.4byte	0x81
 2799 0325 00000000 		.4byte	.LFB72
 2800 0329 28000000 		.4byte	.LFE72-.LFB72
 2801 032d 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 68


 2802 032e 9C       		.byte	0x9c
 2803 032f 10       		.uleb128 0x10
 2804 0330 16040000 		.4byte	.LASF45
 2805 0334 01       		.byte	0x1
 2806 0335 AC01     		.2byte	0x1ac
 2807 0337 81000000 		.4byte	0x81
 2808 033b 00000000 		.4byte	.LFB73
 2809 033f 28000000 		.4byte	.LFE73-.LFB73
 2810 0343 01       		.uleb128 0x1
 2811 0344 9C       		.byte	0x9c
 2812 0345 10       		.uleb128 0x10
 2813 0346 73040000 		.4byte	.LASF46
 2814 034a 01       		.byte	0x1
 2815 034b B801     		.2byte	0x1b8
 2816 034d 81000000 		.4byte	0x81
 2817 0351 00000000 		.4byte	.LFB74
 2818 0355 28000000 		.4byte	.LFE74-.LFB74
 2819 0359 01       		.uleb128 0x1
 2820 035a 9C       		.byte	0x9c
 2821 035b 15       		.uleb128 0x15
 2822 035c 50020000 		.4byte	.LASF47
 2823 0360 01       		.byte	0x1
 2824 0361 C301     		.2byte	0x1c3
 2825 0363 81000000 		.4byte	0x81
 2826 0367 00000000 		.4byte	.LFB75
 2827 036b 48000000 		.4byte	.LFE75-.LFB75
 2828 036f 01       		.uleb128 0x1
 2829 0370 9C       		.byte	0x9c
 2830 0371 96030000 		.4byte	0x396
 2831 0375 16       		.uleb128 0x16
 2832 0376 04030000 		.4byte	.LASF48
 2833 037a 01       		.byte	0x1
 2834 037b C301     		.2byte	0x1c3
 2835 037d 81000000 		.4byte	0x81
 2836 0381 03       		.uleb128 0x3
 2837 0382 91       		.byte	0x91
 2838 0383 8F7F     		.sleb128 -113
 2839 0385 12       		.uleb128 0x12
 2840 0386 636D6400 		.ascii	"cmd\000"
 2841 038a 01       		.byte	0x1
 2842 038b C401     		.2byte	0x1c4
 2843 038d A2020000 		.4byte	0x2a2
 2844 0391 03       		.uleb128 0x3
 2845 0392 91       		.byte	0x91
 2846 0393 947F     		.sleb128 -108
 2847 0395 00       		.byte	0
 2848 0396 15       		.uleb128 0x15
 2849 0397 85040000 		.4byte	.LASF49
 2850 039b 01       		.byte	0x1
 2851 039c D001     		.2byte	0x1d0
 2852 039e 81000000 		.4byte	0x81
 2853 03a2 00000000 		.4byte	.LFB76
 2854 03a6 48000000 		.4byte	.LFE76-.LFB76
 2855 03aa 01       		.uleb128 0x1
 2856 03ab 9C       		.byte	0x9c
 2857 03ac D1030000 		.4byte	0x3d1
 2858 03b0 16       		.uleb128 0x16
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 69


 2859 03b1 04030000 		.4byte	.LASF48
 2860 03b5 01       		.byte	0x1
 2861 03b6 D001     		.2byte	0x1d0
 2862 03b8 81000000 		.4byte	0x81
 2863 03bc 03       		.uleb128 0x3
 2864 03bd 91       		.byte	0x91
 2865 03be 8F7F     		.sleb128 -113
 2866 03c0 12       		.uleb128 0x12
 2867 03c1 636D6400 		.ascii	"cmd\000"
 2868 03c5 01       		.byte	0x1
 2869 03c6 DE01     		.2byte	0x1de
 2870 03c8 A2020000 		.4byte	0x2a2
 2871 03cc 03       		.uleb128 0x3
 2872 03cd 91       		.byte	0x91
 2873 03ce 947F     		.sleb128 -108
 2874 03d0 00       		.byte	0
 2875 03d1 10       		.uleb128 0x10
 2876 03d2 43010000 		.4byte	.LASF50
 2877 03d6 01       		.byte	0x1
 2878 03d7 EA01     		.2byte	0x1ea
 2879 03d9 81000000 		.4byte	0x81
 2880 03dd 00000000 		.4byte	.LFB77
 2881 03e1 28000000 		.4byte	.LFE77-.LFB77
 2882 03e5 01       		.uleb128 0x1
 2883 03e6 9C       		.byte	0x9c
 2884 03e7 15       		.uleb128 0x15
 2885 03e8 36000000 		.4byte	.LASF51
 2886 03ec 01       		.byte	0x1
 2887 03ed F501     		.2byte	0x1f5
 2888 03ef 81000000 		.4byte	0x81
 2889 03f3 00000000 		.4byte	.LFB78
 2890 03f7 48000000 		.4byte	.LFE78-.LFB78
 2891 03fb 01       		.uleb128 0x1
 2892 03fc 9C       		.byte	0x9c
 2893 03fd 22040000 		.4byte	0x422
 2894 0401 16       		.uleb128 0x16
 2895 0402 04030000 		.4byte	.LASF48
 2896 0406 01       		.byte	0x1
 2897 0407 F501     		.2byte	0x1f5
 2898 0409 81000000 		.4byte	0x81
 2899 040d 03       		.uleb128 0x3
 2900 040e 91       		.byte	0x91
 2901 040f 8F7F     		.sleb128 -113
 2902 0411 12       		.uleb128 0x12
 2903 0412 636D6400 		.ascii	"cmd\000"
 2904 0416 01       		.byte	0x1
 2905 0417 FC01     		.2byte	0x1fc
 2906 0419 A2020000 		.4byte	0x2a2
 2907 041d 03       		.uleb128 0x3
 2908 041e 91       		.byte	0x91
 2909 041f 947F     		.sleb128 -108
 2910 0421 00       		.byte	0
 2911 0422 10       		.uleb128 0x10
 2912 0423 7A010000 		.4byte	.LASF52
 2913 0427 01       		.byte	0x1
 2914 0428 0802     		.2byte	0x208
 2915 042a 81000000 		.4byte	0x81
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 70


 2916 042e 00000000 		.4byte	.LFB79
 2917 0432 28000000 		.4byte	.LFE79-.LFB79
 2918 0436 01       		.uleb128 0x1
 2919 0437 9C       		.byte	0x9c
 2920 0438 15       		.uleb128 0x15
 2921 0439 D8040000 		.4byte	.LASF53
 2922 043d 01       		.byte	0x1
 2923 043e 1402     		.2byte	0x214
 2924 0440 81000000 		.4byte	0x81
 2925 0444 00000000 		.4byte	.LFB80
 2926 0448 44000000 		.4byte	.LFE80-.LFB80
 2927 044c 01       		.uleb128 0x1
 2928 044d 9C       		.byte	0x9c
 2929 044e 73040000 		.4byte	0x473
 2930 0452 16       		.uleb128 0x16
 2931 0453 0F030000 		.4byte	.LASF54
 2932 0457 01       		.byte	0x1
 2933 0458 1402     		.2byte	0x214
 2934 045a BE000000 		.4byte	0xbe
 2935 045e 03       		.uleb128 0x3
 2936 045f 91       		.byte	0x91
 2937 0460 8C7F     		.sleb128 -116
 2938 0462 12       		.uleb128 0x12
 2939 0463 636D6400 		.ascii	"cmd\000"
 2940 0467 01       		.byte	0x1
 2941 0468 1602     		.2byte	0x216
 2942 046a A2020000 		.4byte	0x2a2
 2943 046e 03       		.uleb128 0x3
 2944 046f 91       		.byte	0x91
 2945 0470 947F     		.sleb128 -108
 2946 0472 00       		.byte	0
 2947 0473 15       		.uleb128 0x15
 2948 0474 72000000 		.4byte	.LASF55
 2949 0478 01       		.byte	0x1
 2950 0479 2302     		.2byte	0x223
 2951 047b 81000000 		.4byte	0x81
 2952 047f 00000000 		.4byte	.LFB81
 2953 0483 44000000 		.4byte	.LFE81-.LFB81
 2954 0487 01       		.uleb128 0x1
 2955 0488 9C       		.byte	0x9c
 2956 0489 AE040000 		.4byte	0x4ae
 2957 048d 16       		.uleb128 0x16
 2958 048e A9020000 		.4byte	.LASF56
 2959 0492 01       		.byte	0x1
 2960 0493 2302     		.2byte	0x223
 2961 0495 BE000000 		.4byte	0xbe
 2962 0499 03       		.uleb128 0x3
 2963 049a 91       		.byte	0x91
 2964 049b 8C7F     		.sleb128 -116
 2965 049d 12       		.uleb128 0x12
 2966 049e 636D6400 		.ascii	"cmd\000"
 2967 04a2 01       		.byte	0x1
 2968 04a3 2502     		.2byte	0x225
 2969 04a5 A2020000 		.4byte	0x2a2
 2970 04a9 03       		.uleb128 0x3
 2971 04aa 91       		.byte	0x91
 2972 04ab 947F     		.sleb128 -108
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 71


 2973 04ad 00       		.byte	0
 2974 04ae 11       		.uleb128 0x11
 2975 04af 17020000 		.4byte	.LASF57
 2976 04b3 01       		.byte	0x1
 2977 04b4 3102     		.2byte	0x231
 2978 04b6 81000000 		.4byte	0x81
 2979 04ba 00000000 		.4byte	.LFB82
 2980 04be 98000000 		.4byte	.LFE82-.LFB82
 2981 04c2 01       		.uleb128 0x1
 2982 04c3 9C       		.byte	0x9c
 2983 04c4 F3040000 		.4byte	0x4f3
 2984 04c8 0E       		.uleb128 0xe
 2985 04c9 2C000000 		.4byte	.LBB3
 2986 04cd 44000000 		.4byte	.LBE3-.LBB3
 2987 04d1 17       		.uleb128 0x17
 2988 04d2 85000000 		.4byte	.LASF58
 2989 04d6 01       		.byte	0x1
 2990 04d7 3802     		.2byte	0x238
 2991 04d9 F3040000 		.4byte	0x4f3
 2992 04dd 03       		.uleb128 0x3
 2993 04de 91       		.byte	0x91
 2994 04df 9078     		.sleb128 -1008
 2995 04e1 17       		.uleb128 0x17
 2996 04e2 96010000 		.4byte	.LASF59
 2997 04e6 01       		.byte	0x1
 2998 04e7 3802     		.2byte	0x238
 2999 04e9 A2020000 		.4byte	0x2a2
 3000 04ed 03       		.uleb128 0x3
 3001 04ee 91       		.byte	0x91
 3002 04ef 9078     		.sleb128 -1008
 3003 04f1 00       		.byte	0
 3004 04f2 00       		.byte	0
 3005 04f3 13       		.uleb128 0x13
 3006 04f4 B0000000 		.4byte	0xb0
 3007 04f8 04050000 		.4byte	0x504
 3008 04fc 18       		.uleb128 0x18
 3009 04fd B7000000 		.4byte	0xb7
 3010 0501 E703     		.2byte	0x3e7
 3011 0503 00       		.byte	0
 3012 0504 15       		.uleb128 0x15
 3013 0505 FA030000 		.4byte	.LASF60
 3014 0509 01       		.byte	0x1
 3015 050a 6902     		.2byte	0x269
 3016 050c 81000000 		.4byte	0x81
 3017 0510 00000000 		.4byte	.LFB83
 3018 0514 10010000 		.4byte	.LFE83-.LFB83
 3019 0518 01       		.uleb128 0x1
 3020 0519 9C       		.byte	0x9c
 3021 051a 59050000 		.4byte	0x559
 3022 051e 16       		.uleb128 0x16
 3023 051f 3A020000 		.4byte	.LASF61
 3024 0523 01       		.byte	0x1
 3025 0524 6902     		.2byte	0x269
 3026 0526 BE000000 		.4byte	0xbe
 3027 052a 03       		.uleb128 0x3
 3028 052b 91       		.byte	0x91
 3029 052c 8478     		.sleb128 -1020
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 72


 3030 052e 0E       		.uleb128 0xe
 3031 052f 3C000000 		.4byte	.LBB4
 3032 0533 82000000 		.4byte	.LBE4-.LBB4
 3033 0537 17       		.uleb128 0x17
 3034 0538 6B040000 		.4byte	.LASF62
 3035 053c 01       		.byte	0x1
 3036 053d 7B02     		.2byte	0x27b
 3037 053f F3040000 		.4byte	0x4f3
 3038 0543 03       		.uleb128 0x3
 3039 0544 91       		.byte	0x91
 3040 0545 8878     		.sleb128 -1016
 3041 0547 17       		.uleb128 0x17
 3042 0548 96010000 		.4byte	.LASF59
 3043 054c 01       		.byte	0x1
 3044 054d 7B02     		.2byte	0x27b
 3045 054f A2020000 		.4byte	0x2a2
 3046 0553 03       		.uleb128 0x3
 3047 0554 91       		.byte	0x91
 3048 0555 8878     		.sleb128 -1016
 3049 0557 00       		.byte	0
 3050 0558 00       		.byte	0
 3051 0559 15       		.uleb128 0x15
 3052 055a 06000000 		.4byte	.LASF63
 3053 055e 01       		.byte	0x1
 3054 055f AC02     		.2byte	0x2ac
 3055 0561 81000000 		.4byte	0x81
 3056 0565 00000000 		.4byte	.LFB84
 3057 0569 28010000 		.4byte	.LFE84-.LFB84
 3058 056d 01       		.uleb128 0x1
 3059 056e 9C       		.byte	0x9c
 3060 056f BE050000 		.4byte	0x5be
 3061 0573 16       		.uleb128 0x16
 3062 0574 8F010000 		.4byte	.LASF64
 3063 0578 01       		.byte	0x1
 3064 0579 AC02     		.2byte	0x2ac
 3065 057b BE000000 		.4byte	0xbe
 3066 057f 03       		.uleb128 0x3
 3067 0580 91       		.byte	0x91
 3068 0581 A477     		.sleb128 -1116
 3069 0583 19       		.uleb128 0x19
 3070 0584 63737600 		.ascii	"csv\000"
 3071 0588 01       		.byte	0x1
 3072 0589 AC02     		.2byte	0x2ac
 3073 058b BE000000 		.4byte	0xbe
 3074 058f 03       		.uleb128 0x3
 3075 0590 91       		.byte	0x91
 3076 0591 A077     		.sleb128 -1120
 3077 0593 0E       		.uleb128 0xe
 3078 0594 4E000000 		.4byte	.LBB5
 3079 0598 8A000000 		.4byte	.LBE5-.LBB5
 3080 059c 17       		.uleb128 0x17
 3081 059d 85000000 		.4byte	.LASF58
 3082 05a1 01       		.byte	0x1
 3083 05a2 C002     		.2byte	0x2c0
 3084 05a4 F3040000 		.4byte	0x4f3
 3085 05a8 03       		.uleb128 0x3
 3086 05a9 91       		.byte	0x91
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 73


 3087 05aa 9078     		.sleb128 -1008
 3088 05ac 17       		.uleb128 0x17
 3089 05ad 96010000 		.4byte	.LASF59
 3090 05b1 01       		.byte	0x1
 3091 05b2 C002     		.2byte	0x2c0
 3092 05b4 A2020000 		.4byte	0x2a2
 3093 05b8 03       		.uleb128 0x3
 3094 05b9 91       		.byte	0x91
 3095 05ba AC77     		.sleb128 -1108
 3096 05bc 00       		.byte	0
 3097 05bd 00       		.byte	0
 3098 05be 11       		.uleb128 0x11
 3099 05bf 3F040000 		.4byte	.LASF65
 3100 05c3 01       		.byte	0x1
 3101 05c4 0903     		.2byte	0x309
 3102 05c6 81000000 		.4byte	0x81
 3103 05ca 00000000 		.4byte	.LFB85
 3104 05ce E0000000 		.4byte	.LFE85-.LFB85
 3105 05d2 01       		.uleb128 0x1
 3106 05d3 9C       		.byte	0x9c
 3107 05d4 23060000 		.4byte	0x623
 3108 05d8 17       		.uleb128 0x17
 3109 05d9 56030000 		.4byte	.LASF66
 3110 05dd 01       		.byte	0x1
 3111 05de 1103     		.2byte	0x311
 3112 05e0 81000000 		.4byte	0x81
 3113 05e4 02       		.uleb128 0x2
 3114 05e5 91       		.byte	0x91
 3115 05e6 6B       		.sleb128 -21
 3116 05e7 12       		.uleb128 0x12
 3117 05e8 6900     		.ascii	"i\000"
 3118 05ea 01       		.byte	0x1
 3119 05eb 1203     		.2byte	0x312
 3120 05ed 97000000 		.4byte	0x97
 3121 05f1 02       		.uleb128 0x2
 3122 05f2 91       		.byte	0x91
 3123 05f3 74       		.sleb128 -12
 3124 05f4 17       		.uleb128 0x17
 3125 05f5 AD000000 		.4byte	.LASF28
 3126 05f9 01       		.byte	0x1
 3127 05fa 1203     		.2byte	0x312
 3128 05fc 97000000 		.4byte	0x97
 3129 0600 02       		.uleb128 0x2
 3130 0601 91       		.byte	0x91
 3131 0602 70       		.sleb128 -16
 3132 0603 17       		.uleb128 0x17
 3133 0604 74030000 		.4byte	.LASF67
 3134 0608 01       		.byte	0x1
 3135 0609 1203     		.2byte	0x312
 3136 060b 97000000 		.4byte	0x97
 3137 060f 02       		.uleb128 0x2
 3138 0610 91       		.byte	0x91
 3139 0611 6C       		.sleb128 -20
 3140 0612 17       		.uleb128 0x17
 3141 0613 A5040000 		.4byte	.LASF68
 3142 0617 01       		.byte	0x1
 3143 0618 1303     		.2byte	0x313
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 74


 3144 061a 23060000 		.4byte	0x623
 3145 061e 03       		.uleb128 0x3
 3146 061f 91       		.byte	0x91
 3147 0620 BC7D     		.sleb128 -324
 3148 0622 00       		.byte	0
 3149 0623 13       		.uleb128 0x13
 3150 0624 B0000000 		.4byte	0xb0
 3151 0628 34060000 		.4byte	0x634
 3152 062c 18       		.uleb128 0x18
 3153 062d B7000000 		.4byte	0xb7
 3154 0631 2B01     		.2byte	0x12b
 3155 0633 00       		.byte	0
 3156 0634 11       		.uleb128 0x11
 3157 0635 C5040000 		.4byte	.LASF69
 3158 0639 01       		.byte	0x1
 3159 063a 2F03     		.2byte	0x32f
 3160 063c 81000000 		.4byte	0x81
 3161 0640 00000000 		.4byte	.LFB86
 3162 0644 9C000000 		.4byte	.LFE86-.LFB86
 3163 0648 01       		.uleb128 0x1
 3164 0649 9C       		.byte	0x9c
 3165 064a 8A060000 		.4byte	0x68a
 3166 064e 12       		.uleb128 0x12
 3167 064f 6900     		.ascii	"i\000"
 3168 0651 01       		.byte	0x1
 3169 0652 3603     		.2byte	0x336
 3170 0654 97000000 		.4byte	0x97
 3171 0658 02       		.uleb128 0x2
 3172 0659 91       		.byte	0x91
 3173 065a 74       		.sleb128 -12
 3174 065b 17       		.uleb128 0x17
 3175 065c AD000000 		.4byte	.LASF28
 3176 0660 01       		.byte	0x1
 3177 0661 3603     		.2byte	0x336
 3178 0663 97000000 		.4byte	0x97
 3179 0667 02       		.uleb128 0x2
 3180 0668 91       		.byte	0x91
 3181 0669 70       		.sleb128 -16
 3182 066a 17       		.uleb128 0x17
 3183 066b 74030000 		.4byte	.LASF67
 3184 066f 01       		.byte	0x1
 3185 0670 3603     		.2byte	0x336
 3186 0672 97000000 		.4byte	0x97
 3187 0676 02       		.uleb128 0x2
 3188 0677 91       		.byte	0x91
 3189 0678 6C       		.sleb128 -20
 3190 0679 17       		.uleb128 0x17
 3191 067a A5040000 		.4byte	.LASF68
 3192 067e 01       		.byte	0x1
 3193 067f 3703     		.2byte	0x337
 3194 0681 23060000 		.4byte	0x623
 3195 0685 03       		.uleb128 0x3
 3196 0686 91       		.byte	0x91
 3197 0687 C07D     		.sleb128 -320
 3198 0689 00       		.byte	0
 3199 068a 1A       		.uleb128 0x1a
 3200 068b 9B000000 		.4byte	.LASF70
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 75


 3201 068f 01       		.byte	0x1
 3202 0690 4F03     		.2byte	0x34f
 3203 0692 00000000 		.4byte	.LFB87
 3204 0696 24000000 		.4byte	.LFE87-.LFB87
 3205 069a 01       		.uleb128 0x1
 3206 069b 9C       		.byte	0x9c
 3207 069c 1B       		.uleb128 0x1b
 3208 069d 4D000000 		.4byte	.LASF71
 3209 06a1 01       		.byte	0x1
 3210 06a2 5F03     		.2byte	0x35f
 3211 06a4 00000000 		.4byte	.LFB88
 3212 06a8 44000000 		.4byte	.LFE88-.LFB88
 3213 06ac 01       		.uleb128 0x1
 3214 06ad 9C       		.byte	0x9c
 3215 06ae CC060000 		.4byte	0x6cc
 3216 06b2 0E       		.uleb128 0xe
 3217 06b3 08000000 		.4byte	.LBB6
 3218 06b7 24000000 		.4byte	.LBE6-.LBB6
 3219 06bb 17       		.uleb128 0x17
 3220 06bc 29000000 		.4byte	.LASF72
 3221 06c0 01       		.byte	0x1
 3222 06c1 6203     		.2byte	0x362
 3223 06c3 B0000000 		.4byte	0xb0
 3224 06c7 02       		.uleb128 0x2
 3225 06c8 91       		.byte	0x91
 3226 06c9 77       		.sleb128 -9
 3227 06ca 00       		.byte	0
 3228 06cb 00       		.byte	0
 3229 06cc 1C       		.uleb128 0x1c
 3230 06cd 3B030000 		.4byte	.LASF73
 3231 06d1 05       		.byte	0x5
 3232 06d2 1606     		.2byte	0x616
 3233 06d4 D8060000 		.4byte	0x6d8
 3234 06d8 1D       		.uleb128 0x1d
 3235 06d9 76000000 		.4byte	0x76
 3236 06dd 1E       		.uleb128 0x1e
 3237 06de C8020000 		.4byte	.LASF74
 3238 06e2 01       		.byte	0x1
 3239 06e3 17       		.byte	0x17
 3240 06e4 81000000 		.4byte	0x81
 3241 06e8 05       		.uleb128 0x5
 3242 06e9 03       		.byte	0x3
 3243 06ea 00000000 		.4byte	modem_state
 3244 06ee 1E       		.uleb128 0x1e
 3245 06ef C4030000 		.4byte	.LASF75
 3246 06f3 01       		.byte	0x1
 3247 06f4 17       		.byte	0x17
 3248 06f5 81000000 		.4byte	0x81
 3249 06f9 05       		.uleb128 0x5
 3250 06fa 03       		.byte	0x3
 3251 06fb 00000000 		.4byte	lock_acquired
 3252 06ff 1E       		.uleb128 0x1e
 3253 0700 9D040000 		.4byte	.LASF76
 3254 0704 01       		.byte	0x1
 3255 0705 19       		.byte	0x19
 3256 0706 97000000 		.4byte	0x97
 3257 070a 05       		.uleb128 0x5
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 76


 3258 070b 03       		.byte	0x3
 3259 070c 00000000 		.4byte	feed_id
 3260 0710 1E       		.uleb128 0x1e
 3261 0711 63040000 		.4byte	.LASF77
 3262 0715 01       		.byte	0x1
 3263 0716 1A       		.byte	0x1a
 3264 0717 BE000000 		.4byte	0xbe
 3265 071b 05       		.uleb128 0x5
 3266 071c 03       		.byte	0x3
 3267 071d 00000000 		.4byte	api_key
 3268 0721 1E       		.uleb128 0x1e
 3269 0722 5E040000 		.4byte	.LASF78
 3270 0726 01       		.byte	0x1
 3271 0727 16       		.byte	0x16
 3272 0728 68000000 		.4byte	0x68
 3273 072c 05       		.uleb128 0x5
 3274 072d 03       		.byte	0x3
 3275 072e 00000000 		.4byte	iter
 3276 0732 1E       		.uleb128 0x1e
 3277 0733 48030000 		.4byte	.LASF79
 3278 0737 01       		.byte	0x1
 3279 0738 17       		.byte	0x17
 3280 0739 81000000 		.4byte	0x81
 3281 073d 05       		.uleb128 0x5
 3282 073e 03       		.byte	0x3
 3283 073f 00000000 		.4byte	ready
 3284 0743 1E       		.uleb128 0x1e
 3285 0744 67020000 		.4byte	.LASF80
 3286 0748 01       		.byte	0x1
 3287 0749 18       		.byte	0x18
 3288 074a 8C000000 		.4byte	0x8c
 3289 074e 05       		.uleb128 0x5
 3290 074f 03       		.byte	0x3
 3291 0750 00000000 		.4byte	uart_string_index
 3292 0754 1E       		.uleb128 0x1e
 3293 0755 5F010000 		.4byte	.LASF81
 3294 0759 01       		.byte	0x1
 3295 075a 1A       		.byte	0x1a
 3296 075b F3040000 		.4byte	0x4f3
 3297 075f 05       		.uleb128 0x5
 3298 0760 03       		.byte	0x3
 3299 0761 00000000 		.4byte	uart_received_string
 3300 0765 1E       		.uleb128 0x1e
 3301 0766 BD000000 		.4byte	.LASF82
 3302 076a 01       		.byte	0x1
 3303 076b 1B       		.byte	0x1b
 3304 076c BE000000 		.4byte	0xbe
 3305 0770 05       		.uleb128 0x5
 3306 0771 03       		.byte	0x3
 3307 0772 00000000 		.4byte	modem_apn
 3308 0776 00       		.byte	0
 3309              		.section	.debug_abbrev,"",%progbits
 3310              	.Ldebug_abbrev0:
 3311 0000 01       		.uleb128 0x1
 3312 0001 11       		.uleb128 0x11
 3313 0002 01       		.byte	0x1
 3314 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 77


 3315 0004 0E       		.uleb128 0xe
 3316 0005 13       		.uleb128 0x13
 3317 0006 0B       		.uleb128 0xb
 3318 0007 03       		.uleb128 0x3
 3319 0008 0E       		.uleb128 0xe
 3320 0009 1B       		.uleb128 0x1b
 3321 000a 0E       		.uleb128 0xe
 3322 000b 55       		.uleb128 0x55
 3323 000c 17       		.uleb128 0x17
 3324 000d 11       		.uleb128 0x11
 3325 000e 01       		.uleb128 0x1
 3326 000f 10       		.uleb128 0x10
 3327 0010 17       		.uleb128 0x17
 3328 0011 00       		.byte	0
 3329 0012 00       		.byte	0
 3330 0013 02       		.uleb128 0x2
 3331 0014 24       		.uleb128 0x24
 3332 0015 00       		.byte	0
 3333 0016 0B       		.uleb128 0xb
 3334 0017 0B       		.uleb128 0xb
 3335 0018 3E       		.uleb128 0x3e
 3336 0019 0B       		.uleb128 0xb
 3337 001a 03       		.uleb128 0x3
 3338 001b 0E       		.uleb128 0xe
 3339 001c 00       		.byte	0
 3340 001d 00       		.byte	0
 3341 001e 03       		.uleb128 0x3
 3342 001f 16       		.uleb128 0x16
 3343 0020 00       		.byte	0
 3344 0021 03       		.uleb128 0x3
 3345 0022 0E       		.uleb128 0xe
 3346 0023 3A       		.uleb128 0x3a
 3347 0024 0B       		.uleb128 0xb
 3348 0025 3B       		.uleb128 0x3b
 3349 0026 0B       		.uleb128 0xb
 3350 0027 49       		.uleb128 0x49
 3351 0028 13       		.uleb128 0x13
 3352 0029 00       		.byte	0
 3353 002a 00       		.byte	0
 3354 002b 04       		.uleb128 0x4
 3355 002c 24       		.uleb128 0x24
 3356 002d 00       		.byte	0
 3357 002e 0B       		.uleb128 0xb
 3358 002f 0B       		.uleb128 0xb
 3359 0030 3E       		.uleb128 0x3e
 3360 0031 0B       		.uleb128 0xb
 3361 0032 03       		.uleb128 0x3
 3362 0033 08       		.uleb128 0x8
 3363 0034 00       		.byte	0
 3364 0035 00       		.byte	0
 3365 0036 05       		.uleb128 0x5
 3366 0037 0F       		.uleb128 0xf
 3367 0038 00       		.byte	0
 3368 0039 0B       		.uleb128 0xb
 3369 003a 0B       		.uleb128 0xb
 3370 003b 49       		.uleb128 0x49
 3371 003c 13       		.uleb128 0x13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 78


 3372 003d 00       		.byte	0
 3373 003e 00       		.byte	0
 3374 003f 06       		.uleb128 0x6
 3375 0040 2E       		.uleb128 0x2e
 3376 0041 01       		.byte	0x1
 3377 0042 3F       		.uleb128 0x3f
 3378 0043 19       		.uleb128 0x19
 3379 0044 03       		.uleb128 0x3
 3380 0045 0E       		.uleb128 0xe
 3381 0046 3A       		.uleb128 0x3a
 3382 0047 0B       		.uleb128 0xb
 3383 0048 3B       		.uleb128 0x3b
 3384 0049 0B       		.uleb128 0xb
 3385 004a 27       		.uleb128 0x27
 3386 004b 19       		.uleb128 0x19
 3387 004c 49       		.uleb128 0x49
 3388 004d 13       		.uleb128 0x13
 3389 004e 11       		.uleb128 0x11
 3390 004f 01       		.uleb128 0x1
 3391 0050 12       		.uleb128 0x12
 3392 0051 06       		.uleb128 0x6
 3393 0052 40       		.uleb128 0x40
 3394 0053 18       		.uleb128 0x18
 3395 0054 9742     		.uleb128 0x2117
 3396 0056 19       		.uleb128 0x19
 3397 0057 01       		.uleb128 0x1
 3398 0058 13       		.uleb128 0x13
 3399 0059 00       		.byte	0
 3400 005a 00       		.byte	0
 3401 005b 07       		.uleb128 0x7
 3402 005c 05       		.uleb128 0x5
 3403 005d 00       		.byte	0
 3404 005e 03       		.uleb128 0x3
 3405 005f 08       		.uleb128 0x8
 3406 0060 3A       		.uleb128 0x3a
 3407 0061 0B       		.uleb128 0xb
 3408 0062 3B       		.uleb128 0x3b
 3409 0063 0B       		.uleb128 0xb
 3410 0064 49       		.uleb128 0x49
 3411 0065 13       		.uleb128 0x13
 3412 0066 02       		.uleb128 0x2
 3413 0067 18       		.uleb128 0x18
 3414 0068 00       		.byte	0
 3415 0069 00       		.byte	0
 3416 006a 08       		.uleb128 0x8
 3417 006b 2E       		.uleb128 0x2e
 3418 006c 00       		.byte	0
 3419 006d 3F       		.uleb128 0x3f
 3420 006e 19       		.uleb128 0x19
 3421 006f 03       		.uleb128 0x3
 3422 0070 0E       		.uleb128 0xe
 3423 0071 3A       		.uleb128 0x3a
 3424 0072 0B       		.uleb128 0xb
 3425 0073 3B       		.uleb128 0x3b
 3426 0074 0B       		.uleb128 0xb
 3427 0075 49       		.uleb128 0x49
 3428 0076 13       		.uleb128 0x13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 79


 3429 0077 11       		.uleb128 0x11
 3430 0078 01       		.uleb128 0x1
 3431 0079 12       		.uleb128 0x12
 3432 007a 06       		.uleb128 0x6
 3433 007b 40       		.uleb128 0x40
 3434 007c 18       		.uleb128 0x18
 3435 007d 9642     		.uleb128 0x2116
 3436 007f 19       		.uleb128 0x19
 3437 0080 00       		.byte	0
 3438 0081 00       		.byte	0
 3439 0082 09       		.uleb128 0x9
 3440 0083 2E       		.uleb128 0x2e
 3441 0084 00       		.byte	0
 3442 0085 3F       		.uleb128 0x3f
 3443 0086 19       		.uleb128 0x19
 3444 0087 03       		.uleb128 0x3
 3445 0088 0E       		.uleb128 0xe
 3446 0089 3A       		.uleb128 0x3a
 3447 008a 0B       		.uleb128 0xb
 3448 008b 3B       		.uleb128 0x3b
 3449 008c 0B       		.uleb128 0xb
 3450 008d 11       		.uleb128 0x11
 3451 008e 01       		.uleb128 0x1
 3452 008f 12       		.uleb128 0x12
 3453 0090 06       		.uleb128 0x6
 3454 0091 40       		.uleb128 0x40
 3455 0092 18       		.uleb128 0x18
 3456 0093 9642     		.uleb128 0x2116
 3457 0095 19       		.uleb128 0x19
 3458 0096 00       		.byte	0
 3459 0097 00       		.byte	0
 3460 0098 0A       		.uleb128 0xa
 3461 0099 2E       		.uleb128 0x2e
 3462 009a 01       		.byte	0x1
 3463 009b 3F       		.uleb128 0x3f
 3464 009c 19       		.uleb128 0x19
 3465 009d 03       		.uleb128 0x3
 3466 009e 0E       		.uleb128 0xe
 3467 009f 3A       		.uleb128 0x3a
 3468 00a0 0B       		.uleb128 0xb
 3469 00a1 3B       		.uleb128 0x3b
 3470 00a2 0B       		.uleb128 0xb
 3471 00a3 27       		.uleb128 0x27
 3472 00a4 19       		.uleb128 0x19
 3473 00a5 49       		.uleb128 0x49
 3474 00a6 13       		.uleb128 0x13
 3475 00a7 11       		.uleb128 0x11
 3476 00a8 01       		.uleb128 0x1
 3477 00a9 12       		.uleb128 0x12
 3478 00aa 06       		.uleb128 0x6
 3479 00ab 40       		.uleb128 0x40
 3480 00ac 18       		.uleb128 0x18
 3481 00ad 9642     		.uleb128 0x2116
 3482 00af 19       		.uleb128 0x19
 3483 00b0 01       		.uleb128 0x1
 3484 00b1 13       		.uleb128 0x13
 3485 00b2 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 80


 3486 00b3 00       		.byte	0
 3487 00b4 0B       		.uleb128 0xb
 3488 00b5 05       		.uleb128 0x5
 3489 00b6 00       		.byte	0
 3490 00b7 03       		.uleb128 0x3
 3491 00b8 0E       		.uleb128 0xe
 3492 00b9 3A       		.uleb128 0x3a
 3493 00ba 0B       		.uleb128 0xb
 3494 00bb 3B       		.uleb128 0x3b
 3495 00bc 0B       		.uleb128 0xb
 3496 00bd 49       		.uleb128 0x49
 3497 00be 13       		.uleb128 0x13
 3498 00bf 02       		.uleb128 0x2
 3499 00c0 18       		.uleb128 0x18
 3500 00c1 00       		.byte	0
 3501 00c2 00       		.byte	0
 3502 00c3 0C       		.uleb128 0xc
 3503 00c4 34       		.uleb128 0x34
 3504 00c5 00       		.byte	0
 3505 00c6 03       		.uleb128 0x3
 3506 00c7 0E       		.uleb128 0xe
 3507 00c8 3A       		.uleb128 0x3a
 3508 00c9 0B       		.uleb128 0xb
 3509 00ca 3B       		.uleb128 0x3b
 3510 00cb 0B       		.uleb128 0xb
 3511 00cc 49       		.uleb128 0x49
 3512 00cd 13       		.uleb128 0x13
 3513 00ce 02       		.uleb128 0x2
 3514 00cf 18       		.uleb128 0x18
 3515 00d0 00       		.byte	0
 3516 00d1 00       		.byte	0
 3517 00d2 0D       		.uleb128 0xd
 3518 00d3 34       		.uleb128 0x34
 3519 00d4 00       		.byte	0
 3520 00d5 03       		.uleb128 0x3
 3521 00d6 08       		.uleb128 0x8
 3522 00d7 3A       		.uleb128 0x3a
 3523 00d8 0B       		.uleb128 0xb
 3524 00d9 3B       		.uleb128 0x3b
 3525 00da 0B       		.uleb128 0xb
 3526 00db 49       		.uleb128 0x49
 3527 00dc 13       		.uleb128 0x13
 3528 00dd 02       		.uleb128 0x2
 3529 00de 18       		.uleb128 0x18
 3530 00df 00       		.byte	0
 3531 00e0 00       		.byte	0
 3532 00e1 0E       		.uleb128 0xe
 3533 00e2 0B       		.uleb128 0xb
 3534 00e3 01       		.byte	0x1
 3535 00e4 11       		.uleb128 0x11
 3536 00e5 01       		.uleb128 0x1
 3537 00e6 12       		.uleb128 0x12
 3538 00e7 06       		.uleb128 0x6
 3539 00e8 00       		.byte	0
 3540 00e9 00       		.byte	0
 3541 00ea 0F       		.uleb128 0xf
 3542 00eb 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 81


 3543 00ec 01       		.byte	0x1
 3544 00ed 3F       		.uleb128 0x3f
 3545 00ee 19       		.uleb128 0x19
 3546 00ef 03       		.uleb128 0x3
 3547 00f0 0E       		.uleb128 0xe
 3548 00f1 3A       		.uleb128 0x3a
 3549 00f2 0B       		.uleb128 0xb
 3550 00f3 3B       		.uleb128 0x3b
 3551 00f4 0B       		.uleb128 0xb
 3552 00f5 49       		.uleb128 0x49
 3553 00f6 13       		.uleb128 0x13
 3554 00f7 11       		.uleb128 0x11
 3555 00f8 01       		.uleb128 0x1
 3556 00f9 12       		.uleb128 0x12
 3557 00fa 06       		.uleb128 0x6
 3558 00fb 40       		.uleb128 0x40
 3559 00fc 18       		.uleb128 0x18
 3560 00fd 9642     		.uleb128 0x2116
 3561 00ff 19       		.uleb128 0x19
 3562 0100 01       		.uleb128 0x1
 3563 0101 13       		.uleb128 0x13
 3564 0102 00       		.byte	0
 3565 0103 00       		.byte	0
 3566 0104 10       		.uleb128 0x10
 3567 0105 2E       		.uleb128 0x2e
 3568 0106 00       		.byte	0
 3569 0107 3F       		.uleb128 0x3f
 3570 0108 19       		.uleb128 0x19
 3571 0109 03       		.uleb128 0x3
 3572 010a 0E       		.uleb128 0xe
 3573 010b 3A       		.uleb128 0x3a
 3574 010c 0B       		.uleb128 0xb
 3575 010d 3B       		.uleb128 0x3b
 3576 010e 05       		.uleb128 0x5
 3577 010f 49       		.uleb128 0x49
 3578 0110 13       		.uleb128 0x13
 3579 0111 11       		.uleb128 0x11
 3580 0112 01       		.uleb128 0x1
 3581 0113 12       		.uleb128 0x12
 3582 0114 06       		.uleb128 0x6
 3583 0115 40       		.uleb128 0x40
 3584 0116 18       		.uleb128 0x18
 3585 0117 9642     		.uleb128 0x2116
 3586 0119 19       		.uleb128 0x19
 3587 011a 00       		.byte	0
 3588 011b 00       		.byte	0
 3589 011c 11       		.uleb128 0x11
 3590 011d 2E       		.uleb128 0x2e
 3591 011e 01       		.byte	0x1
 3592 011f 3F       		.uleb128 0x3f
 3593 0120 19       		.uleb128 0x19
 3594 0121 03       		.uleb128 0x3
 3595 0122 0E       		.uleb128 0xe
 3596 0123 3A       		.uleb128 0x3a
 3597 0124 0B       		.uleb128 0xb
 3598 0125 3B       		.uleb128 0x3b
 3599 0126 05       		.uleb128 0x5
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 82


 3600 0127 49       		.uleb128 0x49
 3601 0128 13       		.uleb128 0x13
 3602 0129 11       		.uleb128 0x11
 3603 012a 01       		.uleb128 0x1
 3604 012b 12       		.uleb128 0x12
 3605 012c 06       		.uleb128 0x6
 3606 012d 40       		.uleb128 0x40
 3607 012e 18       		.uleb128 0x18
 3608 012f 9642     		.uleb128 0x2116
 3609 0131 19       		.uleb128 0x19
 3610 0132 01       		.uleb128 0x1
 3611 0133 13       		.uleb128 0x13
 3612 0134 00       		.byte	0
 3613 0135 00       		.byte	0
 3614 0136 12       		.uleb128 0x12
 3615 0137 34       		.uleb128 0x34
 3616 0138 00       		.byte	0
 3617 0139 03       		.uleb128 0x3
 3618 013a 08       		.uleb128 0x8
 3619 013b 3A       		.uleb128 0x3a
 3620 013c 0B       		.uleb128 0xb
 3621 013d 3B       		.uleb128 0x3b
 3622 013e 05       		.uleb128 0x5
 3623 013f 49       		.uleb128 0x49
 3624 0140 13       		.uleb128 0x13
 3625 0141 02       		.uleb128 0x2
 3626 0142 18       		.uleb128 0x18
 3627 0143 00       		.byte	0
 3628 0144 00       		.byte	0
 3629 0145 13       		.uleb128 0x13
 3630 0146 01       		.uleb128 0x1
 3631 0147 01       		.byte	0x1
 3632 0148 49       		.uleb128 0x49
 3633 0149 13       		.uleb128 0x13
 3634 014a 01       		.uleb128 0x1
 3635 014b 13       		.uleb128 0x13
 3636 014c 00       		.byte	0
 3637 014d 00       		.byte	0
 3638 014e 14       		.uleb128 0x14
 3639 014f 21       		.uleb128 0x21
 3640 0150 00       		.byte	0
 3641 0151 49       		.uleb128 0x49
 3642 0152 13       		.uleb128 0x13
 3643 0153 2F       		.uleb128 0x2f
 3644 0154 0B       		.uleb128 0xb
 3645 0155 00       		.byte	0
 3646 0156 00       		.byte	0
 3647 0157 15       		.uleb128 0x15
 3648 0158 2E       		.uleb128 0x2e
 3649 0159 01       		.byte	0x1
 3650 015a 3F       		.uleb128 0x3f
 3651 015b 19       		.uleb128 0x19
 3652 015c 03       		.uleb128 0x3
 3653 015d 0E       		.uleb128 0xe
 3654 015e 3A       		.uleb128 0x3a
 3655 015f 0B       		.uleb128 0xb
 3656 0160 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 83


 3657 0161 05       		.uleb128 0x5
 3658 0162 27       		.uleb128 0x27
 3659 0163 19       		.uleb128 0x19
 3660 0164 49       		.uleb128 0x49
 3661 0165 13       		.uleb128 0x13
 3662 0166 11       		.uleb128 0x11
 3663 0167 01       		.uleb128 0x1
 3664 0168 12       		.uleb128 0x12
 3665 0169 06       		.uleb128 0x6
 3666 016a 40       		.uleb128 0x40
 3667 016b 18       		.uleb128 0x18
 3668 016c 9642     		.uleb128 0x2116
 3669 016e 19       		.uleb128 0x19
 3670 016f 01       		.uleb128 0x1
 3671 0170 13       		.uleb128 0x13
 3672 0171 00       		.byte	0
 3673 0172 00       		.byte	0
 3674 0173 16       		.uleb128 0x16
 3675 0174 05       		.uleb128 0x5
 3676 0175 00       		.byte	0
 3677 0176 03       		.uleb128 0x3
 3678 0177 0E       		.uleb128 0xe
 3679 0178 3A       		.uleb128 0x3a
 3680 0179 0B       		.uleb128 0xb
 3681 017a 3B       		.uleb128 0x3b
 3682 017b 05       		.uleb128 0x5
 3683 017c 49       		.uleb128 0x49
 3684 017d 13       		.uleb128 0x13
 3685 017e 02       		.uleb128 0x2
 3686 017f 18       		.uleb128 0x18
 3687 0180 00       		.byte	0
 3688 0181 00       		.byte	0
 3689 0182 17       		.uleb128 0x17
 3690 0183 34       		.uleb128 0x34
 3691 0184 00       		.byte	0
 3692 0185 03       		.uleb128 0x3
 3693 0186 0E       		.uleb128 0xe
 3694 0187 3A       		.uleb128 0x3a
 3695 0188 0B       		.uleb128 0xb
 3696 0189 3B       		.uleb128 0x3b
 3697 018a 05       		.uleb128 0x5
 3698 018b 49       		.uleb128 0x49
 3699 018c 13       		.uleb128 0x13
 3700 018d 02       		.uleb128 0x2
 3701 018e 18       		.uleb128 0x18
 3702 018f 00       		.byte	0
 3703 0190 00       		.byte	0
 3704 0191 18       		.uleb128 0x18
 3705 0192 21       		.uleb128 0x21
 3706 0193 00       		.byte	0
 3707 0194 49       		.uleb128 0x49
 3708 0195 13       		.uleb128 0x13
 3709 0196 2F       		.uleb128 0x2f
 3710 0197 05       		.uleb128 0x5
 3711 0198 00       		.byte	0
 3712 0199 00       		.byte	0
 3713 019a 19       		.uleb128 0x19
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 84


 3714 019b 05       		.uleb128 0x5
 3715 019c 00       		.byte	0
 3716 019d 03       		.uleb128 0x3
 3717 019e 08       		.uleb128 0x8
 3718 019f 3A       		.uleb128 0x3a
 3719 01a0 0B       		.uleb128 0xb
 3720 01a1 3B       		.uleb128 0x3b
 3721 01a2 05       		.uleb128 0x5
 3722 01a3 49       		.uleb128 0x49
 3723 01a4 13       		.uleb128 0x13
 3724 01a5 02       		.uleb128 0x2
 3725 01a6 18       		.uleb128 0x18
 3726 01a7 00       		.byte	0
 3727 01a8 00       		.byte	0
 3728 01a9 1A       		.uleb128 0x1a
 3729 01aa 2E       		.uleb128 0x2e
 3730 01ab 00       		.byte	0
 3731 01ac 3F       		.uleb128 0x3f
 3732 01ad 19       		.uleb128 0x19
 3733 01ae 03       		.uleb128 0x3
 3734 01af 0E       		.uleb128 0xe
 3735 01b0 3A       		.uleb128 0x3a
 3736 01b1 0B       		.uleb128 0xb
 3737 01b2 3B       		.uleb128 0x3b
 3738 01b3 05       		.uleb128 0x5
 3739 01b4 11       		.uleb128 0x11
 3740 01b5 01       		.uleb128 0x1
 3741 01b6 12       		.uleb128 0x12
 3742 01b7 06       		.uleb128 0x6
 3743 01b8 40       		.uleb128 0x40
 3744 01b9 18       		.uleb128 0x18
 3745 01ba 9642     		.uleb128 0x2116
 3746 01bc 19       		.uleb128 0x19
 3747 01bd 00       		.byte	0
 3748 01be 00       		.byte	0
 3749 01bf 1B       		.uleb128 0x1b
 3750 01c0 2E       		.uleb128 0x2e
 3751 01c1 01       		.byte	0x1
 3752 01c2 3F       		.uleb128 0x3f
 3753 01c3 19       		.uleb128 0x19
 3754 01c4 03       		.uleb128 0x3
 3755 01c5 0E       		.uleb128 0xe
 3756 01c6 3A       		.uleb128 0x3a
 3757 01c7 0B       		.uleb128 0xb
 3758 01c8 3B       		.uleb128 0x3b
 3759 01c9 05       		.uleb128 0x5
 3760 01ca 27       		.uleb128 0x27
 3761 01cb 19       		.uleb128 0x19
 3762 01cc 11       		.uleb128 0x11
 3763 01cd 01       		.uleb128 0x1
 3764 01ce 12       		.uleb128 0x12
 3765 01cf 06       		.uleb128 0x6
 3766 01d0 40       		.uleb128 0x40
 3767 01d1 18       		.uleb128 0x18
 3768 01d2 9642     		.uleb128 0x2116
 3769 01d4 19       		.uleb128 0x19
 3770 01d5 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 85


 3771 01d6 13       		.uleb128 0x13
 3772 01d7 00       		.byte	0
 3773 01d8 00       		.byte	0
 3774 01d9 1C       		.uleb128 0x1c
 3775 01da 34       		.uleb128 0x34
 3776 01db 00       		.byte	0
 3777 01dc 03       		.uleb128 0x3
 3778 01dd 0E       		.uleb128 0xe
 3779 01de 3A       		.uleb128 0x3a
 3780 01df 0B       		.uleb128 0xb
 3781 01e0 3B       		.uleb128 0x3b
 3782 01e1 05       		.uleb128 0x5
 3783 01e2 49       		.uleb128 0x49
 3784 01e3 13       		.uleb128 0x13
 3785 01e4 3F       		.uleb128 0x3f
 3786 01e5 19       		.uleb128 0x19
 3787 01e6 3C       		.uleb128 0x3c
 3788 01e7 19       		.uleb128 0x19
 3789 01e8 00       		.byte	0
 3790 01e9 00       		.byte	0
 3791 01ea 1D       		.uleb128 0x1d
 3792 01eb 35       		.uleb128 0x35
 3793 01ec 00       		.byte	0
 3794 01ed 49       		.uleb128 0x49
 3795 01ee 13       		.uleb128 0x13
 3796 01ef 00       		.byte	0
 3797 01f0 00       		.byte	0
 3798 01f1 1E       		.uleb128 0x1e
 3799 01f2 34       		.uleb128 0x34
 3800 01f3 00       		.byte	0
 3801 01f4 03       		.uleb128 0x3
 3802 01f5 0E       		.uleb128 0xe
 3803 01f6 3A       		.uleb128 0x3a
 3804 01f7 0B       		.uleb128 0xb
 3805 01f8 3B       		.uleb128 0x3b
 3806 01f9 0B       		.uleb128 0xb
 3807 01fa 49       		.uleb128 0x49
 3808 01fb 13       		.uleb128 0x13
 3809 01fc 3F       		.uleb128 0x3f
 3810 01fd 19       		.uleb128 0x19
 3811 01fe 02       		.uleb128 0x2
 3812 01ff 18       		.uleb128 0x18
 3813 0200 00       		.byte	0
 3814 0201 00       		.byte	0
 3815 0202 00       		.byte	0
 3816              		.section	.debug_aranges,"",%progbits
 3817 0000 1C010000 		.4byte	0x11c
 3818 0004 0200     		.2byte	0x2
 3819 0006 00000000 		.4byte	.Ldebug_info0
 3820 000a 04       		.byte	0x4
 3821 000b 00       		.byte	0
 3822 000c 0000     		.2byte	0
 3823 000e 0000     		.2byte	0
 3824 0010 00000000 		.4byte	.LFB56
 3825 0014 2C000000 		.4byte	.LFE56-.LFB56
 3826 0018 00000000 		.4byte	.LFB57
 3827 001c 78000000 		.4byte	.LFE57-.LFB57
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 86


 3828 0020 00000000 		.4byte	.LFB58
 3829 0024 18000000 		.4byte	.LFE58-.LFB58
 3830 0028 00000000 		.4byte	.LFB59
 3831 002c 30000000 		.4byte	.LFE59-.LFB59
 3832 0030 00000000 		.4byte	.LFB60
 3833 0034 2C000000 		.4byte	.LFE60-.LFB60
 3834 0038 00000000 		.4byte	.LFB61
 3835 003c 78000000 		.4byte	.LFE61-.LFB61
 3836 0040 00000000 		.4byte	.LFB62
 3837 0044 70000000 		.4byte	.LFE62-.LFB62
 3838 0048 00000000 		.4byte	.LFB63
 3839 004c 4C000000 		.4byte	.LFE63-.LFB63
 3840 0050 00000000 		.4byte	.LFB64
 3841 0054 3C000000 		.4byte	.LFE64-.LFB64
 3842 0058 00000000 		.4byte	.LFB65
 3843 005c 1A000000 		.4byte	.LFE65-.LFB65
 3844 0060 00000000 		.4byte	.LFB66
 3845 0064 78000000 		.4byte	.LFE66-.LFB66
 3846 0068 00000000 		.4byte	.LFB67
 3847 006c 38000000 		.4byte	.LFE67-.LFB67
 3848 0070 00000000 		.4byte	.LFB68
 3849 0074 44000000 		.4byte	.LFE68-.LFB68
 3850 0078 00000000 		.4byte	.LFB69
 3851 007c 48000000 		.4byte	.LFE69-.LFB69
 3852 0080 00000000 		.4byte	.LFB70
 3853 0084 28000000 		.4byte	.LFE70-.LFB70
 3854 0088 00000000 		.4byte	.LFB71
 3855 008c 28000000 		.4byte	.LFE71-.LFB71
 3856 0090 00000000 		.4byte	.LFB72
 3857 0094 28000000 		.4byte	.LFE72-.LFB72
 3858 0098 00000000 		.4byte	.LFB73
 3859 009c 28000000 		.4byte	.LFE73-.LFB73
 3860 00a0 00000000 		.4byte	.LFB74
 3861 00a4 28000000 		.4byte	.LFE74-.LFB74
 3862 00a8 00000000 		.4byte	.LFB75
 3863 00ac 48000000 		.4byte	.LFE75-.LFB75
 3864 00b0 00000000 		.4byte	.LFB76
 3865 00b4 48000000 		.4byte	.LFE76-.LFB76
 3866 00b8 00000000 		.4byte	.LFB77
 3867 00bc 28000000 		.4byte	.LFE77-.LFB77
 3868 00c0 00000000 		.4byte	.LFB78
 3869 00c4 48000000 		.4byte	.LFE78-.LFB78
 3870 00c8 00000000 		.4byte	.LFB79
 3871 00cc 28000000 		.4byte	.LFE79-.LFB79
 3872 00d0 00000000 		.4byte	.LFB80
 3873 00d4 44000000 		.4byte	.LFE80-.LFB80
 3874 00d8 00000000 		.4byte	.LFB81
 3875 00dc 44000000 		.4byte	.LFE81-.LFB81
 3876 00e0 00000000 		.4byte	.LFB82
 3877 00e4 98000000 		.4byte	.LFE82-.LFB82
 3878 00e8 00000000 		.4byte	.LFB83
 3879 00ec 10010000 		.4byte	.LFE83-.LFB83
 3880 00f0 00000000 		.4byte	.LFB84
 3881 00f4 28010000 		.4byte	.LFE84-.LFB84
 3882 00f8 00000000 		.4byte	.LFB85
 3883 00fc E0000000 		.4byte	.LFE85-.LFB85
 3884 0100 00000000 		.4byte	.LFB86
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 87


 3885 0104 9C000000 		.4byte	.LFE86-.LFB86
 3886 0108 00000000 		.4byte	.LFB87
 3887 010c 24000000 		.4byte	.LFE87-.LFB87
 3888 0110 00000000 		.4byte	.LFB88
 3889 0114 44000000 		.4byte	.LFE88-.LFB88
 3890 0118 00000000 		.4byte	0
 3891 011c 00000000 		.4byte	0
 3892              		.section	.debug_ranges,"",%progbits
 3893              	.Ldebug_ranges0:
 3894 0000 00000000 		.4byte	.LFB56
 3895 0004 2C000000 		.4byte	.LFE56
 3896 0008 00000000 		.4byte	.LFB57
 3897 000c 78000000 		.4byte	.LFE57
 3898 0010 00000000 		.4byte	.LFB58
 3899 0014 18000000 		.4byte	.LFE58
 3900 0018 00000000 		.4byte	.LFB59
 3901 001c 30000000 		.4byte	.LFE59
 3902 0020 00000000 		.4byte	.LFB60
 3903 0024 2C000000 		.4byte	.LFE60
 3904 0028 00000000 		.4byte	.LFB61
 3905 002c 78000000 		.4byte	.LFE61
 3906 0030 00000000 		.4byte	.LFB62
 3907 0034 70000000 		.4byte	.LFE62
 3908 0038 00000000 		.4byte	.LFB63
 3909 003c 4C000000 		.4byte	.LFE63
 3910 0040 00000000 		.4byte	.LFB64
 3911 0044 3C000000 		.4byte	.LFE64
 3912 0048 00000000 		.4byte	.LFB65
 3913 004c 1A000000 		.4byte	.LFE65
 3914 0050 00000000 		.4byte	.LFB66
 3915 0054 78000000 		.4byte	.LFE66
 3916 0058 00000000 		.4byte	.LFB67
 3917 005c 38000000 		.4byte	.LFE67
 3918 0060 00000000 		.4byte	.LFB68
 3919 0064 44000000 		.4byte	.LFE68
 3920 0068 00000000 		.4byte	.LFB69
 3921 006c 48000000 		.4byte	.LFE69
 3922 0070 00000000 		.4byte	.LFB70
 3923 0074 28000000 		.4byte	.LFE70
 3924 0078 00000000 		.4byte	.LFB71
 3925 007c 28000000 		.4byte	.LFE71
 3926 0080 00000000 		.4byte	.LFB72
 3927 0084 28000000 		.4byte	.LFE72
 3928 0088 00000000 		.4byte	.LFB73
 3929 008c 28000000 		.4byte	.LFE73
 3930 0090 00000000 		.4byte	.LFB74
 3931 0094 28000000 		.4byte	.LFE74
 3932 0098 00000000 		.4byte	.LFB75
 3933 009c 48000000 		.4byte	.LFE75
 3934 00a0 00000000 		.4byte	.LFB76
 3935 00a4 48000000 		.4byte	.LFE76
 3936 00a8 00000000 		.4byte	.LFB77
 3937 00ac 28000000 		.4byte	.LFE77
 3938 00b0 00000000 		.4byte	.LFB78
 3939 00b4 48000000 		.4byte	.LFE78
 3940 00b8 00000000 		.4byte	.LFB79
 3941 00bc 28000000 		.4byte	.LFE79
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 88


 3942 00c0 00000000 		.4byte	.LFB80
 3943 00c4 44000000 		.4byte	.LFE80
 3944 00c8 00000000 		.4byte	.LFB81
 3945 00cc 44000000 		.4byte	.LFE81
 3946 00d0 00000000 		.4byte	.LFB82
 3947 00d4 98000000 		.4byte	.LFE82
 3948 00d8 00000000 		.4byte	.LFB83
 3949 00dc 10010000 		.4byte	.LFE83
 3950 00e0 00000000 		.4byte	.LFB84
 3951 00e4 28010000 		.4byte	.LFE84
 3952 00e8 00000000 		.4byte	.LFB85
 3953 00ec E0000000 		.4byte	.LFE85
 3954 00f0 00000000 		.4byte	.LFB86
 3955 00f4 9C000000 		.4byte	.LFE86
 3956 00f8 00000000 		.4byte	.LFB87
 3957 00fc 24000000 		.4byte	.LFE87
 3958 0100 00000000 		.4byte	.LFB88
 3959 0104 44000000 		.4byte	.LFE88
 3960 0108 00000000 		.4byte	0
 3961 010c 00000000 		.4byte	0
 3962              		.section	.debug_line,"",%progbits
 3963              	.Ldebug_line0:
 3964 0000 B9040000 		.section	.debug_str,"MS",%progbits,1
 3964      02004A01 
 3964      00000201 
 3964      FB0E0D00 
 3964      01010101 
 3965              	.LASF30:
 3966 0000 76616C69 		.ascii	"valid\000"
 3966      6400
 3967              	.LASF63:
 3968 0006 6D6F6465 		.ascii	"modem_get_packet\000"
 3968      6D5F6765 
 3968      745F7061 
 3968      636B6574 
 3968      00
 3969              	.LASF25:
 3970 0017 65787065 		.ascii	"expected_response\000"
 3970      63746564 
 3970      5F726573 
 3970      706F6E73 
 3970      6500
 3971              	.LASF72:
 3972 0029 72785F63 		.ascii	"rx_char_hold\000"
 3972      6861725F 
 3972      686F6C64 
 3972      00
 3973              	.LASF51:
 3974 0036 6D6F6465 		.ascii	"modem_enable_CDMA_data\000"
 3974      6D5F656E 
 3974      61626C65 
 3974      5F43444D 
 3974      415F6461 
 3975              	.LASF71:
 3976 004d 54656C69 		.ascii	"Telit_isr_rx\000"
 3976      745F6973 
 3976      725F7278 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 89


 3976      00
 3977              	.LASF84:
 3978 005a 2E5C6D6F 		.ascii	".\\modem.c\000"
 3978      64656D2E 
 3978      6300
 3979              	.LASF39:
 3980 0064 6D6F6465 		.ascii	"modem_set_apn\000"
 3980      6D5F7365 
 3980      745F6170 
 3980      6E00
 3981              	.LASF55:
 3982 0072 6D6F6465 		.ascii	"modem_set_password\000"
 3982      6D5F7365 
 3982      745F7061 
 3982      7373776F 
 3982      726400
 3983              	.LASF58:
 3984 0085 6765745F 		.ascii	"get_str\000"
 3984      73747200 
 3985              	.LASF18:
 3986 008d 6D6F6465 		.ascii	"modem_startup\000"
 3986      6D5F7374 
 3986      61727475 
 3986      7000
 3987              	.LASF70:
 3988 009b 75617274 		.ascii	"uart_string_reset\000"
 3988      5F737472 
 3988      696E675F 
 3988      72657365 
 3988      7400
 3989              	.LASF28:
 3990 00ad 64656C61 		.ascii	"delay\000"
 3990      7900
 3991              	.LASF2:
 3992 00b3 73686F72 		.ascii	"short int\000"
 3992      7420696E 
 3992      7400
 3993              	.LASF82:
 3994 00bd 6D6F6465 		.ascii	"modem_apn\000"
 3994      6D5F6170 
 3994      6E00
 3995              	.LASF83:
 3996 00c7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3996      4320342E 
 3996      382E3420 
 3996      32303134 
 3996      30353236 
 3997 00fa 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3997      20726576 
 3997      6973696F 
 3997      6E203231 
 3997      31333538 
 3998 012d 30202D66 		.ascii	"0 -ffunction-sections\000"
 3998      66756E63 
 3998      74696F6E 
 3998      2D736563 
 3998      74696F6E 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 90


 3999              	.LASF50:
 4000 0143 6D6F6465 		.ascii	"modem_get_sw_version\000"
 4000      6D5F6765 
 4000      745F7377 
 4000      5F766572 
 4000      73696F6E 
 4001              	.LASF12:
 4002 0158 75696E74 		.ascii	"uint16\000"
 4002      313600
 4003              	.LASF81:
 4004 015f 75617274 		.ascii	"uart_received_string\000"
 4004      5F726563 
 4004      65697665 
 4004      645F7374 
 4004      72696E67 
 4005              	.LASF35:
 4006 0174 636F756E 		.ascii	"count\000"
 4006      7400
 4007              	.LASF52:
 4008 017a 6D6F6465 		.ascii	"modem_test_CDMA_data\000"
 4008      6D5F7465 
 4008      73745F43 
 4008      444D415F 
 4008      64617461 
 4009              	.LASF64:
 4010 018f 7061636B 		.ascii	"packet\000"
 4010      657400
 4011              	.LASF59:
 4012 0196 6B65795F 		.ascii	"key_str\000"
 4012      73747200 
 4013              	.LASF85:
 4014 019e 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 4014      73657273 
 4014      5C4D6174 
 4014      74686577 
 4014      5C676974 
 4015 01cb 6172642E 		.ascii	"ard.cydsn\000"
 4015      63796473 
 4015      6E00
 4016              	.LASF14:
 4017 01d5 666C6F61 		.ascii	"float\000"
 4017      7400
 4018              	.LASF42:
 4019 01db 6D6F6465 		.ascii	"modem_get_time\000"
 4019      6D5F6765 
 4019      745F7469 
 4019      6D6500
 4020              	.LASF32:
 4021 01ea 6D6F6465 		.ascii	"modem_power_off\000"
 4021      6D5F706F 
 4021      7765725F 
 4021      6F666600 
 4022              	.LASF6:
 4023 01fa 6C6F6E67 		.ascii	"long long int\000"
 4023      206C6F6E 
 4023      6720696E 
 4023      7400
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 91


 4024              	.LASF36:
 4025 0208 6E657477 		.ascii	"network_status\000"
 4025      6F726B5F 
 4025      73746174 
 4025      757300
 4026              	.LASF57:
 4027 0217 6D6F6465 		.ascii	"modem_get_google\000"
 4027      6D5F6765 
 4027      745F676F 
 4027      6F676C65 
 4027      00
 4028              	.LASF4:
 4029 0228 6C6F6E67 		.ascii	"long int\000"
 4029      20696E74 
 4029      00
 4030              	.LASF17:
 4031 0231 73697A65 		.ascii	"sizetype\000"
 4031      74797065 
 4031      00
 4032              	.LASF61:
 4033 023a 626F6479 		.ascii	"body\000"
 4033      00
 4034              	.LASF23:
 4035 023f 61745F77 		.ascii	"at_write_command\000"
 4035      72697465 
 4035      5F636F6D 
 4035      6D616E64 
 4035      00
 4036              	.LASF47:
 4037 0250 6D6F6465 		.ascii	"modem_set_flow_control\000"
 4037      6D5F7365 
 4037      745F666C 
 4037      6F775F63 
 4037      6F6E7472 
 4038              	.LASF80:
 4039 0267 75617274 		.ascii	"uart_string_index\000"
 4039      5F737472 
 4039      696E675F 
 4039      696E6465 
 4039      7800
 4040              	.LASF22:
 4041 0279 6D6F6465 		.ascii	"modem_set_api_feed\000"
 4041      6D5F7365 
 4041      745F6170 
 4041      695F6665 
 4041      656400
 4042              	.LASF38:
 4043 028c 6D6F6465 		.ascii	"modem_connect\000"
 4043      6D5F636F 
 4043      6E6E6563 
 4043      7400
 4044              	.LASF40:
 4045 029a 6D6F6465 		.ascii	"modem_set_band\000"
 4045      6D5F7365 
 4045      745F6261 
 4045      6E6400
 4046              	.LASF56:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 92


 4047 02a9 70617373 		.ascii	"pass\000"
 4047      00
 4048              	.LASF1:
 4049 02ae 756E7369 		.ascii	"unsigned char\000"
 4049      676E6564 
 4049      20636861 
 4049      7200
 4050              	.LASF33:
 4051 02bc 6D6F6465 		.ascii	"modem_reset\000"
 4051      6D5F7265 
 4051      73657400 
 4052              	.LASF74:
 4053 02c8 6D6F6465 		.ascii	"modem_state\000"
 4053      6D5F7374 
 4053      61746500 
 4054              	.LASF0:
 4055 02d4 7369676E 		.ascii	"signed char\000"
 4055      65642063 
 4055      68617200 
 4056              	.LASF7:
 4057 02e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4057      206C6F6E 
 4057      6720756E 
 4057      7369676E 
 4057      65642069 
 4058              	.LASF8:
 4059 02f7 756E7369 		.ascii	"unsigned int\000"
 4059      676E6564 
 4059      20696E74 
 4059      00
 4060              	.LASF48:
 4061 0304 70617261 		.ascii	"param\000"
 4061      6D00
 4062              	.LASF41:
 4063 030a 62616E64 		.ascii	"band\000"
 4063      00
 4064              	.LASF54:
 4065 030f 75736572 		.ascii	"user\000"
 4065      00
 4066              	.LASF3:
 4067 0314 73686F72 		.ascii	"short unsigned int\000"
 4067      7420756E 
 4067      7369676E 
 4067      65642069 
 4067      6E7400
 4068              	.LASF31:
 4069 0327 6D6F6465 		.ascii	"modem_power_on\000"
 4069      6D5F706F 
 4069      7765725F 
 4069      6F6E00
 4070              	.LASF16:
 4071 0336 63686172 		.ascii	"char\000"
 4071      00
 4072              	.LASF73:
 4073 033b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4073      52784275 
 4073      66666572 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 93


 4073      00
 4074              	.LASF79:
 4075 0348 72656164 		.ascii	"ready\000"
 4075      7900
 4076              	.LASF10:
 4077 034e 696E7433 		.ascii	"int32_t\000"
 4077      325F7400 
 4078              	.LASF66:
 4079 0356 6C6F636B 		.ascii	"lock\000"
 4079      00
 4080              	.LASF44:
 4081 035b 6D6F6465 		.ascii	"modem_get_signal_quality\000"
 4081      6D5F6765 
 4081      745F7369 
 4081      676E616C 
 4081      5F717561 
 4082              	.LASF67:
 4083 0374 6C6F636B 		.ascii	"lock_attempts\000"
 4083      5F617474 
 4083      656D7074 
 4083      7300
 4084              	.LASF11:
 4085 0382 75696E74 		.ascii	"uint8\000"
 4085      3800
 4086              	.LASF21:
 4087 0388 6D6F6465 		.ascii	"modem_stop\000"
 4087      6D5F7374 
 4087      6F7000
 4088              	.LASF20:
 4089 0393 6D6F6465 		.ascii	"modem_start\000"
 4089      6D5F7374 
 4089      61727400 
 4090              	.LASF13:
 4091 039f 75696E74 		.ascii	"uint32\000"
 4091      333200
 4092              	.LASF34:
 4093 03a6 6D6F6465 		.ascii	"modem_setup\000"
 4093      6D5F7365 
 4093      74757000 
 4094              	.LASF5:
 4095 03b2 6C6F6E67 		.ascii	"long unsigned int\000"
 4095      20756E73 
 4095      69676E65 
 4095      6420696E 
 4095      7400
 4096              	.LASF75:
 4097 03c4 6C6F636B 		.ascii	"lock_acquired\000"
 4097      5F616371 
 4097      75697265 
 4097      6400
 4098              	.LASF15:
 4099 03d2 646F7562 		.ascii	"double\000"
 4099      6C6500
 4100              	.LASF29:
 4101 03d9 696E7465 		.ascii	"interval\000"
 4101      7276616C 
 4101      00
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 94


 4102              	.LASF27:
 4103 03e2 72657370 		.ascii	"response\000"
 4103      6F6E7365 
 4103      00
 4104              	.LASF19:
 4105 03eb 6D6F6465 		.ascii	"modem_shutdown\000"
 4105      6D5F7368 
 4105      7574646F 
 4105      776E00
 4106              	.LASF60:
 4107 03fa 6D6F6465 		.ascii	"modem_send_packet\000"
 4107      6D5F7365 
 4107      6E645F70 
 4107      61636B65 
 4107      7400
 4108              	.LASF9:
 4109 040c 5F5F696E 		.ascii	"__int32_t\000"
 4109      7433325F 
 4109      7400
 4110              	.LASF45:
 4111 0416 6D6F6465 		.ascii	"modem_get_serial_number\000"
 4111      6D5F6765 
 4111      745F7365 
 4111      7269616C 
 4111      5F6E756D 
 4112              	.LASF37:
 4113 042e 6D6F6465 		.ascii	"modem_disconnect\000"
 4113      6D5F6469 
 4113      73636F6E 
 4113      6E656374 
 4113      00
 4114              	.LASF65:
 4115 043f 6D6F6465 		.ascii	"modem_acquire_lock\000"
 4115      6D5F6163 
 4115      71756972 
 4115      655F6C6F 
 4115      636B00
 4116              	.LASF24:
 4117 0452 75617274 		.ascii	"uart_string\000"
 4117      5F737472 
 4117      696E6700 
 4118              	.LASF78:
 4119 045e 69746572 		.ascii	"iter\000"
 4119      00
 4120              	.LASF77:
 4121 0463 6170695F 		.ascii	"api_key\000"
 4121      6B657900 
 4122              	.LASF62:
 4123 046b 7075745F 		.ascii	"put_str\000"
 4123      73747200 
 4124              	.LASF46:
 4125 0473 6D6F6465 		.ascii	"modem_get_profile\000"
 4125      6D5F6765 
 4125      745F7072 
 4125      6F66696C 
 4125      6500
 4126              	.LASF49:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccxZBka9.s 			page 95


 4127 0485 6D6F6465 		.ascii	"modem_set_error_reports\000"
 4127      6D5F7365 
 4127      745F6572 
 4127      726F725F 
 4127      7265706F 
 4128              	.LASF76:
 4129 049d 66656564 		.ascii	"feed_id\000"
 4129      5F696400 
 4130              	.LASF68:
 4131 04a5 64617461 		.ascii	"data_packet\000"
 4131      5F706163 
 4131      6B657400 
 4132              	.LASF43:
 4133 04b1 6D6F6465 		.ascii	"modem_check_network\000"
 4133      6D5F6368 
 4133      65636B5F 
 4133      6E657477 
 4133      6F726B00 
 4134              	.LASF69:
 4135 04c5 6D6F6465 		.ascii	"modem_release_lock\000"
 4135      6D5F7265 
 4135      6C656173 
 4135      655F6C6F 
 4135      636B00
 4136              	.LASF53:
 4137 04d8 6D6F6465 		.ascii	"modem_set_user\000"
 4137      6D5F7365 
 4137      745F7573 
 4137      657200
 4138              	.LASF26:
 4139 04e7 75617274 		.ascii	"uart_timeout\000"
 4139      5F74696D 
 4139      656F7574 
 4139      00
 4140              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
