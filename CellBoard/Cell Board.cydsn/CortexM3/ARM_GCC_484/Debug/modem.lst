ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"modem.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	iter
  19              		.bss
  20              		.align	2
  21              		.type	iter, %object
  22              		.size	iter, 4
  23              	iter:
  24 0000 00000000 		.space	4
  25              		.comm	modem_state,1,1
  26              		.global	lock_acquired
  27              		.type	lock_acquired, %object
  28              		.size	lock_acquired, 1
  29              	lock_acquired:
  30 0004 00       		.space	1
  31              		.global	ready
  32              		.type	ready, %object
  33              		.size	ready, 1
  34              	ready:
  35 0005 00       		.space	1
  36              		.global	uart_string_index
  37              		.align	1
  38              		.type	uart_string_index, %object
  39              		.size	uart_string_index, 2
  40              	uart_string_index:
  41 0006 0000     		.space	2
  42              		.comm	feed_id,4,4
  43              		.global	uart_received_string
  44              		.align	2
  45              		.type	uart_received_string, %object
  46              		.size	uart_received_string, 1000
  47              	uart_received_string:
  48 0008 00000000 		.space	1000
  48      00000000 
  48      00000000 
  48      00000000 
  48      00000000 
  49              		.comm	api_key,4,4
  50              		.global	modem_apn
  51              		.section	.rodata
  52              		.align	2
  53              	.LC0:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 2


  54 0000 6570632E 		.ascii	"epc.tmobile.com\000"
  54      746D6F62 
  54      696C652E 
  54      636F6D00 
  55              		.data
  56              		.align	2
  57              		.type	modem_apn, %object
  58              		.size	modem_apn, 4
  59              	modem_apn:
  60 0000 00000000 		.word	.LC0
  61              		.section	.text.modem_set_api_feed,"ax",%progbits
  62              		.align	2
  63              		.global	modem_set_api_feed
  64              		.thumb
  65              		.thumb_func
  66              		.type	modem_set_api_feed, %function
  67              	modem_set_api_feed:
  68              	.LFB56:
  69              		.file 1 ".\\modem.c"
   1:.\modem.c     **** ///* ========================================
   2:.\modem.c     **** // *
   3:.\modem.c     **** // * Copyright YOUR COMPANY, THE YEAR
   4:.\modem.c     **** // * All Rights Reserved
   5:.\modem.c     **** // * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\modem.c     **** // *
   7:.\modem.c     **** // * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\modem.c     **** // * WHICH IS THE PROPERTY OF your company.
   9:.\modem.c     **** // *
  10:.\modem.c     **** // * ========================================
  11:.\modem.c     **** //*/
  12:.\modem.c     **** //
  13:.\modem.c     **** 
  14:.\modem.c     **** #include <device.h>
  15:.\modem.c     **** #include <stdio.h>
  16:.\modem.c     **** #include <string.h>
  17:.\modem.c     **** #include "modem.h"
  18:.\modem.c     **** #include "packet.h"
  19:.\modem.c     **** //#include "debug.h" TODO: ACCOUNT FOR THIS
  20:.\modem.c     **** 
  21:.\modem.c     **** // declare varaiables
  22:.\modem.c     **** int	   iter = 0;
  23:.\modem.c     **** uint8  modem_state, lock_acquired = 0u, ready = 0u;
  24:.\modem.c     **** uint16 uart_string_index = 0u;
  25:.\modem.c     **** uint32 feed_id;
  26:.\modem.c     **** char   uart_received_string[1000] = {0}, *api_key;
  27:.\modem.c     **** char*  modem_apn = "epc.tmobile.com";
  28:.\modem.c     **** 
  29:.\modem.c     **** 
  30:.\modem.c     **** 
  31:.\modem.c     **** // prototype modem interrupt
  32:.\modem.c     **** CY_ISR_PROTO(Telit_isr_rx);
  33:.\modem.c     **** void uart_string_reset();
  34:.\modem.c     **** 
  35:.\modem.c     **** uint8 modem_set_api_feed(uint32 id, char* key){
  70              		.loc 1 35 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 3


  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75 0000 80B4     		push	{r7}
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
  36:.\modem.c     ****     feed_id = id;
  84              		.loc 1 36 0
  85 000a 064B     		ldr	r3, .L3
  86 000c 7A68     		ldr	r2, [r7, #4]
  87 000e 1A60     		str	r2, [r3]
  37:.\modem.c     ****     api_key = key;
  88              		.loc 1 37 0
  89 0010 054B     		ldr	r3, .L3+4
  90 0012 3A68     		ldr	r2, [r7]
  91 0014 1A60     		str	r2, [r3]
  38:.\modem.c     ****     return 1u;
  92              		.loc 1 38 0
  93 0016 0123     		movs	r3, #1
  39:.\modem.c     **** }
  94              		.loc 1 39 0
  95 0018 1846     		mov	r0, r3
  96 001a 0C37     		adds	r7, r7, #12
  97 001c BD46     		mov	sp, r7
  98              		@ sp needed
  99 001e 5DF8047B 		ldr	r7, [sp], #4
 100 0022 7047     		bx	lr
 101              	.L4:
 102              		.align	2
 103              	.L3:
 104 0024 00000000 		.word	feed_id
 105 0028 00000000 		.word	api_key
 106              		.cfi_endproc
 107              	.LFE56:
 108              		.size	modem_set_api_feed, .-modem_set_api_feed
 109              		.section	.text.modem_startup,"ax",%progbits
 110              		.align	2
 111              		.global	modem_startup
 112              		.thumb
 113              		.thumb_func
 114              		.type	modem_startup, %function
 115              	modem_startup:
 116              	.LFB57:
  40:.\modem.c     **** 
  41:.\modem.c     **** // startup sequence to power on the modem, start modem
  42:.\modem.c     **** // components and prepare for sending/receiving messages
  43:.\modem.c     **** // over the network
  44:.\modem.c     **** uint8	modem_startup() {
 117              		.loc 1 44 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 4


 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
  45:.\modem.c     **** 	iter = 0, ready = 0u;
 127              		.loc 1 45 0
 128 0004 1A4B     		ldr	r3, .L10
 129 0006 0022     		movs	r2, #0
 130 0008 1A60     		str	r2, [r3]
 131 000a 1A4B     		ldr	r3, .L10+4
 132 000c 0022     		movs	r2, #0
 133 000e 1A70     		strb	r2, [r3]
  46:.\modem.c     **** 
  47:.\modem.c     **** 	modem_start();
 134              		.loc 1 47 0
 135 0010 FFF7FEFF 		bl	modem_start
  48:.\modem.c     **** 	
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 136              		.loc 1 49 0
 137 0014 24E0     		b	.L6
 138              	.L9:
  50:.\modem.c     **** 		iter++;
 139              		.loc 1 50 0
 140 0016 164B     		ldr	r3, .L10
 141 0018 1B68     		ldr	r3, [r3]
 142 001a 5A1C     		adds	r2, r3, #1
 143 001c 144B     		ldr	r3, .L10
 144 001e 1A60     		str	r2, [r3]
  51:.\modem.c     **** 
  52:.\modem.c     **** 		/* Set up the modem */
  53:.\modem.c     **** 		//LED_Write(!LED_Read());
  54:.\modem.c     **** 		ready = modem_power_on();
 145              		.loc 1 54 0
 146 0020 FFF7FEFF 		bl	modem_power_on
 147 0024 0346     		mov	r3, r0
 148 0026 1A46     		mov	r2, r3
 149 0028 124B     		ldr	r3, .L10+4
 150 002a 1A70     		strb	r2, [r3]
  55:.\modem.c     **** 		//LED_Write(!LED_Read());
  56:.\modem.c     **** 		//ready = at_write_command("AT\r","OK",1000u);      
  57:.\modem.c     **** 		modem_set_flow_control(0u);	
 151              		.loc 1 57 0
 152 002c 0020     		movs	r0, #0
 153 002e FFF7FEFF 		bl	modem_set_flow_control
  58:.\modem.c     **** 		modem_setup();
 154              		.loc 1 58 0
 155 0032 FFF7FEFF 		bl	modem_setup
  59:.\modem.c     **** 		
  60:.\modem.c     **** 		if ( ready == 1u ) {
 156              		.loc 1 60 0
 157 0036 0F4B     		ldr	r3, .L10+4
 158 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 003a 012B     		cmp	r3, #1
 160 003c 0ED1     		bne	.L7
  61:.\modem.c     **** 			// Connect modem to network
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 5


  62:.\modem.c     **** 			// (modem_connect already accounts for retries)
  63:.\modem.c     **** 			//LED_Write(!LED_Read());
  64:.\modem.c     **** 			ready = modem_connect();
 161              		.loc 1 64 0
 162 003e FFF7FEFF 		bl	modem_connect
 163 0042 0346     		mov	r3, r0
 164 0044 1A46     		mov	r2, r3
 165 0046 0B4B     		ldr	r3, .L10+4
 166 0048 1A70     		strb	r2, [r3]
  65:.\modem.c     **** 			
  66:.\modem.c     **** 			if( ready == 3u ) {
 167              		.loc 1 66 0
 168 004a 0A4B     		ldr	r3, .L10+4
 169 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 004e 032B     		cmp	r3, #3
 171 0050 06D1     		bne	.L6
  67:.\modem.c     **** 								
  68:.\modem.c     **** 				iter = MAX_CONN_ATTEMPTS;//break;	
 172              		.loc 1 68 0
 173 0052 074B     		ldr	r3, .L10
 174 0054 0522     		movs	r2, #5
 175 0056 1A60     		str	r2, [r3]
  69:.\modem.c     **** 				return 1u;
 176              		.loc 1 69 0
 177 0058 0123     		movs	r3, #1
 178 005a 06E0     		b	.L8
 179              	.L7:
  70:.\modem.c     **** 			}
  71:.\modem.c     **** 		}
  72:.\modem.c     **** 		else {
  73:.\modem.c     **** 			modem_reset();
 180              		.loc 1 73 0
 181 005c FFF7FEFF 		bl	modem_reset
 182              	.L6:
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 183              		.loc 1 49 0 discriminator 1
 184 0060 034B     		ldr	r3, .L10
 185 0062 1B68     		ldr	r3, [r3]
 186 0064 042B     		cmp	r3, #4
 187 0066 D6DD     		ble	.L9
  74:.\modem.c     **** 		}
  75:.\modem.c     **** 	}
  76:.\modem.c     **** 	
  77:.\modem.c     **** 	// Timed out -- Failed to connect
  78:.\modem.c     **** 	return 0u;
 188              		.loc 1 78 0
 189 0068 0023     		movs	r3, #0
 190              	.L8:
  79:.\modem.c     **** }
 191              		.loc 1 79 0
 192 006a 1846     		mov	r0, r3
 193 006c 80BD     		pop	{r7, pc}
 194              	.L11:
 195 006e 00BF     		.align	2
 196              	.L10:
 197 0070 00000000 		.word	iter
 198 0074 00000000 		.word	ready
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 6


 199              		.cfi_endproc
 200              	.LFE57:
 201              		.size	modem_startup, .-modem_startup
 202              		.section	.text.modem_shutdown,"ax",%progbits
 203              		.align	2
 204              		.global	modem_shutdown
 205              		.thumb
 206              		.thumb_func
 207              		.type	modem_shutdown, %function
 208              	modem_shutdown:
 209              	.LFB58:
  80:.\modem.c     **** 
  81:.\modem.c     **** // shutdown sequence to stop modem components
  82:.\modem.c     **** // and power down the modem
  83:.\modem.c     **** uint8 	modem_shutdown() {
 210              		.loc 1 83 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
  84:.\modem.c     **** 	if (modem_power_off()){
 220              		.loc 1 84 0
 221 0004 FFF7FEFF 		bl	modem_power_off
 222 0008 0346     		mov	r3, r0
 223 000a 002B     		cmp	r3, #0
 224 000c 01D0     		beq	.L13
  85:.\modem.c     **** 		return 1u;	
 225              		.loc 1 85 0
 226 000e 0123     		movs	r3, #1
 227 0010 00E0     		b	.L14
 228              	.L13:
  86:.\modem.c     **** 	}
  87:.\modem.c     **** 	
  88:.\modem.c     **** 	return 0u;
 229              		.loc 1 88 0
 230 0012 0023     		movs	r3, #0
 231              	.L14:
  89:.\modem.c     **** }
 232              		.loc 1 89 0
 233 0014 1846     		mov	r0, r3
 234 0016 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE58:
 237              		.size	modem_shutdown, .-modem_shutdown
 238              		.section	.text.modem_start,"ax",%progbits
 239              		.align	2
 240              		.global	modem_start
 241              		.thumb
 242              		.thumb_func
 243              		.type	modem_start, %function
 244              	modem_start:
 245              	.LFB59:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 7


  90:.\modem.c     **** 
  91:.\modem.c     **** // initialize modem
  92:.\modem.c     **** void modem_start(){
 246              		.loc 1 92 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  93:.\modem.c     ****     Telit_UART_Start();
 256              		.loc 1 93 0
 257 0004 FFF7FEFF 		bl	Telit_UART_Start
  94:.\modem.c     ****     Telit_ControlReg_Write(0u);
 258              		.loc 1 94 0
 259 0008 0020     		movs	r0, #0
 260 000a FFF7FEFF 		bl	Telit_ControlReg_Write
  95:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
  96:.\modem.c     **** 	Telit_ON_Write(1u);			// Prep modem for "push button"
 261              		.loc 1 96 0
 262 000e 0120     		movs	r0, #1
 263 0010 FFF7FEFF 		bl	Telit_ON_Write
  97:.\modem.c     **** 	Telit_RST_Write(1u);		// Prep modem for "push button"
 264              		.loc 1 97 0
 265 0014 0120     		movs	r0, #1
 266 0016 FFF7FEFF 		bl	Telit_RST_Write
  98:.\modem.c     ****     Telit_isr_rx_StartEx(Telit_isr_rx);
 267              		.loc 1 98 0
 268 001a 0348     		ldr	r0, .L16
 269 001c FFF7FEFF 		bl	Telit_isr_rx_StartEx
  99:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 270              		.loc 1 99 0
 271 0020 024B     		ldr	r3, .L16+4
 272 0022 0022     		movs	r2, #0
 273 0024 1A70     		strb	r2, [r3]
 100:.\modem.c     **** }
 274              		.loc 1 100 0
 275 0026 80BD     		pop	{r7, pc}
 276              	.L17:
 277              		.align	2
 278              	.L16:
 279 0028 00000000 		.word	Telit_isr_rx
 280 002c 00000000 		.word	modem_state
 281              		.cfi_endproc
 282              	.LFE59:
 283              		.size	modem_start, .-modem_start
 284              		.section	.text.modem_stop,"ax",%progbits
 285              		.align	2
 286              		.global	modem_stop
 287              		.thumb
 288              		.thumb_func
 289              		.type	modem_stop, %function
 290              	modem_stop:
 291              	.LFB60:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 8


 101:.\modem.c     **** 
 102:.\modem.c     **** // deinitialize modem
 103:.\modem.c     **** void modem_stop(){
 292              		.loc 1 103 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 104:.\modem.c     ****     Telit_UART_Stop();
 302              		.loc 1 104 0
 303 0004 FFF7FEFF 		bl	Telit_UART_Stop
 105:.\modem.c     ****     Telit_ControlReg_Write(0u);
 304              		.loc 1 105 0
 305 0008 0020     		movs	r0, #0
 306 000a FFF7FEFF 		bl	Telit_ControlReg_Write
 106:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
 107:.\modem.c     **** 	Telit_ON_Write(0u);			// Save energy by pulling down "push button"
 307              		.loc 1 107 0
 308 000e 0020     		movs	r0, #0
 309 0010 FFF7FEFF 		bl	Telit_ON_Write
 108:.\modem.c     **** 	Telit_RST_Write(0u);		// Save energy by pulling down "push button"
 310              		.loc 1 108 0
 311 0014 0020     		movs	r0, #0
 312 0016 FFF7FEFF 		bl	Telit_RST_Write
 109:.\modem.c     ****     Telit_isr_rx_Stop();
 313              		.loc 1 109 0
 314 001a FFF7FEFF 		bl	Telit_isr_rx_Stop
 110:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 315              		.loc 1 110 0
 316 001e 024B     		ldr	r3, .L19
 317 0020 0022     		movs	r2, #0
 318 0022 1A70     		strb	r2, [r3]
 111:.\modem.c     **** }
 319              		.loc 1 111 0
 320 0024 80BD     		pop	{r7, pc}
 321              	.L20:
 322 0026 00BF     		.align	2
 323              	.L19:
 324 0028 00000000 		.word	modem_state
 325              		.cfi_endproc
 326              	.LFE60:
 327              		.size	modem_stop, .-modem_stop
 328              		.section	.text.at_write_command,"ax",%progbits
 329              		.align	2
 330              		.global	at_write_command
 331              		.thumb
 332              		.thumb_func
 333              		.type	at_write_command, %function
 334              	at_write_command:
 335              	.LFB61:
 112:.\modem.c     **** 
 113:.\modem.c     **** // send at-command to modem
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 9


 114:.\modem.c     **** uint8 at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout){
 336              		.loc 1 114 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 40
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 8AB0     		sub	sp, sp, #40
 345              		.cfi_def_cfa_offset 48
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 F860     		str	r0, [r7, #12]
 349 0008 B960     		str	r1, [r7, #8]
 350 000a 7A60     		str	r2, [r7, #4]
 115:.\modem.c     ****     uint8 response = 0u;
 351              		.loc 1 115 0
 352 000c 0023     		movs	r3, #0
 353 000e 87F82730 		strb	r3, [r7, #39]
 116:.\modem.c     ****     uint32 i = 0u, delay = 100u, interval = uart_timeout/delay;
 354              		.loc 1 116 0
 355 0012 0023     		movs	r3, #0
 356 0014 3B62     		str	r3, [r7, #32]
 357 0016 6423     		movs	r3, #100
 358 0018 FB61     		str	r3, [r7, #28]
 359 001a 7A68     		ldr	r2, [r7, #4]
 360 001c FB69     		ldr	r3, [r7, #28]
 361 001e B2FBF3F3 		udiv	r3, r2, r3
 362 0022 BB61     		str	r3, [r7, #24]
 117:.\modem.c     ****     
 118:.\modem.c     ****     uart_string_reset();
 363              		.loc 1 118 0
 364 0024 FFF7FEFF 		bl	uart_string_reset
 119:.\modem.c     ****     Telit_UART_PutString(uart_string);//Telit_UART_PutString("AT\r");
 365              		.loc 1 119 0
 366 0028 F868     		ldr	r0, [r7, #12]
 367 002a FFF7FEFF 		bl	Telit_UART_PutString
 120:.\modem.c     ****     
 121:.\modem.c     ****     if( strcmp(expected_response, "") != 0){
 368              		.loc 1 121 0
 369 002e BB68     		ldr	r3, [r7, #8]
 370 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371 0032 002B     		cmp	r3, #0
 372 0034 18D0     		beq	.L22
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 373              		.loc 1 122 0
 374 0036 0023     		movs	r3, #0
 375 0038 3B62     		str	r3, [r7, #32]
 376 003a 11E0     		b	.L23
 377              	.L25:
 378              	.LBB2:
 123:.\modem.c     ****             char* valid = strstr(uart_received_string, expected_response);
 379              		.loc 1 123 0
 380 003c 0D48     		ldr	r0, .L27
 381 003e B968     		ldr	r1, [r7, #8]
 382 0040 FFF7FEFF 		bl	strstr
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 10


 383 0044 7861     		str	r0, [r7, #20]
 124:.\modem.c     ****             if(valid != NULL){
 384              		.loc 1 124 0
 385 0046 7B69     		ldr	r3, [r7, #20]
 386 0048 002B     		cmp	r3, #0
 387 004a 03D0     		beq	.L24
 125:.\modem.c     ****                 response = 1u;
 388              		.loc 1 125 0
 389 004c 0123     		movs	r3, #1
 390 004e 87F82730 		strb	r3, [r7, #39]
 126:.\modem.c     ****                 break;
 391              		.loc 1 126 0
 392 0052 09E0     		b	.L22
 393              	.L24:
 127:.\modem.c     ****             }
 128:.\modem.c     ****             CyDelay(delay);
 394              		.loc 1 128 0
 395 0054 F869     		ldr	r0, [r7, #28]
 396 0056 FFF7FEFF 		bl	CyDelay
 397              	.LBE2:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 398              		.loc 1 122 0
 399 005a 3B6A     		ldr	r3, [r7, #32]
 400 005c 0133     		adds	r3, r3, #1
 401 005e 3B62     		str	r3, [r7, #32]
 402              	.L23:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 403              		.loc 1 122 0 is_stmt 0 discriminator 1
 404 0060 3A6A     		ldr	r2, [r7, #32]
 405 0062 BB69     		ldr	r3, [r7, #24]
 406 0064 9A42     		cmp	r2, r3
 407 0066 E9D3     		bcc	.L25
 408              	.L22:
 129:.\modem.c     ****         }
 130:.\modem.c     ****     }
 131:.\modem.c     ****     
 132:.\modem.c     ****     return response;
 409              		.loc 1 132 0 is_stmt 1
 410 0068 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 133:.\modem.c     **** }
 411              		.loc 1 133 0
 412 006c 1846     		mov	r0, r3
 413 006e 2837     		adds	r7, r7, #40
 414 0070 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0072 80BD     		pop	{r7, pc}
 417              	.L28:
 418              		.align	2
 419              	.L27:
 420 0074 00000000 		.word	uart_received_string
 421              		.cfi_endproc
 422              	.LFE61:
 423              		.size	at_write_command, .-at_write_command
 424              		.section	.rodata
 425              		.align	2
 426              	.LC1:
 427 0010 41540D00 		.ascii	"AT\015\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 11


 428              		.align	2
 429              	.LC2:
 430 0014 4F4B00   		.ascii	"OK\000"
 431              		.section	.text.modem_power_on,"ax",%progbits
 432              		.align	2
 433              		.global	modem_power_on
 434              		.thumb
 435              		.thumb_func
 436              		.type	modem_power_on, %function
 437              	modem_power_on:
 438              	.LFB62:
 134:.\modem.c     **** 
 135:.\modem.c     **** uint8 modem_power_on(){
 439              		.loc 1 135 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 136:.\modem.c     **** 
 137:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) {
 449              		.loc 1 137 0
 450 0004 174B     		ldr	r3, .L33
 451 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0008 002B     		cmp	r3, #0
 453 000a 01D0     		beq	.L30
 138:.\modem.c     ****         // Modem is already on
 139:.\modem.c     ****         return 1u;
 454              		.loc 1 139 0
 455 000c 0123     		movs	r3, #1
 456 000e 26E0     		b	.L31
 457              	.L30:
 140:.\modem.c     ****     }
 141:.\modem.c     ****     
 142:.\modem.c     ****     // Set ON, PWR pins low
 143:.\modem.c     ****     Telit_ON_Write(0u); 
 458              		.loc 1 143 0
 459 0010 0020     		movs	r0, #0
 460 0012 FFF7FEFF 		bl	Telit_ON_Write
 144:.\modem.c     ****     Telit_RST_Write(0u);
 461              		.loc 1 144 0
 462 0016 0020     		movs	r0, #0
 463 0018 FFF7FEFF 		bl	Telit_RST_Write
 145:.\modem.c     ****     
 146:.\modem.c     ****     // Provide power to Telit module
 147:.\modem.c     ****     //Telit_PWR_Write(0u); //provide power to modem
 148:.\modem.c     ****     Telit_ControlReg_Write(1u);
 464              		.loc 1 148 0
 465 001c 0120     		movs	r0, #1
 466 001e FFF7FEFF 		bl	Telit_ControlReg_Write
 149:.\modem.c     ****     
 150:.\modem.c     ****     // "Push" the ON button for 2 seconds
 151:.\modem.c     ****     Telit_ON_Write(1u); 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 12


 467              		.loc 1 151 0
 468 0022 0120     		movs	r0, #1
 469 0024 FFF7FEFF 		bl	Telit_ON_Write
 152:.\modem.c     ****     CyDelay(2000u);     // the pad ON# must be tied low for at least 1 second and then released.
 470              		.loc 1 152 0
 471 0028 4FF4FA60 		mov	r0, #2000
 472 002c FFF7FEFF 		bl	CyDelay
 153:.\modem.c     ****     //CyDelay(1500u);     // At least 3 seconds if VBAT < 3.4 for GC 864
 154:.\modem.c     ****     Telit_ON_Write(0u); 
 473              		.loc 1 154 0
 474 0030 0020     		movs	r0, #0
 475 0032 FFF7FEFF 		bl	Telit_ON_Write
 155:.\modem.c     ****     
 156:.\modem.c     ****     CyDelay(5000u);  
 476              		.loc 1 156 0
 477 0036 41F28830 		movw	r0, #5000
 478 003a FFF7FEFF 		bl	CyDelay
 157:.\modem.c     ****     /* NOTE:
 158:.\modem.c     ****         "To get the desirable stability, 
 159:.\modem.c     ****         CC864-DUAL needs at least 10 seconds 
 160:.\modem.c     ****         after the PWRMON goes HIGH.*/
 161:.\modem.c     **** 	
 162:.\modem.c     **** 	if(at_write_command("AT\r","OK",1000u) == 1){    
 479              		.loc 1 162 0
 480 003e 0A48     		ldr	r0, .L33+4
 481 0040 0A49     		ldr	r1, .L33+8
 482 0042 4FF47A72 		mov	r2, #1000
 483 0046 FFF7FEFF 		bl	at_write_command
 484 004a 0346     		mov	r3, r0
 485 004c 012B     		cmp	r3, #1
 486 004e 05D1     		bne	.L32
 163:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 487              		.loc 1 163 0
 488 0050 044B     		ldr	r3, .L33
 489 0052 0122     		movs	r2, #1
 490 0054 1A70     		strb	r2, [r3]
 164:.\modem.c     ****         return modem_state;
 491              		.loc 1 164 0
 492 0056 034B     		ldr	r3, .L33
 493 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 005a 00E0     		b	.L31
 495              	.L32:
 165:.\modem.c     ****     }	
 166:.\modem.c     **** 	
 167:.\modem.c     **** 	// Failed to turn on
 168:.\modem.c     ****     return 0u;
 496              		.loc 1 168 0
 497 005c 0023     		movs	r3, #0
 498              	.L31:
 169:.\modem.c     **** }
 499              		.loc 1 169 0
 500 005e 1846     		mov	r0, r3
 501 0060 80BD     		pop	{r7, pc}
 502              	.L34:
 503 0062 00BF     		.align	2
 504              	.L33:
 505 0064 00000000 		.word	modem_state
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 13


 506 0068 10000000 		.word	.LC1
 507 006c 14000000 		.word	.LC2
 508              		.cfi_endproc
 509              	.LFE62:
 510              		.size	modem_power_on, .-modem_power_on
 511              		.section	.text.modem_power_off,"ax",%progbits
 512              		.align	2
 513              		.global	modem_power_off
 514              		.thumb
 515              		.thumb_func
 516              		.type	modem_power_off, %function
 517              	modem_power_off:
 518              	.LFB63:
 170:.\modem.c     **** 
 171:.\modem.c     **** uint8 modem_power_off(){
 519              		.loc 1 171 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 172:.\modem.c     **** 	
 173:.\modem.c     ****     if (modem_state == MODEM_STATE_OFF) {
 529              		.loc 1 173 0
 530 0004 104B     		ldr	r3, .L38
 531 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0008 002B     		cmp	r3, #0
 533 000a 01D1     		bne	.L36
 174:.\modem.c     ****         // Modem is already off
 175:.\modem.c     ****         return 1u;
 534              		.loc 1 175 0
 535 000c 0123     		movs	r3, #1
 536 000e 19E0     		b	.L37
 537              	.L36:
 176:.\modem.c     ****     }
 177:.\modem.c     **** 	
 178:.\modem.c     ****     // Try to disconnect the modem.  
 179:.\modem.c     ****     // Continue whether or not disconnect is successful
 180:.\modem.c     ****     modem_disconnect();
 538              		.loc 1 180 0
 539 0010 FFF7FEFF 		bl	modem_disconnect
 181:.\modem.c     ****     
 182:.\modem.c     ****     // "Push" the ON button for 
 183:.\modem.c     ****     Telit_ON_Write(1u);
 540              		.loc 1 183 0
 541 0014 0120     		movs	r0, #1
 542 0016 FFF7FEFF 		bl	Telit_ON_Write
 184:.\modem.c     ****     CyDelay(2500u);  // To turn the CC864-DUAL off, the ON/OFF Pin must be tied low for 2 second an
 543              		.loc 1 184 0
 544 001a 40F6C410 		movw	r0, #2500
 545 001e FFF7FEFF 		bl	CyDelay
 185:.\modem.c     ****     Telit_ON_Write(0u);
 546              		.loc 1 185 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 14


 547 0022 0020     		movs	r0, #0
 548 0024 FFF7FEFF 		bl	Telit_ON_Write
 186:.\modem.c     ****     
 187:.\modem.c     ****     CyDelay(5000u); 
 549              		.loc 1 187 0
 550 0028 41F28830 		movw	r0, #5000
 551 002c FFF7FEFF 		bl	CyDelay
 188:.\modem.c     ****     /* CyDelay(5000u); // wait for module to turn off
 189:.\modem.c     ****         "Normally it will be above 10 seconds later from releasing
 190:.\modem.c     ****         ON/OFF# and DTE should monitor the status of PWRMON to see the
 191:.\modem.c     ****         actual power off."  */
 192:.\modem.c     ****     
 193:.\modem.c     ****     // Book keeping
 194:.\modem.c     ****     Telit_ControlReg_Write(0u);    
 552              		.loc 1 194 0
 553 0030 0020     		movs	r0, #0
 554 0032 FFF7FEFF 		bl	Telit_ControlReg_Write
 195:.\modem.c     ****     //Telit_PWR_Write(1u); // Cut power to modem; 1u Disables power to the modem
 196:.\modem.c     ****     Telit_RST_Write(0u); // Make sure the RESET "button" is not pressed
 555              		.loc 1 196 0
 556 0036 0020     		movs	r0, #0
 557 0038 FFF7FEFF 		bl	Telit_RST_Write
 197:.\modem.c     ****     
 198:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 558              		.loc 1 198 0
 559 003c 024B     		ldr	r3, .L38
 560 003e 0022     		movs	r2, #0
 561 0040 1A70     		strb	r2, [r3]
 199:.\modem.c     ****     return 1u;
 562              		.loc 1 199 0
 563 0042 0123     		movs	r3, #1
 564              	.L37:
 200:.\modem.c     **** }
 565              		.loc 1 200 0
 566 0044 1846     		mov	r0, r3
 567 0046 80BD     		pop	{r7, pc}
 568              	.L39:
 569              		.align	2
 570              	.L38:
 571 0048 00000000 		.word	modem_state
 572              		.cfi_endproc
 573              	.LFE63:
 574              		.size	modem_power_off, .-modem_power_off
 575              		.section	.text.modem_reset,"ax",%progbits
 576              		.align	2
 577              		.global	modem_reset
 578              		.thumb
 579              		.thumb_func
 580              		.type	modem_reset, %function
 581              	modem_reset:
 582              	.LFB64:
 201:.\modem.c     **** 
 202:.\modem.c     **** uint8 modem_reset(){
 583              		.loc 1 202 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 15


 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 203:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) { // The modem is idle/ready (powered on)
 593              		.loc 1 203 0
 594 0004 0C4B     		ldr	r3, .L43
 595 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596 0008 002B     		cmp	r3, #0
 597 000a 10D0     		beq	.L41
 204:.\modem.c     ****         
 205:.\modem.c     ****         Telit_RST_Write(1u);
 598              		.loc 1 205 0
 599 000c 0120     		movs	r0, #1
 600 000e FFF7FEFF 		bl	Telit_RST_Write
 206:.\modem.c     ****         CyDelay(500u);  //   To reset and to reboot the module, 
 601              		.loc 1 206 0
 602 0012 4FF4FA70 		mov	r0, #500
 603 0016 FFF7FEFF 		bl	CyDelay
 207:.\modem.c     ****                         // the RESET pin must be tied low for at least 200 milliseconds and then re
 208:.\modem.c     ****         Telit_RST_Write(0u);
 604              		.loc 1 208 0
 605 001a 0020     		movs	r0, #0
 606 001c FFF7FEFF 		bl	Telit_RST_Write
 209:.\modem.c     ****         
 210:.\modem.c     ****         CyDelay(5000u); //CyDelay(5000u);
 607              		.loc 1 210 0
 608 0020 41F28830 		movw	r0, #5000
 609 0024 FFF7FEFF 		bl	CyDelay
 211:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 610              		.loc 1 211 0
 611 0028 034B     		ldr	r3, .L43
 612 002a 0122     		movs	r2, #1
 613 002c 1A70     		strb	r2, [r3]
 614              	.L41:
 212:.\modem.c     ****     }
 213:.\modem.c     ****     return modem_state;
 615              		.loc 1 213 0
 616 002e 024B     		ldr	r3, .L43
 617 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214:.\modem.c     **** }
 618              		.loc 1 214 0
 619 0032 1846     		mov	r0, r3
 620 0034 80BD     		pop	{r7, pc}
 621              	.L44:
 622 0036 00BF     		.align	2
 623              	.L43:
 624 0038 00000000 		.word	modem_state
 625              		.cfi_endproc
 626              	.LFE64:
 627              		.size	modem_reset, .-modem_reset
 628              		.section	.text.modem_setup,"ax",%progbits
 629              		.align	2
 630              		.global	modem_setup
 631              		.thumb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 16


 632              		.thumb_func
 633              		.type	modem_setup, %function
 634              	modem_setup:
 635              	.LFB65:
 215:.\modem.c     **** 
 216:.\modem.c     **** uint8 modem_setup() {
 636              		.loc 1 216 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 217:.\modem.c     **** /* Initialize configurations for the modem */
 218:.\modem.c     **** 	// Set Error Reports to verbose mode
 219:.\modem.c     **** 	if (modem_set_error_reports(2u) != 1u) {
 646              		.loc 1 219 0
 647 0004 0220     		movs	r0, #2
 648 0006 FFF7FEFF 		bl	modem_set_error_reports
 649 000a 0346     		mov	r3, r0
 650 000c 012B     		cmp	r3, #1
 651 000e 01D0     		beq	.L46
 220:.\modem.c     **** 		return 0u;
 652              		.loc 1 220 0
 653 0010 0023     		movs	r3, #0
 654 0012 00E0     		b	.L47
 655              	.L46:
 221:.\modem.c     **** 	}
 222:.\modem.c     **** 	
 223:.\modem.c     **** 	/* UNCOMMENT when using GC864 instead of CC864
 224:.\modem.c     **** 	// Set the APN for GC864-Dual-V2
 225:.\modem.c     **** 	if (modem_set_apn() != 1u) {
 226:.\modem.c     **** 		return 0u;
 227:.\modem.c     **** 	}
 228:.\modem.c     **** 		
 229:.\modem.c     **** 	// Select the band for GC864-Dual-V2
 230:.\modem.c     **** 	if (modem_set_band(1u) != 1u) {
 231:.\modem.c     **** 		return 0u;
 232:.\modem.c     **** 	}
 233:.\modem.c     **** 	*/
 234:.\modem.c     **** 	
 235:.\modem.c     **** 	return 1u;
 656              		.loc 1 235 0
 657 0014 0123     		movs	r3, #1
 658              	.L47:
 236:.\modem.c     **** }
 659              		.loc 1 236 0
 660 0016 1846     		mov	r0, r3
 661 0018 80BD     		pop	{r7, pc}
 662              		.cfi_endproc
 663              	.LFE65:
 664              		.size	modem_setup, .-modem_setup
 665 001a 00BF     		.section	.rodata
 666 0017 00       		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 17


 667              	.LC3:
 668 0018 41542353 		.ascii	"AT#SGACT=1,1\015\000"
 668      47414354 
 668      3D312C31 
 668      0D00
 669              		.section	.text.modem_connect,"ax",%progbits
 670              		.align	2
 671              		.global	modem_connect
 672              		.thumb
 673              		.thumb_func
 674              		.type	modem_connect, %function
 675              	modem_connect:
 676              	.LFB66:
 237:.\modem.c     **** 
 238:.\modem.c     **** uint8 modem_connect(){
 677              		.loc 1 238 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 239:.\modem.c     **** /* Establish modem connection with the network */	
 240:.\modem.c     **** 	uint8 count = 0u, network_status = 0u;
 689              		.loc 1 240 0
 690 0006 0023     		movs	r3, #0
 691 0008 FB71     		strb	r3, [r7, #7]
 692 000a 0023     		movs	r3, #0
 693 000c BB71     		strb	r3, [r7, #6]
 241:.\modem.c     **** 	
 242:.\modem.c     **** 	// Check if modem is registered on home network
 243:.\modem.c     **** 	// Buffer should return +CREG: 0,1
 244:.\modem.c     **** 	// modem_check_network returns 1u if buffer contains ",1"
 245:.\modem.c     **** 	network_status = modem_check_network();
 694              		.loc 1 245 0
 695 000e FFF7FEFF 		bl	modem_check_network
 696 0012 0346     		mov	r3, r0
 697 0014 BB71     		strb	r3, [r7, #6]
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 698              		.loc 1 246 0
 699 0016 0AE0     		b	.L49
 700              	.L51:
 247:.\modem.c     **** 
 248:.\modem.c     **** 		network_status = modem_check_network();
 701              		.loc 1 248 0
 702 0018 FFF7FEFF 		bl	modem_check_network
 703 001c 0346     		mov	r3, r0
 704 001e BB71     		strb	r3, [r7, #6]
 249:.\modem.c     **** 		CyDelay(3000u);
 705              		.loc 1 249 0
 706 0020 40F6B830 		movw	r0, #3000
 707 0024 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 18


 250:.\modem.c     **** 		count++;
 708              		.loc 1 250 0
 709 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 710 002a 0133     		adds	r3, r3, #1
 711 002c FB71     		strb	r3, [r7, #7]
 712              	.L49:
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 713              		.loc 1 246 0 discriminator 1
 714 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 715 0030 002B     		cmp	r3, #0
 716 0032 02D1     		bne	.L50
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 717              		.loc 1 246 0 is_stmt 0 discriminator 2
 718 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 0036 042B     		cmp	r3, #4
 720 0038 EED9     		bls	.L51
 721              	.L50:
 251:.\modem.c     **** 	}
 252:.\modem.c     **** 	
 253:.\modem.c     **** 	if (network_status == 1u) {		
 722              		.loc 1 253 0 is_stmt 1
 723 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 724 003c 012B     		cmp	r3, #1
 725 003e 0ED1     		bne	.L52
 254:.\modem.c     **** 		// Try to activate network context
 255:.\modem.c     **** 		// #SGACT1,<0,1> is for multisocket
 256:.\modem.c     **** 		// For now, use #GPRS, which is from Enhanced Easy IP commands
 257:.\modem.c     **** 	    if(at_write_command("AT#SGACT=1,1\r","OK",5000u) == 1){    
 726              		.loc 1 257 0
 727 0040 0A48     		ldr	r0, .L54
 728 0042 0B49     		ldr	r1, .L54+4
 729 0044 41F28832 		movw	r2, #5000
 730 0048 FFF7FEFF 		bl	at_write_command
 731 004c 0346     		mov	r3, r0
 732 004e 012B     		cmp	r3, #1
 733 0050 05D1     		bne	.L52
 258:.\modem.c     **** 		//if(at_write_command("AT#GPRS=1\r","OK",5000u) == 1){    // Used for GSM (ATT, TMobile)
 259:.\modem.c     **** 	        modem_state = MODEM_STATE_READY;
 734              		.loc 1 259 0
 735 0052 084B     		ldr	r3, .L54+8
 736 0054 0322     		movs	r2, #3
 737 0056 1A70     		strb	r2, [r3]
 260:.\modem.c     **** 	        return modem_state;
 738              		.loc 1 260 0
 739 0058 064B     		ldr	r3, .L54+8
 740 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 005c 01E0     		b	.L53
 742              	.L52:
 261:.\modem.c     **** 	    }		
 262:.\modem.c     **** 	}
 263:.\modem.c     **** 	
 264:.\modem.c     ****     /* Write to SD Card debugger
 265:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 266:.\modem.c     ****     */
 267:.\modem.c     **** 
 268:.\modem.c     ****     return modem_state;
 743              		.loc 1 268 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 19


 744 005e 054B     		ldr	r3, .L54+8
 745 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746              	.L53:
 269:.\modem.c     ****     
 270:.\modem.c     **** /*
 271:.\modem.c     ****     if(at_write_command("AT+CREG=1\r","OK",5000u)){
 272:.\modem.c     ****         if(at_write_command("AT+CREG?\r","OK",5000u)){
 273:.\modem.c     ****         //if(!at_write_command("AT#CGPADDR=1\r","\"",5000u)){
 274:.\modem.c     ****             if(at_write_command("AT#SGACT=1,1\r","OK",30000u)){
 275:.\modem.c     ****                 modem_state = MODEM_STATE_READY;
 276:.\modem.c     ****                 //return 1u; // connected to network
 277:.\modem.c     ****             }
 278:.\modem.c     ****             else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 279:.\modem.c     ****         }
 280:.\modem.c     ****        else debug_write("(AT#CGPADDR=1) No IP Address Exists.");   Returns IP address.. should be c
 281:.\modem.c     ****     }
 282:.\modem.c     ****     else debug_write("(AT+CREG=1) Could not register to network."); CREG reports registration statu
 283:.\modem.c     ****     
 284:.\modem.c     ****     return 0u;
 285:.\modem.c     **** */
 286:.\modem.c     **** /*
 287:.\modem.c     ****     at_write_command("AT+CSQ\r","OK",5000u); // get signal strength
 288:.\modem.c     ****     
 289:.\modem.c     ****     if (!at_write_command("AT+CREG=1\r","OK",5000u)) { // look for network
 290:.\modem.c     ****         debug_write("(AT+CREG=1) Could not register to network.");
 291:.\modem.c     ****     }
 292:.\modem.c     ****     
 293:.\modem.c     ****     at_write_command("AT#SCFG=1,1,0,0,1200,0\r","OK",5000u); // config parameter
 294:.\modem.c     ****     
 295:.\modem.c     ****     if (at_write_command("AT#CGPADDR=1\r","OK",5000u)) {// check if ip address exists
 296:.\modem.c     ****         debug_write("(AT#CGPADDR=1) No IP Address Exists.");    
 297:.\modem.c     ****     }
 298:.\modem.c     ****     
 299:.\modem.c     ****     at_write_command("AT#SGACT?","OK",30000u);
 300:.\modem.c     ****     
 301:.\modem.c     ****     uint8 success  = at_write_command("AT#SGACT=1,1\r","OK",30000u); // This command should return 
 302:.\modem.c     ****     //success = at_write_command("AT#SD=1,0,50000,\"141.212.136.222\",0,0,1\r","OK",5000u); // conn
 303:.\modem.c     ****     
 304:.\modem.c     ****     if (!success) {
 305:.\modem.c     ****         debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 306:.\modem.c     ****     }
 307:.\modem.c     ****     
 308:.\modem.c     ****     return success;
 309:.\modem.c     ****     */
 310:.\modem.c     ****     
 311:.\modem.c     **** }
 747              		.loc 1 311 0
 748 0062 1846     		mov	r0, r3
 749 0064 0837     		adds	r7, r7, #8
 750 0066 BD46     		mov	sp, r7
 751              		@ sp needed
 752 0068 80BD     		pop	{r7, pc}
 753              	.L55:
 754 006a 00BF     		.align	2
 755              	.L54:
 756 006c 18000000 		.word	.LC3
 757 0070 14000000 		.word	.LC2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 20


 758 0074 00000000 		.word	modem_state
 759              		.cfi_endproc
 760              	.LFE66:
 761              		.size	modem_connect, .-modem_connect
 762              		.section	.rodata
 763 0026 0000     		.align	2
 764              	.LC4:
 765 0028 41542353 		.ascii	"AT#SGACT=1,0\015\000"
 765      47414354 
 765      3D312C30 
 765      0D00
 766              		.section	.text.modem_disconnect,"ax",%progbits
 767              		.align	2
 768              		.global	modem_disconnect
 769              		.thumb
 770              		.thumb_func
 771              		.type	modem_disconnect, %function
 772              	modem_disconnect:
 773              	.LFB67:
 312:.\modem.c     **** 
 313:.\modem.c     **** uint8 modem_disconnect(){
 774              		.loc 1 313 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778 0000 80B5     		push	{r7, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 314:.\modem.c     **** /* Close modem connection to network */
 315:.\modem.c     **** 	
 316:.\modem.c     ****     // Proceed if modem is not connected to network.  Otherwise, try to disconnect from the network
 317:.\modem.c     ****     if(modem_state != MODEM_STATE_READY) {
 784              		.loc 1 317 0
 785 0004 094B     		ldr	r3, .L59
 786 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 0008 032B     		cmp	r3, #3
 788 000a 0CD0     		beq	.L57
 318:.\modem.c     ****         /* Can use this statement instead for GSM (ATT, TMobile)
 319:.\modem.c     **** 		return (at_write_command("AT#GPRS=0\r","OK",5000u) == 1u);
 320:.\modem.c     **** 		*/
 321:.\modem.c     **** 		return (at_write_command("AT#SGACT=1,0\r","OK",5000u) == 1u);
 789              		.loc 1 321 0
 790 000c 0848     		ldr	r0, .L59+4
 791 000e 0949     		ldr	r1, .L59+8
 792 0010 41F28832 		movw	r2, #5000
 793 0014 FFF7FEFF 		bl	at_write_command
 794 0018 0346     		mov	r3, r0
 795 001a 012B     		cmp	r3, #1
 796 001c 14BF     		ite	ne
 797 001e 0023     		movne	r3, #0
 798 0020 0123     		moveq	r3, #1
 799 0022 DBB2     		uxtb	r3, r3
 800 0024 00E0     		b	.L58
 801              	.L57:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 21


 322:.\modem.c     **** 			
 323:.\modem.c     **** 		/*
 324:.\modem.c     **** 		if(at_write_command("AT#SH=1","OK",10000u) == 1){
 325:.\modem.c     ****             if(at_write_command("AT#SGACT=1,0","OK",10000u) == 1){
 326:.\modem.c     ****                 modem_state = MODEM_STATE_IDLE;
 327:.\modem.c     ****                 return 1u;
 328:.\modem.c     ****             }
 329:.\modem.c     ****             // Write to SD Card debugger
 330:.\modem.c     ****             else {
 331:.\modem.c     ****                 debug_write("(AT#SGACT=1,0) Could not disconnect.");
 332:.\modem.c     ****             }
 333:.\modem.c     ****             
 334:.\modem.c     ****         }
 335:.\modem.c     ****         Write to SD Card debugger
 336:.\modem.c     ****         else {
 337:.\modem.c     ****             debug_write("(AT#SH=1) Could not close socket.");
 338:.\modem.c     ****         }
 339:.\modem.c     ****         */
 340:.\modem.c     ****     }
 341:.\modem.c     ****     /* Write to SD Card debugger
 342:.\modem.c     ****     else {
 343:.\modem.c     ****         if (modem_state == MODEM_STATE_OFF) {
 344:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_OFF" );
 345:.\modem.c     ****         }
 346:.\modem.c     ****         else if (modem_state == MODEM_STATE_IDLE) {
 347:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_IDLE" );
 348:.\modem.c     ****         }
 349:.\modem.c     ****     }
 350:.\modem.c     ****     */
 351:.\modem.c     ****     return 0u; // failed to disconnect
 802              		.loc 1 351 0
 803 0026 0023     		movs	r3, #0
 804              	.L58:
 352:.\modem.c     **** }
 805              		.loc 1 352 0
 806 0028 1846     		mov	r0, r3
 807 002a 80BD     		pop	{r7, pc}
 808              	.L60:
 809              		.align	2
 810              	.L59:
 811 002c 00000000 		.word	modem_state
 812 0030 28000000 		.word	.LC4
 813 0034 14000000 		.word	.LC2
 814              		.cfi_endproc
 815              	.LFE67:
 816              		.size	modem_disconnect, .-modem_disconnect
 817              		.section	.rodata
 818 0036 0000     		.align	2
 819              	.LC5:
 820 0038 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"%s\"\015\000"
 820      4744434F 
 820      4E543D31 
 820      2C224950 
 820      222C2225 
 821              		.section	.text.modem_set_apn,"ax",%progbits
 822              		.align	2
 823              		.global	modem_set_apn
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 22


 824              		.thumb
 825              		.thumb_func
 826              		.type	modem_set_apn, %function
 827              	modem_set_apn:
 828              	.LFB68:
 353:.\modem.c     **** 
 354:.\modem.c     **** uint8 modem_set_apn() {
 829              		.loc 1 354 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 104
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 9AB0     		sub	sp, sp, #104
 838              		.cfi_def_cfa_offset 112
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 355:.\modem.c     **** /* 
 356:.\modem.c     **** 	Set the access point that the modem connects to.
 357:.\modem.c     **** 	The APN is defined in "modem_apn" at the
 358:.\modem.c     **** 	top of this file 
 359:.\modem.c     **** */
 360:.\modem.c     ****     char cmd[100];
 361:.\modem.c     ****     sprintf(cmd,"AT+CGDCONT=1,\"IP\",\"%s\"\r",modem_apn);
 841              		.loc 1 361 0
 842 0006 0C4B     		ldr	r3, .L65
 843 0008 1B68     		ldr	r3, [r3]
 844 000a 3A1D     		adds	r2, r7, #4
 845 000c 1046     		mov	r0, r2
 846 000e 0B49     		ldr	r1, .L65+4
 847 0010 1A46     		mov	r2, r3
 848 0012 FFF7FEFF 		bl	sprintf
 362:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 849              		.loc 1 362 0
 850 0016 3B1D     		adds	r3, r7, #4
 851 0018 1846     		mov	r0, r3
 852 001a 0949     		ldr	r1, .L65+8
 853 001c 4FF4FA62 		mov	r2, #2000
 854 0020 FFF7FEFF 		bl	at_write_command
 855 0024 0346     		mov	r3, r0
 856 0026 012B     		cmp	r3, #1
 857 0028 01D1     		bne	.L62
 363:.\modem.c     ****         return 1u;
 858              		.loc 1 363 0
 859 002a 0123     		movs	r3, #1
 860 002c 00E0     		b	.L64
 861              	.L62:
 364:.\modem.c     ****     }
 365:.\modem.c     ****     /* Write to SD Card debugger
 366:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 367:.\modem.c     ****     */
 368:.\modem.c     **** 
 369:.\modem.c     ****     return 0u; 
 862              		.loc 1 369 0
 863 002e 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 23


 864              	.L64:
 370:.\modem.c     **** }
 865              		.loc 1 370 0
 866 0030 1846     		mov	r0, r3
 867 0032 6837     		adds	r7, r7, #104
 868 0034 BD46     		mov	sp, r7
 869              		@ sp needed
 870 0036 80BD     		pop	{r7, pc}
 871              	.L66:
 872              		.align	2
 873              	.L65:
 874 0038 00000000 		.word	modem_apn
 875 003c 38000000 		.word	.LC5
 876 0040 14000000 		.word	.LC2
 877              		.cfi_endproc
 878              	.LFE68:
 879              		.size	modem_set_apn, .-modem_set_apn
 880              		.section	.rodata
 881              		.align	2
 882              	.LC6:
 883 0050 41542342 		.ascii	"AT#BND=%d\015\000"
 883      4E443D25 
 883      640D00
 884              		.section	.text.modem_set_band,"ax",%progbits
 885              		.align	2
 886              		.global	modem_set_band
 887              		.thumb
 888              		.thumb_func
 889              		.type	modem_set_band, %function
 890              	modem_set_band:
 891              	.LFB69:
 371:.\modem.c     **** 
 372:.\modem.c     **** uint8 modem_set_band(uint8 band) {
 892              		.loc 1 372 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 112
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896 0000 80B5     		push	{r7, lr}
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 7, -8
 899              		.cfi_offset 14, -4
 900 0002 9CB0     		sub	sp, sp, #112
 901              		.cfi_def_cfa_offset 120
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 904 0006 0346     		mov	r3, r0
 905 0008 FB71     		strb	r3, [r7, #7]
 373:.\modem.c     **** /* 
 374:.\modem.c     **** 	Set the band on which the modem should communicate on
 375:.\modem.c     **** 	Band ranges from <0,3>
 376:.\modem.c     **** 	"epc.tmobile.com" uses band 1
 377:.\modem.c     **** */
 378:.\modem.c     ****     char cmd[100];
 379:.\modem.c     ****     sprintf(cmd,"AT#BND=%d\r",band);
 906              		.loc 1 379 0
 907 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 908 000c 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 24


 909 0010 1046     		mov	r0, r2
 910 0012 0B49     		ldr	r1, .L71
 911 0014 1A46     		mov	r2, r3
 912 0016 FFF7FEFF 		bl	sprintf
 380:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 913              		.loc 1 380 0
 914 001a 07F10C03 		add	r3, r7, #12
 915 001e 1846     		mov	r0, r3
 916 0020 0849     		ldr	r1, .L71+4
 917 0022 4FF4FA62 		mov	r2, #2000
 918 0026 FFF7FEFF 		bl	at_write_command
 919 002a 0346     		mov	r3, r0
 920 002c 012B     		cmp	r3, #1
 921 002e 01D1     		bne	.L68
 381:.\modem.c     ****         return 1u;
 922              		.loc 1 381 0
 923 0030 0123     		movs	r3, #1
 924 0032 00E0     		b	.L70
 925              	.L68:
 382:.\modem.c     ****     }
 383:.\modem.c     ****     /* Write to SD Card debugger
 384:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 385:.\modem.c     ****     */
 386:.\modem.c     **** 
 387:.\modem.c     ****     return 0u; 
 926              		.loc 1 387 0
 927 0034 0023     		movs	r3, #0
 928              	.L70:
 388:.\modem.c     **** }
 929              		.loc 1 388 0
 930 0036 1846     		mov	r0, r3
 931 0038 7037     		adds	r7, r7, #112
 932 003a BD46     		mov	sp, r7
 933              		@ sp needed
 934 003c 80BD     		pop	{r7, pc}
 935              	.L72:
 936 003e 00BF     		.align	2
 937              	.L71:
 938 0040 50000000 		.word	.LC6
 939 0044 14000000 		.word	.LC2
 940              		.cfi_endproc
 941              	.LFE69:
 942              		.size	modem_set_band, .-modem_set_band
 943              		.section	.rodata
 944 005b 00       		.align	2
 945              	.LC7:
 946 005c 41542B43 		.ascii	"AT+CCLK?\015\000"
 946      434C4B3F 
 946      0D00
 947              		.section	.text.modem_get_time,"ax",%progbits
 948              		.align	2
 949              		.global	modem_get_time
 950              		.thumb
 951              		.thumb_func
 952              		.type	modem_get_time, %function
 953              	modem_get_time:
 954              	.LFB70:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 25


 389:.\modem.c     **** 
 390:.\modem.c     **** uint8 modem_get_time(){
 955              		.loc 1 390 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 391:.\modem.c     ****     if(at_write_command("AT+CCLK?\r","OK",1000u) == 1u){      
 965              		.loc 1 391 0
 966 0004 0648     		ldr	r0, .L76
 967 0006 0749     		ldr	r1, .L76+4
 968 0008 4FF47A72 		mov	r2, #1000
 969 000c FFF7FEFF 		bl	at_write_command
 970 0010 0346     		mov	r3, r0
 971 0012 012B     		cmp	r3, #1
 972 0014 01D1     		bne	.L74
 392:.\modem.c     ****         return 1u;
 973              		.loc 1 392 0
 974 0016 0123     		movs	r3, #1
 975 0018 00E0     		b	.L75
 976              	.L74:
 393:.\modem.c     ****     }
 394:.\modem.c     ****     /* Write to SD Card debugger
 395:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 396:.\modem.c     ****     */
 397:.\modem.c     ****     
 398:.\modem.c     ****     /* Parse Time from data packet */
 399:.\modem.c     **** 
 400:.\modem.c     ****     return 0u;  
 977              		.loc 1 400 0
 978 001a 0023     		movs	r3, #0
 979              	.L75:
 401:.\modem.c     **** }
 980              		.loc 1 401 0
 981 001c 1846     		mov	r0, r3
 982 001e 80BD     		pop	{r7, pc}
 983              	.L77:
 984              		.align	2
 985              	.L76:
 986 0020 5C000000 		.word	.LC7
 987 0024 14000000 		.word	.LC2
 988              		.cfi_endproc
 989              	.LFE70:
 990              		.size	modem_get_time, .-modem_get_time
 991              		.section	.rodata
 992 0066 0000     		.align	2
 993              	.LC8:
 994 0068 41542B43 		.ascii	"AT+CREG?\015\000"
 994      5245473F 
 994      0D00
 995 0072 0000     		.align	2
 996              	.LC9:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 26


 997 0074 2C3100   		.ascii	",1\000"
 998              		.section	.text.modem_check_network,"ax",%progbits
 999              		.align	2
 1000              		.global	modem_check_network
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	modem_check_network, %function
 1004              	modem_check_network:
 1005              	.LFB71:
 402:.\modem.c     **** 
 403:.\modem.c     **** uint8 modem_check_network() {
 1006              		.loc 1 403 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 00AF     		add	r7, sp, #0
 1015              		.cfi_def_cfa_register 7
 404:.\modem.c     ****     if(at_write_command("AT+CREG?\r",",1",1000u) == 1u){      
 1016              		.loc 1 404 0
 1017 0004 0648     		ldr	r0, .L81
 1018 0006 0749     		ldr	r1, .L81+4
 1019 0008 4FF47A72 		mov	r2, #1000
 1020 000c FFF7FEFF 		bl	at_write_command
 1021 0010 0346     		mov	r3, r0
 1022 0012 012B     		cmp	r3, #1
 1023 0014 01D1     		bne	.L79
 405:.\modem.c     ****         return 1u;
 1024              		.loc 1 405 0
 1025 0016 0123     		movs	r3, #1
 1026 0018 00E0     		b	.L80
 1027              	.L79:
 406:.\modem.c     ****     }
 407:.\modem.c     ****     /* Write to SD Card debugger
 408:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 409:.\modem.c     ****     */
 410:.\modem.c     ****     
 411:.\modem.c     ****     /* Parse Time from data packet */
 412:.\modem.c     **** 
 413:.\modem.c     ****     return 0u;      
 1028              		.loc 1 413 0
 1029 001a 0023     		movs	r3, #0
 1030              	.L80:
 414:.\modem.c     **** }
 1031              		.loc 1 414 0
 1032 001c 1846     		mov	r0, r3
 1033 001e 80BD     		pop	{r7, pc}
 1034              	.L82:
 1035              		.align	2
 1036              	.L81:
 1037 0020 68000000 		.word	.LC8
 1038 0024 74000000 		.word	.LC9
 1039              		.cfi_endproc
 1040              	.LFE71:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 27


 1041              		.size	modem_check_network, .-modem_check_network
 1042              		.section	.rodata
 1043 0077 00       		.align	2
 1044              	.LC10:
 1045 0078 41542B43 		.ascii	"AT+CSQ\015\000"
 1045      53510D00 
 1046              		.section	.text.modem_get_signal_quality,"ax",%progbits
 1047              		.align	2
 1048              		.global	modem_get_signal_quality
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	modem_get_signal_quality, %function
 1052              	modem_get_signal_quality:
 1053              	.LFB72:
 415:.\modem.c     **** uint8 modem_get_signal_quality(){
 1054              		.loc 1 415 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 416:.\modem.c     ****     if(at_write_command("AT+CSQ\r","OK",1000u) == 1u){      
 1064              		.loc 1 416 0
 1065 0004 0648     		ldr	r0, .L86
 1066 0006 0749     		ldr	r1, .L86+4
 1067 0008 4FF47A72 		mov	r2, #1000
 1068 000c FFF7FEFF 		bl	at_write_command
 1069 0010 0346     		mov	r3, r0
 1070 0012 012B     		cmp	r3, #1
 1071 0014 01D1     		bne	.L84
 417:.\modem.c     ****         return 1u;
 1072              		.loc 1 417 0
 1073 0016 0123     		movs	r3, #1
 1074 0018 00E0     		b	.L85
 1075              	.L84:
 418:.\modem.c     ****     }
 419:.\modem.c     ****     /* Write to SD Card debugger
 420:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 421:.\modem.c     ****     */
 422:.\modem.c     ****     
 423:.\modem.c     ****     /* Parse Time from data packet */
 424:.\modem.c     **** 
 425:.\modem.c     ****     return 0u;  
 1076              		.loc 1 425 0
 1077 001a 0023     		movs	r3, #0
 1078              	.L85:
 426:.\modem.c     **** }
 1079              		.loc 1 426 0
 1080 001c 1846     		mov	r0, r3
 1081 001e 80BD     		pop	{r7, pc}
 1082              	.L87:
 1083              		.align	2
 1084              	.L86:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 28


 1085 0020 78000000 		.word	.LC10
 1086 0024 14000000 		.word	.LC2
 1087              		.cfi_endproc
 1088              	.LFE72:
 1089              		.size	modem_get_signal_quality, .-modem_get_signal_quality
 1090              		.section	.rodata
 1091              		.align	2
 1092              	.LC11:
 1093 0080 41542B43 		.ascii	"AT+CGSN\015\000"
 1093      47534E0D 
 1093      00
 1094              		.section	.text.modem_get_serial_number,"ax",%progbits
 1095              		.align	2
 1096              		.global	modem_get_serial_number
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	modem_get_serial_number, %function
 1100              	modem_get_serial_number:
 1101              	.LFB73:
 427:.\modem.c     **** 
 428:.\modem.c     **** uint8 modem_get_serial_number(){
 1102              		.loc 1 428 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 429:.\modem.c     ****     if(at_write_command("AT+CGSN\r","OK",1000u) == 1u){      
 1112              		.loc 1 429 0
 1113 0004 0648     		ldr	r0, .L91
 1114 0006 0749     		ldr	r1, .L91+4
 1115 0008 4FF47A72 		mov	r2, #1000
 1116 000c FFF7FEFF 		bl	at_write_command
 1117 0010 0346     		mov	r3, r0
 1118 0012 012B     		cmp	r3, #1
 1119 0014 01D1     		bne	.L89
 430:.\modem.c     ****         return 1u;
 1120              		.loc 1 430 0
 1121 0016 0123     		movs	r3, #1
 1122 0018 00E0     		b	.L90
 1123              	.L89:
 431:.\modem.c     ****     }
 432:.\modem.c     ****     /* Write to SD Card debugger
 433:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 434:.\modem.c     ****     */
 435:.\modem.c     **** 
 436:.\modem.c     ****     return 0u;  
 1124              		.loc 1 436 0
 1125 001a 0023     		movs	r3, #0
 1126              	.L90:
 437:.\modem.c     **** }
 1127              		.loc 1 437 0
 1128 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 29


 1129 001e 80BD     		pop	{r7, pc}
 1130              	.L92:
 1131              		.align	2
 1132              	.L91:
 1133 0020 80000000 		.word	.LC11
 1134 0024 14000000 		.word	.LC2
 1135              		.cfi_endproc
 1136              	.LFE73:
 1137              		.size	modem_get_serial_number, .-modem_get_serial_number
 1138              		.section	.rodata
 1139 0089 000000   		.align	2
 1140              	.LC12:
 1141 008c 41542656 		.ascii	"AT&V\015\000"
 1141      0D00
 1142              		.section	.text.modem_get_profile,"ax",%progbits
 1143              		.align	2
 1144              		.global	modem_get_profile
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	modem_get_profile, %function
 1148              	modem_get_profile:
 1149              	.LFB74:
 438:.\modem.c     **** 
 439:.\modem.c     **** 
 440:.\modem.c     **** uint8 modem_get_profile(){
 1150              		.loc 1 440 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 441:.\modem.c     ****     if(at_write_command("AT&V\r","OK",1000u) == 1u){      
 1160              		.loc 1 441 0
 1161 0004 0648     		ldr	r0, .L96
 1162 0006 0749     		ldr	r1, .L96+4
 1163 0008 4FF47A72 		mov	r2, #1000
 1164 000c FFF7FEFF 		bl	at_write_command
 1165 0010 0346     		mov	r3, r0
 1166 0012 012B     		cmp	r3, #1
 1167 0014 01D1     		bne	.L94
 442:.\modem.c     ****         return 1u;
 1168              		.loc 1 442 0
 1169 0016 0123     		movs	r3, #1
 1170 0018 00E0     		b	.L95
 1171              	.L94:
 443:.\modem.c     ****     }
 444:.\modem.c     ****     /* Write to SD Card debugger
 445:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 446:.\modem.c     ****     */
 447:.\modem.c     **** 
 448:.\modem.c     ****     return 0u;  
 1172              		.loc 1 448 0
 1173 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 30


 1174              	.L95:
 449:.\modem.c     **** }
 1175              		.loc 1 449 0
 1176 001c 1846     		mov	r0, r3
 1177 001e 80BD     		pop	{r7, pc}
 1178              	.L97:
 1179              		.align	2
 1180              	.L96:
 1181 0020 8C000000 		.word	.LC12
 1182 0024 14000000 		.word	.LC2
 1183              		.cfi_endproc
 1184              	.LFE74:
 1185              		.size	modem_get_profile, .-modem_get_profile
 1186              		.section	.rodata
 1187 0092 0000     		.align	2
 1188              	.LC13:
 1189 0094 4154264B 		.ascii	"AT&K%u\015\000"
 1189      25750D00 
 1190              		.section	.text.modem_set_flow_control,"ax",%progbits
 1191              		.align	2
 1192              		.global	modem_set_flow_control
 1193              		.thumb
 1194              		.thumb_func
 1195              		.type	modem_set_flow_control, %function
 1196              	modem_set_flow_control:
 1197              	.LFB75:
 450:.\modem.c     **** 
 451:.\modem.c     **** uint8 modem_set_flow_control(uint8 param){
 1198              		.loc 1 451 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 112
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 9CB0     		sub	sp, sp, #112
 1207              		.cfi_def_cfa_offset 120
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB71     		strb	r3, [r7, #7]
 452:.\modem.c     ****     char cmd[100];
 453:.\modem.c     ****     sprintf(cmd,"AT&K%u\r",param);
 1212              		.loc 1 453 0
 1213 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 000c 07F10C02 		add	r2, r7, #12
 1215 0010 1046     		mov	r0, r2
 1216 0012 0B49     		ldr	r1, .L102
 1217 0014 1A46     		mov	r2, r3
 1218 0016 FFF7FEFF 		bl	sprintf
 454:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1219              		.loc 1 454 0
 1220 001a 07F10C03 		add	r3, r7, #12
 1221 001e 1846     		mov	r0, r3
 1222 0020 0849     		ldr	r1, .L102+4
 1223 0022 4FF47A72 		mov	r2, #1000
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 31


 1224 0026 FFF7FEFF 		bl	at_write_command
 1225 002a 0346     		mov	r3, r0
 1226 002c 012B     		cmp	r3, #1
 1227 002e 01D1     		bne	.L99
 455:.\modem.c     ****         return 1u;
 1228              		.loc 1 455 0
 1229 0030 0123     		movs	r3, #1
 1230 0032 00E0     		b	.L101
 1231              	.L99:
 456:.\modem.c     ****     }
 457:.\modem.c     ****     /* Write to SD Card debugger
 458:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 459:.\modem.c     ****     */
 460:.\modem.c     **** 
 461:.\modem.c     ****     return 0u;  
 1232              		.loc 1 461 0
 1233 0034 0023     		movs	r3, #0
 1234              	.L101:
 462:.\modem.c     **** }
 1235              		.loc 1 462 0
 1236 0036 1846     		mov	r0, r3
 1237 0038 7037     		adds	r7, r7, #112
 1238 003a BD46     		mov	sp, r7
 1239              		@ sp needed
 1240 003c 80BD     		pop	{r7, pc}
 1241              	.L103:
 1242 003e 00BF     		.align	2
 1243              	.L102:
 1244 0040 94000000 		.word	.LC13
 1245 0044 14000000 		.word	.LC2
 1246              		.cfi_endproc
 1247              	.LFE75:
 1248              		.size	modem_set_flow_control, .-modem_set_flow_control
 1249              		.section	.rodata
 1250              		.align	2
 1251              	.LC14:
 1252 009c 41542B43 		.ascii	"AT+CMEE=%u\015\000"
 1252      4D45453D 
 1252      25750D00 
 1253              		.section	.text.modem_set_error_reports,"ax",%progbits
 1254              		.align	2
 1255              		.global	modem_set_error_reports
 1256              		.thumb
 1257              		.thumb_func
 1258              		.type	modem_set_error_reports, %function
 1259              	modem_set_error_reports:
 1260              	.LFB76:
 463:.\modem.c     **** 
 464:.\modem.c     **** uint8 modem_set_error_reports(uint8 param){
 1261              		.loc 1 464 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 112
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 32


 1269 0002 9CB0     		sub	sp, sp, #112
 1270              		.cfi_def_cfa_offset 120
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 0346     		mov	r3, r0
 1274 0008 FB71     		strb	r3, [r7, #7]
 465:.\modem.c     **** 	/*
 466:.\modem.c     **** 	2.4. Enable Extended Error Result codes
 467:.\modem.c     **** 	Disable the Error Report in numerical and verbose format:
 468:.\modem.c     **** 	AT+CMEE=0
 469:.\modem.c     **** 	OK
 470:.\modem.c     **** 	Enable the Error Report in numerical format:
 471:.\modem.c     **** 	AT+CMEE=1
 472:.\modem.c     **** 	OK
 473:.\modem.c     **** 	Enable the Error Report in verbose format:
 474:.\modem.c     **** 	AT+CMEE=2
 475:.\modem.c     **** 	OK
 476:.\modem.c     **** 	*/
 477:.\modem.c     **** 	
 478:.\modem.c     ****     char cmd[100];
 479:.\modem.c     ****     sprintf(cmd,"AT+CMEE=%u\r",param);
 1275              		.loc 1 479 0
 1276 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1277 000c 07F10C02 		add	r2, r7, #12
 1278 0010 1046     		mov	r0, r2
 1279 0012 0B49     		ldr	r1, .L108
 1280 0014 1A46     		mov	r2, r3
 1281 0016 FFF7FEFF 		bl	sprintf
 480:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1282              		.loc 1 480 0
 1283 001a 07F10C03 		add	r3, r7, #12
 1284 001e 1846     		mov	r0, r3
 1285 0020 0849     		ldr	r1, .L108+4
 1286 0022 4FF47A72 		mov	r2, #1000
 1287 0026 FFF7FEFF 		bl	at_write_command
 1288 002a 0346     		mov	r3, r0
 1289 002c 012B     		cmp	r3, #1
 1290 002e 01D1     		bne	.L105
 481:.\modem.c     ****         return 1u;
 1291              		.loc 1 481 0
 1292 0030 0123     		movs	r3, #1
 1293 0032 00E0     		b	.L107
 1294              	.L105:
 482:.\modem.c     ****     }
 483:.\modem.c     ****     /* Write to SD Card debugger
 484:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 485:.\modem.c     ****     */
 486:.\modem.c     **** 
 487:.\modem.c     ****     return 0u;  
 1295              		.loc 1 487 0
 1296 0034 0023     		movs	r3, #0
 1297              	.L107:
 488:.\modem.c     **** }
 1298              		.loc 1 488 0
 1299 0036 1846     		mov	r0, r3
 1300 0038 7037     		adds	r7, r7, #112
 1301 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 33


 1302              		@ sp needed
 1303 003c 80BD     		pop	{r7, pc}
 1304              	.L109:
 1305 003e 00BF     		.align	2
 1306              	.L108:
 1307 0040 9C000000 		.word	.LC14
 1308 0044 14000000 		.word	.LC2
 1309              		.cfi_endproc
 1310              	.LFE76:
 1311              		.size	modem_set_error_reports, .-modem_set_error_reports
 1312              		.section	.rodata
 1313              		.align	2
 1314              	.LC15:
 1315 00a8 41542B43 		.ascii	"AT+CGMR\015\000"
 1315      474D520D 
 1315      00
 1316              		.section	.text.modem_get_sw_version,"ax",%progbits
 1317              		.align	2
 1318              		.global	modem_get_sw_version
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	modem_get_sw_version, %function
 1322              	modem_get_sw_version:
 1323              	.LFB77:
 489:.\modem.c     **** 
 490:.\modem.c     **** uint8 modem_get_sw_version(){
 1324              		.loc 1 490 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
 491:.\modem.c     ****     if(at_write_command("AT+CGMR\r","OK",1000u) == 1u){      
 1334              		.loc 1 491 0
 1335 0004 0648     		ldr	r0, .L113
 1336 0006 0749     		ldr	r1, .L113+4
 1337 0008 4FF47A72 		mov	r2, #1000
 1338 000c FFF7FEFF 		bl	at_write_command
 1339 0010 0346     		mov	r3, r0
 1340 0012 012B     		cmp	r3, #1
 1341 0014 01D1     		bne	.L111
 492:.\modem.c     ****         return 1u;
 1342              		.loc 1 492 0
 1343 0016 0123     		movs	r3, #1
 1344 0018 00E0     		b	.L112
 1345              	.L111:
 493:.\modem.c     ****     }
 494:.\modem.c     ****     /* Write to SD Card debugger
 495:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 496:.\modem.c     ****     */
 497:.\modem.c     **** 
 498:.\modem.c     ****     return 0u;  
 1346              		.loc 1 498 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 34


 1347 001a 0023     		movs	r3, #0
 1348              	.L112:
 499:.\modem.c     **** }
 1349              		.loc 1 499 0
 1350 001c 1846     		mov	r0, r3
 1351 001e 80BD     		pop	{r7, pc}
 1352              	.L114:
 1353              		.align	2
 1354              	.L113:
 1355 0020 A8000000 		.word	.LC15
 1356 0024 14000000 		.word	.LC2
 1357              		.cfi_endproc
 1358              	.LFE77:
 1359              		.size	modem_get_sw_version, .-modem_get_sw_version
 1360              		.section	.rodata
 1361 00b1 000000   		.align	2
 1362              	.LC16:
 1363 00b4 41542343 		.ascii	"AT#CDMADC=%u\015\000"
 1363      444D4144 
 1363      433D2575 
 1363      0D00
 1364              		.section	.text.modem_enable_CDMA_data,"ax",%progbits
 1365              		.align	2
 1366              		.global	modem_enable_CDMA_data
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	modem_enable_CDMA_data, %function
 1370              	modem_enable_CDMA_data:
 1371              	.LFB78:
 500:.\modem.c     **** 
 501:.\modem.c     **** uint8 modem_enable_CDMA_data(uint8 param){
 1372              		.loc 1 501 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 112
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 9CB0     		sub	sp, sp, #112
 1381              		.cfi_def_cfa_offset 120
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 1384 0006 0346     		mov	r3, r0
 1385 0008 FB71     		strb	r3, [r7, #7]
 502:.\modem.c     **** 	/*
 503:.\modem.c     **** 	4.2.12 CDMA Data Connection
 504:.\modem.c     **** 	0 - CDMA Data connection deactivation request
 505:.\modem.c     **** 	1 - CDMA Data connection activation request
 506:.\modem.c     **** 	*/
 507:.\modem.c     **** 	
 508:.\modem.c     ****     char cmd[100];
 509:.\modem.c     ****     sprintf(cmd,"AT#CDMADC=%u\r",param);
 1386              		.loc 1 509 0
 1387 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1388 000c 07F10C02 		add	r2, r7, #12
 1389 0010 1046     		mov	r0, r2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 35


 1390 0012 0B49     		ldr	r1, .L119
 1391 0014 1A46     		mov	r2, r3
 1392 0016 FFF7FEFF 		bl	sprintf
 510:.\modem.c     ****     if(at_write_command(cmd,"OK",5000u) == 1u){      
 1393              		.loc 1 510 0
 1394 001a 07F10C03 		add	r3, r7, #12
 1395 001e 1846     		mov	r0, r3
 1396 0020 0849     		ldr	r1, .L119+4
 1397 0022 41F28832 		movw	r2, #5000
 1398 0026 FFF7FEFF 		bl	at_write_command
 1399 002a 0346     		mov	r3, r0
 1400 002c 012B     		cmp	r3, #1
 1401 002e 01D1     		bne	.L116
 511:.\modem.c     ****         return 1u;
 1402              		.loc 1 511 0
 1403 0030 0123     		movs	r3, #1
 1404 0032 00E0     		b	.L118
 1405              	.L116:
 512:.\modem.c     ****     }
 513:.\modem.c     ****     /* Write to SD Card debugger
 514:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 515:.\modem.c     ****     */
 516:.\modem.c     **** 
 517:.\modem.c     ****     return 0u;  
 1406              		.loc 1 517 0
 1407 0034 0023     		movs	r3, #0
 1408              	.L118:
 518:.\modem.c     **** }
 1409              		.loc 1 518 0
 1410 0036 1846     		mov	r0, r3
 1411 0038 7037     		adds	r7, r7, #112
 1412 003a BD46     		mov	sp, r7
 1413              		@ sp needed
 1414 003c 80BD     		pop	{r7, pc}
 1415              	.L120:
 1416 003e 00BF     		.align	2
 1417              	.L119:
 1418 0040 B4000000 		.word	.LC16
 1419 0044 14000000 		.word	.LC2
 1420              		.cfi_endproc
 1421              	.LFE78:
 1422              		.size	modem_enable_CDMA_data, .-modem_enable_CDMA_data
 1423              		.section	.rodata
 1424 00c2 0000     		.align	2
 1425              	.LC17:
 1426 00c4 41542343 		.ascii	"AT#CDMADC?\015\000"
 1426      444D4144 
 1426      433F0D00 
 1427              		.section	.text.modem_test_CDMA_data,"ax",%progbits
 1428              		.align	2
 1429              		.global	modem_test_CDMA_data
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	modem_test_CDMA_data, %function
 1433              	modem_test_CDMA_data:
 1434              	.LFB79:
 519:.\modem.c     **** 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 36


 520:.\modem.c     **** uint8 modem_test_CDMA_data(){
 1435              		.loc 1 520 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 00AF     		add	r7, sp, #0
 1444              		.cfi_def_cfa_register 7
 521:.\modem.c     **** 	
 522:.\modem.c     ****     if(at_write_command("AT#CDMADC?\r","OK",1000u) == 1u){      
 1445              		.loc 1 522 0
 1446 0004 0648     		ldr	r0, .L124
 1447 0006 0749     		ldr	r1, .L124+4
 1448 0008 4FF47A72 		mov	r2, #1000
 1449 000c FFF7FEFF 		bl	at_write_command
 1450 0010 0346     		mov	r3, r0
 1451 0012 012B     		cmp	r3, #1
 1452 0014 01D1     		bne	.L122
 523:.\modem.c     ****         return 1u;
 1453              		.loc 1 523 0
 1454 0016 0123     		movs	r3, #1
 1455 0018 00E0     		b	.L123
 1456              	.L122:
 524:.\modem.c     ****     }
 525:.\modem.c     ****     /* Write to SD Card debugger
 526:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 527:.\modem.c     ****     */
 528:.\modem.c     **** 
 529:.\modem.c     ****     return 0u;	
 1457              		.loc 1 529 0
 1458 001a 0023     		movs	r3, #0
 1459              	.L123:
 530:.\modem.c     **** }
 1460              		.loc 1 530 0
 1461 001c 1846     		mov	r0, r3
 1462 001e 80BD     		pop	{r7, pc}
 1463              	.L125:
 1464              		.align	2
 1465              	.L124:
 1466 0020 C4000000 		.word	.LC17
 1467 0024 14000000 		.word	.LC2
 1468              		.cfi_endproc
 1469              	.LFE79:
 1470              		.size	modem_test_CDMA_data, .-modem_test_CDMA_data
 1471              		.section	.rodata
 1472              		.align	2
 1473              	.LC18:
 1474 00d0 41542355 		.ascii	"AT#USERID=\"%s\"\015\000"
 1474      53455249 
 1474      443D2225 
 1474      73220D00 
 1475              		.section	.text.modem_set_user,"ax",%progbits
 1476              		.align	2
 1477              		.global	modem_set_user
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 37


 1478              		.thumb
 1479              		.thumb_func
 1480              		.type	modem_set_user, %function
 1481              	modem_set_user:
 1482              	.LFB80:
 531:.\modem.c     **** 
 532:.\modem.c     **** uint8 modem_set_user(char* user) {
 1483              		.loc 1 532 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 112
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 9CB0     		sub	sp, sp, #112
 1492              		.cfi_def_cfa_offset 120
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 533:.\modem.c     **** 	
 534:.\modem.c     ****     char cmd[100];
 535:.\modem.c     ****     sprintf(cmd,"AT#USERID=\"%s\"\r",user);		
 1496              		.loc 1 535 0
 1497 0008 07F10C03 		add	r3, r7, #12
 1498 000c 1846     		mov	r0, r3
 1499 000e 0B49     		ldr	r1, .L130
 1500 0010 7A68     		ldr	r2, [r7, #4]
 1501 0012 FFF7FEFF 		bl	sprintf
 536:.\modem.c     **** 	
 537:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1502              		.loc 1 537 0
 1503 0016 07F10C03 		add	r3, r7, #12
 1504 001a 1846     		mov	r0, r3
 1505 001c 0849     		ldr	r1, .L130+4
 1506 001e 4FF47A72 		mov	r2, #1000
 1507 0022 FFF7FEFF 		bl	at_write_command
 1508 0026 0346     		mov	r3, r0
 1509 0028 012B     		cmp	r3, #1
 1510 002a 01D1     		bne	.L127
 538:.\modem.c     ****         return 1u;
 1511              		.loc 1 538 0
 1512 002c 0123     		movs	r3, #1
 1513 002e 00E0     		b	.L129
 1514              	.L127:
 539:.\modem.c     ****     }
 540:.\modem.c     ****     /* Write to SD Card debugger
 541:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 542:.\modem.c     ****     */
 543:.\modem.c     **** 	
 544:.\modem.c     **** 	return 0u;	
 1515              		.loc 1 544 0
 1516 0030 0023     		movs	r3, #0
 1517              	.L129:
 545:.\modem.c     **** }
 1518              		.loc 1 545 0
 1519 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 38


 1520 0034 7037     		adds	r7, r7, #112
 1521 0036 BD46     		mov	sp, r7
 1522              		@ sp needed
 1523 0038 80BD     		pop	{r7, pc}
 1524              	.L131:
 1525 003a 00BF     		.align	2
 1526              	.L130:
 1527 003c D0000000 		.word	.LC18
 1528 0040 14000000 		.word	.LC2
 1529              		.cfi_endproc
 1530              	.LFE80:
 1531              		.size	modem_set_user, .-modem_set_user
 1532              		.section	.rodata
 1533              		.align	2
 1534              	.LC19:
 1535 00e0 41542350 		.ascii	"AT#PASSW=\"%s\"\015\000"
 1535      41535357 
 1535      3D222573 
 1535      220D00
 1536              		.section	.text.modem_set_password,"ax",%progbits
 1537              		.align	2
 1538              		.global	modem_set_password
 1539              		.thumb
 1540              		.thumb_func
 1541              		.type	modem_set_password, %function
 1542              	modem_set_password:
 1543              	.LFB81:
 546:.\modem.c     **** 
 547:.\modem.c     **** uint8 modem_set_password(char* pass) {
 1544              		.loc 1 547 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 112
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 9CB0     		sub	sp, sp, #112
 1553              		.cfi_def_cfa_offset 120
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 7860     		str	r0, [r7, #4]
 548:.\modem.c     **** 	
 549:.\modem.c     ****     char cmd[100];
 550:.\modem.c     ****     sprintf(cmd,"AT#PASSW=\"%s\"\r",pass);		
 1557              		.loc 1 550 0
 1558 0008 07F10C03 		add	r3, r7, #12
 1559 000c 1846     		mov	r0, r3
 1560 000e 0B49     		ldr	r1, .L136
 1561 0010 7A68     		ldr	r2, [r7, #4]
 1562 0012 FFF7FEFF 		bl	sprintf
 551:.\modem.c     **** 	
 552:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1563              		.loc 1 552 0
 1564 0016 07F10C03 		add	r3, r7, #12
 1565 001a 1846     		mov	r0, r3
 1566 001c 0849     		ldr	r1, .L136+4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 39


 1567 001e 4FF47A72 		mov	r2, #1000
 1568 0022 FFF7FEFF 		bl	at_write_command
 1569 0026 0346     		mov	r3, r0
 1570 0028 012B     		cmp	r3, #1
 1571 002a 01D1     		bne	.L133
 553:.\modem.c     ****         return 1u;
 1572              		.loc 1 553 0
 1573 002c 0123     		movs	r3, #1
 1574 002e 00E0     		b	.L135
 1575              	.L133:
 554:.\modem.c     ****     }
 555:.\modem.c     ****     /* Write to SD Card debugger
 556:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 557:.\modem.c     ****     */
 558:.\modem.c     **** 	
 559:.\modem.c     **** 	return 0u;	
 1576              		.loc 1 559 0
 1577 0030 0023     		movs	r3, #0
 1578              	.L135:
 560:.\modem.c     **** }
 1579              		.loc 1 560 0
 1580 0032 1846     		mov	r0, r3
 1581 0034 7037     		adds	r7, r7, #112
 1582 0036 BD46     		mov	sp, r7
 1583              		@ sp needed
 1584 0038 80BD     		pop	{r7, pc}
 1585              	.L137:
 1586 003a 00BF     		.align	2
 1587              	.L136:
 1588 003c E0000000 		.word	.LC19
 1589 0040 14000000 		.word	.LC2
 1590              		.cfi_endproc
 1591              	.LFE81:
 1592              		.size	modem_set_password, .-modem_set_password
 1593              		.section	.rodata
 1594 00ef 00       		.align	2
 1595              	.LC20:
 1596 00f0 41542353 		.ascii	"AT#SKTD=0,80,\"www.google.com\"\015\012\000"
 1596      4B54443D 
 1596      302C3830 
 1596      2C227777 
 1596      772E676F 
 1597              		.align	2
 1598              	.LC21:
 1599 0110 434F4E4E 		.ascii	"CONNECT\000"
 1599      45435400 
 1600              		.align	2
 1601              	.LC22:
 1602 0118 47455420 		.ascii	"GET /get_status/ HTTP/1.0\015\012\000"
 1602      2F676574 
 1602      5F737461 
 1602      7475732F 
 1602      20485454 
 1603              		.align	2
 1604              	.LC23:
 1605 0134 00       		.ascii	"\000"
 1606 0135 000000   		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 40


 1607              	.LC24:
 1608 0138 0D0A00   		.ascii	"\015\012\000"
 1609              		.section	.text.modem_get_google,"ax",%progbits
 1610              		.align	2
 1611              		.global	modem_get_google
 1612              		.thumb
 1613              		.thumb_func
 1614              		.type	modem_get_google, %function
 1615              	modem_get_google:
 1616              	.LFB82:
 561:.\modem.c     **** uint8 modem_get_google(){
 1617              		.loc 1 561 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 1000
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 ADF57A7D 		sub	sp, sp, #1000
 1626              		.cfi_def_cfa_offset 1008
 1627 0006 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
 562:.\modem.c     **** 
 563:.\modem.c     ****     // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 564:.\modem.c     ****     if( modem_state == MODEM_STATE_READY || modem_connect() != 0 ){ 
 1629              		.loc 1 564 0
 1630 0008 1D4B     		ldr	r3, .L142
 1631 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 000c 032B     		cmp	r3, #3
 1633 000e 04D0     		beq	.L139
 1634              		.loc 1 564 0 is_stmt 0 discriminator 1
 1635 0010 FFF7FEFF 		bl	modem_connect
 1636 0014 0346     		mov	r3, r0
 1637 0016 002B     		cmp	r3, #0
 1638 0018 2AD0     		beq	.L140
 1639              	.L139:
 565:.\modem.c     ****         
 566:.\modem.c     ****         if(at_write_command("AT#SKTD=0,80,\"www.google.com\"\r\n","CONNECT",10000u) != 0){
 1640              		.loc 1 566 0 is_stmt 1
 1641 001a 1A48     		ldr	r0, .L142+4
 1642 001c 1A49     		ldr	r1, .L142+8
 1643 001e 42F21072 		movw	r2, #10000
 1644 0022 FFF7FEFF 		bl	at_write_command
 1645 0026 0346     		mov	r3, r0
 1646 0028 002B     		cmp	r3, #0
 1647 002a 21D0     		beq	.L140
 1648              	.LBB3:
 567:.\modem.c     ****             
 568:.\modem.c     ****             char get_str[MAX_PACKET_LENGTH], key_str[100];
 569:.\modem.c     ****             
 570:.\modem.c     ****             //sprintf(get_str,"GET / HTTP/1.0\r\n");
 571:.\modem.c     ****             //sprintf(key_str,"Host: www.google.com\r\n");
 572:.\modem.c     ****             //sprintf(get_str,"GET /\r\n");
 573:.\modem.c     ****             //sprintf(get_str,"%s%s",
 574:.\modem.c     ****             //    get_str,
 575:.\modem.c     ****             //    "\r\n");
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 41


 576:.\modem.c     ****             
 577:.\modem.c     ****             uart_string_reset();
 1649              		.loc 1 577 0
 1650 002c FFF7FEFF 		bl	uart_string_reset
 578:.\modem.c     ****             
 579:.\modem.c     ****             //at_write_command(get_str,"",15000u);
 580:.\modem.c     **** 			
 581:.\modem.c     **** 			at_write_command("GET /get_status/ HTTP/1.0\r\n","",15000u);
 1651              		.loc 1 581 0
 1652 0030 1648     		ldr	r0, .L142+12
 1653 0032 1749     		ldr	r1, .L142+16
 1654 0034 43F69822 		movw	r2, #15000
 1655 0038 FFF7FEFF 		bl	at_write_command
 582:.\modem.c     **** 			//CyDelay(1000u);
 583:.\modem.c     **** 			//at_write_command("Host: www.google.com\r\n","",15000u);
 584:.\modem.c     **** 			CyDelay(1000u);
 1656              		.loc 1 584 0
 1657 003c 4FF47A70 		mov	r0, #1000
 1658 0040 FFF7FEFF 		bl	CyDelay
 585:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1659              		.loc 1 585 0
 1660 0044 1348     		ldr	r0, .L142+20
 1661 0046 1249     		ldr	r1, .L142+16
 1662 0048 43F69822 		movw	r2, #15000
 1663 004c FFF7FEFF 		bl	at_write_command
 586:.\modem.c     **** 			CyDelay(1000u);
 1664              		.loc 1 586 0
 1665 0050 4FF47A70 		mov	r0, #1000
 1666 0054 FFF7FEFF 		bl	CyDelay
 587:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1667              		.loc 1 587 0
 1668 0058 0E48     		ldr	r0, .L142+20
 1669 005a 0D49     		ldr	r1, .L142+16
 1670 005c 43F69822 		movw	r2, #15000
 1671 0060 FFF7FEFF 		bl	at_write_command
 588:.\modem.c     **** 			
 589:.\modem.c     **** 			CyDelay(15000u);
 1672              		.loc 1 589 0
 1673 0064 43F69820 		movw	r0, #15000
 1674 0068 FFF7FEFF 		bl	CyDelay
 590:.\modem.c     ****             
 591:.\modem.c     **** 			// Just return regardless
 592:.\modem.c     **** 			return 1u;
 1675              		.loc 1 592 0
 1676 006c 0123     		movs	r3, #1
 1677 006e 02E0     		b	.L141
 1678              	.L140:
 1679              	.LBE3:
 593:.\modem.c     ****             /*
 594:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 595:.\modem.c     ****                 // Read GET response from the buffer
 596:.\modem.c     ****                 uart_string_reset();
 597:.\modem.c     ****                 //CyDelay(5000u);
 598:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 599:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 600:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 601:.\modem.c     ****                 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 42


 602:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 603:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 604:.\modem.c     **** 
 605:.\modem.c     ****             }
 606:.\modem.c     ****             */
 607:.\modem.c     ****         }
 608:.\modem.c     ****         
 609:.\modem.c     ****     }
 610:.\modem.c     ****     
 611:.\modem.c     ****     //debug_write("MAX_GET_ATTEMPTS Exceeded.");
 612:.\modem.c     ****     modem_disconnect();
 1680              		.loc 1 612 0
 1681 0070 FFF7FEFF 		bl	modem_disconnect
 613:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1682              		.loc 1 613 0
 1683 0074 0023     		movs	r3, #0
 1684              	.L141:
 614:.\modem.c     **** }
 1685              		.loc 1 614 0
 1686 0076 1846     		mov	r0, r3
 1687 0078 07F57A77 		add	r7, r7, #1000
 1688 007c BD46     		mov	sp, r7
 1689              		@ sp needed
 1690 007e 80BD     		pop	{r7, pc}
 1691              	.L143:
 1692              		.align	2
 1693              	.L142:
 1694 0080 00000000 		.word	modem_state
 1695 0084 F0000000 		.word	.LC20
 1696 0088 10010000 		.word	.LC21
 1697 008c 18010000 		.word	.LC22
 1698 0090 34010000 		.word	.LC23
 1699 0094 38010000 		.word	.LC24
 1700              		.cfi_endproc
 1701              	.LFE82:
 1702              		.size	modem_get_google, .-modem_get_google
 1703              		.section	.rodata
 1704 013b 00       		.align	2
 1705              	.LC25:
 1706 013c 41542353 		.ascii	"AT#SD=1,0,8086,\"ec2-54-148-229-234.us-west-2.compu"
 1706      443D312C 
 1706      302C3830 
 1706      38362C22 
 1706      6563322D 
 1707 016e 74652E61 		.ascii	"te.amazonaws.com\",0,0,1\015\000"
 1707      6D617A6F 
 1707      6E617773 
 1707      2E636F6D 
 1707      222C302C 
 1708 0187 00       		.align	2
 1709              	.LC26:
 1710 0188 41542353 		.ascii	"AT#SSEND=1\015\000"
 1710      53454E44 
 1710      3D310D00 
 1711              		.align	2
 1712              	.LC27:
 1713 0194 3E00     		.ascii	">\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 43


 1714 0196 0000     		.align	2
 1715              	.LC28:
 1716 0198 504F5354 		.ascii	"POST /write?db=cellBoard_test HTTP/1.0\015\012\000"
 1716      202F7772 
 1716      6974653F 
 1716      64623D63 
 1716      656C6C42 
 1717 01c1 000000   		.align	2
 1718              	.LC29:
 1719 01c4 25732573 		.ascii	"%s%s%s%d%s%s%s\000"
 1719      25732564 
 1719      25732573 
 1719      257300
 1720 01d3 00       		.align	2
 1721              	.LC30:
 1722 01d4 486F7374 		.ascii	"Host: ec2-54-148-229-234.us-west-2.compute.amazonaw"
 1722      3A206563 
 1722      322D3534 
 1722      2D313438 
 1722      2D323239 
 1723 0207 732E636F 		.ascii	"s.com:8086\015\012\000"
 1723      6D3A3830 
 1723      38360D0A 
 1723      00
 1724              		.align	2
 1725              	.LC31:
 1726 0214 436F6E74 		.ascii	"Content-Length: \000"
 1726      656E742D 
 1726      4C656E67 
 1726      74683A20 
 1726      00
 1727 0225 000000   		.align	2
 1728              	.LC32:
 1729 0228 0D0A0D0A 		.ascii	"\015\012\015\012\000"
 1729      00
 1730 022d 000000   		.align	2
 1731              	.LC33:
 1732 0230 0D0A1A00 		.ascii	"\015\012\032\000"
 1733              		.align	2
 1734              	.LC34:
 1735 0234 5352494E 		.ascii	"SRING: 1\000"
 1735      473A2031 
 1735      00
 1736 023d 000000   		.align	2
 1737              	.LC35:
 1738 0240 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1738      52454356 
 1738      3D312C31 
 1738      3030300D 
 1738      00
 1739 0251 000000   		.align	2
 1740              	.LC36:
 1741 0254 32303020 		.ascii	"200 OK\000"
 1741      4F4B00
 1742              		.section	.text.modem_send_packet,"ax",%progbits
 1743              		.align	2
 1744              		.global	modem_send_packet
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 44


 1745              		.thumb
 1746              		.thumb_func
 1747              		.type	modem_send_packet, %function
 1748              	modem_send_packet:
 1749              	.LFB83:
 615:.\modem.c     **** 
 616:.\modem.c     **** // send packet to Xively server
 617:.\modem.c     **** uint8 modem_send_packet(char* body){
 1750              		.loc 1 617 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 1008
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754 0000 B0B5     		push	{r4, r5, r7, lr}
 1755              		.cfi_def_cfa_offset 16
 1756              		.cfi_offset 4, -16
 1757              		.cfi_offset 5, -12
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 ADF5816D 		sub	sp, sp, #1032
 1761              		.cfi_def_cfa_offset 1048
 1762 0006 06AF     		add	r7, sp, #24
 1763              		.cfi_def_cfa 7, 1024
 1764 0008 3B1D     		adds	r3, r7, #4
 1765 000a 1860     		str	r0, [r3]
 618:.\modem.c     **** 
 619:.\modem.c     **** 	// Handle retries in main()
 620:.\modem.c     ****     //uint8 attempts = 0;
 621:.\modem.c     ****     //for(attempts = 0; attempts < MAX_SEND_ATTEMPTS; attempts++) {
 622:.\modem.c     ****         
 623:.\modem.c     ****     // Proceed if modem is already connected.
 624:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1766              		.loc 1 624 0
 1767 000c 2D4B     		ldr	r3, .L148
 1768 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 0010 032B     		cmp	r3, #3
 1770 0012 50D1     		bne	.L145
 625:.\modem.c     **** 		// Reset uart for incoming data from modem
 626:.\modem.c     ****         uart_string_reset();
 1771              		.loc 1 626 0
 1772 0014 FFF7FEFF 		bl	uart_string_reset
 627:.\modem.c     **** 			
 628:.\modem.c     **** 		// Connect to web server
 629:.\modem.c     ****         //if(at_write_command("AT#SKTD=1,80,\"api.xively.com\",0,0\r","CONNECT",5000u) != 0){
 630:.\modem.c     **** 		if(at_write_command("AT#SD=1,0,8086,\"ec2-54-148-229-234.us-west-2.compute.amazonaws.com\",0,0,1\
 1773              		.loc 1 630 0
 1774 0018 2B48     		ldr	r0, .L148+4
 1775 001a 2C49     		ldr	r1, .L148+8
 1776 001c 43F69822 		movw	r2, #15000
 1777 0020 FFF7FEFF 		bl	at_write_command
 1778 0024 0346     		mov	r3, r0
 1779 0026 002B     		cmp	r3, #0
 1780 0028 45D0     		beq	.L145
 631:.\modem.c     **** 		//if(at_write_command("AT#SD=1,0,80,\"www.google.com\",0,0\r\n","CONNECT",15000u) != 0){
 632:.\modem.c     **** 			
 633:.\modem.c     **** 			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 1781              		.loc 1 633 0
 1782 002a 2948     		ldr	r0, .L148+12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 45


 1783 002c 2949     		ldr	r1, .L148+16
 1784 002e 42F21072 		movw	r2, #10000
 1785 0032 FFF7FEFF 		bl	at_write_command
 1786 0036 0346     		mov	r3, r0
 1787 0038 002B     		cmp	r3, #0
 1788 003a 3CD0     		beq	.L145
 1789              	.LBB4:
 634:.\modem.c     **** 			// Write packet information to serial and send
 635:.\modem.c     **** 	            char put_str[MAX_PACKET_LENGTH], key_str[100];
 636:.\modem.c     **** 	            
 637:.\modem.c     **** 	            sprintf(put_str,"POST /write?db=cellBoard_test HTTP/1.0\r\n");
 1790              		.loc 1 637 0
 1791 003c 07F10802 		add	r2, r7, #8
 1792 0040 254B     		ldr	r3, .L148+20
 1793 0042 1446     		mov	r4, r2
 1794 0044 1D46     		mov	r5, r3
 1795 0046 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1796 0048 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1797 004a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1798 004c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1799 004e 95E80700 		ldmia	r5, {r0, r1, r2}
 1800 0052 03C4     		stmia	r4!, {r0, r1}
 1801 0054 2270     		strb	r2, [r4]
 638:.\modem.c     **** 	            sprintf(put_str,"%s%s%s%d%s%s%s",
 1802              		.loc 1 638 0
 1803 0056 3B1D     		adds	r3, r7, #4
 1804 0058 1868     		ldr	r0, [r3]
 1805 005a FFF7FEFF 		bl	strlen
 1806 005e 0146     		mov	r1, r0
 1807 0060 07F10802 		add	r2, r7, #8
 1808 0064 07F10803 		add	r3, r7, #8
 1809 0068 1C48     		ldr	r0, .L148+24
 1810 006a 0090     		str	r0, [sp]
 1811 006c 0191     		str	r1, [sp, #4]
 1812 006e 1C49     		ldr	r1, .L148+28
 1813 0070 0291     		str	r1, [sp, #8]
 1814 0072 391D     		adds	r1, r7, #4
 1815 0074 0968     		ldr	r1, [r1]
 1816 0076 0391     		str	r1, [sp, #12]
 1817 0078 1A49     		ldr	r1, .L148+32
 1818 007a 0491     		str	r1, [sp, #16]
 1819 007c 1046     		mov	r0, r2
 1820 007e 1A49     		ldr	r1, .L148+36
 1821 0080 1A46     		mov	r2, r3
 1822 0082 1A4B     		ldr	r3, .L148+40
 1823 0084 FFF7FEFF 		bl	sprintf
 639:.\modem.c     **** 	                put_str,
 640:.\modem.c     **** 	                "Host: ec2-54-148-229-234.us-west-2.compute.amazonaws.com:8086\r\n",
 641:.\modem.c     **** 	                "Content-Length: ", strlen(body),
 642:.\modem.c     **** 	                "\r\n\r\n", body, "\r\n\032");
 643:.\modem.c     **** 	                // change second from last back to body
 644:.\modem.c     **** 				// Reset uart for incoming data from modem
 645:.\modem.c     **** 	            uart_string_reset();
 1824              		.loc 1 645 0
 1825 0088 FFF7FEFF 		bl	uart_string_reset
 646:.\modem.c     **** 
 647:.\modem.c     **** 				if(at_write_command(put_str,"SRING: 1",10000u) != 0){
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 46


 1826              		.loc 1 647 0
 1827 008c 07F10803 		add	r3, r7, #8
 1828 0090 1846     		mov	r0, r3
 1829 0092 1749     		ldr	r1, .L148+44
 1830 0094 42F21072 		movw	r2, #10000
 1831 0098 FFF7FEFF 		bl	at_write_command
 1832 009c 0346     		mov	r3, r0
 1833 009e 002B     		cmp	r3, #0
 1834 00a0 09D0     		beq	.L145
 648:.\modem.c     ****                     // Read GET response from the buffer
 649:.\modem.c     ****                     uart_string_reset();
 1835              		.loc 1 649 0
 1836 00a2 FFF7FEFF 		bl	uart_string_reset
 650:.\modem.c     ****                     //CyDelay(5000u);
 651:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","200 OK",10000u);
 1837              		.loc 1 651 0
 1838 00a6 1348     		ldr	r0, .L148+48
 1839 00a8 1349     		ldr	r1, .L148+52
 1840 00aa 42F21072 		movw	r2, #10000
 1841 00ae FFF7FEFF 		bl	at_write_command
 652:.\modem.c     **** 					
 653:.\modem.c     ****                     return 1u;   // return 1 if succesfully sent sms
 1842              		.loc 1 653 0
 1843 00b2 0123     		movs	r3, #1
 1844 00b4 00E0     		b	.L147
 1845              	.L145:
 1846              	.LBE4:
 654:.\modem.c     **** 
 655:.\modem.c     ****                 }
 656:.\modem.c     **** 				/* GC 864
 657:.\modem.c     **** 	            if(at_write_command(put_str,"200 OK",15000u) != 0){
 658:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 659:.\modem.c     **** 	            }
 660:.\modem.c     **** 				*/
 661:.\modem.c     ****             }
 662:.\modem.c     ****             /* Write to SD Card debugger
 663:.\modem.c     ****             else {
 664:.\modem.c     ****                 debug_write("(AT#SSEND=1) Could not send data through connected socket.");
 665:.\modem.c     ****             }
 666:.\modem.c     ****             */
 667:.\modem.c     ****         }
 668:.\modem.c     ****         /* Write to SD Card debugger
 669:.\modem.c     ****         else {
 670:.\modem.c     ****             debug_write("(AT#SD=1,0,8081,\"api.xively.com\",0,0,1\r) Could not connect to server.")
 671:.\modem.c     ****         }
 672:.\modem.c     ****         */
 673:.\modem.c     ****     }        
 674:.\modem.c     ****     //}  
 675:.\modem.c     **** 	//modem_reset();
 676:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1847              		.loc 1 676 0
 1848 00b6 0023     		movs	r3, #0
 1849              	.L147:
 677:.\modem.c     **** }
 1850              		.loc 1 677 0
 1851 00b8 1846     		mov	r0, r3
 1852 00ba 07F57C77 		add	r7, r7, #1008
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 47


 1853 00be BD46     		mov	sp, r7
 1854              		@ sp needed
 1855 00c0 B0BD     		pop	{r4, r5, r7, pc}
 1856              	.L149:
 1857 00c2 00BF     		.align	2
 1858              	.L148:
 1859 00c4 00000000 		.word	modem_state
 1860 00c8 3C010000 		.word	.LC25
 1861 00cc 14000000 		.word	.LC2
 1862 00d0 88010000 		.word	.LC26
 1863 00d4 94010000 		.word	.LC27
 1864 00d8 98010000 		.word	.LC28
 1865 00dc 14020000 		.word	.LC31
 1866 00e0 28020000 		.word	.LC32
 1867 00e4 30020000 		.word	.LC33
 1868 00e8 C4010000 		.word	.LC29
 1869 00ec D4010000 		.word	.LC30
 1870 00f0 34020000 		.word	.LC34
 1871 00f4 40020000 		.word	.LC35
 1872 00f8 54020000 		.word	.LC36
 1873              		.cfi_endproc
 1874              	.LFE83:
 1875              		.size	modem_send_packet, .-modem_send_packet
 1876              		.section	.rodata
 1877 025b 00       		.align	2
 1878              	.LC37:
 1879 025c 41542353 		.ascii	"AT#SD=1,0,80,\"api.xively.com\",0,0,1\015\012\000"
 1879      443D312C 
 1879      302C3830 
 1879      2C226170 
 1879      692E7869 
 1880 0282 0000     		.align	2
 1881              	.LC38:
 1882 0284 47455420 		.ascii	"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\015\012"
 1882      2F76322F 
 1882      66656564 
 1882      732F256C 
 1882      752E6373 
 1883 02b3 00       		.ascii	"\000"
 1884              		.align	2
 1885              	.LC39:
 1886 02b4 582D4170 		.ascii	"X-ApiKey: %s\015\012\000"
 1886      694B6579 
 1886      3A202573 
 1886      0D0A00
 1887 02c3 00       		.align	2
 1888              	.LC40:
 1889 02c4 25732573 		.ascii	"%s%s%s%s%s\000"
 1889      25732573 
 1889      257300
 1890 02cf 00       		.align	2
 1891              	.LC41:
 1892 02d0 486F7374 		.ascii	"Host: api.xively.com\015\012\000"
 1892      3A206170 
 1892      692E7869 
 1892      76656C79 
 1892      2E636F6D 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 48


 1893 02e7 00       		.align	2
 1894              	.LC42:
 1895 02e8 41636365 		.ascii	"Accept: text/csv\015\012\000"
 1895      70743A20 
 1895      74657874 
 1895      2F637376 
 1895      0D0A00
 1896 02fb 00       		.align	2
 1897              	.LC43:
 1898 02fc 0D0A1A0D 		.ascii	"\015\012\032\015\000"
 1898      00
 1899              		.section	.text.modem_get_packet,"ax",%progbits
 1900              		.align	2
 1901              		.global	modem_get_packet
 1902              		.thumb
 1903              		.thumb_func
 1904              		.type	modem_get_packet, %function
 1905              	modem_get_packet:
 1906              	.LFB84:
 678:.\modem.c     **** 
 679:.\modem.c     **** 
 680:.\modem.c     **** // read packet from Xively server
 681:.\modem.c     **** uint8 modem_get_packet(char* packet, char* csv){    
 1907              		.loc 1 681 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 1112
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 ADF58D6D 		sub	sp, sp, #1128
 1916              		.cfi_def_cfa_offset 1136
 1917 0006 04AF     		add	r7, sp, #16
 1918              		.cfi_def_cfa 7, 1120
 1919 0008 3B1D     		adds	r3, r7, #4
 1920 000a 1860     		str	r0, [r3]
 1921 000c 3B46     		mov	r3, r7
 1922 000e 1960     		str	r1, [r3]
 682:.\modem.c     **** 
 683:.\modem.c     **** 	// Check if request is too long
 684:.\modem.c     ****     if (strlen(csv) > 125) {
 1923              		.loc 1 684 0
 1924 0010 3B46     		mov	r3, r7
 1925 0012 1868     		ldr	r0, [r3]
 1926 0014 FFF7FEFF 		bl	strlen
 1927 0018 0346     		mov	r3, r0
 1928 001a 7D2B     		cmp	r3, #125
 1929 001c 01D9     		bls	.L151
 685:.\modem.c     ****         /* Write to SD Card debugger
 686:.\modem.c     ****         debug_write("modem_get_packet(): csv length > 100");
 687:.\modem.c     ****         */
 688:.\modem.c     ****         return 0u;
 1930              		.loc 1 688 0
 1931 001e 0023     		movs	r3, #0
 1932 0020 5BE0     		b	.L152
 1933              	.L151:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 49


 689:.\modem.c     ****     }
 690:.\modem.c     **** 	
 691:.\modem.c     **** 	// Changed to handle looping in main()
 692:.\modem.c     ****     //uint8 attempts = 0;            
 693:.\modem.c     ****     //for(attempts = 0; attempts < MAX_GET_ATTEMPTS; attempts++) {
 694:.\modem.c     ****         // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 695:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1934              		.loc 1 695 0
 1935 0022 304B     		ldr	r3, .L155
 1936 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1937 0026 032B     		cmp	r3, #3
 1938 0028 56D1     		bne	.L153
 696:.\modem.c     **** 		// Connect to server
 697:.\modem.c     ****         if(at_write_command("AT#SD=1,0,80,\"api.xively.com\",0,0,1\r\n","OK",20000u) != 0){
 1939              		.loc 1 697 0
 1940 002a 2F48     		ldr	r0, .L155+4
 1941 002c 2F49     		ldr	r1, .L155+8
 1942 002e 44F62062 		movw	r2, #20000
 1943 0032 FFF7FEFF 		bl	at_write_command
 1944 0036 0346     		mov	r3, r0
 1945 0038 002B     		cmp	r3, #0
 1946 003a 4DD0     		beq	.L153
 698:.\modem.c     **** 			
 699:.\modem.c     **** 			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 1947              		.loc 1 699 0
 1948 003c 2C48     		ldr	r0, .L155+12
 1949 003e 2D49     		ldr	r1, .L155+16
 1950 0040 42F21072 		movw	r2, #10000
 1951 0044 FFF7FEFF 		bl	at_write_command
 1952 0048 0346     		mov	r3, r0
 1953 004a 002B     		cmp	r3, #0
 1954 004c 44D0     		beq	.L153
 1955              	.LBB5:
 700:.\modem.c     **** 				// Write packet information to serial and send
 701:.\modem.c     **** 	            char get_str[MAX_PACKET_LENGTH], key_str[100];
 702:.\modem.c     **** 				
 703:.\modem.c     **** 	            sprintf(get_str,"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\r\n", feed_id, csv);
 1956              		.loc 1 703 0
 1957 004e 2A4B     		ldr	r3, .L155+20
 1958 0050 1A68     		ldr	r2, [r3]
 1959 0052 07F17001 		add	r1, r7, #112
 1960 0056 3B46     		mov	r3, r7
 1961 0058 0846     		mov	r0, r1
 1962 005a 2849     		ldr	r1, .L155+24
 1963 005c 1B68     		ldr	r3, [r3]
 1964 005e FFF7FEFF 		bl	sprintf
 704:.\modem.c     **** 	            sprintf(key_str,"X-ApiKey: %s\r\n", api_key);
 1965              		.loc 1 704 0
 1966 0062 274B     		ldr	r3, .L155+28
 1967 0064 1B68     		ldr	r3, [r3]
 1968 0066 07F10C02 		add	r2, r7, #12
 1969 006a 1046     		mov	r0, r2
 1970 006c 2549     		ldr	r1, .L155+32
 1971 006e 1A46     		mov	r2, r3
 1972 0070 FFF7FEFF 		bl	sprintf
 705:.\modem.c     **** 	            sprintf(get_str,"%s%s%s%s%s",
 1973              		.loc 1 705 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 50


 1974 0074 07F17001 		add	r1, r7, #112
 1975 0078 07F17002 		add	r2, r7, #112
 1976 007c 07F10C03 		add	r3, r7, #12
 1977 0080 2148     		ldr	r0, .L155+36
 1978 0082 0090     		str	r0, [sp]
 1979 0084 2148     		ldr	r0, .L155+40
 1980 0086 0190     		str	r0, [sp, #4]
 1981 0088 2148     		ldr	r0, .L155+44
 1982 008a 0290     		str	r0, [sp, #8]
 1983 008c 0846     		mov	r0, r1
 1984 008e 2149     		ldr	r1, .L155+48
 1985 0090 FFF7FEFF 		bl	sprintf
 706:.\modem.c     **** 	                get_str,
 707:.\modem.c     **** 	                key_str,
 708:.\modem.c     **** 	                "Host: api.xively.com\r\n",
 709:.\modem.c     **** 	                "Accept: text/csv\r\n",
 710:.\modem.c     **** 	                "\r\n\032\r");
 711:.\modem.c     **** 	            
 712:.\modem.c     **** 				// Reset uart for incoming data from modem
 713:.\modem.c     **** 	            uart_string_reset();
 1986              		.loc 1 713 0
 1987 0094 FFF7FEFF 		bl	uart_string_reset
 714:.\modem.c     **** 				
 715:.\modem.c     **** 			    if(at_write_command(get_str,"SRING: 1",10000u) != 0){
 1988              		.loc 1 715 0
 1989 0098 07F17003 		add	r3, r7, #112
 1990 009c 1846     		mov	r0, r3
 1991 009e 1E49     		ldr	r1, .L155+52
 1992 00a0 42F21072 		movw	r2, #10000
 1993 00a4 FFF7FEFF 		bl	at_write_command
 1994 00a8 0346     		mov	r3, r0
 1995 00aa 002B     		cmp	r3, #0
 1996 00ac 14D0     		beq	.L153
 716:.\modem.c     ****                     // Read GET response from the buffer
 717:.\modem.c     ****                     uart_string_reset();
 1997              		.loc 1 717 0
 1998 00ae FFF7FEFF 		bl	uart_string_reset
 718:.\modem.c     ****                     //CyDelay(5000u);
 719:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","OK",10000u);
 1999              		.loc 1 719 0
 2000 00b2 1A48     		ldr	r0, .L155+56
 2001 00b4 0D49     		ldr	r1, .L155+8
 2002 00b6 42F21072 		movw	r2, #10000
 2003 00ba FFF7FEFF 		bl	at_write_command
 720:.\modem.c     ****                     //strcpy(packet, uart_received_string);
 721:.\modem.c     ****                     strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 2004              		.loc 1 721 0
 2005 00be 1848     		ldr	r0, .L155+60
 2006 00c0 1849     		ldr	r1, .L155+64
 2007 00c2 FFF7FEFF 		bl	strstr
 2008 00c6 0346     		mov	r3, r0
 2009 00c8 0433     		adds	r3, r3, #4
 2010 00ca 3A1D     		adds	r2, r7, #4
 2011 00cc 1068     		ldr	r0, [r2]
 2012 00ce 1946     		mov	r1, r3
 2013 00d0 FFF7FEFF 		bl	strcpy
 722:.\modem.c     ****                     
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 51


 723:.\modem.c     ****                     //debug_write("Packet received successfully.");
 724:.\modem.c     ****                     return 1u;   // return 1 if successful
 2014              		.loc 1 724 0
 2015 00d4 0123     		movs	r3, #1
 2016 00d6 00E0     		b	.L152
 2017              	.L153:
 2018              	.LBE5:
 725:.\modem.c     **** 
 726:.\modem.c     ****                 }
 727:.\modem.c     **** 				
 728:.\modem.c     **** 				/* GC864
 729:.\modem.c     **** 	            if(at_write_command(get_str,"200 OK",15000u) != 0){
 730:.\modem.c     **** 					strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 731:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 732:.\modem.c     **** 	            }
 733:.\modem.c     **** 				*/
 734:.\modem.c     ****             }
 735:.\modem.c     **** 			/* OLD, method used AT#SD=1,0,80,\"api.xively.com\",0,0,1 combined with SSEND
 736:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 737:.\modem.c     ****                 // Read GET response from the buffer
 738:.\modem.c     ****                 uart_string_reset();
 739:.\modem.c     ****                 //CyDelay(5000u);
 740:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 741:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 742:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 743:.\modem.c     ****                 
 744:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 745:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 746:.\modem.c     **** 
 747:.\modem.c     ****             }
 748:.\modem.c     **** 			*/
 749:.\modem.c     **** 			
 750:.\modem.c     ****             /* Write to SD Card debugger
 751:.\modem.c     ****             else {
 752:.\modem.c     ****                 debug_write("(at_write_command(sendBuffer,\"OK\"...) Data sent unsuccessfully.");
 753:.\modem.c     ****             }
 754:.\modem.c     ****             */
 755:.\modem.c     **** 
 756:.\modem.c     ****             //uint8 disconnected = modem_disconnect();
 757:.\modem.c     ****         }
 758:.\modem.c     ****             /* Write to SD Card debugger
 759:.\modem.c     ****             else {
 760:.\modem.c     ****                 debug_write("(AT#SD=1,0,80,\"api.xively.com\",0,0,1) Could not connect to server.")
 761:.\modem.c     ****             }
 762:.\modem.c     ****             */
 763:.\modem.c     ****         /*}
 764:.\modem.c     ****         
 765:.\modem.c     ****         if (attempts < MAX_GET_ATTEMPTS-1) { // Don't reset the modem on the last attempt since it 
 766:.\modem.c     ****             modem_reset();
 767:.\modem.c     ****         }
 768:.\modem.c     ****         */
 769:.\modem.c     ****     }
 770:.\modem.c     ****     //modem_disconnect();
 771:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 2019              		.loc 1 771 0
 2020 00d8 0023     		movs	r3, #0
 2021              	.L152:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 52


 772:.\modem.c     **** }
 2022              		.loc 1 772 0
 2023 00da 1846     		mov	r0, r3
 2024 00dc 07F58B67 		add	r7, r7, #1112
 2025 00e0 BD46     		mov	sp, r7
 2026              		@ sp needed
 2027 00e2 80BD     		pop	{r7, pc}
 2028              	.L156:
 2029              		.align	2
 2030              	.L155:
 2031 00e4 00000000 		.word	modem_state
 2032 00e8 5C020000 		.word	.LC37
 2033 00ec 14000000 		.word	.LC2
 2034 00f0 88010000 		.word	.LC26
 2035 00f4 94010000 		.word	.LC27
 2036 00f8 00000000 		.word	feed_id
 2037 00fc 84020000 		.word	.LC38
 2038 0100 00000000 		.word	api_key
 2039 0104 B4020000 		.word	.LC39
 2040 0108 D0020000 		.word	.LC41
 2041 010c E8020000 		.word	.LC42
 2042 0110 FC020000 		.word	.LC43
 2043 0114 C4020000 		.word	.LC40
 2044 0118 34020000 		.word	.LC34
 2045 011c 40020000 		.word	.LC35
 2046 0120 00000000 		.word	uart_received_string
 2047 0124 28020000 		.word	.LC32
 2048              		.cfi_endproc
 2049              	.LFE84:
 2050              		.size	modem_get_packet, .-modem_get_packet
 2051              		.section	.rodata
 2052 0301 000000   		.align	2
 2053              	.LC44:
 2054 0304 6C6F636B 		.ascii	"lock\000"
 2054      00
 2055 0309 000000   		.align	2
 2056              	.LC45:
 2057 030c 7B226D65 		.ascii	"{\"method\":\"put\",\"resource\":\"/feeds/%lu\",\"h"
 2057      74686F64 
 2057      223A2270 
 2057      7574222C 
 2057      22726573 
 2058 0336 65616465 		.ascii	"eaders\":{\"X-ApiKey\":\"%s\"},\"body\":{\"version\""
 2058      7273223A 
 2058      7B22582D 
 2058      4170694B 
 2058      6579223A 
 2059 0361 3A22312E 		.ascii	":\"1.0.0\",\"datastreams\":[{ \"id\" : \"lock\", \""
 2059      302E3022 
 2059      2C226461 
 2059      74617374 
 2059      7265616D 
 2060 038b 63757272 		.ascii	"current_value\" : \"%u\"}]}}\000"
 2060      656E745F 
 2060      76616C75 
 2060      6522203A 
 2060      20222575 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 53


 2061 03a5 000000   		.section	.text.modem_acquire_lock,"ax",%progbits
 2062              		.align	2
 2063              		.global	modem_acquire_lock
 2064              		.thumb
 2065              		.thumb_func
 2066              		.type	modem_acquire_lock, %function
 2067              	modem_acquire_lock:
 2068              	.LFB85:
 773:.\modem.c     **** 
 774:.\modem.c     **** uint8 modem_acquire_lock(){
 2069              		.loc 1 774 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 320
 2072              		@ frame_needed = 1, uses_anonymous_args = 0
 2073 0000 80B5     		push	{r7, lr}
 2074              		.cfi_def_cfa_offset 8
 2075              		.cfi_offset 7, -8
 2076              		.cfi_offset 14, -4
 2077 0002 D2B0     		sub	sp, sp, #328
 2078              		.cfi_def_cfa_offset 336
 2079 0004 02AF     		add	r7, sp, #8
 2080              		.cfi_def_cfa 7, 328
 775:.\modem.c     ****     
 776:.\modem.c     ****     /*
 777:.\modem.c     ****     if (lock_acquired == 1u) {
 778:.\modem.c     ****         return 1u;
 779:.\modem.c     ****     }
 780:.\modem.c     ****     */
 781:.\modem.c     ****     
 782:.\modem.c     ****     uint8 lock = 0u;
 2081              		.loc 1 782 0
 2082 0006 0023     		movs	r3, #0
 2083 0008 87F83331 		strb	r3, [r7, #307]
 783:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2084              		.loc 1 783 0
 2085 000c 0023     		movs	r3, #0
 2086 000e C7F83C31 		str	r3, [r7, #316]
 2087 0012 6423     		movs	r3, #100
 2088 0014 C7F83831 		str	r3, [r7, #312]
 2089 0018 0223     		movs	r3, #2
 2090 001a C7F83431 		str	r3, [r7, #308]
 784:.\modem.c     ****     char data_packet[300] = {0};
 2091              		.loc 1 784 0
 2092 001e 3B1D     		adds	r3, r7, #4
 2093 0020 1A46     		mov	r2, r3
 2094 0022 4FF49673 		mov	r3, #300
 2095 0026 1046     		mov	r0, r2
 2096 0028 0021     		movs	r1, #0
 2097 002a 1A46     		mov	r2, r3
 2098 002c FFF7FEFF 		bl	memset
 785:.\modem.c     ****             
 786:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2099              		.loc 1 786 0
 2100 0030 0023     		movs	r3, #0
 2101 0032 C7F83C31 		str	r3, [r7, #316]
 2102 0036 3DE0     		b	.L158
 2103              	.L161:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 54


 787:.\modem.c     ****         if(modem_get_packet(data_packet,"lock")){
 2104              		.loc 1 787 0
 2105 0038 3B1D     		adds	r3, r7, #4
 2106 003a 1846     		mov	r0, r3
 2107 003c 2349     		ldr	r1, .L163
 2108 003e FFF7FEFF 		bl	modem_get_packet
 2109 0042 0346     		mov	r3, r0
 2110 0044 002B     		cmp	r3, #0
 2111 0046 2CD0     		beq	.L159
 788:.\modem.c     ****             if(packet_get_uint8(data_packet, "lock", &lock) && lock == 0u){
 2112              		.loc 1 788 0
 2113 0048 3A1D     		adds	r2, r7, #4
 2114 004a 07F23313 		addw	r3, r7, #307
 2115 004e 1046     		mov	r0, r2
 2116 0050 1E49     		ldr	r1, .L163
 2117 0052 1A46     		mov	r2, r3
 2118 0054 FFF7FEFF 		bl	packet_get_uint8
 2119 0058 0346     		mov	r3, r0
 2120 005a 002B     		cmp	r3, #0
 2121 005c 21D0     		beq	.L159
 2122              		.loc 1 788 0 is_stmt 0 discriminator 1
 2123 005e 97F83331 		ldrb	r3, [r7, #307]	@ zero_extendqisi2
 2124 0062 002B     		cmp	r3, #0
 2125 0064 1DD1     		bne	.L159
 789:.\modem.c     ****             
 790:.\modem.c     ****                 memset(&data_packet[0],0,sizeof(data_packet));
 2126              		.loc 1 790 0 is_stmt 1
 2127 0066 3B1D     		adds	r3, r7, #4
 2128 0068 1846     		mov	r0, r3
 2129 006a 0021     		movs	r1, #0
 2130 006c 4FF49672 		mov	r2, #300
 2131 0070 FFF7FEFF 		bl	memset
 791:.\modem.c     ****                 sprintf(data_packet, "{"
 2132              		.loc 1 791 0
 2133 0074 164B     		ldr	r3, .L163+4
 2134 0076 1A68     		ldr	r2, [r3]
 2135 0078 164B     		ldr	r3, .L163+8
 2136 007a 1B68     		ldr	r3, [r3]
 2137 007c 391D     		adds	r1, r7, #4
 2138 007e 0120     		movs	r0, #1
 2139 0080 0090     		str	r0, [sp]
 2140 0082 0846     		mov	r0, r1
 2141 0084 1449     		ldr	r1, .L163+12
 2142 0086 FFF7FEFF 		bl	sprintf
 792:.\modem.c     ****                       "\"method\":\"put\","
 793:.\modem.c     ****                       "\"resource\":\"/feeds/%lu\","
 794:.\modem.c     ****                       "\"headers\":{\"X-ApiKey\":\"%s\"},"
 795:.\modem.c     ****                       "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 796:.\modem.c     ****                             "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 797:.\modem.c     ****                       "]}}",
 798:.\modem.c     ****                       feed_id,api_key,1u);
 799:.\modem.c     ****                       
 800:.\modem.c     ****                 if(modem_send_packet(data_packet)) {
 2143              		.loc 1 800 0
 2144 008a 3B1D     		adds	r3, r7, #4
 2145 008c 1846     		mov	r0, r3
 2146 008e FFF7FEFF 		bl	modem_send_packet
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 55


 2147 0092 0346     		mov	r3, r0
 2148 0094 002B     		cmp	r3, #0
 2149 0096 04D0     		beq	.L159
 801:.\modem.c     ****                     lock_acquired = 1u;
 2150              		.loc 1 801 0
 2151 0098 104B     		ldr	r3, .L163+16
 2152 009a 0122     		movs	r2, #1
 2153 009c 1A70     		strb	r2, [r3]
 802:.\modem.c     ****                     return 1u;
 2154              		.loc 1 802 0
 2155 009e 0123     		movs	r3, #1
 2156 00a0 0FE0     		b	.L162
 2157              	.L159:
 803:.\modem.c     ****                 }
 804:.\modem.c     ****             }  
 805:.\modem.c     ****         }
 806:.\modem.c     ****         CyDelay(delay);
 2158              		.loc 1 806 0
 2159 00a2 D7F83801 		ldr	r0, [r7, #312]
 2160 00a6 FFF7FEFF 		bl	CyDelay
 786:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2161              		.loc 1 786 0
 2162 00aa D7F83C31 		ldr	r3, [r7, #316]
 2163 00ae 0133     		adds	r3, r3, #1
 2164 00b0 C7F83C31 		str	r3, [r7, #316]
 2165              	.L158:
 786:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2166              		.loc 1 786 0 is_stmt 0 discriminator 1
 2167 00b4 D7F83C21 		ldr	r2, [r7, #316]
 2168 00b8 D7F83431 		ldr	r3, [r7, #308]
 2169 00bc 9A42     		cmp	r2, r3
 2170 00be BBD3     		bcc	.L161
 807:.\modem.c     ****     }
 808:.\modem.c     ****          
 809:.\modem.c     ****     return 0u;
 2171              		.loc 1 809 0 is_stmt 1
 2172 00c0 0023     		movs	r3, #0
 2173              	.L162:
 810:.\modem.c     **** }
 2174              		.loc 1 810 0
 2175 00c2 1846     		mov	r0, r3
 2176 00c4 07F5A077 		add	r7, r7, #320
 2177 00c8 BD46     		mov	sp, r7
 2178              		@ sp needed
 2179 00ca 80BD     		pop	{r7, pc}
 2180              	.L164:
 2181              		.align	2
 2182              	.L163:
 2183 00cc 04030000 		.word	.LC44
 2184 00d0 00000000 		.word	feed_id
 2185 00d4 00000000 		.word	api_key
 2186 00d8 0C030000 		.word	.LC45
 2187 00dc 00000000 		.word	lock_acquired
 2188              		.cfi_endproc
 2189              	.LFE85:
 2190              		.size	modem_acquire_lock, .-modem_acquire_lock
 2191              		.section	.text.modem_release_lock,"ax",%progbits
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 56


 2192              		.align	2
 2193              		.global	modem_release_lock
 2194              		.thumb
 2195              		.thumb_func
 2196              		.type	modem_release_lock, %function
 2197              	modem_release_lock:
 2198              	.LFB86:
 811:.\modem.c     **** 
 812:.\modem.c     **** uint8 modem_release_lock(){
 2199              		.loc 1 812 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 312
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203 0000 80B5     		push	{r7, lr}
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 D0B0     		sub	sp, sp, #320
 2208              		.cfi_def_cfa_offset 328
 2209 0004 02AF     		add	r7, sp, #8
 2210              		.cfi_def_cfa 7, 320
 813:.\modem.c     ****     /*
 814:.\modem.c     ****     if (lock_acquired == 0u) {
 815:.\modem.c     ****         return 1u;
 816:.\modem.c     ****     }
 817:.\modem.c     ****     */
 818:.\modem.c     ****     
 819:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2211              		.loc 1 819 0
 2212 0006 0023     		movs	r3, #0
 2213 0008 C7F83431 		str	r3, [r7, #308]
 2214 000c 6423     		movs	r3, #100
 2215 000e C7F83031 		str	r3, [r7, #304]
 2216 0012 0223     		movs	r3, #2
 2217 0014 C7F82C31 		str	r3, [r7, #300]
 820:.\modem.c     ****     char data_packet[300] = {0};
 2218              		.loc 1 820 0
 2219 0018 3B46     		mov	r3, r7
 2220 001a 1A46     		mov	r2, r3
 2221 001c 4FF49673 		mov	r3, #300
 2222 0020 1046     		mov	r0, r2
 2223 0022 0021     		movs	r1, #0
 2224 0024 1A46     		mov	r2, r3
 2225 0026 FFF7FEFF 		bl	memset
 821:.\modem.c     ****     
 822:.\modem.c     ****     sprintf(data_packet, "{"
 2226              		.loc 1 822 0
 2227 002a 184B     		ldr	r3, .L171
 2228 002c 1A68     		ldr	r2, [r3]
 2229 002e 184B     		ldr	r3, .L171+4
 2230 0030 1B68     		ldr	r3, [r3]
 2231 0032 3946     		mov	r1, r7
 2232 0034 0020     		movs	r0, #0
 2233 0036 0090     		str	r0, [sp]
 2234 0038 0846     		mov	r0, r1
 2235 003a 1649     		ldr	r1, .L171+8
 2236 003c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 57


 823:.\modem.c     ****           "\"method\":\"put\","
 824:.\modem.c     ****           "\"resource\":\"/feeds/%lu\","
 825:.\modem.c     ****           "\"headers\":{\"X-ApiKey\":\"%s\"},"
 826:.\modem.c     ****           "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 827:.\modem.c     ****                 "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 828:.\modem.c     ****           "]}}",
 829:.\modem.c     ****           feed_id, api_key, 0u);
 830:.\modem.c     ****         
 831:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2237              		.loc 1 831 0
 2238 0040 0023     		movs	r3, #0
 2239 0042 C7F83431 		str	r3, [r7, #308]
 2240 0046 14E0     		b	.L166
 2241              	.L169:
 832:.\modem.c     **** 
 833:.\modem.c     ****         if(modem_send_packet(data_packet)) {
 2242              		.loc 1 833 0
 2243 0048 3B46     		mov	r3, r7
 2244 004a 1846     		mov	r0, r3
 2245 004c FFF7FEFF 		bl	modem_send_packet
 2246 0050 0346     		mov	r3, r0
 2247 0052 002B     		cmp	r3, #0
 2248 0054 04D0     		beq	.L167
 834:.\modem.c     ****             lock_acquired = 0u;
 2249              		.loc 1 834 0
 2250 0056 104B     		ldr	r3, .L171+12
 2251 0058 0022     		movs	r2, #0
 2252 005a 1A70     		strb	r2, [r3]
 835:.\modem.c     ****             return 1u;
 2253              		.loc 1 835 0
 2254 005c 0123     		movs	r3, #1
 2255 005e 0FE0     		b	.L170
 2256              	.L167:
 836:.\modem.c     ****         }
 837:.\modem.c     ****         
 838:.\modem.c     ****         CyDelay(delay);
 2257              		.loc 1 838 0
 2258 0060 D7F83001 		ldr	r0, [r7, #304]
 2259 0064 FFF7FEFF 		bl	CyDelay
 831:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2260              		.loc 1 831 0
 2261 0068 D7F83431 		ldr	r3, [r7, #308]
 2262 006c 0133     		adds	r3, r3, #1
 2263 006e C7F83431 		str	r3, [r7, #308]
 2264              	.L166:
 831:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2265              		.loc 1 831 0 is_stmt 0 discriminator 1
 2266 0072 D7F83421 		ldr	r2, [r7, #308]
 2267 0076 D7F82C31 		ldr	r3, [r7, #300]
 2268 007a 9A42     		cmp	r2, r3
 2269 007c E4D3     		bcc	.L169
 839:.\modem.c     ****     }
 840:.\modem.c     ****          
 841:.\modem.c     ****     return 0u;
 2270              		.loc 1 841 0 is_stmt 1
 2271 007e 0023     		movs	r3, #0
 2272              	.L170:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 58


 842:.\modem.c     **** }
 2273              		.loc 1 842 0
 2274 0080 1846     		mov	r0, r3
 2275 0082 07F59C77 		add	r7, r7, #312
 2276 0086 BD46     		mov	sp, r7
 2277              		@ sp needed
 2278 0088 80BD     		pop	{r7, pc}
 2279              	.L172:
 2280 008a 00BF     		.align	2
 2281              	.L171:
 2282 008c 00000000 		.word	feed_id
 2283 0090 00000000 		.word	api_key
 2284 0094 0C030000 		.word	.LC45
 2285 0098 00000000 		.word	lock_acquired
 2286              		.cfi_endproc
 2287              	.LFE86:
 2288              		.size	modem_release_lock, .-modem_release_lock
 2289              		.section	.text.uart_string_reset,"ax",%progbits
 2290              		.align	2
 2291              		.global	uart_string_reset
 2292              		.thumb
 2293              		.thumb_func
 2294              		.type	uart_string_reset, %function
 2295              	uart_string_reset:
 2296              	.LFB87:
 843:.\modem.c     **** 
 844:.\modem.c     **** void uart_string_reset(){
 2297              		.loc 1 844 0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 1, uses_anonymous_args = 0
 2301 0000 80B5     		push	{r7, lr}
 2302              		.cfi_def_cfa_offset 8
 2303              		.cfi_offset 7, -8
 2304              		.cfi_offset 14, -4
 2305 0002 00AF     		add	r7, sp, #0
 2306              		.cfi_def_cfa_register 7
 845:.\modem.c     ****     // reset uart_received_string to zero
 846:.\modem.c     ****     /*
 847:.\modem.c     ****     uint16 i = 0;
 848:.\modem.c     ****     
 849:.\modem.c     ****     for(i = 0; i < 700; i++){
 850:.\modem.c     ****         uart_received_string[i] = 0;
 851:.\modem.c     ****     }
 852:.\modem.c     ****     */
 853:.\modem.c     ****     memset(&uart_received_string[0],0,sizeof(uart_received_string));
 2307              		.loc 1 853 0
 2308 0004 0548     		ldr	r0, .L174
 2309 0006 0021     		movs	r1, #0
 2310 0008 4FF47A72 		mov	r2, #1000
 2311 000c FFF7FEFF 		bl	memset
 854:.\modem.c     ****     uart_string_index = 0;
 2312              		.loc 1 854 0
 2313 0010 034B     		ldr	r3, .L174+4
 2314 0012 0022     		movs	r2, #0
 2315 0014 1A80     		strh	r2, [r3]	@ movhi
 855:.\modem.c     ****     Telit_UART_ClearRxBuffer();
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 59


 2316              		.loc 1 855 0
 2317 0016 FFF7FEFF 		bl	Telit_UART_ClearRxBuffer
 856:.\modem.c     **** //    uart_ClearTxBuffer();
 857:.\modem.c     **** }
 2318              		.loc 1 857 0
 2319 001a 80BD     		pop	{r7, pc}
 2320              	.L175:
 2321              		.align	2
 2322              	.L174:
 2323 001c 00000000 		.word	uart_received_string
 2324 0020 00000000 		.word	uart_string_index
 2325              		.cfi_endproc
 2326              	.LFE87:
 2327              		.size	uart_string_reset, .-uart_string_reset
 2328              		.section	.text.Telit_isr_rx,"ax",%progbits
 2329              		.align	2
 2330              		.global	Telit_isr_rx
 2331              		.thumb
 2332              		.thumb_func
 2333              		.type	Telit_isr_rx, %function
 2334              	Telit_isr_rx:
 2335              	.LFB88:
 858:.\modem.c     **** 
 859:.\modem.c     **** // this function fires when uart rx receives bytes (when modem is sending bytes)
 860:.\modem.c     **** CY_ISR(Telit_isr_rx){
 2336              		.loc 1 860 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 8
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340 0000 80B5     		push	{r7, lr}
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 7, -8
 2343              		.cfi_offset 14, -4
 2344 0002 82B0     		sub	sp, sp, #8
 2345              		.cfi_def_cfa_offset 16
 2346 0004 00AF     		add	r7, sp, #0
 2347              		.cfi_def_cfa_register 7
 861:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2348              		.loc 1 861 0
 2349 0006 11E0     		b	.L177
 2350              	.L178:
 2351              	.LBB6:
 862:.\modem.c     ****         // hold the next char in the rx register as a temporary variable
 863:.\modem.c     ****         char rx_char_hold = Telit_UART_GetChar();
 2352              		.loc 1 863 0
 2353 0008 FFF7FEFF 		bl	Telit_UART_GetChar
 2354 000c 0346     		mov	r3, r0
 2355 000e FB71     		strb	r3, [r7, #7]
 864:.\modem.c     ****         
 865:.\modem.c     ****         // store the char in uart_received_string
 866:.\modem.c     ****         if(rx_char_hold){
 2356              		.loc 1 866 0
 2357 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2358 0012 002B     		cmp	r3, #0
 2359 0014 0AD0     		beq	.L177
 867:.\modem.c     ****             uart_received_string[uart_string_index] = rx_char_hold;
 2360              		.loc 1 867 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 60


 2361 0016 094B     		ldr	r3, .L179
 2362 0018 1B88     		ldrh	r3, [r3]
 2363 001a 094A     		ldr	r2, .L179+4
 2364 001c F979     		ldrb	r1, [r7, #7]
 2365 001e D154     		strb	r1, [r2, r3]
 868:.\modem.c     ****             uart_string_index++;
 2366              		.loc 1 868 0
 2367 0020 064B     		ldr	r3, .L179
 2368 0022 1B88     		ldrh	r3, [r3]
 2369 0024 0133     		adds	r3, r3, #1
 2370 0026 9AB2     		uxth	r2, r3
 2371 0028 044B     		ldr	r3, .L179
 2372 002a 1A80     		strh	r2, [r3]	@ movhi
 2373              	.L177:
 2374              	.LBE6:
 861:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2375              		.loc 1 861 0 discriminator 1
 2376 002c FFF7FEFF 		bl	Telit_UART_GetRxBufferSize
 2377 0030 0346     		mov	r3, r0
 2378 0032 002B     		cmp	r3, #0
 2379 0034 E8D1     		bne	.L178
 869:.\modem.c     ****         }
 870:.\modem.c     ****     }
 871:.\modem.c     **** }
 2380              		.loc 1 871 0
 2381 0036 0837     		adds	r7, r7, #8
 2382 0038 BD46     		mov	sp, r7
 2383              		@ sp needed
 2384 003a 80BD     		pop	{r7, pc}
 2385              	.L180:
 2386              		.align	2
 2387              	.L179:
 2388 003c 00000000 		.word	uart_string_index
 2389 0040 00000000 		.word	uart_received_string
 2390              		.cfi_endproc
 2391              	.LFE88:
 2392              		.size	Telit_isr_rx, .-Telit_isr_rx
 2393              		.text
 2394              	.Letext0:
 2395              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2396              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2397              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2398              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 2399              		.section	.debug_info,"",%progbits
 2400              	.Ldebug_info0:
 2401 0000 73070000 		.4byte	0x773
 2402 0004 0400     		.2byte	0x4
 2403 0006 00000000 		.4byte	.Ldebug_abbrev0
 2404 000a 04       		.byte	0x4
 2405 000b 01       		.uleb128 0x1
 2406 000c C7000000 		.4byte	.LASF83
 2407 0010 01       		.byte	0x1
 2408 0011 5A000000 		.4byte	.LASF84
 2409 0015 9E010000 		.4byte	.LASF85
 2410 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2411 001d 00000000 		.4byte	0
 2412 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 61


 2413 0025 02       		.uleb128 0x2
 2414 0026 01       		.byte	0x1
 2415 0027 06       		.byte	0x6
 2416 0028 D4020000 		.4byte	.LASF0
 2417 002c 02       		.uleb128 0x2
 2418 002d 01       		.byte	0x1
 2419 002e 08       		.byte	0x8
 2420 002f AE020000 		.4byte	.LASF1
 2421 0033 02       		.uleb128 0x2
 2422 0034 02       		.byte	0x2
 2423 0035 05       		.byte	0x5
 2424 0036 B3000000 		.4byte	.LASF2
 2425 003a 02       		.uleb128 0x2
 2426 003b 02       		.byte	0x2
 2427 003c 07       		.byte	0x7
 2428 003d 14030000 		.4byte	.LASF3
 2429 0041 03       		.uleb128 0x3
 2430 0042 0C040000 		.4byte	.LASF9
 2431 0046 02       		.byte	0x2
 2432 0047 37       		.byte	0x37
 2433 0048 4C000000 		.4byte	0x4c
 2434 004c 02       		.uleb128 0x2
 2435 004d 04       		.byte	0x4
 2436 004e 05       		.byte	0x5
 2437 004f 28020000 		.4byte	.LASF4
 2438 0053 02       		.uleb128 0x2
 2439 0054 04       		.byte	0x4
 2440 0055 07       		.byte	0x7
 2441 0056 B2030000 		.4byte	.LASF5
 2442 005a 02       		.uleb128 0x2
 2443 005b 08       		.byte	0x8
 2444 005c 05       		.byte	0x5
 2445 005d FA010000 		.4byte	.LASF6
 2446 0061 02       		.uleb128 0x2
 2447 0062 08       		.byte	0x8
 2448 0063 07       		.byte	0x7
 2449 0064 E0020000 		.4byte	.LASF7
 2450 0068 04       		.uleb128 0x4
 2451 0069 04       		.byte	0x4
 2452 006a 05       		.byte	0x5
 2453 006b 696E7400 		.ascii	"int\000"
 2454 006f 02       		.uleb128 0x2
 2455 0070 04       		.byte	0x4
 2456 0071 07       		.byte	0x7
 2457 0072 F7020000 		.4byte	.LASF8
 2458 0076 03       		.uleb128 0x3
 2459 0077 4E030000 		.4byte	.LASF10
 2460 007b 03       		.byte	0x3
 2461 007c 41       		.byte	0x41
 2462 007d 41000000 		.4byte	0x41
 2463 0081 03       		.uleb128 0x3
 2464 0082 82030000 		.4byte	.LASF11
 2465 0086 04       		.byte	0x4
 2466 0087 A1       		.byte	0xa1
 2467 0088 2C000000 		.4byte	0x2c
 2468 008c 03       		.uleb128 0x3
 2469 008d 58010000 		.4byte	.LASF12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 62


 2470 0091 04       		.byte	0x4
 2471 0092 A2       		.byte	0xa2
 2472 0093 3A000000 		.4byte	0x3a
 2473 0097 03       		.uleb128 0x3
 2474 0098 9F030000 		.4byte	.LASF13
 2475 009c 04       		.byte	0x4
 2476 009d A3       		.byte	0xa3
 2477 009e 53000000 		.4byte	0x53
 2478 00a2 02       		.uleb128 0x2
 2479 00a3 04       		.byte	0x4
 2480 00a4 04       		.byte	0x4
 2481 00a5 D5010000 		.4byte	.LASF14
 2482 00a9 02       		.uleb128 0x2
 2483 00aa 08       		.byte	0x8
 2484 00ab 04       		.byte	0x4
 2485 00ac D2030000 		.4byte	.LASF15
 2486 00b0 02       		.uleb128 0x2
 2487 00b1 01       		.byte	0x1
 2488 00b2 08       		.byte	0x8
 2489 00b3 36030000 		.4byte	.LASF16
 2490 00b7 02       		.uleb128 0x2
 2491 00b8 04       		.byte	0x4
 2492 00b9 07       		.byte	0x7
 2493 00ba 31020000 		.4byte	.LASF17
 2494 00be 05       		.uleb128 0x5
 2495 00bf 04       		.byte	0x4
 2496 00c0 B0000000 		.4byte	0xb0
 2497 00c4 06       		.uleb128 0x6
 2498 00c5 79020000 		.4byte	.LASF22
 2499 00c9 01       		.byte	0x1
 2500 00ca 23       		.byte	0x23
 2501 00cb 81000000 		.4byte	0x81
 2502 00cf 00000000 		.4byte	.LFB56
 2503 00d3 2C000000 		.4byte	.LFE56-.LFB56
 2504 00d7 01       		.uleb128 0x1
 2505 00d8 9C       		.byte	0x9c
 2506 00d9 F9000000 		.4byte	0xf9
 2507 00dd 07       		.uleb128 0x7
 2508 00de 696400   		.ascii	"id\000"
 2509 00e1 01       		.byte	0x1
 2510 00e2 23       		.byte	0x23
 2511 00e3 97000000 		.4byte	0x97
 2512 00e7 02       		.uleb128 0x2
 2513 00e8 91       		.byte	0x91
 2514 00e9 74       		.sleb128 -12
 2515 00ea 07       		.uleb128 0x7
 2516 00eb 6B657900 		.ascii	"key\000"
 2517 00ef 01       		.byte	0x1
 2518 00f0 23       		.byte	0x23
 2519 00f1 BE000000 		.4byte	0xbe
 2520 00f5 02       		.uleb128 0x2
 2521 00f6 91       		.byte	0x91
 2522 00f7 70       		.sleb128 -16
 2523 00f8 00       		.byte	0
 2524 00f9 08       		.uleb128 0x8
 2525 00fa 8D000000 		.4byte	.LASF18
 2526 00fe 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 63


 2527 00ff 2C       		.byte	0x2c
 2528 0100 81000000 		.4byte	0x81
 2529 0104 00000000 		.4byte	.LFB57
 2530 0108 78000000 		.4byte	.LFE57-.LFB57
 2531 010c 01       		.uleb128 0x1
 2532 010d 9C       		.byte	0x9c
 2533 010e 08       		.uleb128 0x8
 2534 010f EB030000 		.4byte	.LASF19
 2535 0113 01       		.byte	0x1
 2536 0114 53       		.byte	0x53
 2537 0115 81000000 		.4byte	0x81
 2538 0119 00000000 		.4byte	.LFB58
 2539 011d 18000000 		.4byte	.LFE58-.LFB58
 2540 0121 01       		.uleb128 0x1
 2541 0122 9C       		.byte	0x9c
 2542 0123 09       		.uleb128 0x9
 2543 0124 93030000 		.4byte	.LASF20
 2544 0128 01       		.byte	0x1
 2545 0129 5C       		.byte	0x5c
 2546 012a 00000000 		.4byte	.LFB59
 2547 012e 30000000 		.4byte	.LFE59-.LFB59
 2548 0132 01       		.uleb128 0x1
 2549 0133 9C       		.byte	0x9c
 2550 0134 09       		.uleb128 0x9
 2551 0135 88030000 		.4byte	.LASF21
 2552 0139 01       		.byte	0x1
 2553 013a 67       		.byte	0x67
 2554 013b 00000000 		.4byte	.LFB60
 2555 013f 2C000000 		.4byte	.LFE60-.LFB60
 2556 0143 01       		.uleb128 0x1
 2557 0144 9C       		.byte	0x9c
 2558 0145 0A       		.uleb128 0xa
 2559 0146 3F020000 		.4byte	.LASF23
 2560 014a 01       		.byte	0x1
 2561 014b 72       		.byte	0x72
 2562 014c 81000000 		.4byte	0x81
 2563 0150 00000000 		.4byte	.LFB61
 2564 0154 78000000 		.4byte	.LFE61-.LFB61
 2565 0158 01       		.uleb128 0x1
 2566 0159 9C       		.byte	0x9c
 2567 015a D7010000 		.4byte	0x1d7
 2568 015e 0B       		.uleb128 0xb
 2569 015f 52040000 		.4byte	.LASF24
 2570 0163 01       		.byte	0x1
 2571 0164 72       		.byte	0x72
 2572 0165 BE000000 		.4byte	0xbe
 2573 0169 02       		.uleb128 0x2
 2574 016a 91       		.byte	0x91
 2575 016b 5C       		.sleb128 -36
 2576 016c 0B       		.uleb128 0xb
 2577 016d 17000000 		.4byte	.LASF25
 2578 0171 01       		.byte	0x1
 2579 0172 72       		.byte	0x72
 2580 0173 BE000000 		.4byte	0xbe
 2581 0177 02       		.uleb128 0x2
 2582 0178 91       		.byte	0x91
 2583 0179 58       		.sleb128 -40
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 64


 2584 017a 0B       		.uleb128 0xb
 2585 017b E7040000 		.4byte	.LASF26
 2586 017f 01       		.byte	0x1
 2587 0180 72       		.byte	0x72
 2588 0181 97000000 		.4byte	0x97
 2589 0185 02       		.uleb128 0x2
 2590 0186 91       		.byte	0x91
 2591 0187 54       		.sleb128 -44
 2592 0188 0C       		.uleb128 0xc
 2593 0189 E2030000 		.4byte	.LASF27
 2594 018d 01       		.byte	0x1
 2595 018e 73       		.byte	0x73
 2596 018f 81000000 		.4byte	0x81
 2597 0193 02       		.uleb128 0x2
 2598 0194 91       		.byte	0x91
 2599 0195 77       		.sleb128 -9
 2600 0196 0D       		.uleb128 0xd
 2601 0197 6900     		.ascii	"i\000"
 2602 0199 01       		.byte	0x1
 2603 019a 74       		.byte	0x74
 2604 019b 97000000 		.4byte	0x97
 2605 019f 02       		.uleb128 0x2
 2606 01a0 91       		.byte	0x91
 2607 01a1 70       		.sleb128 -16
 2608 01a2 0C       		.uleb128 0xc
 2609 01a3 AD000000 		.4byte	.LASF28
 2610 01a7 01       		.byte	0x1
 2611 01a8 74       		.byte	0x74
 2612 01a9 97000000 		.4byte	0x97
 2613 01ad 02       		.uleb128 0x2
 2614 01ae 91       		.byte	0x91
 2615 01af 6C       		.sleb128 -20
 2616 01b0 0C       		.uleb128 0xc
 2617 01b1 D9030000 		.4byte	.LASF29
 2618 01b5 01       		.byte	0x1
 2619 01b6 74       		.byte	0x74
 2620 01b7 97000000 		.4byte	0x97
 2621 01bb 02       		.uleb128 0x2
 2622 01bc 91       		.byte	0x91
 2623 01bd 68       		.sleb128 -24
 2624 01be 0E       		.uleb128 0xe
 2625 01bf 3C000000 		.4byte	.LBB2
 2626 01c3 1E000000 		.4byte	.LBE2-.LBB2
 2627 01c7 0C       		.uleb128 0xc
 2628 01c8 00000000 		.4byte	.LASF30
 2629 01cc 01       		.byte	0x1
 2630 01cd 7B       		.byte	0x7b
 2631 01ce BE000000 		.4byte	0xbe
 2632 01d2 02       		.uleb128 0x2
 2633 01d3 91       		.byte	0x91
 2634 01d4 64       		.sleb128 -28
 2635 01d5 00       		.byte	0
 2636 01d6 00       		.byte	0
 2637 01d7 08       		.uleb128 0x8
 2638 01d8 27030000 		.4byte	.LASF31
 2639 01dc 01       		.byte	0x1
 2640 01dd 87       		.byte	0x87
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 65


 2641 01de 81000000 		.4byte	0x81
 2642 01e2 00000000 		.4byte	.LFB62
 2643 01e6 70000000 		.4byte	.LFE62-.LFB62
 2644 01ea 01       		.uleb128 0x1
 2645 01eb 9C       		.byte	0x9c
 2646 01ec 08       		.uleb128 0x8
 2647 01ed EA010000 		.4byte	.LASF32
 2648 01f1 01       		.byte	0x1
 2649 01f2 AB       		.byte	0xab
 2650 01f3 81000000 		.4byte	0x81
 2651 01f7 00000000 		.4byte	.LFB63
 2652 01fb 4C000000 		.4byte	.LFE63-.LFB63
 2653 01ff 01       		.uleb128 0x1
 2654 0200 9C       		.byte	0x9c
 2655 0201 08       		.uleb128 0x8
 2656 0202 BC020000 		.4byte	.LASF33
 2657 0206 01       		.byte	0x1
 2658 0207 CA       		.byte	0xca
 2659 0208 81000000 		.4byte	0x81
 2660 020c 00000000 		.4byte	.LFB64
 2661 0210 3C000000 		.4byte	.LFE64-.LFB64
 2662 0214 01       		.uleb128 0x1
 2663 0215 9C       		.byte	0x9c
 2664 0216 08       		.uleb128 0x8
 2665 0217 A6030000 		.4byte	.LASF34
 2666 021b 01       		.byte	0x1
 2667 021c D8       		.byte	0xd8
 2668 021d 81000000 		.4byte	0x81
 2669 0221 00000000 		.4byte	.LFB65
 2670 0225 1A000000 		.4byte	.LFE65-.LFB65
 2671 0229 01       		.uleb128 0x1
 2672 022a 9C       		.byte	0x9c
 2673 022b 0F       		.uleb128 0xf
 2674 022c 8C020000 		.4byte	.LASF38
 2675 0230 01       		.byte	0x1
 2676 0231 EE       		.byte	0xee
 2677 0232 81000000 		.4byte	0x81
 2678 0236 00000000 		.4byte	.LFB66
 2679 023a 78000000 		.4byte	.LFE66-.LFB66
 2680 023e 01       		.uleb128 0x1
 2681 023f 9C       		.byte	0x9c
 2682 0240 61020000 		.4byte	0x261
 2683 0244 0C       		.uleb128 0xc
 2684 0245 74010000 		.4byte	.LASF35
 2685 0249 01       		.byte	0x1
 2686 024a F0       		.byte	0xf0
 2687 024b 81000000 		.4byte	0x81
 2688 024f 02       		.uleb128 0x2
 2689 0250 91       		.byte	0x91
 2690 0251 77       		.sleb128 -9
 2691 0252 0C       		.uleb128 0xc
 2692 0253 08020000 		.4byte	.LASF36
 2693 0257 01       		.byte	0x1
 2694 0258 F0       		.byte	0xf0
 2695 0259 81000000 		.4byte	0x81
 2696 025d 02       		.uleb128 0x2
 2697 025e 91       		.byte	0x91
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 66


 2698 025f 76       		.sleb128 -10
 2699 0260 00       		.byte	0
 2700 0261 10       		.uleb128 0x10
 2701 0262 2E040000 		.4byte	.LASF37
 2702 0266 01       		.byte	0x1
 2703 0267 3901     		.2byte	0x139
 2704 0269 81000000 		.4byte	0x81
 2705 026d 00000000 		.4byte	.LFB67
 2706 0271 38000000 		.4byte	.LFE67-.LFB67
 2707 0275 01       		.uleb128 0x1
 2708 0276 9C       		.byte	0x9c
 2709 0277 11       		.uleb128 0x11
 2710 0278 64000000 		.4byte	.LASF39
 2711 027c 01       		.byte	0x1
 2712 027d 6201     		.2byte	0x162
 2713 027f 81000000 		.4byte	0x81
 2714 0283 00000000 		.4byte	.LFB68
 2715 0287 44000000 		.4byte	.LFE68-.LFB68
 2716 028b 01       		.uleb128 0x1
 2717 028c 9C       		.byte	0x9c
 2718 028d A2020000 		.4byte	0x2a2
 2719 0291 12       		.uleb128 0x12
 2720 0292 636D6400 		.ascii	"cmd\000"
 2721 0296 01       		.byte	0x1
 2722 0297 6801     		.2byte	0x168
 2723 0299 A2020000 		.4byte	0x2a2
 2724 029d 03       		.uleb128 0x3
 2725 029e 91       		.byte	0x91
 2726 029f 947F     		.sleb128 -108
 2727 02a1 00       		.byte	0
 2728 02a2 13       		.uleb128 0x13
 2729 02a3 B0000000 		.4byte	0xb0
 2730 02a7 B2020000 		.4byte	0x2b2
 2731 02ab 14       		.uleb128 0x14
 2732 02ac B7000000 		.4byte	0xb7
 2733 02b0 63       		.byte	0x63
 2734 02b1 00       		.byte	0
 2735 02b2 15       		.uleb128 0x15
 2736 02b3 9A020000 		.4byte	.LASF40
 2737 02b7 01       		.byte	0x1
 2738 02b8 7401     		.2byte	0x174
 2739 02ba 81000000 		.4byte	0x81
 2740 02be 00000000 		.4byte	.LFB69
 2741 02c2 48000000 		.4byte	.LFE69-.LFB69
 2742 02c6 01       		.uleb128 0x1
 2743 02c7 9C       		.byte	0x9c
 2744 02c8 ED020000 		.4byte	0x2ed
 2745 02cc 16       		.uleb128 0x16
 2746 02cd 0A030000 		.4byte	.LASF41
 2747 02d1 01       		.byte	0x1
 2748 02d2 7401     		.2byte	0x174
 2749 02d4 81000000 		.4byte	0x81
 2750 02d8 03       		.uleb128 0x3
 2751 02d9 91       		.byte	0x91
 2752 02da 8F7F     		.sleb128 -113
 2753 02dc 12       		.uleb128 0x12
 2754 02dd 636D6400 		.ascii	"cmd\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 67


 2755 02e1 01       		.byte	0x1
 2756 02e2 7A01     		.2byte	0x17a
 2757 02e4 A2020000 		.4byte	0x2a2
 2758 02e8 03       		.uleb128 0x3
 2759 02e9 91       		.byte	0x91
 2760 02ea 947F     		.sleb128 -108
 2761 02ec 00       		.byte	0
 2762 02ed 10       		.uleb128 0x10
 2763 02ee DB010000 		.4byte	.LASF42
 2764 02f2 01       		.byte	0x1
 2765 02f3 8601     		.2byte	0x186
 2766 02f5 81000000 		.4byte	0x81
 2767 02f9 00000000 		.4byte	.LFB70
 2768 02fd 28000000 		.4byte	.LFE70-.LFB70
 2769 0301 01       		.uleb128 0x1
 2770 0302 9C       		.byte	0x9c
 2771 0303 10       		.uleb128 0x10
 2772 0304 B1040000 		.4byte	.LASF43
 2773 0308 01       		.byte	0x1
 2774 0309 9301     		.2byte	0x193
 2775 030b 81000000 		.4byte	0x81
 2776 030f 00000000 		.4byte	.LFB71
 2777 0313 28000000 		.4byte	.LFE71-.LFB71
 2778 0317 01       		.uleb128 0x1
 2779 0318 9C       		.byte	0x9c
 2780 0319 10       		.uleb128 0x10
 2781 031a 5B030000 		.4byte	.LASF44
 2782 031e 01       		.byte	0x1
 2783 031f 9F01     		.2byte	0x19f
 2784 0321 81000000 		.4byte	0x81
 2785 0325 00000000 		.4byte	.LFB72
 2786 0329 28000000 		.4byte	.LFE72-.LFB72
 2787 032d 01       		.uleb128 0x1
 2788 032e 9C       		.byte	0x9c
 2789 032f 10       		.uleb128 0x10
 2790 0330 16040000 		.4byte	.LASF45
 2791 0334 01       		.byte	0x1
 2792 0335 AC01     		.2byte	0x1ac
 2793 0337 81000000 		.4byte	0x81
 2794 033b 00000000 		.4byte	.LFB73
 2795 033f 28000000 		.4byte	.LFE73-.LFB73
 2796 0343 01       		.uleb128 0x1
 2797 0344 9C       		.byte	0x9c
 2798 0345 10       		.uleb128 0x10
 2799 0346 73040000 		.4byte	.LASF46
 2800 034a 01       		.byte	0x1
 2801 034b B801     		.2byte	0x1b8
 2802 034d 81000000 		.4byte	0x81
 2803 0351 00000000 		.4byte	.LFB74
 2804 0355 28000000 		.4byte	.LFE74-.LFB74
 2805 0359 01       		.uleb128 0x1
 2806 035a 9C       		.byte	0x9c
 2807 035b 15       		.uleb128 0x15
 2808 035c 50020000 		.4byte	.LASF47
 2809 0360 01       		.byte	0x1
 2810 0361 C301     		.2byte	0x1c3
 2811 0363 81000000 		.4byte	0x81
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 68


 2812 0367 00000000 		.4byte	.LFB75
 2813 036b 48000000 		.4byte	.LFE75-.LFB75
 2814 036f 01       		.uleb128 0x1
 2815 0370 9C       		.byte	0x9c
 2816 0371 96030000 		.4byte	0x396
 2817 0375 16       		.uleb128 0x16
 2818 0376 04030000 		.4byte	.LASF48
 2819 037a 01       		.byte	0x1
 2820 037b C301     		.2byte	0x1c3
 2821 037d 81000000 		.4byte	0x81
 2822 0381 03       		.uleb128 0x3
 2823 0382 91       		.byte	0x91
 2824 0383 8F7F     		.sleb128 -113
 2825 0385 12       		.uleb128 0x12
 2826 0386 636D6400 		.ascii	"cmd\000"
 2827 038a 01       		.byte	0x1
 2828 038b C401     		.2byte	0x1c4
 2829 038d A2020000 		.4byte	0x2a2
 2830 0391 03       		.uleb128 0x3
 2831 0392 91       		.byte	0x91
 2832 0393 947F     		.sleb128 -108
 2833 0395 00       		.byte	0
 2834 0396 15       		.uleb128 0x15
 2835 0397 85040000 		.4byte	.LASF49
 2836 039b 01       		.byte	0x1
 2837 039c D001     		.2byte	0x1d0
 2838 039e 81000000 		.4byte	0x81
 2839 03a2 00000000 		.4byte	.LFB76
 2840 03a6 48000000 		.4byte	.LFE76-.LFB76
 2841 03aa 01       		.uleb128 0x1
 2842 03ab 9C       		.byte	0x9c
 2843 03ac D1030000 		.4byte	0x3d1
 2844 03b0 16       		.uleb128 0x16
 2845 03b1 04030000 		.4byte	.LASF48
 2846 03b5 01       		.byte	0x1
 2847 03b6 D001     		.2byte	0x1d0
 2848 03b8 81000000 		.4byte	0x81
 2849 03bc 03       		.uleb128 0x3
 2850 03bd 91       		.byte	0x91
 2851 03be 8F7F     		.sleb128 -113
 2852 03c0 12       		.uleb128 0x12
 2853 03c1 636D6400 		.ascii	"cmd\000"
 2854 03c5 01       		.byte	0x1
 2855 03c6 DE01     		.2byte	0x1de
 2856 03c8 A2020000 		.4byte	0x2a2
 2857 03cc 03       		.uleb128 0x3
 2858 03cd 91       		.byte	0x91
 2859 03ce 947F     		.sleb128 -108
 2860 03d0 00       		.byte	0
 2861 03d1 10       		.uleb128 0x10
 2862 03d2 43010000 		.4byte	.LASF50
 2863 03d6 01       		.byte	0x1
 2864 03d7 EA01     		.2byte	0x1ea
 2865 03d9 81000000 		.4byte	0x81
 2866 03dd 00000000 		.4byte	.LFB77
 2867 03e1 28000000 		.4byte	.LFE77-.LFB77
 2868 03e5 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 69


 2869 03e6 9C       		.byte	0x9c
 2870 03e7 15       		.uleb128 0x15
 2871 03e8 36000000 		.4byte	.LASF51
 2872 03ec 01       		.byte	0x1
 2873 03ed F501     		.2byte	0x1f5
 2874 03ef 81000000 		.4byte	0x81
 2875 03f3 00000000 		.4byte	.LFB78
 2876 03f7 48000000 		.4byte	.LFE78-.LFB78
 2877 03fb 01       		.uleb128 0x1
 2878 03fc 9C       		.byte	0x9c
 2879 03fd 22040000 		.4byte	0x422
 2880 0401 16       		.uleb128 0x16
 2881 0402 04030000 		.4byte	.LASF48
 2882 0406 01       		.byte	0x1
 2883 0407 F501     		.2byte	0x1f5
 2884 0409 81000000 		.4byte	0x81
 2885 040d 03       		.uleb128 0x3
 2886 040e 91       		.byte	0x91
 2887 040f 8F7F     		.sleb128 -113
 2888 0411 12       		.uleb128 0x12
 2889 0412 636D6400 		.ascii	"cmd\000"
 2890 0416 01       		.byte	0x1
 2891 0417 FC01     		.2byte	0x1fc
 2892 0419 A2020000 		.4byte	0x2a2
 2893 041d 03       		.uleb128 0x3
 2894 041e 91       		.byte	0x91
 2895 041f 947F     		.sleb128 -108
 2896 0421 00       		.byte	0
 2897 0422 10       		.uleb128 0x10
 2898 0423 7A010000 		.4byte	.LASF52
 2899 0427 01       		.byte	0x1
 2900 0428 0802     		.2byte	0x208
 2901 042a 81000000 		.4byte	0x81
 2902 042e 00000000 		.4byte	.LFB79
 2903 0432 28000000 		.4byte	.LFE79-.LFB79
 2904 0436 01       		.uleb128 0x1
 2905 0437 9C       		.byte	0x9c
 2906 0438 15       		.uleb128 0x15
 2907 0439 D8040000 		.4byte	.LASF53
 2908 043d 01       		.byte	0x1
 2909 043e 1402     		.2byte	0x214
 2910 0440 81000000 		.4byte	0x81
 2911 0444 00000000 		.4byte	.LFB80
 2912 0448 44000000 		.4byte	.LFE80-.LFB80
 2913 044c 01       		.uleb128 0x1
 2914 044d 9C       		.byte	0x9c
 2915 044e 73040000 		.4byte	0x473
 2916 0452 16       		.uleb128 0x16
 2917 0453 0F030000 		.4byte	.LASF54
 2918 0457 01       		.byte	0x1
 2919 0458 1402     		.2byte	0x214
 2920 045a BE000000 		.4byte	0xbe
 2921 045e 03       		.uleb128 0x3
 2922 045f 91       		.byte	0x91
 2923 0460 8C7F     		.sleb128 -116
 2924 0462 12       		.uleb128 0x12
 2925 0463 636D6400 		.ascii	"cmd\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 70


 2926 0467 01       		.byte	0x1
 2927 0468 1602     		.2byte	0x216
 2928 046a A2020000 		.4byte	0x2a2
 2929 046e 03       		.uleb128 0x3
 2930 046f 91       		.byte	0x91
 2931 0470 947F     		.sleb128 -108
 2932 0472 00       		.byte	0
 2933 0473 15       		.uleb128 0x15
 2934 0474 72000000 		.4byte	.LASF55
 2935 0478 01       		.byte	0x1
 2936 0479 2302     		.2byte	0x223
 2937 047b 81000000 		.4byte	0x81
 2938 047f 00000000 		.4byte	.LFB81
 2939 0483 44000000 		.4byte	.LFE81-.LFB81
 2940 0487 01       		.uleb128 0x1
 2941 0488 9C       		.byte	0x9c
 2942 0489 AE040000 		.4byte	0x4ae
 2943 048d 16       		.uleb128 0x16
 2944 048e A9020000 		.4byte	.LASF56
 2945 0492 01       		.byte	0x1
 2946 0493 2302     		.2byte	0x223
 2947 0495 BE000000 		.4byte	0xbe
 2948 0499 03       		.uleb128 0x3
 2949 049a 91       		.byte	0x91
 2950 049b 8C7F     		.sleb128 -116
 2951 049d 12       		.uleb128 0x12
 2952 049e 636D6400 		.ascii	"cmd\000"
 2953 04a2 01       		.byte	0x1
 2954 04a3 2502     		.2byte	0x225
 2955 04a5 A2020000 		.4byte	0x2a2
 2956 04a9 03       		.uleb128 0x3
 2957 04aa 91       		.byte	0x91
 2958 04ab 947F     		.sleb128 -108
 2959 04ad 00       		.byte	0
 2960 04ae 11       		.uleb128 0x11
 2961 04af 17020000 		.4byte	.LASF57
 2962 04b3 01       		.byte	0x1
 2963 04b4 3102     		.2byte	0x231
 2964 04b6 81000000 		.4byte	0x81
 2965 04ba 00000000 		.4byte	.LFB82
 2966 04be 98000000 		.4byte	.LFE82-.LFB82
 2967 04c2 01       		.uleb128 0x1
 2968 04c3 9C       		.byte	0x9c
 2969 04c4 F3040000 		.4byte	0x4f3
 2970 04c8 0E       		.uleb128 0xe
 2971 04c9 2C000000 		.4byte	.LBB3
 2972 04cd 44000000 		.4byte	.LBE3-.LBB3
 2973 04d1 17       		.uleb128 0x17
 2974 04d2 85000000 		.4byte	.LASF58
 2975 04d6 01       		.byte	0x1
 2976 04d7 3802     		.2byte	0x238
 2977 04d9 F3040000 		.4byte	0x4f3
 2978 04dd 03       		.uleb128 0x3
 2979 04de 91       		.byte	0x91
 2980 04df 9078     		.sleb128 -1008
 2981 04e1 17       		.uleb128 0x17
 2982 04e2 96010000 		.4byte	.LASF59
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 71


 2983 04e6 01       		.byte	0x1
 2984 04e7 3802     		.2byte	0x238
 2985 04e9 A2020000 		.4byte	0x2a2
 2986 04ed 03       		.uleb128 0x3
 2987 04ee 91       		.byte	0x91
 2988 04ef 9078     		.sleb128 -1008
 2989 04f1 00       		.byte	0
 2990 04f2 00       		.byte	0
 2991 04f3 13       		.uleb128 0x13
 2992 04f4 B0000000 		.4byte	0xb0
 2993 04f8 04050000 		.4byte	0x504
 2994 04fc 18       		.uleb128 0x18
 2995 04fd B7000000 		.4byte	0xb7
 2996 0501 E703     		.2byte	0x3e7
 2997 0503 00       		.byte	0
 2998 0504 15       		.uleb128 0x15
 2999 0505 FA030000 		.4byte	.LASF60
 3000 0509 01       		.byte	0x1
 3001 050a 6902     		.2byte	0x269
 3002 050c 81000000 		.4byte	0x81
 3003 0510 00000000 		.4byte	.LFB83
 3004 0514 FC000000 		.4byte	.LFE83-.LFB83
 3005 0518 01       		.uleb128 0x1
 3006 0519 9C       		.byte	0x9c
 3007 051a 59050000 		.4byte	0x559
 3008 051e 16       		.uleb128 0x16
 3009 051f 3A020000 		.4byte	.LASF61
 3010 0523 01       		.byte	0x1
 3011 0524 6902     		.2byte	0x269
 3012 0526 BE000000 		.4byte	0xbe
 3013 052a 03       		.uleb128 0x3
 3014 052b 91       		.byte	0x91
 3015 052c 8478     		.sleb128 -1020
 3016 052e 0E       		.uleb128 0xe
 3017 052f 3C000000 		.4byte	.LBB4
 3018 0533 7A000000 		.4byte	.LBE4-.LBB4
 3019 0537 17       		.uleb128 0x17
 3020 0538 6B040000 		.4byte	.LASF62
 3021 053c 01       		.byte	0x1
 3022 053d 7B02     		.2byte	0x27b
 3023 053f F3040000 		.4byte	0x4f3
 3024 0543 03       		.uleb128 0x3
 3025 0544 91       		.byte	0x91
 3026 0545 8878     		.sleb128 -1016
 3027 0547 17       		.uleb128 0x17
 3028 0548 96010000 		.4byte	.LASF59
 3029 054c 01       		.byte	0x1
 3030 054d 7B02     		.2byte	0x27b
 3031 054f A2020000 		.4byte	0x2a2
 3032 0553 03       		.uleb128 0x3
 3033 0554 91       		.byte	0x91
 3034 0555 8878     		.sleb128 -1016
 3035 0557 00       		.byte	0
 3036 0558 00       		.byte	0
 3037 0559 15       		.uleb128 0x15
 3038 055a 06000000 		.4byte	.LASF63
 3039 055e 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 72


 3040 055f A902     		.2byte	0x2a9
 3041 0561 81000000 		.4byte	0x81
 3042 0565 00000000 		.4byte	.LFB84
 3043 0569 28010000 		.4byte	.LFE84-.LFB84
 3044 056d 01       		.uleb128 0x1
 3045 056e 9C       		.byte	0x9c
 3046 056f BE050000 		.4byte	0x5be
 3047 0573 16       		.uleb128 0x16
 3048 0574 8F010000 		.4byte	.LASF64
 3049 0578 01       		.byte	0x1
 3050 0579 A902     		.2byte	0x2a9
 3051 057b BE000000 		.4byte	0xbe
 3052 057f 03       		.uleb128 0x3
 3053 0580 91       		.byte	0x91
 3054 0581 A477     		.sleb128 -1116
 3055 0583 19       		.uleb128 0x19
 3056 0584 63737600 		.ascii	"csv\000"
 3057 0588 01       		.byte	0x1
 3058 0589 A902     		.2byte	0x2a9
 3059 058b BE000000 		.4byte	0xbe
 3060 058f 03       		.uleb128 0x3
 3061 0590 91       		.byte	0x91
 3062 0591 A077     		.sleb128 -1120
 3063 0593 0E       		.uleb128 0xe
 3064 0594 4E000000 		.4byte	.LBB5
 3065 0598 8A000000 		.4byte	.LBE5-.LBB5
 3066 059c 17       		.uleb128 0x17
 3067 059d 85000000 		.4byte	.LASF58
 3068 05a1 01       		.byte	0x1
 3069 05a2 BD02     		.2byte	0x2bd
 3070 05a4 F3040000 		.4byte	0x4f3
 3071 05a8 03       		.uleb128 0x3
 3072 05a9 91       		.byte	0x91
 3073 05aa 9078     		.sleb128 -1008
 3074 05ac 17       		.uleb128 0x17
 3075 05ad 96010000 		.4byte	.LASF59
 3076 05b1 01       		.byte	0x1
 3077 05b2 BD02     		.2byte	0x2bd
 3078 05b4 A2020000 		.4byte	0x2a2
 3079 05b8 03       		.uleb128 0x3
 3080 05b9 91       		.byte	0x91
 3081 05ba AC77     		.sleb128 -1108
 3082 05bc 00       		.byte	0
 3083 05bd 00       		.byte	0
 3084 05be 11       		.uleb128 0x11
 3085 05bf 3F040000 		.4byte	.LASF65
 3086 05c3 01       		.byte	0x1
 3087 05c4 0603     		.2byte	0x306
 3088 05c6 81000000 		.4byte	0x81
 3089 05ca 00000000 		.4byte	.LFB85
 3090 05ce E0000000 		.4byte	.LFE85-.LFB85
 3091 05d2 01       		.uleb128 0x1
 3092 05d3 9C       		.byte	0x9c
 3093 05d4 23060000 		.4byte	0x623
 3094 05d8 17       		.uleb128 0x17
 3095 05d9 56030000 		.4byte	.LASF66
 3096 05dd 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 73


 3097 05de 0E03     		.2byte	0x30e
 3098 05e0 81000000 		.4byte	0x81
 3099 05e4 02       		.uleb128 0x2
 3100 05e5 91       		.byte	0x91
 3101 05e6 6B       		.sleb128 -21
 3102 05e7 12       		.uleb128 0x12
 3103 05e8 6900     		.ascii	"i\000"
 3104 05ea 01       		.byte	0x1
 3105 05eb 0F03     		.2byte	0x30f
 3106 05ed 97000000 		.4byte	0x97
 3107 05f1 02       		.uleb128 0x2
 3108 05f2 91       		.byte	0x91
 3109 05f3 74       		.sleb128 -12
 3110 05f4 17       		.uleb128 0x17
 3111 05f5 AD000000 		.4byte	.LASF28
 3112 05f9 01       		.byte	0x1
 3113 05fa 0F03     		.2byte	0x30f
 3114 05fc 97000000 		.4byte	0x97
 3115 0600 02       		.uleb128 0x2
 3116 0601 91       		.byte	0x91
 3117 0602 70       		.sleb128 -16
 3118 0603 17       		.uleb128 0x17
 3119 0604 74030000 		.4byte	.LASF67
 3120 0608 01       		.byte	0x1
 3121 0609 0F03     		.2byte	0x30f
 3122 060b 97000000 		.4byte	0x97
 3123 060f 02       		.uleb128 0x2
 3124 0610 91       		.byte	0x91
 3125 0611 6C       		.sleb128 -20
 3126 0612 17       		.uleb128 0x17
 3127 0613 A5040000 		.4byte	.LASF68
 3128 0617 01       		.byte	0x1
 3129 0618 1003     		.2byte	0x310
 3130 061a 23060000 		.4byte	0x623
 3131 061e 03       		.uleb128 0x3
 3132 061f 91       		.byte	0x91
 3133 0620 BC7D     		.sleb128 -324
 3134 0622 00       		.byte	0
 3135 0623 13       		.uleb128 0x13
 3136 0624 B0000000 		.4byte	0xb0
 3137 0628 34060000 		.4byte	0x634
 3138 062c 18       		.uleb128 0x18
 3139 062d B7000000 		.4byte	0xb7
 3140 0631 2B01     		.2byte	0x12b
 3141 0633 00       		.byte	0
 3142 0634 11       		.uleb128 0x11
 3143 0635 C5040000 		.4byte	.LASF69
 3144 0639 01       		.byte	0x1
 3145 063a 2C03     		.2byte	0x32c
 3146 063c 81000000 		.4byte	0x81
 3147 0640 00000000 		.4byte	.LFB86
 3148 0644 9C000000 		.4byte	.LFE86-.LFB86
 3149 0648 01       		.uleb128 0x1
 3150 0649 9C       		.byte	0x9c
 3151 064a 8A060000 		.4byte	0x68a
 3152 064e 12       		.uleb128 0x12
 3153 064f 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 74


 3154 0651 01       		.byte	0x1
 3155 0652 3303     		.2byte	0x333
 3156 0654 97000000 		.4byte	0x97
 3157 0658 02       		.uleb128 0x2
 3158 0659 91       		.byte	0x91
 3159 065a 74       		.sleb128 -12
 3160 065b 17       		.uleb128 0x17
 3161 065c AD000000 		.4byte	.LASF28
 3162 0660 01       		.byte	0x1
 3163 0661 3303     		.2byte	0x333
 3164 0663 97000000 		.4byte	0x97
 3165 0667 02       		.uleb128 0x2
 3166 0668 91       		.byte	0x91
 3167 0669 70       		.sleb128 -16
 3168 066a 17       		.uleb128 0x17
 3169 066b 74030000 		.4byte	.LASF67
 3170 066f 01       		.byte	0x1
 3171 0670 3303     		.2byte	0x333
 3172 0672 97000000 		.4byte	0x97
 3173 0676 02       		.uleb128 0x2
 3174 0677 91       		.byte	0x91
 3175 0678 6C       		.sleb128 -20
 3176 0679 17       		.uleb128 0x17
 3177 067a A5040000 		.4byte	.LASF68
 3178 067e 01       		.byte	0x1
 3179 067f 3403     		.2byte	0x334
 3180 0681 23060000 		.4byte	0x623
 3181 0685 03       		.uleb128 0x3
 3182 0686 91       		.byte	0x91
 3183 0687 C07D     		.sleb128 -320
 3184 0689 00       		.byte	0
 3185 068a 1A       		.uleb128 0x1a
 3186 068b 9B000000 		.4byte	.LASF70
 3187 068f 01       		.byte	0x1
 3188 0690 4C03     		.2byte	0x34c
 3189 0692 00000000 		.4byte	.LFB87
 3190 0696 24000000 		.4byte	.LFE87-.LFB87
 3191 069a 01       		.uleb128 0x1
 3192 069b 9C       		.byte	0x9c
 3193 069c 1B       		.uleb128 0x1b
 3194 069d 4D000000 		.4byte	.LASF71
 3195 06a1 01       		.byte	0x1
 3196 06a2 5C03     		.2byte	0x35c
 3197 06a4 00000000 		.4byte	.LFB88
 3198 06a8 44000000 		.4byte	.LFE88-.LFB88
 3199 06ac 01       		.uleb128 0x1
 3200 06ad 9C       		.byte	0x9c
 3201 06ae CC060000 		.4byte	0x6cc
 3202 06b2 0E       		.uleb128 0xe
 3203 06b3 08000000 		.4byte	.LBB6
 3204 06b7 24000000 		.4byte	.LBE6-.LBB6
 3205 06bb 17       		.uleb128 0x17
 3206 06bc 29000000 		.4byte	.LASF72
 3207 06c0 01       		.byte	0x1
 3208 06c1 5F03     		.2byte	0x35f
 3209 06c3 B0000000 		.4byte	0xb0
 3210 06c7 02       		.uleb128 0x2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 75


 3211 06c8 91       		.byte	0x91
 3212 06c9 77       		.sleb128 -9
 3213 06ca 00       		.byte	0
 3214 06cb 00       		.byte	0
 3215 06cc 1C       		.uleb128 0x1c
 3216 06cd 3B030000 		.4byte	.LASF73
 3217 06d1 05       		.byte	0x5
 3218 06d2 1606     		.2byte	0x616
 3219 06d4 D8060000 		.4byte	0x6d8
 3220 06d8 1D       		.uleb128 0x1d
 3221 06d9 76000000 		.4byte	0x76
 3222 06dd 1E       		.uleb128 0x1e
 3223 06de C8020000 		.4byte	.LASF74
 3224 06e2 01       		.byte	0x1
 3225 06e3 17       		.byte	0x17
 3226 06e4 81000000 		.4byte	0x81
 3227 06e8 05       		.uleb128 0x5
 3228 06e9 03       		.byte	0x3
 3229 06ea 00000000 		.4byte	modem_state
 3230 06ee 1E       		.uleb128 0x1e
 3231 06ef C4030000 		.4byte	.LASF75
 3232 06f3 01       		.byte	0x1
 3233 06f4 17       		.byte	0x17
 3234 06f5 81000000 		.4byte	0x81
 3235 06f9 05       		.uleb128 0x5
 3236 06fa 03       		.byte	0x3
 3237 06fb 00000000 		.4byte	lock_acquired
 3238 06ff 1E       		.uleb128 0x1e
 3239 0700 9D040000 		.4byte	.LASF76
 3240 0704 01       		.byte	0x1
 3241 0705 19       		.byte	0x19
 3242 0706 97000000 		.4byte	0x97
 3243 070a 05       		.uleb128 0x5
 3244 070b 03       		.byte	0x3
 3245 070c 00000000 		.4byte	feed_id
 3246 0710 1E       		.uleb128 0x1e
 3247 0711 63040000 		.4byte	.LASF77
 3248 0715 01       		.byte	0x1
 3249 0716 1A       		.byte	0x1a
 3250 0717 BE000000 		.4byte	0xbe
 3251 071b 05       		.uleb128 0x5
 3252 071c 03       		.byte	0x3
 3253 071d 00000000 		.4byte	api_key
 3254 0721 1E       		.uleb128 0x1e
 3255 0722 5E040000 		.4byte	.LASF78
 3256 0726 01       		.byte	0x1
 3257 0727 16       		.byte	0x16
 3258 0728 68000000 		.4byte	0x68
 3259 072c 05       		.uleb128 0x5
 3260 072d 03       		.byte	0x3
 3261 072e 00000000 		.4byte	iter
 3262 0732 1E       		.uleb128 0x1e
 3263 0733 48030000 		.4byte	.LASF79
 3264 0737 01       		.byte	0x1
 3265 0738 17       		.byte	0x17
 3266 0739 81000000 		.4byte	0x81
 3267 073d 05       		.uleb128 0x5
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 76


 3268 073e 03       		.byte	0x3
 3269 073f 00000000 		.4byte	ready
 3270 0743 1E       		.uleb128 0x1e
 3271 0744 67020000 		.4byte	.LASF80
 3272 0748 01       		.byte	0x1
 3273 0749 18       		.byte	0x18
 3274 074a 8C000000 		.4byte	0x8c
 3275 074e 05       		.uleb128 0x5
 3276 074f 03       		.byte	0x3
 3277 0750 00000000 		.4byte	uart_string_index
 3278 0754 1E       		.uleb128 0x1e
 3279 0755 5F010000 		.4byte	.LASF81
 3280 0759 01       		.byte	0x1
 3281 075a 1A       		.byte	0x1a
 3282 075b F3040000 		.4byte	0x4f3
 3283 075f 05       		.uleb128 0x5
 3284 0760 03       		.byte	0x3
 3285 0761 00000000 		.4byte	uart_received_string
 3286 0765 1E       		.uleb128 0x1e
 3287 0766 BD000000 		.4byte	.LASF82
 3288 076a 01       		.byte	0x1
 3289 076b 1B       		.byte	0x1b
 3290 076c BE000000 		.4byte	0xbe
 3291 0770 05       		.uleb128 0x5
 3292 0771 03       		.byte	0x3
 3293 0772 00000000 		.4byte	modem_apn
 3294 0776 00       		.byte	0
 3295              		.section	.debug_abbrev,"",%progbits
 3296              	.Ldebug_abbrev0:
 3297 0000 01       		.uleb128 0x1
 3298 0001 11       		.uleb128 0x11
 3299 0002 01       		.byte	0x1
 3300 0003 25       		.uleb128 0x25
 3301 0004 0E       		.uleb128 0xe
 3302 0005 13       		.uleb128 0x13
 3303 0006 0B       		.uleb128 0xb
 3304 0007 03       		.uleb128 0x3
 3305 0008 0E       		.uleb128 0xe
 3306 0009 1B       		.uleb128 0x1b
 3307 000a 0E       		.uleb128 0xe
 3308 000b 55       		.uleb128 0x55
 3309 000c 17       		.uleb128 0x17
 3310 000d 11       		.uleb128 0x11
 3311 000e 01       		.uleb128 0x1
 3312 000f 10       		.uleb128 0x10
 3313 0010 17       		.uleb128 0x17
 3314 0011 00       		.byte	0
 3315 0012 00       		.byte	0
 3316 0013 02       		.uleb128 0x2
 3317 0014 24       		.uleb128 0x24
 3318 0015 00       		.byte	0
 3319 0016 0B       		.uleb128 0xb
 3320 0017 0B       		.uleb128 0xb
 3321 0018 3E       		.uleb128 0x3e
 3322 0019 0B       		.uleb128 0xb
 3323 001a 03       		.uleb128 0x3
 3324 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 77


 3325 001c 00       		.byte	0
 3326 001d 00       		.byte	0
 3327 001e 03       		.uleb128 0x3
 3328 001f 16       		.uleb128 0x16
 3329 0020 00       		.byte	0
 3330 0021 03       		.uleb128 0x3
 3331 0022 0E       		.uleb128 0xe
 3332 0023 3A       		.uleb128 0x3a
 3333 0024 0B       		.uleb128 0xb
 3334 0025 3B       		.uleb128 0x3b
 3335 0026 0B       		.uleb128 0xb
 3336 0027 49       		.uleb128 0x49
 3337 0028 13       		.uleb128 0x13
 3338 0029 00       		.byte	0
 3339 002a 00       		.byte	0
 3340 002b 04       		.uleb128 0x4
 3341 002c 24       		.uleb128 0x24
 3342 002d 00       		.byte	0
 3343 002e 0B       		.uleb128 0xb
 3344 002f 0B       		.uleb128 0xb
 3345 0030 3E       		.uleb128 0x3e
 3346 0031 0B       		.uleb128 0xb
 3347 0032 03       		.uleb128 0x3
 3348 0033 08       		.uleb128 0x8
 3349 0034 00       		.byte	0
 3350 0035 00       		.byte	0
 3351 0036 05       		.uleb128 0x5
 3352 0037 0F       		.uleb128 0xf
 3353 0038 00       		.byte	0
 3354 0039 0B       		.uleb128 0xb
 3355 003a 0B       		.uleb128 0xb
 3356 003b 49       		.uleb128 0x49
 3357 003c 13       		.uleb128 0x13
 3358 003d 00       		.byte	0
 3359 003e 00       		.byte	0
 3360 003f 06       		.uleb128 0x6
 3361 0040 2E       		.uleb128 0x2e
 3362 0041 01       		.byte	0x1
 3363 0042 3F       		.uleb128 0x3f
 3364 0043 19       		.uleb128 0x19
 3365 0044 03       		.uleb128 0x3
 3366 0045 0E       		.uleb128 0xe
 3367 0046 3A       		.uleb128 0x3a
 3368 0047 0B       		.uleb128 0xb
 3369 0048 3B       		.uleb128 0x3b
 3370 0049 0B       		.uleb128 0xb
 3371 004a 27       		.uleb128 0x27
 3372 004b 19       		.uleb128 0x19
 3373 004c 49       		.uleb128 0x49
 3374 004d 13       		.uleb128 0x13
 3375 004e 11       		.uleb128 0x11
 3376 004f 01       		.uleb128 0x1
 3377 0050 12       		.uleb128 0x12
 3378 0051 06       		.uleb128 0x6
 3379 0052 40       		.uleb128 0x40
 3380 0053 18       		.uleb128 0x18
 3381 0054 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 78


 3382 0056 19       		.uleb128 0x19
 3383 0057 01       		.uleb128 0x1
 3384 0058 13       		.uleb128 0x13
 3385 0059 00       		.byte	0
 3386 005a 00       		.byte	0
 3387 005b 07       		.uleb128 0x7
 3388 005c 05       		.uleb128 0x5
 3389 005d 00       		.byte	0
 3390 005e 03       		.uleb128 0x3
 3391 005f 08       		.uleb128 0x8
 3392 0060 3A       		.uleb128 0x3a
 3393 0061 0B       		.uleb128 0xb
 3394 0062 3B       		.uleb128 0x3b
 3395 0063 0B       		.uleb128 0xb
 3396 0064 49       		.uleb128 0x49
 3397 0065 13       		.uleb128 0x13
 3398 0066 02       		.uleb128 0x2
 3399 0067 18       		.uleb128 0x18
 3400 0068 00       		.byte	0
 3401 0069 00       		.byte	0
 3402 006a 08       		.uleb128 0x8
 3403 006b 2E       		.uleb128 0x2e
 3404 006c 00       		.byte	0
 3405 006d 3F       		.uleb128 0x3f
 3406 006e 19       		.uleb128 0x19
 3407 006f 03       		.uleb128 0x3
 3408 0070 0E       		.uleb128 0xe
 3409 0071 3A       		.uleb128 0x3a
 3410 0072 0B       		.uleb128 0xb
 3411 0073 3B       		.uleb128 0x3b
 3412 0074 0B       		.uleb128 0xb
 3413 0075 49       		.uleb128 0x49
 3414 0076 13       		.uleb128 0x13
 3415 0077 11       		.uleb128 0x11
 3416 0078 01       		.uleb128 0x1
 3417 0079 12       		.uleb128 0x12
 3418 007a 06       		.uleb128 0x6
 3419 007b 40       		.uleb128 0x40
 3420 007c 18       		.uleb128 0x18
 3421 007d 9642     		.uleb128 0x2116
 3422 007f 19       		.uleb128 0x19
 3423 0080 00       		.byte	0
 3424 0081 00       		.byte	0
 3425 0082 09       		.uleb128 0x9
 3426 0083 2E       		.uleb128 0x2e
 3427 0084 00       		.byte	0
 3428 0085 3F       		.uleb128 0x3f
 3429 0086 19       		.uleb128 0x19
 3430 0087 03       		.uleb128 0x3
 3431 0088 0E       		.uleb128 0xe
 3432 0089 3A       		.uleb128 0x3a
 3433 008a 0B       		.uleb128 0xb
 3434 008b 3B       		.uleb128 0x3b
 3435 008c 0B       		.uleb128 0xb
 3436 008d 11       		.uleb128 0x11
 3437 008e 01       		.uleb128 0x1
 3438 008f 12       		.uleb128 0x12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 79


 3439 0090 06       		.uleb128 0x6
 3440 0091 40       		.uleb128 0x40
 3441 0092 18       		.uleb128 0x18
 3442 0093 9642     		.uleb128 0x2116
 3443 0095 19       		.uleb128 0x19
 3444 0096 00       		.byte	0
 3445 0097 00       		.byte	0
 3446 0098 0A       		.uleb128 0xa
 3447 0099 2E       		.uleb128 0x2e
 3448 009a 01       		.byte	0x1
 3449 009b 3F       		.uleb128 0x3f
 3450 009c 19       		.uleb128 0x19
 3451 009d 03       		.uleb128 0x3
 3452 009e 0E       		.uleb128 0xe
 3453 009f 3A       		.uleb128 0x3a
 3454 00a0 0B       		.uleb128 0xb
 3455 00a1 3B       		.uleb128 0x3b
 3456 00a2 0B       		.uleb128 0xb
 3457 00a3 27       		.uleb128 0x27
 3458 00a4 19       		.uleb128 0x19
 3459 00a5 49       		.uleb128 0x49
 3460 00a6 13       		.uleb128 0x13
 3461 00a7 11       		.uleb128 0x11
 3462 00a8 01       		.uleb128 0x1
 3463 00a9 12       		.uleb128 0x12
 3464 00aa 06       		.uleb128 0x6
 3465 00ab 40       		.uleb128 0x40
 3466 00ac 18       		.uleb128 0x18
 3467 00ad 9642     		.uleb128 0x2116
 3468 00af 19       		.uleb128 0x19
 3469 00b0 01       		.uleb128 0x1
 3470 00b1 13       		.uleb128 0x13
 3471 00b2 00       		.byte	0
 3472 00b3 00       		.byte	0
 3473 00b4 0B       		.uleb128 0xb
 3474 00b5 05       		.uleb128 0x5
 3475 00b6 00       		.byte	0
 3476 00b7 03       		.uleb128 0x3
 3477 00b8 0E       		.uleb128 0xe
 3478 00b9 3A       		.uleb128 0x3a
 3479 00ba 0B       		.uleb128 0xb
 3480 00bb 3B       		.uleb128 0x3b
 3481 00bc 0B       		.uleb128 0xb
 3482 00bd 49       		.uleb128 0x49
 3483 00be 13       		.uleb128 0x13
 3484 00bf 02       		.uleb128 0x2
 3485 00c0 18       		.uleb128 0x18
 3486 00c1 00       		.byte	0
 3487 00c2 00       		.byte	0
 3488 00c3 0C       		.uleb128 0xc
 3489 00c4 34       		.uleb128 0x34
 3490 00c5 00       		.byte	0
 3491 00c6 03       		.uleb128 0x3
 3492 00c7 0E       		.uleb128 0xe
 3493 00c8 3A       		.uleb128 0x3a
 3494 00c9 0B       		.uleb128 0xb
 3495 00ca 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 80


 3496 00cb 0B       		.uleb128 0xb
 3497 00cc 49       		.uleb128 0x49
 3498 00cd 13       		.uleb128 0x13
 3499 00ce 02       		.uleb128 0x2
 3500 00cf 18       		.uleb128 0x18
 3501 00d0 00       		.byte	0
 3502 00d1 00       		.byte	0
 3503 00d2 0D       		.uleb128 0xd
 3504 00d3 34       		.uleb128 0x34
 3505 00d4 00       		.byte	0
 3506 00d5 03       		.uleb128 0x3
 3507 00d6 08       		.uleb128 0x8
 3508 00d7 3A       		.uleb128 0x3a
 3509 00d8 0B       		.uleb128 0xb
 3510 00d9 3B       		.uleb128 0x3b
 3511 00da 0B       		.uleb128 0xb
 3512 00db 49       		.uleb128 0x49
 3513 00dc 13       		.uleb128 0x13
 3514 00dd 02       		.uleb128 0x2
 3515 00de 18       		.uleb128 0x18
 3516 00df 00       		.byte	0
 3517 00e0 00       		.byte	0
 3518 00e1 0E       		.uleb128 0xe
 3519 00e2 0B       		.uleb128 0xb
 3520 00e3 01       		.byte	0x1
 3521 00e4 11       		.uleb128 0x11
 3522 00e5 01       		.uleb128 0x1
 3523 00e6 12       		.uleb128 0x12
 3524 00e7 06       		.uleb128 0x6
 3525 00e8 00       		.byte	0
 3526 00e9 00       		.byte	0
 3527 00ea 0F       		.uleb128 0xf
 3528 00eb 2E       		.uleb128 0x2e
 3529 00ec 01       		.byte	0x1
 3530 00ed 3F       		.uleb128 0x3f
 3531 00ee 19       		.uleb128 0x19
 3532 00ef 03       		.uleb128 0x3
 3533 00f0 0E       		.uleb128 0xe
 3534 00f1 3A       		.uleb128 0x3a
 3535 00f2 0B       		.uleb128 0xb
 3536 00f3 3B       		.uleb128 0x3b
 3537 00f4 0B       		.uleb128 0xb
 3538 00f5 49       		.uleb128 0x49
 3539 00f6 13       		.uleb128 0x13
 3540 00f7 11       		.uleb128 0x11
 3541 00f8 01       		.uleb128 0x1
 3542 00f9 12       		.uleb128 0x12
 3543 00fa 06       		.uleb128 0x6
 3544 00fb 40       		.uleb128 0x40
 3545 00fc 18       		.uleb128 0x18
 3546 00fd 9642     		.uleb128 0x2116
 3547 00ff 19       		.uleb128 0x19
 3548 0100 01       		.uleb128 0x1
 3549 0101 13       		.uleb128 0x13
 3550 0102 00       		.byte	0
 3551 0103 00       		.byte	0
 3552 0104 10       		.uleb128 0x10
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 81


 3553 0105 2E       		.uleb128 0x2e
 3554 0106 00       		.byte	0
 3555 0107 3F       		.uleb128 0x3f
 3556 0108 19       		.uleb128 0x19
 3557 0109 03       		.uleb128 0x3
 3558 010a 0E       		.uleb128 0xe
 3559 010b 3A       		.uleb128 0x3a
 3560 010c 0B       		.uleb128 0xb
 3561 010d 3B       		.uleb128 0x3b
 3562 010e 05       		.uleb128 0x5
 3563 010f 49       		.uleb128 0x49
 3564 0110 13       		.uleb128 0x13
 3565 0111 11       		.uleb128 0x11
 3566 0112 01       		.uleb128 0x1
 3567 0113 12       		.uleb128 0x12
 3568 0114 06       		.uleb128 0x6
 3569 0115 40       		.uleb128 0x40
 3570 0116 18       		.uleb128 0x18
 3571 0117 9642     		.uleb128 0x2116
 3572 0119 19       		.uleb128 0x19
 3573 011a 00       		.byte	0
 3574 011b 00       		.byte	0
 3575 011c 11       		.uleb128 0x11
 3576 011d 2E       		.uleb128 0x2e
 3577 011e 01       		.byte	0x1
 3578 011f 3F       		.uleb128 0x3f
 3579 0120 19       		.uleb128 0x19
 3580 0121 03       		.uleb128 0x3
 3581 0122 0E       		.uleb128 0xe
 3582 0123 3A       		.uleb128 0x3a
 3583 0124 0B       		.uleb128 0xb
 3584 0125 3B       		.uleb128 0x3b
 3585 0126 05       		.uleb128 0x5
 3586 0127 49       		.uleb128 0x49
 3587 0128 13       		.uleb128 0x13
 3588 0129 11       		.uleb128 0x11
 3589 012a 01       		.uleb128 0x1
 3590 012b 12       		.uleb128 0x12
 3591 012c 06       		.uleb128 0x6
 3592 012d 40       		.uleb128 0x40
 3593 012e 18       		.uleb128 0x18
 3594 012f 9642     		.uleb128 0x2116
 3595 0131 19       		.uleb128 0x19
 3596 0132 01       		.uleb128 0x1
 3597 0133 13       		.uleb128 0x13
 3598 0134 00       		.byte	0
 3599 0135 00       		.byte	0
 3600 0136 12       		.uleb128 0x12
 3601 0137 34       		.uleb128 0x34
 3602 0138 00       		.byte	0
 3603 0139 03       		.uleb128 0x3
 3604 013a 08       		.uleb128 0x8
 3605 013b 3A       		.uleb128 0x3a
 3606 013c 0B       		.uleb128 0xb
 3607 013d 3B       		.uleb128 0x3b
 3608 013e 05       		.uleb128 0x5
 3609 013f 49       		.uleb128 0x49
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 82


 3610 0140 13       		.uleb128 0x13
 3611 0141 02       		.uleb128 0x2
 3612 0142 18       		.uleb128 0x18
 3613 0143 00       		.byte	0
 3614 0144 00       		.byte	0
 3615 0145 13       		.uleb128 0x13
 3616 0146 01       		.uleb128 0x1
 3617 0147 01       		.byte	0x1
 3618 0148 49       		.uleb128 0x49
 3619 0149 13       		.uleb128 0x13
 3620 014a 01       		.uleb128 0x1
 3621 014b 13       		.uleb128 0x13
 3622 014c 00       		.byte	0
 3623 014d 00       		.byte	0
 3624 014e 14       		.uleb128 0x14
 3625 014f 21       		.uleb128 0x21
 3626 0150 00       		.byte	0
 3627 0151 49       		.uleb128 0x49
 3628 0152 13       		.uleb128 0x13
 3629 0153 2F       		.uleb128 0x2f
 3630 0154 0B       		.uleb128 0xb
 3631 0155 00       		.byte	0
 3632 0156 00       		.byte	0
 3633 0157 15       		.uleb128 0x15
 3634 0158 2E       		.uleb128 0x2e
 3635 0159 01       		.byte	0x1
 3636 015a 3F       		.uleb128 0x3f
 3637 015b 19       		.uleb128 0x19
 3638 015c 03       		.uleb128 0x3
 3639 015d 0E       		.uleb128 0xe
 3640 015e 3A       		.uleb128 0x3a
 3641 015f 0B       		.uleb128 0xb
 3642 0160 3B       		.uleb128 0x3b
 3643 0161 05       		.uleb128 0x5
 3644 0162 27       		.uleb128 0x27
 3645 0163 19       		.uleb128 0x19
 3646 0164 49       		.uleb128 0x49
 3647 0165 13       		.uleb128 0x13
 3648 0166 11       		.uleb128 0x11
 3649 0167 01       		.uleb128 0x1
 3650 0168 12       		.uleb128 0x12
 3651 0169 06       		.uleb128 0x6
 3652 016a 40       		.uleb128 0x40
 3653 016b 18       		.uleb128 0x18
 3654 016c 9642     		.uleb128 0x2116
 3655 016e 19       		.uleb128 0x19
 3656 016f 01       		.uleb128 0x1
 3657 0170 13       		.uleb128 0x13
 3658 0171 00       		.byte	0
 3659 0172 00       		.byte	0
 3660 0173 16       		.uleb128 0x16
 3661 0174 05       		.uleb128 0x5
 3662 0175 00       		.byte	0
 3663 0176 03       		.uleb128 0x3
 3664 0177 0E       		.uleb128 0xe
 3665 0178 3A       		.uleb128 0x3a
 3666 0179 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 83


 3667 017a 3B       		.uleb128 0x3b
 3668 017b 05       		.uleb128 0x5
 3669 017c 49       		.uleb128 0x49
 3670 017d 13       		.uleb128 0x13
 3671 017e 02       		.uleb128 0x2
 3672 017f 18       		.uleb128 0x18
 3673 0180 00       		.byte	0
 3674 0181 00       		.byte	0
 3675 0182 17       		.uleb128 0x17
 3676 0183 34       		.uleb128 0x34
 3677 0184 00       		.byte	0
 3678 0185 03       		.uleb128 0x3
 3679 0186 0E       		.uleb128 0xe
 3680 0187 3A       		.uleb128 0x3a
 3681 0188 0B       		.uleb128 0xb
 3682 0189 3B       		.uleb128 0x3b
 3683 018a 05       		.uleb128 0x5
 3684 018b 49       		.uleb128 0x49
 3685 018c 13       		.uleb128 0x13
 3686 018d 02       		.uleb128 0x2
 3687 018e 18       		.uleb128 0x18
 3688 018f 00       		.byte	0
 3689 0190 00       		.byte	0
 3690 0191 18       		.uleb128 0x18
 3691 0192 21       		.uleb128 0x21
 3692 0193 00       		.byte	0
 3693 0194 49       		.uleb128 0x49
 3694 0195 13       		.uleb128 0x13
 3695 0196 2F       		.uleb128 0x2f
 3696 0197 05       		.uleb128 0x5
 3697 0198 00       		.byte	0
 3698 0199 00       		.byte	0
 3699 019a 19       		.uleb128 0x19
 3700 019b 05       		.uleb128 0x5
 3701 019c 00       		.byte	0
 3702 019d 03       		.uleb128 0x3
 3703 019e 08       		.uleb128 0x8
 3704 019f 3A       		.uleb128 0x3a
 3705 01a0 0B       		.uleb128 0xb
 3706 01a1 3B       		.uleb128 0x3b
 3707 01a2 05       		.uleb128 0x5
 3708 01a3 49       		.uleb128 0x49
 3709 01a4 13       		.uleb128 0x13
 3710 01a5 02       		.uleb128 0x2
 3711 01a6 18       		.uleb128 0x18
 3712 01a7 00       		.byte	0
 3713 01a8 00       		.byte	0
 3714 01a9 1A       		.uleb128 0x1a
 3715 01aa 2E       		.uleb128 0x2e
 3716 01ab 00       		.byte	0
 3717 01ac 3F       		.uleb128 0x3f
 3718 01ad 19       		.uleb128 0x19
 3719 01ae 03       		.uleb128 0x3
 3720 01af 0E       		.uleb128 0xe
 3721 01b0 3A       		.uleb128 0x3a
 3722 01b1 0B       		.uleb128 0xb
 3723 01b2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 84


 3724 01b3 05       		.uleb128 0x5
 3725 01b4 11       		.uleb128 0x11
 3726 01b5 01       		.uleb128 0x1
 3727 01b6 12       		.uleb128 0x12
 3728 01b7 06       		.uleb128 0x6
 3729 01b8 40       		.uleb128 0x40
 3730 01b9 18       		.uleb128 0x18
 3731 01ba 9642     		.uleb128 0x2116
 3732 01bc 19       		.uleb128 0x19
 3733 01bd 00       		.byte	0
 3734 01be 00       		.byte	0
 3735 01bf 1B       		.uleb128 0x1b
 3736 01c0 2E       		.uleb128 0x2e
 3737 01c1 01       		.byte	0x1
 3738 01c2 3F       		.uleb128 0x3f
 3739 01c3 19       		.uleb128 0x19
 3740 01c4 03       		.uleb128 0x3
 3741 01c5 0E       		.uleb128 0xe
 3742 01c6 3A       		.uleb128 0x3a
 3743 01c7 0B       		.uleb128 0xb
 3744 01c8 3B       		.uleb128 0x3b
 3745 01c9 05       		.uleb128 0x5
 3746 01ca 27       		.uleb128 0x27
 3747 01cb 19       		.uleb128 0x19
 3748 01cc 11       		.uleb128 0x11
 3749 01cd 01       		.uleb128 0x1
 3750 01ce 12       		.uleb128 0x12
 3751 01cf 06       		.uleb128 0x6
 3752 01d0 40       		.uleb128 0x40
 3753 01d1 18       		.uleb128 0x18
 3754 01d2 9642     		.uleb128 0x2116
 3755 01d4 19       		.uleb128 0x19
 3756 01d5 01       		.uleb128 0x1
 3757 01d6 13       		.uleb128 0x13
 3758 01d7 00       		.byte	0
 3759 01d8 00       		.byte	0
 3760 01d9 1C       		.uleb128 0x1c
 3761 01da 34       		.uleb128 0x34
 3762 01db 00       		.byte	0
 3763 01dc 03       		.uleb128 0x3
 3764 01dd 0E       		.uleb128 0xe
 3765 01de 3A       		.uleb128 0x3a
 3766 01df 0B       		.uleb128 0xb
 3767 01e0 3B       		.uleb128 0x3b
 3768 01e1 05       		.uleb128 0x5
 3769 01e2 49       		.uleb128 0x49
 3770 01e3 13       		.uleb128 0x13
 3771 01e4 3F       		.uleb128 0x3f
 3772 01e5 19       		.uleb128 0x19
 3773 01e6 3C       		.uleb128 0x3c
 3774 01e7 19       		.uleb128 0x19
 3775 01e8 00       		.byte	0
 3776 01e9 00       		.byte	0
 3777 01ea 1D       		.uleb128 0x1d
 3778 01eb 35       		.uleb128 0x35
 3779 01ec 00       		.byte	0
 3780 01ed 49       		.uleb128 0x49
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 85


 3781 01ee 13       		.uleb128 0x13
 3782 01ef 00       		.byte	0
 3783 01f0 00       		.byte	0
 3784 01f1 1E       		.uleb128 0x1e
 3785 01f2 34       		.uleb128 0x34
 3786 01f3 00       		.byte	0
 3787 01f4 03       		.uleb128 0x3
 3788 01f5 0E       		.uleb128 0xe
 3789 01f6 3A       		.uleb128 0x3a
 3790 01f7 0B       		.uleb128 0xb
 3791 01f8 3B       		.uleb128 0x3b
 3792 01f9 0B       		.uleb128 0xb
 3793 01fa 49       		.uleb128 0x49
 3794 01fb 13       		.uleb128 0x13
 3795 01fc 3F       		.uleb128 0x3f
 3796 01fd 19       		.uleb128 0x19
 3797 01fe 02       		.uleb128 0x2
 3798 01ff 18       		.uleb128 0x18
 3799 0200 00       		.byte	0
 3800 0201 00       		.byte	0
 3801 0202 00       		.byte	0
 3802              		.section	.debug_aranges,"",%progbits
 3803 0000 1C010000 		.4byte	0x11c
 3804 0004 0200     		.2byte	0x2
 3805 0006 00000000 		.4byte	.Ldebug_info0
 3806 000a 04       		.byte	0x4
 3807 000b 00       		.byte	0
 3808 000c 0000     		.2byte	0
 3809 000e 0000     		.2byte	0
 3810 0010 00000000 		.4byte	.LFB56
 3811 0014 2C000000 		.4byte	.LFE56-.LFB56
 3812 0018 00000000 		.4byte	.LFB57
 3813 001c 78000000 		.4byte	.LFE57-.LFB57
 3814 0020 00000000 		.4byte	.LFB58
 3815 0024 18000000 		.4byte	.LFE58-.LFB58
 3816 0028 00000000 		.4byte	.LFB59
 3817 002c 30000000 		.4byte	.LFE59-.LFB59
 3818 0030 00000000 		.4byte	.LFB60
 3819 0034 2C000000 		.4byte	.LFE60-.LFB60
 3820 0038 00000000 		.4byte	.LFB61
 3821 003c 78000000 		.4byte	.LFE61-.LFB61
 3822 0040 00000000 		.4byte	.LFB62
 3823 0044 70000000 		.4byte	.LFE62-.LFB62
 3824 0048 00000000 		.4byte	.LFB63
 3825 004c 4C000000 		.4byte	.LFE63-.LFB63
 3826 0050 00000000 		.4byte	.LFB64
 3827 0054 3C000000 		.4byte	.LFE64-.LFB64
 3828 0058 00000000 		.4byte	.LFB65
 3829 005c 1A000000 		.4byte	.LFE65-.LFB65
 3830 0060 00000000 		.4byte	.LFB66
 3831 0064 78000000 		.4byte	.LFE66-.LFB66
 3832 0068 00000000 		.4byte	.LFB67
 3833 006c 38000000 		.4byte	.LFE67-.LFB67
 3834 0070 00000000 		.4byte	.LFB68
 3835 0074 44000000 		.4byte	.LFE68-.LFB68
 3836 0078 00000000 		.4byte	.LFB69
 3837 007c 48000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 86


 3838 0080 00000000 		.4byte	.LFB70
 3839 0084 28000000 		.4byte	.LFE70-.LFB70
 3840 0088 00000000 		.4byte	.LFB71
 3841 008c 28000000 		.4byte	.LFE71-.LFB71
 3842 0090 00000000 		.4byte	.LFB72
 3843 0094 28000000 		.4byte	.LFE72-.LFB72
 3844 0098 00000000 		.4byte	.LFB73
 3845 009c 28000000 		.4byte	.LFE73-.LFB73
 3846 00a0 00000000 		.4byte	.LFB74
 3847 00a4 28000000 		.4byte	.LFE74-.LFB74
 3848 00a8 00000000 		.4byte	.LFB75
 3849 00ac 48000000 		.4byte	.LFE75-.LFB75
 3850 00b0 00000000 		.4byte	.LFB76
 3851 00b4 48000000 		.4byte	.LFE76-.LFB76
 3852 00b8 00000000 		.4byte	.LFB77
 3853 00bc 28000000 		.4byte	.LFE77-.LFB77
 3854 00c0 00000000 		.4byte	.LFB78
 3855 00c4 48000000 		.4byte	.LFE78-.LFB78
 3856 00c8 00000000 		.4byte	.LFB79
 3857 00cc 28000000 		.4byte	.LFE79-.LFB79
 3858 00d0 00000000 		.4byte	.LFB80
 3859 00d4 44000000 		.4byte	.LFE80-.LFB80
 3860 00d8 00000000 		.4byte	.LFB81
 3861 00dc 44000000 		.4byte	.LFE81-.LFB81
 3862 00e0 00000000 		.4byte	.LFB82
 3863 00e4 98000000 		.4byte	.LFE82-.LFB82
 3864 00e8 00000000 		.4byte	.LFB83
 3865 00ec FC000000 		.4byte	.LFE83-.LFB83
 3866 00f0 00000000 		.4byte	.LFB84
 3867 00f4 28010000 		.4byte	.LFE84-.LFB84
 3868 00f8 00000000 		.4byte	.LFB85
 3869 00fc E0000000 		.4byte	.LFE85-.LFB85
 3870 0100 00000000 		.4byte	.LFB86
 3871 0104 9C000000 		.4byte	.LFE86-.LFB86
 3872 0108 00000000 		.4byte	.LFB87
 3873 010c 24000000 		.4byte	.LFE87-.LFB87
 3874 0110 00000000 		.4byte	.LFB88
 3875 0114 44000000 		.4byte	.LFE88-.LFB88
 3876 0118 00000000 		.4byte	0
 3877 011c 00000000 		.4byte	0
 3878              		.section	.debug_ranges,"",%progbits
 3879              	.Ldebug_ranges0:
 3880 0000 00000000 		.4byte	.LFB56
 3881 0004 2C000000 		.4byte	.LFE56
 3882 0008 00000000 		.4byte	.LFB57
 3883 000c 78000000 		.4byte	.LFE57
 3884 0010 00000000 		.4byte	.LFB58
 3885 0014 18000000 		.4byte	.LFE58
 3886 0018 00000000 		.4byte	.LFB59
 3887 001c 30000000 		.4byte	.LFE59
 3888 0020 00000000 		.4byte	.LFB60
 3889 0024 2C000000 		.4byte	.LFE60
 3890 0028 00000000 		.4byte	.LFB61
 3891 002c 78000000 		.4byte	.LFE61
 3892 0030 00000000 		.4byte	.LFB62
 3893 0034 70000000 		.4byte	.LFE62
 3894 0038 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 87


 3895 003c 4C000000 		.4byte	.LFE63
 3896 0040 00000000 		.4byte	.LFB64
 3897 0044 3C000000 		.4byte	.LFE64
 3898 0048 00000000 		.4byte	.LFB65
 3899 004c 1A000000 		.4byte	.LFE65
 3900 0050 00000000 		.4byte	.LFB66
 3901 0054 78000000 		.4byte	.LFE66
 3902 0058 00000000 		.4byte	.LFB67
 3903 005c 38000000 		.4byte	.LFE67
 3904 0060 00000000 		.4byte	.LFB68
 3905 0064 44000000 		.4byte	.LFE68
 3906 0068 00000000 		.4byte	.LFB69
 3907 006c 48000000 		.4byte	.LFE69
 3908 0070 00000000 		.4byte	.LFB70
 3909 0074 28000000 		.4byte	.LFE70
 3910 0078 00000000 		.4byte	.LFB71
 3911 007c 28000000 		.4byte	.LFE71
 3912 0080 00000000 		.4byte	.LFB72
 3913 0084 28000000 		.4byte	.LFE72
 3914 0088 00000000 		.4byte	.LFB73
 3915 008c 28000000 		.4byte	.LFE73
 3916 0090 00000000 		.4byte	.LFB74
 3917 0094 28000000 		.4byte	.LFE74
 3918 0098 00000000 		.4byte	.LFB75
 3919 009c 48000000 		.4byte	.LFE75
 3920 00a0 00000000 		.4byte	.LFB76
 3921 00a4 48000000 		.4byte	.LFE76
 3922 00a8 00000000 		.4byte	.LFB77
 3923 00ac 28000000 		.4byte	.LFE77
 3924 00b0 00000000 		.4byte	.LFB78
 3925 00b4 48000000 		.4byte	.LFE78
 3926 00b8 00000000 		.4byte	.LFB79
 3927 00bc 28000000 		.4byte	.LFE79
 3928 00c0 00000000 		.4byte	.LFB80
 3929 00c4 44000000 		.4byte	.LFE80
 3930 00c8 00000000 		.4byte	.LFB81
 3931 00cc 44000000 		.4byte	.LFE81
 3932 00d0 00000000 		.4byte	.LFB82
 3933 00d4 98000000 		.4byte	.LFE82
 3934 00d8 00000000 		.4byte	.LFB83
 3935 00dc FC000000 		.4byte	.LFE83
 3936 00e0 00000000 		.4byte	.LFB84
 3937 00e4 28010000 		.4byte	.LFE84
 3938 00e8 00000000 		.4byte	.LFB85
 3939 00ec E0000000 		.4byte	.LFE85
 3940 00f0 00000000 		.4byte	.LFB86
 3941 00f4 9C000000 		.4byte	.LFE86
 3942 00f8 00000000 		.4byte	.LFB87
 3943 00fc 24000000 		.4byte	.LFE87
 3944 0100 00000000 		.4byte	.LFB88
 3945 0104 44000000 		.4byte	.LFE88
 3946 0108 00000000 		.4byte	0
 3947 010c 00000000 		.4byte	0
 3948              		.section	.debug_line,"",%progbits
 3949              	.Ldebug_line0:
 3950 0000 B7040000 		.section	.debug_str,"MS",%progbits,1
 3950      02004A01 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 88


 3950      00000201 
 3950      FB0E0D00 
 3950      01010101 
 3951              	.LASF30:
 3952 0000 76616C69 		.ascii	"valid\000"
 3952      6400
 3953              	.LASF63:
 3954 0006 6D6F6465 		.ascii	"modem_get_packet\000"
 3954      6D5F6765 
 3954      745F7061 
 3954      636B6574 
 3954      00
 3955              	.LASF25:
 3956 0017 65787065 		.ascii	"expected_response\000"
 3956      63746564 
 3956      5F726573 
 3956      706F6E73 
 3956      6500
 3957              	.LASF72:
 3958 0029 72785F63 		.ascii	"rx_char_hold\000"
 3958      6861725F 
 3958      686F6C64 
 3958      00
 3959              	.LASF51:
 3960 0036 6D6F6465 		.ascii	"modem_enable_CDMA_data\000"
 3960      6D5F656E 
 3960      61626C65 
 3960      5F43444D 
 3960      415F6461 
 3961              	.LASF71:
 3962 004d 54656C69 		.ascii	"Telit_isr_rx\000"
 3962      745F6973 
 3962      725F7278 
 3962      00
 3963              	.LASF84:
 3964 005a 2E5C6D6F 		.ascii	".\\modem.c\000"
 3964      64656D2E 
 3964      6300
 3965              	.LASF39:
 3966 0064 6D6F6465 		.ascii	"modem_set_apn\000"
 3966      6D5F7365 
 3966      745F6170 
 3966      6E00
 3967              	.LASF55:
 3968 0072 6D6F6465 		.ascii	"modem_set_password\000"
 3968      6D5F7365 
 3968      745F7061 
 3968      7373776F 
 3968      726400
 3969              	.LASF58:
 3970 0085 6765745F 		.ascii	"get_str\000"
 3970      73747200 
 3971              	.LASF18:
 3972 008d 6D6F6465 		.ascii	"modem_startup\000"
 3972      6D5F7374 
 3972      61727475 
 3972      7000
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 89


 3973              	.LASF70:
 3974 009b 75617274 		.ascii	"uart_string_reset\000"
 3974      5F737472 
 3974      696E675F 
 3974      72657365 
 3974      7400
 3975              	.LASF28:
 3976 00ad 64656C61 		.ascii	"delay\000"
 3976      7900
 3977              	.LASF2:
 3978 00b3 73686F72 		.ascii	"short int\000"
 3978      7420696E 
 3978      7400
 3979              	.LASF82:
 3980 00bd 6D6F6465 		.ascii	"modem_apn\000"
 3980      6D5F6170 
 3980      6E00
 3981              	.LASF83:
 3982 00c7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3982      4320342E 
 3982      382E3420 
 3982      32303134 
 3982      30353236 
 3983 00fa 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3983      20726576 
 3983      6973696F 
 3983      6E203231 
 3983      31333538 
 3984 012d 30202D66 		.ascii	"0 -ffunction-sections\000"
 3984      66756E63 
 3984      74696F6E 
 3984      2D736563 
 3984      74696F6E 
 3985              	.LASF50:
 3986 0143 6D6F6465 		.ascii	"modem_get_sw_version\000"
 3986      6D5F6765 
 3986      745F7377 
 3986      5F766572 
 3986      73696F6E 
 3987              	.LASF12:
 3988 0158 75696E74 		.ascii	"uint16\000"
 3988      313600
 3989              	.LASF81:
 3990 015f 75617274 		.ascii	"uart_received_string\000"
 3990      5F726563 
 3990      65697665 
 3990      645F7374 
 3990      72696E67 
 3991              	.LASF35:
 3992 0174 636F756E 		.ascii	"count\000"
 3992      7400
 3993              	.LASF52:
 3994 017a 6D6F6465 		.ascii	"modem_test_CDMA_data\000"
 3994      6D5F7465 
 3994      73745F43 
 3994      444D415F 
 3994      64617461 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 90


 3995              	.LASF64:
 3996 018f 7061636B 		.ascii	"packet\000"
 3996      657400
 3997              	.LASF59:
 3998 0196 6B65795F 		.ascii	"key_str\000"
 3998      73747200 
 3999              	.LASF85:
 4000 019e 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 4000      73657273 
 4000      5C4D6174 
 4000      74686577 
 4000      5C676974 
 4001 01cb 6172642E 		.ascii	"ard.cydsn\000"
 4001      63796473 
 4001      6E00
 4002              	.LASF14:
 4003 01d5 666C6F61 		.ascii	"float\000"
 4003      7400
 4004              	.LASF42:
 4005 01db 6D6F6465 		.ascii	"modem_get_time\000"
 4005      6D5F6765 
 4005      745F7469 
 4005      6D6500
 4006              	.LASF32:
 4007 01ea 6D6F6465 		.ascii	"modem_power_off\000"
 4007      6D5F706F 
 4007      7765725F 
 4007      6F666600 
 4008              	.LASF6:
 4009 01fa 6C6F6E67 		.ascii	"long long int\000"
 4009      206C6F6E 
 4009      6720696E 
 4009      7400
 4010              	.LASF36:
 4011 0208 6E657477 		.ascii	"network_status\000"
 4011      6F726B5F 
 4011      73746174 
 4011      757300
 4012              	.LASF57:
 4013 0217 6D6F6465 		.ascii	"modem_get_google\000"
 4013      6D5F6765 
 4013      745F676F 
 4013      6F676C65 
 4013      00
 4014              	.LASF4:
 4015 0228 6C6F6E67 		.ascii	"long int\000"
 4015      20696E74 
 4015      00
 4016              	.LASF17:
 4017 0231 73697A65 		.ascii	"sizetype\000"
 4017      74797065 
 4017      00
 4018              	.LASF61:
 4019 023a 626F6479 		.ascii	"body\000"
 4019      00
 4020              	.LASF23:
 4021 023f 61745F77 		.ascii	"at_write_command\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 91


 4021      72697465 
 4021      5F636F6D 
 4021      6D616E64 
 4021      00
 4022              	.LASF47:
 4023 0250 6D6F6465 		.ascii	"modem_set_flow_control\000"
 4023      6D5F7365 
 4023      745F666C 
 4023      6F775F63 
 4023      6F6E7472 
 4024              	.LASF80:
 4025 0267 75617274 		.ascii	"uart_string_index\000"
 4025      5F737472 
 4025      696E675F 
 4025      696E6465 
 4025      7800
 4026              	.LASF22:
 4027 0279 6D6F6465 		.ascii	"modem_set_api_feed\000"
 4027      6D5F7365 
 4027      745F6170 
 4027      695F6665 
 4027      656400
 4028              	.LASF38:
 4029 028c 6D6F6465 		.ascii	"modem_connect\000"
 4029      6D5F636F 
 4029      6E6E6563 
 4029      7400
 4030              	.LASF40:
 4031 029a 6D6F6465 		.ascii	"modem_set_band\000"
 4031      6D5F7365 
 4031      745F6261 
 4031      6E6400
 4032              	.LASF56:
 4033 02a9 70617373 		.ascii	"pass\000"
 4033      00
 4034              	.LASF1:
 4035 02ae 756E7369 		.ascii	"unsigned char\000"
 4035      676E6564 
 4035      20636861 
 4035      7200
 4036              	.LASF33:
 4037 02bc 6D6F6465 		.ascii	"modem_reset\000"
 4037      6D5F7265 
 4037      73657400 
 4038              	.LASF74:
 4039 02c8 6D6F6465 		.ascii	"modem_state\000"
 4039      6D5F7374 
 4039      61746500 
 4040              	.LASF0:
 4041 02d4 7369676E 		.ascii	"signed char\000"
 4041      65642063 
 4041      68617200 
 4042              	.LASF7:
 4043 02e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4043      206C6F6E 
 4043      6720756E 
 4043      7369676E 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 92


 4043      65642069 
 4044              	.LASF8:
 4045 02f7 756E7369 		.ascii	"unsigned int\000"
 4045      676E6564 
 4045      20696E74 
 4045      00
 4046              	.LASF48:
 4047 0304 70617261 		.ascii	"param\000"
 4047      6D00
 4048              	.LASF41:
 4049 030a 62616E64 		.ascii	"band\000"
 4049      00
 4050              	.LASF54:
 4051 030f 75736572 		.ascii	"user\000"
 4051      00
 4052              	.LASF3:
 4053 0314 73686F72 		.ascii	"short unsigned int\000"
 4053      7420756E 
 4053      7369676E 
 4053      65642069 
 4053      6E7400
 4054              	.LASF31:
 4055 0327 6D6F6465 		.ascii	"modem_power_on\000"
 4055      6D5F706F 
 4055      7765725F 
 4055      6F6E00
 4056              	.LASF16:
 4057 0336 63686172 		.ascii	"char\000"
 4057      00
 4058              	.LASF73:
 4059 033b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4059      52784275 
 4059      66666572 
 4059      00
 4060              	.LASF79:
 4061 0348 72656164 		.ascii	"ready\000"
 4061      7900
 4062              	.LASF10:
 4063 034e 696E7433 		.ascii	"int32_t\000"
 4063      325F7400 
 4064              	.LASF66:
 4065 0356 6C6F636B 		.ascii	"lock\000"
 4065      00
 4066              	.LASF44:
 4067 035b 6D6F6465 		.ascii	"modem_get_signal_quality\000"
 4067      6D5F6765 
 4067      745F7369 
 4067      676E616C 
 4067      5F717561 
 4068              	.LASF67:
 4069 0374 6C6F636B 		.ascii	"lock_attempts\000"
 4069      5F617474 
 4069      656D7074 
 4069      7300
 4070              	.LASF11:
 4071 0382 75696E74 		.ascii	"uint8\000"
 4071      3800
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 93


 4072              	.LASF21:
 4073 0388 6D6F6465 		.ascii	"modem_stop\000"
 4073      6D5F7374 
 4073      6F7000
 4074              	.LASF20:
 4075 0393 6D6F6465 		.ascii	"modem_start\000"
 4075      6D5F7374 
 4075      61727400 
 4076              	.LASF13:
 4077 039f 75696E74 		.ascii	"uint32\000"
 4077      333200
 4078              	.LASF34:
 4079 03a6 6D6F6465 		.ascii	"modem_setup\000"
 4079      6D5F7365 
 4079      74757000 
 4080              	.LASF5:
 4081 03b2 6C6F6E67 		.ascii	"long unsigned int\000"
 4081      20756E73 
 4081      69676E65 
 4081      6420696E 
 4081      7400
 4082              	.LASF75:
 4083 03c4 6C6F636B 		.ascii	"lock_acquired\000"
 4083      5F616371 
 4083      75697265 
 4083      6400
 4084              	.LASF15:
 4085 03d2 646F7562 		.ascii	"double\000"
 4085      6C6500
 4086              	.LASF29:
 4087 03d9 696E7465 		.ascii	"interval\000"
 4087      7276616C 
 4087      00
 4088              	.LASF27:
 4089 03e2 72657370 		.ascii	"response\000"
 4089      6F6E7365 
 4089      00
 4090              	.LASF19:
 4091 03eb 6D6F6465 		.ascii	"modem_shutdown\000"
 4091      6D5F7368 
 4091      7574646F 
 4091      776E00
 4092              	.LASF60:
 4093 03fa 6D6F6465 		.ascii	"modem_send_packet\000"
 4093      6D5F7365 
 4093      6E645F70 
 4093      61636B65 
 4093      7400
 4094              	.LASF9:
 4095 040c 5F5F696E 		.ascii	"__int32_t\000"
 4095      7433325F 
 4095      7400
 4096              	.LASF45:
 4097 0416 6D6F6465 		.ascii	"modem_get_serial_number\000"
 4097      6D5F6765 
 4097      745F7365 
 4097      7269616C 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 94


 4097      5F6E756D 
 4098              	.LASF37:
 4099 042e 6D6F6465 		.ascii	"modem_disconnect\000"
 4099      6D5F6469 
 4099      73636F6E 
 4099      6E656374 
 4099      00
 4100              	.LASF65:
 4101 043f 6D6F6465 		.ascii	"modem_acquire_lock\000"
 4101      6D5F6163 
 4101      71756972 
 4101      655F6C6F 
 4101      636B00
 4102              	.LASF24:
 4103 0452 75617274 		.ascii	"uart_string\000"
 4103      5F737472 
 4103      696E6700 
 4104              	.LASF78:
 4105 045e 69746572 		.ascii	"iter\000"
 4105      00
 4106              	.LASF77:
 4107 0463 6170695F 		.ascii	"api_key\000"
 4107      6B657900 
 4108              	.LASF62:
 4109 046b 7075745F 		.ascii	"put_str\000"
 4109      73747200 
 4110              	.LASF46:
 4111 0473 6D6F6465 		.ascii	"modem_get_profile\000"
 4111      6D5F6765 
 4111      745F7072 
 4111      6F66696C 
 4111      6500
 4112              	.LASF49:
 4113 0485 6D6F6465 		.ascii	"modem_set_error_reports\000"
 4113      6D5F7365 
 4113      745F6572 
 4113      726F725F 
 4113      7265706F 
 4114              	.LASF76:
 4115 049d 66656564 		.ascii	"feed_id\000"
 4115      5F696400 
 4116              	.LASF68:
 4117 04a5 64617461 		.ascii	"data_packet\000"
 4117      5F706163 
 4117      6B657400 
 4118              	.LASF43:
 4119 04b1 6D6F6465 		.ascii	"modem_check_network\000"
 4119      6D5F6368 
 4119      65636B5F 
 4119      6E657477 
 4119      6F726B00 
 4120              	.LASF69:
 4121 04c5 6D6F6465 		.ascii	"modem_release_lock\000"
 4121      6D5F7265 
 4121      6C656173 
 4121      655F6C6F 
 4121      636B00
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccJLLeEu.s 			page 95


 4122              	.LASF53:
 4123 04d8 6D6F6465 		.ascii	"modem_set_user\000"
 4123      6D5F7365 
 4123      745F7573 
 4123      657200
 4124              	.LASF26:
 4125 04e7 75617274 		.ascii	"uart_timeout\000"
 4125      5F74696D 
 4125      656F7574 
 4125      00
 4126              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
