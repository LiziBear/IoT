ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"modem.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	iter
  19              		.bss
  20              		.align	2
  21              		.type	iter, %object
  22              		.size	iter, 4
  23              	iter:
  24 0000 00000000 		.space	4
  25              		.comm	modem_state,1,1
  26              		.global	lock_acquired
  27              		.type	lock_acquired, %object
  28              		.size	lock_acquired, 1
  29              	lock_acquired:
  30 0004 00       		.space	1
  31              		.global	ready
  32              		.type	ready, %object
  33              		.size	ready, 1
  34              	ready:
  35 0005 00       		.space	1
  36              		.global	uart_string_index
  37              		.align	1
  38              		.type	uart_string_index, %object
  39              		.size	uart_string_index, 2
  40              	uart_string_index:
  41 0006 0000     		.space	2
  42              		.comm	feed_id,4,4
  43              		.global	uart_received_string
  44              		.align	2
  45              		.type	uart_received_string, %object
  46              		.size	uart_received_string, 1000
  47              	uart_received_string:
  48 0008 00000000 		.space	1000
  48      00000000 
  48      00000000 
  48      00000000 
  48      00000000 
  49              		.comm	api_key,4,4
  50              		.global	modem_apn
  51              		.section	.rodata
  52              		.align	2
  53              	.LC0:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 2


  54 0000 6570632E 		.ascii	"epc.tmobile.com\000"
  54      746D6F62 
  54      696C652E 
  54      636F6D00 
  55              		.data
  56              		.align	2
  57              		.type	modem_apn, %object
  58              		.size	modem_apn, 4
  59              	modem_apn:
  60 0000 00000000 		.word	.LC0
  61              		.section	.text.modem_set_api_feed,"ax",%progbits
  62              		.align	2
  63              		.global	modem_set_api_feed
  64              		.thumb
  65              		.thumb_func
  66              		.type	modem_set_api_feed, %function
  67              	modem_set_api_feed:
  68              	.LFB56:
  69              		.file 1 ".\\modem.c"
   1:.\modem.c     **** ///* ========================================
   2:.\modem.c     **** // *
   3:.\modem.c     **** // * Copyright YOUR COMPANY, THE YEAR
   4:.\modem.c     **** // * All Rights Reserved
   5:.\modem.c     **** // * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\modem.c     **** // *
   7:.\modem.c     **** // * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\modem.c     **** // * WHICH IS THE PROPERTY OF your company.
   9:.\modem.c     **** // *
  10:.\modem.c     **** // * ========================================
  11:.\modem.c     **** //*/
  12:.\modem.c     **** //
  13:.\modem.c     **** 
  14:.\modem.c     **** #include <device.h>
  15:.\modem.c     **** #include <stdio.h>
  16:.\modem.c     **** #include <string.h>
  17:.\modem.c     **** #include "modem.h"
  18:.\modem.c     **** #include "packet.h"
  19:.\modem.c     **** //#include "debug.h" TODO: ACCOUNT FOR THIS
  20:.\modem.c     **** 
  21:.\modem.c     **** // declare varaiables
  22:.\modem.c     **** int	   iter = 0;
  23:.\modem.c     **** uint8  modem_state, lock_acquired = 0u, ready = 0u;
  24:.\modem.c     **** uint16 uart_string_index = 0u;
  25:.\modem.c     **** uint32 feed_id;
  26:.\modem.c     **** char   uart_received_string[1000] = {0}, *api_key;
  27:.\modem.c     **** char*  modem_apn = "epc.tmobile.com";
  28:.\modem.c     **** 
  29:.\modem.c     **** 
  30:.\modem.c     **** 
  31:.\modem.c     **** // prototype modem interrupt
  32:.\modem.c     **** CY_ISR_PROTO(Telit_isr_rx);
  33:.\modem.c     **** void uart_string_reset();
  34:.\modem.c     **** 
  35:.\modem.c     **** uint8 modem_set_api_feed(uint32 id, char* key){
  70              		.loc 1 35 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 3


  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75 0000 80B4     		push	{r7}
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
  36:.\modem.c     ****     feed_id = id;
  84              		.loc 1 36 0
  85 000a 064B     		ldr	r3, .L3
  86 000c 7A68     		ldr	r2, [r7, #4]
  87 000e 1A60     		str	r2, [r3]
  37:.\modem.c     ****     api_key = key;
  88              		.loc 1 37 0
  89 0010 054B     		ldr	r3, .L3+4
  90 0012 3A68     		ldr	r2, [r7]
  91 0014 1A60     		str	r2, [r3]
  38:.\modem.c     ****     return 1u;
  92              		.loc 1 38 0
  93 0016 0123     		movs	r3, #1
  39:.\modem.c     **** }
  94              		.loc 1 39 0
  95 0018 1846     		mov	r0, r3
  96 001a 0C37     		adds	r7, r7, #12
  97 001c BD46     		mov	sp, r7
  98              		@ sp needed
  99 001e 5DF8047B 		ldr	r7, [sp], #4
 100 0022 7047     		bx	lr
 101              	.L4:
 102              		.align	2
 103              	.L3:
 104 0024 00000000 		.word	feed_id
 105 0028 00000000 		.word	api_key
 106              		.cfi_endproc
 107              	.LFE56:
 108              		.size	modem_set_api_feed, .-modem_set_api_feed
 109              		.section	.text.modem_startup,"ax",%progbits
 110              		.align	2
 111              		.global	modem_startup
 112              		.thumb
 113              		.thumb_func
 114              		.type	modem_startup, %function
 115              	modem_startup:
 116              	.LFB57:
  40:.\modem.c     **** 
  41:.\modem.c     **** // startup sequence to power on the modem, start modem
  42:.\modem.c     **** // components and prepare for sending/receiving messages
  43:.\modem.c     **** // over the network
  44:.\modem.c     **** uint8	modem_startup() {
 117              		.loc 1 44 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 4


 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
  45:.\modem.c     **** 	iter = 0, ready = 0u;
 127              		.loc 1 45 0
 128 0004 1A4B     		ldr	r3, .L10
 129 0006 0022     		movs	r2, #0
 130 0008 1A60     		str	r2, [r3]
 131 000a 1A4B     		ldr	r3, .L10+4
 132 000c 0022     		movs	r2, #0
 133 000e 1A70     		strb	r2, [r3]
  46:.\modem.c     **** 
  47:.\modem.c     **** 	modem_start();
 134              		.loc 1 47 0
 135 0010 FFF7FEFF 		bl	modem_start
  48:.\modem.c     **** 	
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 136              		.loc 1 49 0
 137 0014 24E0     		b	.L6
 138              	.L9:
  50:.\modem.c     **** 		iter++;
 139              		.loc 1 50 0
 140 0016 164B     		ldr	r3, .L10
 141 0018 1B68     		ldr	r3, [r3]
 142 001a 5A1C     		adds	r2, r3, #1
 143 001c 144B     		ldr	r3, .L10
 144 001e 1A60     		str	r2, [r3]
  51:.\modem.c     **** 
  52:.\modem.c     **** 		/* Set up the modem */
  53:.\modem.c     **** 		//LED_Write(!LED_Read());
  54:.\modem.c     **** 		ready = modem_power_on();
 145              		.loc 1 54 0
 146 0020 FFF7FEFF 		bl	modem_power_on
 147 0024 0346     		mov	r3, r0
 148 0026 1A46     		mov	r2, r3
 149 0028 124B     		ldr	r3, .L10+4
 150 002a 1A70     		strb	r2, [r3]
  55:.\modem.c     **** 		//LED_Write(!LED_Read());
  56:.\modem.c     **** 		//ready = at_write_command("AT\r","OK",1000u);      
  57:.\modem.c     **** 		modem_set_flow_control(0u);	
 151              		.loc 1 57 0
 152 002c 0020     		movs	r0, #0
 153 002e FFF7FEFF 		bl	modem_set_flow_control
  58:.\modem.c     **** 		modem_setup();
 154              		.loc 1 58 0
 155 0032 FFF7FEFF 		bl	modem_setup
  59:.\modem.c     **** 		
  60:.\modem.c     **** 		if ( ready == 1u ) {
 156              		.loc 1 60 0
 157 0036 0F4B     		ldr	r3, .L10+4
 158 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 003a 012B     		cmp	r3, #1
 160 003c 0ED1     		bne	.L7
  61:.\modem.c     **** 			// Connect modem to network
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 5


  62:.\modem.c     **** 			// (modem_connect already accounts for retries)
  63:.\modem.c     **** 			//LED_Write(!LED_Read());
  64:.\modem.c     **** 			ready = modem_connect();
 161              		.loc 1 64 0
 162 003e FFF7FEFF 		bl	modem_connect
 163 0042 0346     		mov	r3, r0
 164 0044 1A46     		mov	r2, r3
 165 0046 0B4B     		ldr	r3, .L10+4
 166 0048 1A70     		strb	r2, [r3]
  65:.\modem.c     **** 			
  66:.\modem.c     **** 			if( ready == 3u ) {
 167              		.loc 1 66 0
 168 004a 0A4B     		ldr	r3, .L10+4
 169 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 004e 032B     		cmp	r3, #3
 171 0050 06D1     		bne	.L6
  67:.\modem.c     **** 								
  68:.\modem.c     **** 				iter = MAX_CONN_ATTEMPTS;//break;	
 172              		.loc 1 68 0
 173 0052 074B     		ldr	r3, .L10
 174 0054 0522     		movs	r2, #5
 175 0056 1A60     		str	r2, [r3]
  69:.\modem.c     **** 				return 1u;
 176              		.loc 1 69 0
 177 0058 0123     		movs	r3, #1
 178 005a 06E0     		b	.L8
 179              	.L7:
  70:.\modem.c     **** 			}
  71:.\modem.c     **** 		}
  72:.\modem.c     **** 		else {
  73:.\modem.c     **** 			modem_reset();
 180              		.loc 1 73 0
 181 005c FFF7FEFF 		bl	modem_reset
 182              	.L6:
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 183              		.loc 1 49 0 discriminator 1
 184 0060 034B     		ldr	r3, .L10
 185 0062 1B68     		ldr	r3, [r3]
 186 0064 042B     		cmp	r3, #4
 187 0066 D6DD     		ble	.L9
  74:.\modem.c     **** 		}
  75:.\modem.c     **** 	}
  76:.\modem.c     **** 	
  77:.\modem.c     **** 	// Timed out -- Failed to connect
  78:.\modem.c     **** 	return 0u;
 188              		.loc 1 78 0
 189 0068 0023     		movs	r3, #0
 190              	.L8:
  79:.\modem.c     **** }
 191              		.loc 1 79 0
 192 006a 1846     		mov	r0, r3
 193 006c 80BD     		pop	{r7, pc}
 194              	.L11:
 195 006e 00BF     		.align	2
 196              	.L10:
 197 0070 00000000 		.word	iter
 198 0074 00000000 		.word	ready
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 6


 199              		.cfi_endproc
 200              	.LFE57:
 201              		.size	modem_startup, .-modem_startup
 202              		.section	.text.modem_shutdown,"ax",%progbits
 203              		.align	2
 204              		.global	modem_shutdown
 205              		.thumb
 206              		.thumb_func
 207              		.type	modem_shutdown, %function
 208              	modem_shutdown:
 209              	.LFB58:
  80:.\modem.c     **** 
  81:.\modem.c     **** // shutdown sequence to stop modem components
  82:.\modem.c     **** // and power down the modem
  83:.\modem.c     **** uint8 	modem_shutdown() {
 210              		.loc 1 83 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
  84:.\modem.c     **** 	if (modem_power_off()){
 220              		.loc 1 84 0
 221 0004 FFF7FEFF 		bl	modem_power_off
 222 0008 0346     		mov	r3, r0
 223 000a 002B     		cmp	r3, #0
 224 000c 01D0     		beq	.L13
  85:.\modem.c     **** 		return 1u;	
 225              		.loc 1 85 0
 226 000e 0123     		movs	r3, #1
 227 0010 00E0     		b	.L14
 228              	.L13:
  86:.\modem.c     **** 	}
  87:.\modem.c     **** 	
  88:.\modem.c     **** 	return 0u;
 229              		.loc 1 88 0
 230 0012 0023     		movs	r3, #0
 231              	.L14:
  89:.\modem.c     **** }
 232              		.loc 1 89 0
 233 0014 1846     		mov	r0, r3
 234 0016 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE58:
 237              		.size	modem_shutdown, .-modem_shutdown
 238              		.section	.text.modem_start,"ax",%progbits
 239              		.align	2
 240              		.global	modem_start
 241              		.thumb
 242              		.thumb_func
 243              		.type	modem_start, %function
 244              	modem_start:
 245              	.LFB59:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 7


  90:.\modem.c     **** 
  91:.\modem.c     **** // initialize modem
  92:.\modem.c     **** void modem_start(){
 246              		.loc 1 92 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  93:.\modem.c     ****     Telit_UART_Start();
 256              		.loc 1 93 0
 257 0004 FFF7FEFF 		bl	Telit_UART_Start
  94:.\modem.c     ****     Telit_ControlReg_Write(0u);
 258              		.loc 1 94 0
 259 0008 0020     		movs	r0, #0
 260 000a FFF7FEFF 		bl	Telit_ControlReg_Write
  95:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
  96:.\modem.c     **** 	Telit_ON_Write(1u);			// Prep modem for "push button"
 261              		.loc 1 96 0
 262 000e 0120     		movs	r0, #1
 263 0010 FFF7FEFF 		bl	Telit_ON_Write
  97:.\modem.c     **** 	Telit_RST_Write(1u);		// Prep modem for "push button"
 264              		.loc 1 97 0
 265 0014 0120     		movs	r0, #1
 266 0016 FFF7FEFF 		bl	Telit_RST_Write
  98:.\modem.c     ****     Telit_isr_rx_StartEx(Telit_isr_rx);
 267              		.loc 1 98 0
 268 001a 0348     		ldr	r0, .L16
 269 001c FFF7FEFF 		bl	Telit_isr_rx_StartEx
  99:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 270              		.loc 1 99 0
 271 0020 024B     		ldr	r3, .L16+4
 272 0022 0022     		movs	r2, #0
 273 0024 1A70     		strb	r2, [r3]
 100:.\modem.c     **** }
 274              		.loc 1 100 0
 275 0026 80BD     		pop	{r7, pc}
 276              	.L17:
 277              		.align	2
 278              	.L16:
 279 0028 00000000 		.word	Telit_isr_rx
 280 002c 00000000 		.word	modem_state
 281              		.cfi_endproc
 282              	.LFE59:
 283              		.size	modem_start, .-modem_start
 284              		.section	.text.modem_stop,"ax",%progbits
 285              		.align	2
 286              		.global	modem_stop
 287              		.thumb
 288              		.thumb_func
 289              		.type	modem_stop, %function
 290              	modem_stop:
 291              	.LFB60:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 8


 101:.\modem.c     **** 
 102:.\modem.c     **** // deinitialize modem
 103:.\modem.c     **** void modem_stop(){
 292              		.loc 1 103 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 104:.\modem.c     ****     Telit_UART_Stop();
 302              		.loc 1 104 0
 303 0004 FFF7FEFF 		bl	Telit_UART_Stop
 105:.\modem.c     ****     Telit_ControlReg_Write(0u);
 304              		.loc 1 105 0
 305 0008 0020     		movs	r0, #0
 306 000a FFF7FEFF 		bl	Telit_ControlReg_Write
 106:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
 107:.\modem.c     **** 	Telit_ON_Write(0u);			// Save energy by pulling down "push button"
 307              		.loc 1 107 0
 308 000e 0020     		movs	r0, #0
 309 0010 FFF7FEFF 		bl	Telit_ON_Write
 108:.\modem.c     **** 	Telit_RST_Write(0u);		// Save energy by pulling down "push button"
 310              		.loc 1 108 0
 311 0014 0020     		movs	r0, #0
 312 0016 FFF7FEFF 		bl	Telit_RST_Write
 109:.\modem.c     ****     Telit_isr_rx_Stop();
 313              		.loc 1 109 0
 314 001a FFF7FEFF 		bl	Telit_isr_rx_Stop
 110:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 315              		.loc 1 110 0
 316 001e 024B     		ldr	r3, .L19
 317 0020 0022     		movs	r2, #0
 318 0022 1A70     		strb	r2, [r3]
 111:.\modem.c     **** }
 319              		.loc 1 111 0
 320 0024 80BD     		pop	{r7, pc}
 321              	.L20:
 322 0026 00BF     		.align	2
 323              	.L19:
 324 0028 00000000 		.word	modem_state
 325              		.cfi_endproc
 326              	.LFE60:
 327              		.size	modem_stop, .-modem_stop
 328              		.section	.text.at_write_command,"ax",%progbits
 329              		.align	2
 330              		.global	at_write_command
 331              		.thumb
 332              		.thumb_func
 333              		.type	at_write_command, %function
 334              	at_write_command:
 335              	.LFB61:
 112:.\modem.c     **** 
 113:.\modem.c     **** // send at-command to modem
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 9


 114:.\modem.c     **** uint8 at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout){
 336              		.loc 1 114 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 40
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 8AB0     		sub	sp, sp, #40
 345              		.cfi_def_cfa_offset 48
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 F860     		str	r0, [r7, #12]
 349 0008 B960     		str	r1, [r7, #8]
 350 000a 7A60     		str	r2, [r7, #4]
 115:.\modem.c     ****     uint8 response = 0u;
 351              		.loc 1 115 0
 352 000c 0023     		movs	r3, #0
 353 000e 87F82730 		strb	r3, [r7, #39]
 116:.\modem.c     ****     uint32 i = 0u, delay = 100u, interval = uart_timeout/delay;
 354              		.loc 1 116 0
 355 0012 0023     		movs	r3, #0
 356 0014 3B62     		str	r3, [r7, #32]
 357 0016 6423     		movs	r3, #100
 358 0018 FB61     		str	r3, [r7, #28]
 359 001a 7A68     		ldr	r2, [r7, #4]
 360 001c FB69     		ldr	r3, [r7, #28]
 361 001e B2FBF3F3 		udiv	r3, r2, r3
 362 0022 BB61     		str	r3, [r7, #24]
 117:.\modem.c     ****     
 118:.\modem.c     ****     uart_string_reset();
 363              		.loc 1 118 0
 364 0024 FFF7FEFF 		bl	uart_string_reset
 119:.\modem.c     ****     Telit_UART_PutString(uart_string);//Telit_UART_PutString("AT\r");
 365              		.loc 1 119 0
 366 0028 F868     		ldr	r0, [r7, #12]
 367 002a FFF7FEFF 		bl	Telit_UART_PutString
 120:.\modem.c     ****     
 121:.\modem.c     ****     if( strcmp(expected_response, "") != 0){
 368              		.loc 1 121 0
 369 002e BB68     		ldr	r3, [r7, #8]
 370 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371 0032 002B     		cmp	r3, #0
 372 0034 18D0     		beq	.L22
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 373              		.loc 1 122 0
 374 0036 0023     		movs	r3, #0
 375 0038 3B62     		str	r3, [r7, #32]
 376 003a 11E0     		b	.L23
 377              	.L25:
 378              	.LBB2:
 123:.\modem.c     ****             char* valid = strstr(uart_received_string, expected_response);
 379              		.loc 1 123 0
 380 003c 0D48     		ldr	r0, .L27
 381 003e B968     		ldr	r1, [r7, #8]
 382 0040 FFF7FEFF 		bl	strstr
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 10


 383 0044 7861     		str	r0, [r7, #20]
 124:.\modem.c     ****             if(valid != NULL){
 384              		.loc 1 124 0
 385 0046 7B69     		ldr	r3, [r7, #20]
 386 0048 002B     		cmp	r3, #0
 387 004a 03D0     		beq	.L24
 125:.\modem.c     ****                 response = 1u;
 388              		.loc 1 125 0
 389 004c 0123     		movs	r3, #1
 390 004e 87F82730 		strb	r3, [r7, #39]
 126:.\modem.c     ****                 break;
 391              		.loc 1 126 0
 392 0052 09E0     		b	.L22
 393              	.L24:
 127:.\modem.c     ****             }
 128:.\modem.c     ****             CyDelay(delay);
 394              		.loc 1 128 0
 395 0054 F869     		ldr	r0, [r7, #28]
 396 0056 FFF7FEFF 		bl	CyDelay
 397              	.LBE2:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 398              		.loc 1 122 0
 399 005a 3B6A     		ldr	r3, [r7, #32]
 400 005c 0133     		adds	r3, r3, #1
 401 005e 3B62     		str	r3, [r7, #32]
 402              	.L23:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 403              		.loc 1 122 0 is_stmt 0 discriminator 1
 404 0060 3A6A     		ldr	r2, [r7, #32]
 405 0062 BB69     		ldr	r3, [r7, #24]
 406 0064 9A42     		cmp	r2, r3
 407 0066 E9D3     		bcc	.L25
 408              	.L22:
 129:.\modem.c     ****         }
 130:.\modem.c     ****     }
 131:.\modem.c     ****     
 132:.\modem.c     ****     return response;
 409              		.loc 1 132 0 is_stmt 1
 410 0068 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 133:.\modem.c     **** }
 411              		.loc 1 133 0
 412 006c 1846     		mov	r0, r3
 413 006e 2837     		adds	r7, r7, #40
 414 0070 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0072 80BD     		pop	{r7, pc}
 417              	.L28:
 418              		.align	2
 419              	.L27:
 420 0074 00000000 		.word	uart_received_string
 421              		.cfi_endproc
 422              	.LFE61:
 423              		.size	at_write_command, .-at_write_command
 424              		.section	.rodata
 425              		.align	2
 426              	.LC1:
 427 0010 41540D00 		.ascii	"AT\015\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 11


 428              		.align	2
 429              	.LC2:
 430 0014 4F4B00   		.ascii	"OK\000"
 431              		.section	.text.modem_power_on,"ax",%progbits
 432              		.align	2
 433              		.global	modem_power_on
 434              		.thumb
 435              		.thumb_func
 436              		.type	modem_power_on, %function
 437              	modem_power_on:
 438              	.LFB62:
 134:.\modem.c     **** 
 135:.\modem.c     **** uint8 modem_power_on(){
 439              		.loc 1 135 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 136:.\modem.c     **** 
 137:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) {
 449              		.loc 1 137 0
 450 0004 174B     		ldr	r3, .L33
 451 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0008 002B     		cmp	r3, #0
 453 000a 01D0     		beq	.L30
 138:.\modem.c     ****         // Modem is already on
 139:.\modem.c     ****         return 1u;
 454              		.loc 1 139 0
 455 000c 0123     		movs	r3, #1
 456 000e 26E0     		b	.L31
 457              	.L30:
 140:.\modem.c     ****     }
 141:.\modem.c     ****     
 142:.\modem.c     ****     // Set ON, PWR pins low
 143:.\modem.c     ****     Telit_ON_Write(0u); 
 458              		.loc 1 143 0
 459 0010 0020     		movs	r0, #0
 460 0012 FFF7FEFF 		bl	Telit_ON_Write
 144:.\modem.c     ****     Telit_RST_Write(0u);
 461              		.loc 1 144 0
 462 0016 0020     		movs	r0, #0
 463 0018 FFF7FEFF 		bl	Telit_RST_Write
 145:.\modem.c     ****     
 146:.\modem.c     ****     // Provide power to Telit module
 147:.\modem.c     ****     //Telit_PWR_Write(0u); //provide power to modem
 148:.\modem.c     ****     Telit_ControlReg_Write(1u);
 464              		.loc 1 148 0
 465 001c 0120     		movs	r0, #1
 466 001e FFF7FEFF 		bl	Telit_ControlReg_Write
 149:.\modem.c     ****     
 150:.\modem.c     ****     // "Push" the ON button for 2 seconds
 151:.\modem.c     ****     Telit_ON_Write(1u); 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 12


 467              		.loc 1 151 0
 468 0022 0120     		movs	r0, #1
 469 0024 FFF7FEFF 		bl	Telit_ON_Write
 152:.\modem.c     ****     CyDelay(2000u);     // the pad ON# must be tied low for at least 1 second and then released.
 470              		.loc 1 152 0
 471 0028 4FF4FA60 		mov	r0, #2000
 472 002c FFF7FEFF 		bl	CyDelay
 153:.\modem.c     ****     //CyDelay(1500u);     // At least 3 seconds if VBAT < 3.4 for GC 864
 154:.\modem.c     ****     Telit_ON_Write(0u); 
 473              		.loc 1 154 0
 474 0030 0020     		movs	r0, #0
 475 0032 FFF7FEFF 		bl	Telit_ON_Write
 155:.\modem.c     ****     
 156:.\modem.c     ****     CyDelay(5000u);  
 476              		.loc 1 156 0
 477 0036 41F28830 		movw	r0, #5000
 478 003a FFF7FEFF 		bl	CyDelay
 157:.\modem.c     ****     /* NOTE:
 158:.\modem.c     ****         "To get the desirable stability, 
 159:.\modem.c     ****         CC864-DUAL needs at least 10 seconds 
 160:.\modem.c     ****         after the PWRMON goes HIGH.*/
 161:.\modem.c     **** 	
 162:.\modem.c     **** 	if(at_write_command("AT\r","OK",1000u) == 1){    
 479              		.loc 1 162 0
 480 003e 0A48     		ldr	r0, .L33+4
 481 0040 0A49     		ldr	r1, .L33+8
 482 0042 4FF47A72 		mov	r2, #1000
 483 0046 FFF7FEFF 		bl	at_write_command
 484 004a 0346     		mov	r3, r0
 485 004c 012B     		cmp	r3, #1
 486 004e 05D1     		bne	.L32
 163:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 487              		.loc 1 163 0
 488 0050 044B     		ldr	r3, .L33
 489 0052 0122     		movs	r2, #1
 490 0054 1A70     		strb	r2, [r3]
 164:.\modem.c     ****         return modem_state;
 491              		.loc 1 164 0
 492 0056 034B     		ldr	r3, .L33
 493 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 005a 00E0     		b	.L31
 495              	.L32:
 165:.\modem.c     ****     }	
 166:.\modem.c     **** 	
 167:.\modem.c     **** 	// Failed to turn on
 168:.\modem.c     ****     return 0u;
 496              		.loc 1 168 0
 497 005c 0023     		movs	r3, #0
 498              	.L31:
 169:.\modem.c     **** }
 499              		.loc 1 169 0
 500 005e 1846     		mov	r0, r3
 501 0060 80BD     		pop	{r7, pc}
 502              	.L34:
 503 0062 00BF     		.align	2
 504              	.L33:
 505 0064 00000000 		.word	modem_state
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 13


 506 0068 10000000 		.word	.LC1
 507 006c 14000000 		.word	.LC2
 508              		.cfi_endproc
 509              	.LFE62:
 510              		.size	modem_power_on, .-modem_power_on
 511              		.section	.text.modem_power_off,"ax",%progbits
 512              		.align	2
 513              		.global	modem_power_off
 514              		.thumb
 515              		.thumb_func
 516              		.type	modem_power_off, %function
 517              	modem_power_off:
 518              	.LFB63:
 170:.\modem.c     **** 
 171:.\modem.c     **** uint8 modem_power_off(){
 519              		.loc 1 171 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 172:.\modem.c     **** 	
 173:.\modem.c     ****     if (modem_state == MODEM_STATE_OFF) {
 529              		.loc 1 173 0
 530 0004 104B     		ldr	r3, .L38
 531 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0008 002B     		cmp	r3, #0
 533 000a 01D1     		bne	.L36
 174:.\modem.c     ****         // Modem is already off
 175:.\modem.c     ****         return 1u;
 534              		.loc 1 175 0
 535 000c 0123     		movs	r3, #1
 536 000e 19E0     		b	.L37
 537              	.L36:
 176:.\modem.c     ****     }
 177:.\modem.c     **** 	
 178:.\modem.c     ****     // Try to disconnect the modem.  
 179:.\modem.c     ****     // Continue whether or not disconnect is successful
 180:.\modem.c     ****     modem_disconnect();
 538              		.loc 1 180 0
 539 0010 FFF7FEFF 		bl	modem_disconnect
 181:.\modem.c     ****     
 182:.\modem.c     ****     // "Push" the ON button for 
 183:.\modem.c     ****     Telit_ON_Write(1u);
 540              		.loc 1 183 0
 541 0014 0120     		movs	r0, #1
 542 0016 FFF7FEFF 		bl	Telit_ON_Write
 184:.\modem.c     ****     CyDelay(2500u);  // To turn the CC864-DUAL off, the ON/OFF Pin must be tied low for 2 second an
 543              		.loc 1 184 0
 544 001a 40F6C410 		movw	r0, #2500
 545 001e FFF7FEFF 		bl	CyDelay
 185:.\modem.c     ****     Telit_ON_Write(0u);
 546              		.loc 1 185 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 14


 547 0022 0020     		movs	r0, #0
 548 0024 FFF7FEFF 		bl	Telit_ON_Write
 186:.\modem.c     ****     
 187:.\modem.c     ****     CyDelay(5000u); 
 549              		.loc 1 187 0
 550 0028 41F28830 		movw	r0, #5000
 551 002c FFF7FEFF 		bl	CyDelay
 188:.\modem.c     ****     /* CyDelay(5000u); // wait for module to turn off
 189:.\modem.c     ****         "Normally it will be above 10 seconds later from releasing
 190:.\modem.c     ****         ON/OFF# and DTE should monitor the status of PWRMON to see the
 191:.\modem.c     ****         actual power off."  */
 192:.\modem.c     ****     
 193:.\modem.c     ****     // Book keeping
 194:.\modem.c     ****     Telit_ControlReg_Write(0u);    
 552              		.loc 1 194 0
 553 0030 0020     		movs	r0, #0
 554 0032 FFF7FEFF 		bl	Telit_ControlReg_Write
 195:.\modem.c     ****     //Telit_PWR_Write(1u); // Cut power to modem; 1u Disables power to the modem
 196:.\modem.c     ****     Telit_RST_Write(0u); // Make sure the RESET "button" is not pressed
 555              		.loc 1 196 0
 556 0036 0020     		movs	r0, #0
 557 0038 FFF7FEFF 		bl	Telit_RST_Write
 197:.\modem.c     ****     
 198:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 558              		.loc 1 198 0
 559 003c 024B     		ldr	r3, .L38
 560 003e 0022     		movs	r2, #0
 561 0040 1A70     		strb	r2, [r3]
 199:.\modem.c     ****     return 1u;
 562              		.loc 1 199 0
 563 0042 0123     		movs	r3, #1
 564              	.L37:
 200:.\modem.c     **** }
 565              		.loc 1 200 0
 566 0044 1846     		mov	r0, r3
 567 0046 80BD     		pop	{r7, pc}
 568              	.L39:
 569              		.align	2
 570              	.L38:
 571 0048 00000000 		.word	modem_state
 572              		.cfi_endproc
 573              	.LFE63:
 574              		.size	modem_power_off, .-modem_power_off
 575              		.section	.text.modem_reset,"ax",%progbits
 576              		.align	2
 577              		.global	modem_reset
 578              		.thumb
 579              		.thumb_func
 580              		.type	modem_reset, %function
 581              	modem_reset:
 582              	.LFB64:
 201:.\modem.c     **** 
 202:.\modem.c     **** uint8 modem_reset(){
 583              		.loc 1 202 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 15


 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 203:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) { // The modem is idle/ready (powered on)
 593              		.loc 1 203 0
 594 0004 0C4B     		ldr	r3, .L43
 595 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596 0008 002B     		cmp	r3, #0
 597 000a 10D0     		beq	.L41
 204:.\modem.c     ****         
 205:.\modem.c     ****         Telit_RST_Write(1u);
 598              		.loc 1 205 0
 599 000c 0120     		movs	r0, #1
 600 000e FFF7FEFF 		bl	Telit_RST_Write
 206:.\modem.c     ****         CyDelay(500u);  //   To reset and to reboot the module, 
 601              		.loc 1 206 0
 602 0012 4FF4FA70 		mov	r0, #500
 603 0016 FFF7FEFF 		bl	CyDelay
 207:.\modem.c     ****                         // the RESET pin must be tied low for at least 200 milliseconds and then re
 208:.\modem.c     ****         Telit_RST_Write(0u);
 604              		.loc 1 208 0
 605 001a 0020     		movs	r0, #0
 606 001c FFF7FEFF 		bl	Telit_RST_Write
 209:.\modem.c     ****         
 210:.\modem.c     ****         CyDelay(5000u); //CyDelay(5000u);
 607              		.loc 1 210 0
 608 0020 41F28830 		movw	r0, #5000
 609 0024 FFF7FEFF 		bl	CyDelay
 211:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 610              		.loc 1 211 0
 611 0028 034B     		ldr	r3, .L43
 612 002a 0122     		movs	r2, #1
 613 002c 1A70     		strb	r2, [r3]
 614              	.L41:
 212:.\modem.c     ****     }
 213:.\modem.c     ****     return modem_state;
 615              		.loc 1 213 0
 616 002e 024B     		ldr	r3, .L43
 617 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214:.\modem.c     **** }
 618              		.loc 1 214 0
 619 0032 1846     		mov	r0, r3
 620 0034 80BD     		pop	{r7, pc}
 621              	.L44:
 622 0036 00BF     		.align	2
 623              	.L43:
 624 0038 00000000 		.word	modem_state
 625              		.cfi_endproc
 626              	.LFE64:
 627              		.size	modem_reset, .-modem_reset
 628              		.section	.text.modem_setup,"ax",%progbits
 629              		.align	2
 630              		.global	modem_setup
 631              		.thumb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 16


 632              		.thumb_func
 633              		.type	modem_setup, %function
 634              	modem_setup:
 635              	.LFB65:
 215:.\modem.c     **** 
 216:.\modem.c     **** uint8 modem_setup() {
 636              		.loc 1 216 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 217:.\modem.c     **** /* Initialize configurations for the modem */
 218:.\modem.c     **** 	// Set Error Reports to verbose mode
 219:.\modem.c     **** 	if (modem_set_error_reports(2u) != 1u) {
 646              		.loc 1 219 0
 647 0004 0220     		movs	r0, #2
 648 0006 FFF7FEFF 		bl	modem_set_error_reports
 649 000a 0346     		mov	r3, r0
 650 000c 012B     		cmp	r3, #1
 651 000e 01D0     		beq	.L46
 220:.\modem.c     **** 		return 0u;
 652              		.loc 1 220 0
 653 0010 0023     		movs	r3, #0
 654 0012 00E0     		b	.L47
 655              	.L46:
 221:.\modem.c     **** 	}
 222:.\modem.c     **** 	
 223:.\modem.c     **** 	/* UNCOMMENT when using GC864 instead of CC864
 224:.\modem.c     **** 	// Set the APN for GC864-Dual-V2
 225:.\modem.c     **** 	if (modem_set_apn() != 1u) {
 226:.\modem.c     **** 		return 0u;
 227:.\modem.c     **** 	}
 228:.\modem.c     **** 		
 229:.\modem.c     **** 	// Select the band for GC864-Dual-V2
 230:.\modem.c     **** 	if (modem_set_band(1u) != 1u) {
 231:.\modem.c     **** 		return 0u;
 232:.\modem.c     **** 	}
 233:.\modem.c     **** 	*/
 234:.\modem.c     **** 	
 235:.\modem.c     **** 	return 1u;
 656              		.loc 1 235 0
 657 0014 0123     		movs	r3, #1
 658              	.L47:
 236:.\modem.c     **** }
 659              		.loc 1 236 0
 660 0016 1846     		mov	r0, r3
 661 0018 80BD     		pop	{r7, pc}
 662              		.cfi_endproc
 663              	.LFE65:
 664              		.size	modem_setup, .-modem_setup
 665 001a 00BF     		.section	.rodata
 666 0017 00       		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 17


 667              	.LC3:
 668 0018 41542353 		.ascii	"AT#SGACT=1,1\015\000"
 668      47414354 
 668      3D312C31 
 668      0D00
 669              		.section	.text.modem_connect,"ax",%progbits
 670              		.align	2
 671              		.global	modem_connect
 672              		.thumb
 673              		.thumb_func
 674              		.type	modem_connect, %function
 675              	modem_connect:
 676              	.LFB66:
 237:.\modem.c     **** 
 238:.\modem.c     **** uint8 modem_connect(){
 677              		.loc 1 238 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 239:.\modem.c     **** /* Establish modem connection with the network */	
 240:.\modem.c     **** 	uint8 count = 0u, network_status = 0u;
 689              		.loc 1 240 0
 690 0006 0023     		movs	r3, #0
 691 0008 FB71     		strb	r3, [r7, #7]
 692 000a 0023     		movs	r3, #0
 693 000c BB71     		strb	r3, [r7, #6]
 241:.\modem.c     **** 	
 242:.\modem.c     **** 	// Check if modem is registered on home network
 243:.\modem.c     **** 	// Buffer should return +CREG: 0,1
 244:.\modem.c     **** 	// modem_check_network returns 1u if buffer contains ",1"
 245:.\modem.c     **** 	network_status = modem_check_network();
 694              		.loc 1 245 0
 695 000e FFF7FEFF 		bl	modem_check_network
 696 0012 0346     		mov	r3, r0
 697 0014 BB71     		strb	r3, [r7, #6]
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 698              		.loc 1 246 0
 699 0016 0AE0     		b	.L49
 700              	.L51:
 247:.\modem.c     **** 
 248:.\modem.c     **** 		network_status = modem_check_network();
 701              		.loc 1 248 0
 702 0018 FFF7FEFF 		bl	modem_check_network
 703 001c 0346     		mov	r3, r0
 704 001e BB71     		strb	r3, [r7, #6]
 249:.\modem.c     **** 		CyDelay(3000u);
 705              		.loc 1 249 0
 706 0020 40F6B830 		movw	r0, #3000
 707 0024 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 18


 250:.\modem.c     **** 		count++;
 708              		.loc 1 250 0
 709 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 710 002a 0133     		adds	r3, r3, #1
 711 002c FB71     		strb	r3, [r7, #7]
 712              	.L49:
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 713              		.loc 1 246 0 discriminator 1
 714 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 715 0030 002B     		cmp	r3, #0
 716 0032 02D1     		bne	.L50
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 717              		.loc 1 246 0 is_stmt 0 discriminator 2
 718 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 0036 042B     		cmp	r3, #4
 720 0038 EED9     		bls	.L51
 721              	.L50:
 251:.\modem.c     **** 	}
 252:.\modem.c     **** 	
 253:.\modem.c     **** 	if (network_status == 1u) {		
 722              		.loc 1 253 0 is_stmt 1
 723 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 724 003c 012B     		cmp	r3, #1
 725 003e 0ED1     		bne	.L52
 254:.\modem.c     **** 		// Try to activate network context
 255:.\modem.c     **** 		// #SGACT1,<0,1> is for multisocket
 256:.\modem.c     **** 		// For now, use #GPRS, which is from Enhanced Easy IP commands
 257:.\modem.c     **** 	    if(at_write_command("AT#SGACT=1,1\r","OK",5000u) == 1){    
 726              		.loc 1 257 0
 727 0040 0A48     		ldr	r0, .L54
 728 0042 0B49     		ldr	r1, .L54+4
 729 0044 41F28832 		movw	r2, #5000
 730 0048 FFF7FEFF 		bl	at_write_command
 731 004c 0346     		mov	r3, r0
 732 004e 012B     		cmp	r3, #1
 733 0050 05D1     		bne	.L52
 258:.\modem.c     **** 		//if(at_write_command("AT#GPRS=1\r","OK",5000u) == 1){    // Used for GSM (ATT, TMobile)
 259:.\modem.c     **** 	        modem_state = MODEM_STATE_READY;
 734              		.loc 1 259 0
 735 0052 084B     		ldr	r3, .L54+8
 736 0054 0322     		movs	r2, #3
 737 0056 1A70     		strb	r2, [r3]
 260:.\modem.c     **** 	        return modem_state;
 738              		.loc 1 260 0
 739 0058 064B     		ldr	r3, .L54+8
 740 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 005c 01E0     		b	.L53
 742              	.L52:
 261:.\modem.c     **** 	    }		
 262:.\modem.c     **** 	}
 263:.\modem.c     **** 	
 264:.\modem.c     ****     /* Write to SD Card debugger
 265:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 266:.\modem.c     ****     */
 267:.\modem.c     **** 
 268:.\modem.c     ****     return modem_state;
 743              		.loc 1 268 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 19


 744 005e 054B     		ldr	r3, .L54+8
 745 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746              	.L53:
 269:.\modem.c     ****     
 270:.\modem.c     **** /*
 271:.\modem.c     ****     if(at_write_command("AT+CREG=1\r","OK",5000u)){
 272:.\modem.c     ****         if(at_write_command("AT+CREG?\r","OK",5000u)){
 273:.\modem.c     ****         //if(!at_write_command("AT#CGPADDR=1\r","\"",5000u)){
 274:.\modem.c     ****             if(at_write_command("AT#SGACT=1,1\r","OK",30000u)){
 275:.\modem.c     ****                 modem_state = MODEM_STATE_READY;
 276:.\modem.c     ****                 //return 1u; // connected to network
 277:.\modem.c     ****             }
 278:.\modem.c     ****             else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 279:.\modem.c     ****         }
 280:.\modem.c     ****        else debug_write("(AT#CGPADDR=1) No IP Address Exists.");   Returns IP address.. should be c
 281:.\modem.c     ****     }
 282:.\modem.c     ****     else debug_write("(AT+CREG=1) Could not register to network."); CREG reports registration statu
 283:.\modem.c     ****     
 284:.\modem.c     ****     return 0u;
 285:.\modem.c     **** */
 286:.\modem.c     **** /*
 287:.\modem.c     ****     at_write_command("AT+CSQ\r","OK",5000u); // get signal strength
 288:.\modem.c     ****     
 289:.\modem.c     ****     if (!at_write_command("AT+CREG=1\r","OK",5000u)) { // look for network
 290:.\modem.c     ****         debug_write("(AT+CREG=1) Could not register to network.");
 291:.\modem.c     ****     }
 292:.\modem.c     ****     
 293:.\modem.c     ****     at_write_command("AT#SCFG=1,1,0,0,1200,0\r","OK",5000u); // config parameter
 294:.\modem.c     ****     
 295:.\modem.c     ****     if (at_write_command("AT#CGPADDR=1\r","OK",5000u)) {// check if ip address exists
 296:.\modem.c     ****         debug_write("(AT#CGPADDR=1) No IP Address Exists.");    
 297:.\modem.c     ****     }
 298:.\modem.c     ****     
 299:.\modem.c     ****     at_write_command("AT#SGACT?","OK",30000u);
 300:.\modem.c     ****     
 301:.\modem.c     ****     uint8 success  = at_write_command("AT#SGACT=1,1\r","OK",30000u); // This command should return 
 302:.\modem.c     ****     //success = at_write_command("AT#SD=1,0,50000,\"141.212.136.222\",0,0,1\r","OK",5000u); // conn
 303:.\modem.c     ****     
 304:.\modem.c     ****     if (!success) {
 305:.\modem.c     ****         debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 306:.\modem.c     ****     }
 307:.\modem.c     ****     
 308:.\modem.c     ****     return success;
 309:.\modem.c     ****     */
 310:.\modem.c     ****     
 311:.\modem.c     **** }
 747              		.loc 1 311 0
 748 0062 1846     		mov	r0, r3
 749 0064 0837     		adds	r7, r7, #8
 750 0066 BD46     		mov	sp, r7
 751              		@ sp needed
 752 0068 80BD     		pop	{r7, pc}
 753              	.L55:
 754 006a 00BF     		.align	2
 755              	.L54:
 756 006c 18000000 		.word	.LC3
 757 0070 14000000 		.word	.LC2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 20


 758 0074 00000000 		.word	modem_state
 759              		.cfi_endproc
 760              	.LFE66:
 761              		.size	modem_connect, .-modem_connect
 762              		.section	.rodata
 763 0026 0000     		.align	2
 764              	.LC4:
 765 0028 41542353 		.ascii	"AT#SGACT=1,0\015\000"
 765      47414354 
 765      3D312C30 
 765      0D00
 766              		.section	.text.modem_disconnect,"ax",%progbits
 767              		.align	2
 768              		.global	modem_disconnect
 769              		.thumb
 770              		.thumb_func
 771              		.type	modem_disconnect, %function
 772              	modem_disconnect:
 773              	.LFB67:
 312:.\modem.c     **** 
 313:.\modem.c     **** uint8 modem_disconnect(){
 774              		.loc 1 313 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778 0000 80B5     		push	{r7, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 314:.\modem.c     **** /* Close modem connection to network */
 315:.\modem.c     **** 	
 316:.\modem.c     ****     // Proceed if modem is not connected to network.  Otherwise, try to disconnect from the network
 317:.\modem.c     ****     if(modem_state != MODEM_STATE_READY) {
 784              		.loc 1 317 0
 785 0004 094B     		ldr	r3, .L59
 786 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 0008 032B     		cmp	r3, #3
 788 000a 0CD0     		beq	.L57
 318:.\modem.c     ****         /* Can use this statement instead for GSM (ATT, TMobile)
 319:.\modem.c     **** 		return (at_write_command("AT#GPRS=0\r","OK",5000u) == 1u);
 320:.\modem.c     **** 		*/
 321:.\modem.c     **** 		return (at_write_command("AT#SGACT=1,0\r","OK",5000u) == 1u);
 789              		.loc 1 321 0
 790 000c 0848     		ldr	r0, .L59+4
 791 000e 0949     		ldr	r1, .L59+8
 792 0010 41F28832 		movw	r2, #5000
 793 0014 FFF7FEFF 		bl	at_write_command
 794 0018 0346     		mov	r3, r0
 795 001a 012B     		cmp	r3, #1
 796 001c 14BF     		ite	ne
 797 001e 0023     		movne	r3, #0
 798 0020 0123     		moveq	r3, #1
 799 0022 DBB2     		uxtb	r3, r3
 800 0024 00E0     		b	.L58
 801              	.L57:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 21


 322:.\modem.c     **** 			
 323:.\modem.c     **** 		/*
 324:.\modem.c     **** 		if(at_write_command("AT#SH=1","OK",10000u) == 1){
 325:.\modem.c     ****             if(at_write_command("AT#SGACT=1,0","OK",10000u) == 1){
 326:.\modem.c     ****                 modem_state = MODEM_STATE_IDLE;
 327:.\modem.c     ****                 return 1u;
 328:.\modem.c     ****             }
 329:.\modem.c     ****             // Write to SD Card debugger
 330:.\modem.c     ****             else {
 331:.\modem.c     ****                 debug_write("(AT#SGACT=1,0) Could not disconnect.");
 332:.\modem.c     ****             }
 333:.\modem.c     ****             
 334:.\modem.c     ****         }
 335:.\modem.c     ****         Write to SD Card debugger
 336:.\modem.c     ****         else {
 337:.\modem.c     ****             debug_write("(AT#SH=1) Could not close socket.");
 338:.\modem.c     ****         }
 339:.\modem.c     ****         */
 340:.\modem.c     ****     }
 341:.\modem.c     ****     /* Write to SD Card debugger
 342:.\modem.c     ****     else {
 343:.\modem.c     ****         if (modem_state == MODEM_STATE_OFF) {
 344:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_OFF" );
 345:.\modem.c     ****         }
 346:.\modem.c     ****         else if (modem_state == MODEM_STATE_IDLE) {
 347:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_IDLE" );
 348:.\modem.c     ****         }
 349:.\modem.c     ****     }
 350:.\modem.c     ****     */
 351:.\modem.c     ****     return 0u; // failed to disconnect
 802              		.loc 1 351 0
 803 0026 0023     		movs	r3, #0
 804              	.L58:
 352:.\modem.c     **** }
 805              		.loc 1 352 0
 806 0028 1846     		mov	r0, r3
 807 002a 80BD     		pop	{r7, pc}
 808              	.L60:
 809              		.align	2
 810              	.L59:
 811 002c 00000000 		.word	modem_state
 812 0030 28000000 		.word	.LC4
 813 0034 14000000 		.word	.LC2
 814              		.cfi_endproc
 815              	.LFE67:
 816              		.size	modem_disconnect, .-modem_disconnect
 817              		.section	.rodata
 818 0036 0000     		.align	2
 819              	.LC5:
 820 0038 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"%s\"\015\000"
 820      4744434F 
 820      4E543D31 
 820      2C224950 
 820      222C2225 
 821              		.section	.text.modem_set_apn,"ax",%progbits
 822              		.align	2
 823              		.global	modem_set_apn
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 22


 824              		.thumb
 825              		.thumb_func
 826              		.type	modem_set_apn, %function
 827              	modem_set_apn:
 828              	.LFB68:
 353:.\modem.c     **** 
 354:.\modem.c     **** uint8 modem_set_apn() {
 829              		.loc 1 354 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 104
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 9AB0     		sub	sp, sp, #104
 838              		.cfi_def_cfa_offset 112
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 355:.\modem.c     **** /* 
 356:.\modem.c     **** 	Set the access point that the modem connects to.
 357:.\modem.c     **** 	The APN is defined in "modem_apn" at the
 358:.\modem.c     **** 	top of this file 
 359:.\modem.c     **** */
 360:.\modem.c     ****     char cmd[100];
 361:.\modem.c     ****     sprintf(cmd,"AT+CGDCONT=1,\"IP\",\"%s\"\r",modem_apn);
 841              		.loc 1 361 0
 842 0006 0C4B     		ldr	r3, .L65
 843 0008 1B68     		ldr	r3, [r3]
 844 000a 3A1D     		adds	r2, r7, #4
 845 000c 1046     		mov	r0, r2
 846 000e 0B49     		ldr	r1, .L65+4
 847 0010 1A46     		mov	r2, r3
 848 0012 FFF7FEFF 		bl	sprintf
 362:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 849              		.loc 1 362 0
 850 0016 3B1D     		adds	r3, r7, #4
 851 0018 1846     		mov	r0, r3
 852 001a 0949     		ldr	r1, .L65+8
 853 001c 4FF4FA62 		mov	r2, #2000
 854 0020 FFF7FEFF 		bl	at_write_command
 855 0024 0346     		mov	r3, r0
 856 0026 012B     		cmp	r3, #1
 857 0028 01D1     		bne	.L62
 363:.\modem.c     ****         return 1u;
 858              		.loc 1 363 0
 859 002a 0123     		movs	r3, #1
 860 002c 00E0     		b	.L64
 861              	.L62:
 364:.\modem.c     ****     }
 365:.\modem.c     ****     /* Write to SD Card debugger
 366:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 367:.\modem.c     ****     */
 368:.\modem.c     **** 
 369:.\modem.c     ****     return 0u; 
 862              		.loc 1 369 0
 863 002e 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 23


 864              	.L64:
 370:.\modem.c     **** }
 865              		.loc 1 370 0
 866 0030 1846     		mov	r0, r3
 867 0032 6837     		adds	r7, r7, #104
 868 0034 BD46     		mov	sp, r7
 869              		@ sp needed
 870 0036 80BD     		pop	{r7, pc}
 871              	.L66:
 872              		.align	2
 873              	.L65:
 874 0038 00000000 		.word	modem_apn
 875 003c 38000000 		.word	.LC5
 876 0040 14000000 		.word	.LC2
 877              		.cfi_endproc
 878              	.LFE68:
 879              		.size	modem_set_apn, .-modem_set_apn
 880              		.section	.rodata
 881              		.align	2
 882              	.LC6:
 883 0050 41542342 		.ascii	"AT#BND=%d\015\000"
 883      4E443D25 
 883      640D00
 884              		.section	.text.modem_set_band,"ax",%progbits
 885              		.align	2
 886              		.global	modem_set_band
 887              		.thumb
 888              		.thumb_func
 889              		.type	modem_set_band, %function
 890              	modem_set_band:
 891              	.LFB69:
 371:.\modem.c     **** 
 372:.\modem.c     **** uint8 modem_set_band(uint8 band) {
 892              		.loc 1 372 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 112
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896 0000 80B5     		push	{r7, lr}
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 7, -8
 899              		.cfi_offset 14, -4
 900 0002 9CB0     		sub	sp, sp, #112
 901              		.cfi_def_cfa_offset 120
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 904 0006 0346     		mov	r3, r0
 905 0008 FB71     		strb	r3, [r7, #7]
 373:.\modem.c     **** /* 
 374:.\modem.c     **** 	Set the band on which the modem should communicate on
 375:.\modem.c     **** 	Band ranges from <0,3>
 376:.\modem.c     **** 	"epc.tmobile.com" uses band 1
 377:.\modem.c     **** */
 378:.\modem.c     ****     char cmd[100];
 379:.\modem.c     ****     sprintf(cmd,"AT#BND=%d\r",band);
 906              		.loc 1 379 0
 907 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 908 000c 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 24


 909 0010 1046     		mov	r0, r2
 910 0012 0B49     		ldr	r1, .L71
 911 0014 1A46     		mov	r2, r3
 912 0016 FFF7FEFF 		bl	sprintf
 380:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 913              		.loc 1 380 0
 914 001a 07F10C03 		add	r3, r7, #12
 915 001e 1846     		mov	r0, r3
 916 0020 0849     		ldr	r1, .L71+4
 917 0022 4FF4FA62 		mov	r2, #2000
 918 0026 FFF7FEFF 		bl	at_write_command
 919 002a 0346     		mov	r3, r0
 920 002c 012B     		cmp	r3, #1
 921 002e 01D1     		bne	.L68
 381:.\modem.c     ****         return 1u;
 922              		.loc 1 381 0
 923 0030 0123     		movs	r3, #1
 924 0032 00E0     		b	.L70
 925              	.L68:
 382:.\modem.c     ****     }
 383:.\modem.c     ****     /* Write to SD Card debugger
 384:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 385:.\modem.c     ****     */
 386:.\modem.c     **** 
 387:.\modem.c     ****     return 0u; 
 926              		.loc 1 387 0
 927 0034 0023     		movs	r3, #0
 928              	.L70:
 388:.\modem.c     **** }
 929              		.loc 1 388 0
 930 0036 1846     		mov	r0, r3
 931 0038 7037     		adds	r7, r7, #112
 932 003a BD46     		mov	sp, r7
 933              		@ sp needed
 934 003c 80BD     		pop	{r7, pc}
 935              	.L72:
 936 003e 00BF     		.align	2
 937              	.L71:
 938 0040 50000000 		.word	.LC6
 939 0044 14000000 		.word	.LC2
 940              		.cfi_endproc
 941              	.LFE69:
 942              		.size	modem_set_band, .-modem_set_band
 943              		.section	.rodata
 944 005b 00       		.align	2
 945              	.LC7:
 946 005c 41542B43 		.ascii	"AT+CCLK?\015\000"
 946      434C4B3F 
 946      0D00
 947              		.section	.text.modem_get_time,"ax",%progbits
 948              		.align	2
 949              		.global	modem_get_time
 950              		.thumb
 951              		.thumb_func
 952              		.type	modem_get_time, %function
 953              	modem_get_time:
 954              	.LFB70:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 25


 389:.\modem.c     **** 
 390:.\modem.c     **** uint8 modem_get_time(){
 955              		.loc 1 390 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 391:.\modem.c     ****     if(at_write_command("AT+CCLK?\r","OK",1000u) == 1u){      
 965              		.loc 1 391 0
 966 0004 0648     		ldr	r0, .L76
 967 0006 0749     		ldr	r1, .L76+4
 968 0008 4FF47A72 		mov	r2, #1000
 969 000c FFF7FEFF 		bl	at_write_command
 970 0010 0346     		mov	r3, r0
 971 0012 012B     		cmp	r3, #1
 972 0014 01D1     		bne	.L74
 392:.\modem.c     ****         return 1u;
 973              		.loc 1 392 0
 974 0016 0123     		movs	r3, #1
 975 0018 00E0     		b	.L75
 976              	.L74:
 393:.\modem.c     ****     }
 394:.\modem.c     ****     /* Write to SD Card debugger
 395:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 396:.\modem.c     ****     */
 397:.\modem.c     ****     
 398:.\modem.c     ****     /* Parse Time from data packet */
 399:.\modem.c     **** 
 400:.\modem.c     ****     return 0u;  
 977              		.loc 1 400 0
 978 001a 0023     		movs	r3, #0
 979              	.L75:
 401:.\modem.c     **** }
 980              		.loc 1 401 0
 981 001c 1846     		mov	r0, r3
 982 001e 80BD     		pop	{r7, pc}
 983              	.L77:
 984              		.align	2
 985              	.L76:
 986 0020 5C000000 		.word	.LC7
 987 0024 14000000 		.word	.LC2
 988              		.cfi_endproc
 989              	.LFE70:
 990              		.size	modem_get_time, .-modem_get_time
 991              		.section	.rodata
 992 0066 0000     		.align	2
 993              	.LC8:
 994 0068 41542B43 		.ascii	"AT+CREG?\015\000"
 994      5245473F 
 994      0D00
 995 0072 0000     		.align	2
 996              	.LC9:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 26


 997 0074 2C3100   		.ascii	",1\000"
 998              		.section	.text.modem_check_network,"ax",%progbits
 999              		.align	2
 1000              		.global	modem_check_network
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	modem_check_network, %function
 1004              	modem_check_network:
 1005              	.LFB71:
 402:.\modem.c     **** 
 403:.\modem.c     **** uint8 modem_check_network() {
 1006              		.loc 1 403 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 00AF     		add	r7, sp, #0
 1015              		.cfi_def_cfa_register 7
 404:.\modem.c     ****     if(at_write_command("AT+CREG?\r",",1",1000u) == 1u){      
 1016              		.loc 1 404 0
 1017 0004 0648     		ldr	r0, .L81
 1018 0006 0749     		ldr	r1, .L81+4
 1019 0008 4FF47A72 		mov	r2, #1000
 1020 000c FFF7FEFF 		bl	at_write_command
 1021 0010 0346     		mov	r3, r0
 1022 0012 012B     		cmp	r3, #1
 1023 0014 01D1     		bne	.L79
 405:.\modem.c     ****         return 1u;
 1024              		.loc 1 405 0
 1025 0016 0123     		movs	r3, #1
 1026 0018 00E0     		b	.L80
 1027              	.L79:
 406:.\modem.c     ****     }
 407:.\modem.c     ****     /* Write to SD Card debugger
 408:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 409:.\modem.c     ****     */
 410:.\modem.c     ****     
 411:.\modem.c     ****     /* Parse Time from data packet */
 412:.\modem.c     **** 
 413:.\modem.c     ****     return 0u;      
 1028              		.loc 1 413 0
 1029 001a 0023     		movs	r3, #0
 1030              	.L80:
 414:.\modem.c     **** }
 1031              		.loc 1 414 0
 1032 001c 1846     		mov	r0, r3
 1033 001e 80BD     		pop	{r7, pc}
 1034              	.L82:
 1035              		.align	2
 1036              	.L81:
 1037 0020 68000000 		.word	.LC8
 1038 0024 74000000 		.word	.LC9
 1039              		.cfi_endproc
 1040              	.LFE71:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 27


 1041              		.size	modem_check_network, .-modem_check_network
 1042              		.section	.rodata
 1043 0077 00       		.align	2
 1044              	.LC10:
 1045 0078 41542B43 		.ascii	"AT+CSQ\015\000"
 1045      53510D00 
 1046              		.section	.text.modem_get_signal_quality,"ax",%progbits
 1047              		.align	2
 1048              		.global	modem_get_signal_quality
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	modem_get_signal_quality, %function
 1052              	modem_get_signal_quality:
 1053              	.LFB72:
 415:.\modem.c     **** uint8 modem_get_signal_quality(){
 1054              		.loc 1 415 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 416:.\modem.c     ****     if(at_write_command("AT+CSQ\r","OK",1000u) == 1u){      
 1064              		.loc 1 416 0
 1065 0004 0648     		ldr	r0, .L86
 1066 0006 0749     		ldr	r1, .L86+4
 1067 0008 4FF47A72 		mov	r2, #1000
 1068 000c FFF7FEFF 		bl	at_write_command
 1069 0010 0346     		mov	r3, r0
 1070 0012 012B     		cmp	r3, #1
 1071 0014 01D1     		bne	.L84
 417:.\modem.c     ****         return 1u;
 1072              		.loc 1 417 0
 1073 0016 0123     		movs	r3, #1
 1074 0018 00E0     		b	.L85
 1075              	.L84:
 418:.\modem.c     ****     }
 419:.\modem.c     ****     /* Write to SD Card debugger
 420:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 421:.\modem.c     ****     */
 422:.\modem.c     ****     
 423:.\modem.c     ****     /* Parse Time from data packet */
 424:.\modem.c     **** 
 425:.\modem.c     ****     return 0u;  
 1076              		.loc 1 425 0
 1077 001a 0023     		movs	r3, #0
 1078              	.L85:
 426:.\modem.c     **** }
 1079              		.loc 1 426 0
 1080 001c 1846     		mov	r0, r3
 1081 001e 80BD     		pop	{r7, pc}
 1082              	.L87:
 1083              		.align	2
 1084              	.L86:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 28


 1085 0020 78000000 		.word	.LC10
 1086 0024 14000000 		.word	.LC2
 1087              		.cfi_endproc
 1088              	.LFE72:
 1089              		.size	modem_get_signal_quality, .-modem_get_signal_quality
 1090              		.section	.rodata
 1091              		.align	2
 1092              	.LC11:
 1093 0080 41542B43 		.ascii	"AT+CGSN\015\000"
 1093      47534E0D 
 1093      00
 1094              		.section	.text.modem_get_serial_number,"ax",%progbits
 1095              		.align	2
 1096              		.global	modem_get_serial_number
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	modem_get_serial_number, %function
 1100              	modem_get_serial_number:
 1101              	.LFB73:
 427:.\modem.c     **** 
 428:.\modem.c     **** uint8 modem_get_serial_number(){
 1102              		.loc 1 428 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 429:.\modem.c     ****     if(at_write_command("AT+CGSN\r","OK",1000u) == 1u){      
 1112              		.loc 1 429 0
 1113 0004 0648     		ldr	r0, .L91
 1114 0006 0749     		ldr	r1, .L91+4
 1115 0008 4FF47A72 		mov	r2, #1000
 1116 000c FFF7FEFF 		bl	at_write_command
 1117 0010 0346     		mov	r3, r0
 1118 0012 012B     		cmp	r3, #1
 1119 0014 01D1     		bne	.L89
 430:.\modem.c     ****         return 1u;
 1120              		.loc 1 430 0
 1121 0016 0123     		movs	r3, #1
 1122 0018 00E0     		b	.L90
 1123              	.L89:
 431:.\modem.c     ****     }
 432:.\modem.c     ****     /* Write to SD Card debugger
 433:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 434:.\modem.c     ****     */
 435:.\modem.c     **** 
 436:.\modem.c     ****     return 0u;  
 1124              		.loc 1 436 0
 1125 001a 0023     		movs	r3, #0
 1126              	.L90:
 437:.\modem.c     **** }
 1127              		.loc 1 437 0
 1128 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 29


 1129 001e 80BD     		pop	{r7, pc}
 1130              	.L92:
 1131              		.align	2
 1132              	.L91:
 1133 0020 80000000 		.word	.LC11
 1134 0024 14000000 		.word	.LC2
 1135              		.cfi_endproc
 1136              	.LFE73:
 1137              		.size	modem_get_serial_number, .-modem_get_serial_number
 1138              		.section	.rodata
 1139 0089 000000   		.align	2
 1140              	.LC12:
 1141 008c 41542656 		.ascii	"AT&V\015\000"
 1141      0D00
 1142              		.section	.text.modem_get_profile,"ax",%progbits
 1143              		.align	2
 1144              		.global	modem_get_profile
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	modem_get_profile, %function
 1148              	modem_get_profile:
 1149              	.LFB74:
 438:.\modem.c     **** 
 439:.\modem.c     **** 
 440:.\modem.c     **** uint8 modem_get_profile(){
 1150              		.loc 1 440 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 441:.\modem.c     ****     if(at_write_command("AT&V\r","OK",1000u) == 1u){      
 1160              		.loc 1 441 0
 1161 0004 0648     		ldr	r0, .L96
 1162 0006 0749     		ldr	r1, .L96+4
 1163 0008 4FF47A72 		mov	r2, #1000
 1164 000c FFF7FEFF 		bl	at_write_command
 1165 0010 0346     		mov	r3, r0
 1166 0012 012B     		cmp	r3, #1
 1167 0014 01D1     		bne	.L94
 442:.\modem.c     ****         return 1u;
 1168              		.loc 1 442 0
 1169 0016 0123     		movs	r3, #1
 1170 0018 00E0     		b	.L95
 1171              	.L94:
 443:.\modem.c     ****     }
 444:.\modem.c     ****     /* Write to SD Card debugger
 445:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 446:.\modem.c     ****     */
 447:.\modem.c     **** 
 448:.\modem.c     ****     return 0u;  
 1172              		.loc 1 448 0
 1173 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 30


 1174              	.L95:
 449:.\modem.c     **** }
 1175              		.loc 1 449 0
 1176 001c 1846     		mov	r0, r3
 1177 001e 80BD     		pop	{r7, pc}
 1178              	.L97:
 1179              		.align	2
 1180              	.L96:
 1181 0020 8C000000 		.word	.LC12
 1182 0024 14000000 		.word	.LC2
 1183              		.cfi_endproc
 1184              	.LFE74:
 1185              		.size	modem_get_profile, .-modem_get_profile
 1186              		.section	.rodata
 1187 0092 0000     		.align	2
 1188              	.LC13:
 1189 0094 4154264B 		.ascii	"AT&K%u\015\000"
 1189      25750D00 
 1190              		.section	.text.modem_set_flow_control,"ax",%progbits
 1191              		.align	2
 1192              		.global	modem_set_flow_control
 1193              		.thumb
 1194              		.thumb_func
 1195              		.type	modem_set_flow_control, %function
 1196              	modem_set_flow_control:
 1197              	.LFB75:
 450:.\modem.c     **** 
 451:.\modem.c     **** uint8 modem_set_flow_control(uint8 param){
 1198              		.loc 1 451 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 112
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 9CB0     		sub	sp, sp, #112
 1207              		.cfi_def_cfa_offset 120
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB71     		strb	r3, [r7, #7]
 452:.\modem.c     ****     char cmd[100];
 453:.\modem.c     ****     sprintf(cmd,"AT&K%u\r",param);
 1212              		.loc 1 453 0
 1213 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 000c 07F10C02 		add	r2, r7, #12
 1215 0010 1046     		mov	r0, r2
 1216 0012 0B49     		ldr	r1, .L102
 1217 0014 1A46     		mov	r2, r3
 1218 0016 FFF7FEFF 		bl	sprintf
 454:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1219              		.loc 1 454 0
 1220 001a 07F10C03 		add	r3, r7, #12
 1221 001e 1846     		mov	r0, r3
 1222 0020 0849     		ldr	r1, .L102+4
 1223 0022 4FF47A72 		mov	r2, #1000
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 31


 1224 0026 FFF7FEFF 		bl	at_write_command
 1225 002a 0346     		mov	r3, r0
 1226 002c 012B     		cmp	r3, #1
 1227 002e 01D1     		bne	.L99
 455:.\modem.c     ****         return 1u;
 1228              		.loc 1 455 0
 1229 0030 0123     		movs	r3, #1
 1230 0032 00E0     		b	.L101
 1231              	.L99:
 456:.\modem.c     ****     }
 457:.\modem.c     ****     /* Write to SD Card debugger
 458:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 459:.\modem.c     ****     */
 460:.\modem.c     **** 
 461:.\modem.c     ****     return 0u;  
 1232              		.loc 1 461 0
 1233 0034 0023     		movs	r3, #0
 1234              	.L101:
 462:.\modem.c     **** }
 1235              		.loc 1 462 0
 1236 0036 1846     		mov	r0, r3
 1237 0038 7037     		adds	r7, r7, #112
 1238 003a BD46     		mov	sp, r7
 1239              		@ sp needed
 1240 003c 80BD     		pop	{r7, pc}
 1241              	.L103:
 1242 003e 00BF     		.align	2
 1243              	.L102:
 1244 0040 94000000 		.word	.LC13
 1245 0044 14000000 		.word	.LC2
 1246              		.cfi_endproc
 1247              	.LFE75:
 1248              		.size	modem_set_flow_control, .-modem_set_flow_control
 1249              		.section	.rodata
 1250              		.align	2
 1251              	.LC14:
 1252 009c 41542B43 		.ascii	"AT+CMEE=%u\015\000"
 1252      4D45453D 
 1252      25750D00 
 1253              		.section	.text.modem_set_error_reports,"ax",%progbits
 1254              		.align	2
 1255              		.global	modem_set_error_reports
 1256              		.thumb
 1257              		.thumb_func
 1258              		.type	modem_set_error_reports, %function
 1259              	modem_set_error_reports:
 1260              	.LFB76:
 463:.\modem.c     **** 
 464:.\modem.c     **** uint8 modem_set_error_reports(uint8 param){
 1261              		.loc 1 464 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 112
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 32


 1269 0002 9CB0     		sub	sp, sp, #112
 1270              		.cfi_def_cfa_offset 120
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 0346     		mov	r3, r0
 1274 0008 FB71     		strb	r3, [r7, #7]
 465:.\modem.c     **** 	/*
 466:.\modem.c     **** 	2.4. Enable Extended Error Result codes
 467:.\modem.c     **** 	Disable the Error Report in numerical and verbose format:
 468:.\modem.c     **** 	AT+CMEE=0
 469:.\modem.c     **** 	OK
 470:.\modem.c     **** 	Enable the Error Report in numerical format:
 471:.\modem.c     **** 	AT+CMEE=1
 472:.\modem.c     **** 	OK
 473:.\modem.c     **** 	Enable the Error Report in verbose format:
 474:.\modem.c     **** 	AT+CMEE=2
 475:.\modem.c     **** 	OK
 476:.\modem.c     **** 	*/
 477:.\modem.c     **** 	
 478:.\modem.c     ****     char cmd[100];
 479:.\modem.c     ****     sprintf(cmd,"AT+CMEE=%u\r",param);
 1275              		.loc 1 479 0
 1276 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1277 000c 07F10C02 		add	r2, r7, #12
 1278 0010 1046     		mov	r0, r2
 1279 0012 0B49     		ldr	r1, .L108
 1280 0014 1A46     		mov	r2, r3
 1281 0016 FFF7FEFF 		bl	sprintf
 480:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1282              		.loc 1 480 0
 1283 001a 07F10C03 		add	r3, r7, #12
 1284 001e 1846     		mov	r0, r3
 1285 0020 0849     		ldr	r1, .L108+4
 1286 0022 4FF47A72 		mov	r2, #1000
 1287 0026 FFF7FEFF 		bl	at_write_command
 1288 002a 0346     		mov	r3, r0
 1289 002c 012B     		cmp	r3, #1
 1290 002e 01D1     		bne	.L105
 481:.\modem.c     ****         return 1u;
 1291              		.loc 1 481 0
 1292 0030 0123     		movs	r3, #1
 1293 0032 00E0     		b	.L107
 1294              	.L105:
 482:.\modem.c     ****     }
 483:.\modem.c     ****     /* Write to SD Card debugger
 484:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 485:.\modem.c     ****     */
 486:.\modem.c     **** 
 487:.\modem.c     ****     return 0u;  
 1295              		.loc 1 487 0
 1296 0034 0023     		movs	r3, #0
 1297              	.L107:
 488:.\modem.c     **** }
 1298              		.loc 1 488 0
 1299 0036 1846     		mov	r0, r3
 1300 0038 7037     		adds	r7, r7, #112
 1301 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 33


 1302              		@ sp needed
 1303 003c 80BD     		pop	{r7, pc}
 1304              	.L109:
 1305 003e 00BF     		.align	2
 1306              	.L108:
 1307 0040 9C000000 		.word	.LC14
 1308 0044 14000000 		.word	.LC2
 1309              		.cfi_endproc
 1310              	.LFE76:
 1311              		.size	modem_set_error_reports, .-modem_set_error_reports
 1312              		.section	.rodata
 1313              		.align	2
 1314              	.LC15:
 1315 00a8 41542B43 		.ascii	"AT+CGMR\015\000"
 1315      474D520D 
 1315      00
 1316              		.section	.text.modem_get_sw_version,"ax",%progbits
 1317              		.align	2
 1318              		.global	modem_get_sw_version
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	modem_get_sw_version, %function
 1322              	modem_get_sw_version:
 1323              	.LFB77:
 489:.\modem.c     **** 
 490:.\modem.c     **** uint8 modem_get_sw_version(){
 1324              		.loc 1 490 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
 491:.\modem.c     ****     if(at_write_command("AT+CGMR\r","OK",1000u) == 1u){      
 1334              		.loc 1 491 0
 1335 0004 0648     		ldr	r0, .L113
 1336 0006 0749     		ldr	r1, .L113+4
 1337 0008 4FF47A72 		mov	r2, #1000
 1338 000c FFF7FEFF 		bl	at_write_command
 1339 0010 0346     		mov	r3, r0
 1340 0012 012B     		cmp	r3, #1
 1341 0014 01D1     		bne	.L111
 492:.\modem.c     ****         return 1u;
 1342              		.loc 1 492 0
 1343 0016 0123     		movs	r3, #1
 1344 0018 00E0     		b	.L112
 1345              	.L111:
 493:.\modem.c     ****     }
 494:.\modem.c     ****     /* Write to SD Card debugger
 495:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 496:.\modem.c     ****     */
 497:.\modem.c     **** 
 498:.\modem.c     ****     return 0u;  
 1346              		.loc 1 498 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 34


 1347 001a 0023     		movs	r3, #0
 1348              	.L112:
 499:.\modem.c     **** }
 1349              		.loc 1 499 0
 1350 001c 1846     		mov	r0, r3
 1351 001e 80BD     		pop	{r7, pc}
 1352              	.L114:
 1353              		.align	2
 1354              	.L113:
 1355 0020 A8000000 		.word	.LC15
 1356 0024 14000000 		.word	.LC2
 1357              		.cfi_endproc
 1358              	.LFE77:
 1359              		.size	modem_get_sw_version, .-modem_get_sw_version
 1360              		.section	.rodata
 1361 00b1 000000   		.align	2
 1362              	.LC16:
 1363 00b4 41542343 		.ascii	"AT#CDMADC=%u\015\000"
 1363      444D4144 
 1363      433D2575 
 1363      0D00
 1364              		.section	.text.modem_enable_CDMA_data,"ax",%progbits
 1365              		.align	2
 1366              		.global	modem_enable_CDMA_data
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	modem_enable_CDMA_data, %function
 1370              	modem_enable_CDMA_data:
 1371              	.LFB78:
 500:.\modem.c     **** 
 501:.\modem.c     **** uint8 modem_enable_CDMA_data(uint8 param){
 1372              		.loc 1 501 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 112
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 9CB0     		sub	sp, sp, #112
 1381              		.cfi_def_cfa_offset 120
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 1384 0006 0346     		mov	r3, r0
 1385 0008 FB71     		strb	r3, [r7, #7]
 502:.\modem.c     **** 	/*
 503:.\modem.c     **** 	4.2.12 CDMA Data Connection
 504:.\modem.c     **** 	0 - CDMA Data connection deactivation request
 505:.\modem.c     **** 	1 - CDMA Data connection activation request
 506:.\modem.c     **** 	*/
 507:.\modem.c     **** 	
 508:.\modem.c     ****     char cmd[100];
 509:.\modem.c     ****     sprintf(cmd,"AT#CDMADC=%u\r",param);
 1386              		.loc 1 509 0
 1387 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1388 000c 07F10C02 		add	r2, r7, #12
 1389 0010 1046     		mov	r0, r2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 35


 1390 0012 0B49     		ldr	r1, .L119
 1391 0014 1A46     		mov	r2, r3
 1392 0016 FFF7FEFF 		bl	sprintf
 510:.\modem.c     ****     if(at_write_command(cmd,"OK",5000u) == 1u){      
 1393              		.loc 1 510 0
 1394 001a 07F10C03 		add	r3, r7, #12
 1395 001e 1846     		mov	r0, r3
 1396 0020 0849     		ldr	r1, .L119+4
 1397 0022 41F28832 		movw	r2, #5000
 1398 0026 FFF7FEFF 		bl	at_write_command
 1399 002a 0346     		mov	r3, r0
 1400 002c 012B     		cmp	r3, #1
 1401 002e 01D1     		bne	.L116
 511:.\modem.c     ****         return 1u;
 1402              		.loc 1 511 0
 1403 0030 0123     		movs	r3, #1
 1404 0032 00E0     		b	.L118
 1405              	.L116:
 512:.\modem.c     ****     }
 513:.\modem.c     ****     /* Write to SD Card debugger
 514:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 515:.\modem.c     ****     */
 516:.\modem.c     **** 
 517:.\modem.c     ****     return 0u;  
 1406              		.loc 1 517 0
 1407 0034 0023     		movs	r3, #0
 1408              	.L118:
 518:.\modem.c     **** }
 1409              		.loc 1 518 0
 1410 0036 1846     		mov	r0, r3
 1411 0038 7037     		adds	r7, r7, #112
 1412 003a BD46     		mov	sp, r7
 1413              		@ sp needed
 1414 003c 80BD     		pop	{r7, pc}
 1415              	.L120:
 1416 003e 00BF     		.align	2
 1417              	.L119:
 1418 0040 B4000000 		.word	.LC16
 1419 0044 14000000 		.word	.LC2
 1420              		.cfi_endproc
 1421              	.LFE78:
 1422              		.size	modem_enable_CDMA_data, .-modem_enable_CDMA_data
 1423              		.section	.rodata
 1424 00c2 0000     		.align	2
 1425              	.LC17:
 1426 00c4 41542343 		.ascii	"AT#CDMADC?\015\000"
 1426      444D4144 
 1426      433F0D00 
 1427              		.section	.text.modem_test_CDMA_data,"ax",%progbits
 1428              		.align	2
 1429              		.global	modem_test_CDMA_data
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	modem_test_CDMA_data, %function
 1433              	modem_test_CDMA_data:
 1434              	.LFB79:
 519:.\modem.c     **** 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 36


 520:.\modem.c     **** uint8 modem_test_CDMA_data(){
 1435              		.loc 1 520 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 00AF     		add	r7, sp, #0
 1444              		.cfi_def_cfa_register 7
 521:.\modem.c     **** 	
 522:.\modem.c     ****     if(at_write_command("AT#CDMADC?\r","OK",1000u) == 1u){      
 1445              		.loc 1 522 0
 1446 0004 0648     		ldr	r0, .L124
 1447 0006 0749     		ldr	r1, .L124+4
 1448 0008 4FF47A72 		mov	r2, #1000
 1449 000c FFF7FEFF 		bl	at_write_command
 1450 0010 0346     		mov	r3, r0
 1451 0012 012B     		cmp	r3, #1
 1452 0014 01D1     		bne	.L122
 523:.\modem.c     ****         return 1u;
 1453              		.loc 1 523 0
 1454 0016 0123     		movs	r3, #1
 1455 0018 00E0     		b	.L123
 1456              	.L122:
 524:.\modem.c     ****     }
 525:.\modem.c     ****     /* Write to SD Card debugger
 526:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 527:.\modem.c     ****     */
 528:.\modem.c     **** 
 529:.\modem.c     ****     return 0u;	
 1457              		.loc 1 529 0
 1458 001a 0023     		movs	r3, #0
 1459              	.L123:
 530:.\modem.c     **** }
 1460              		.loc 1 530 0
 1461 001c 1846     		mov	r0, r3
 1462 001e 80BD     		pop	{r7, pc}
 1463              	.L125:
 1464              		.align	2
 1465              	.L124:
 1466 0020 C4000000 		.word	.LC17
 1467 0024 14000000 		.word	.LC2
 1468              		.cfi_endproc
 1469              	.LFE79:
 1470              		.size	modem_test_CDMA_data, .-modem_test_CDMA_data
 1471              		.section	.rodata
 1472              		.align	2
 1473              	.LC18:
 1474 00d0 41542355 		.ascii	"AT#USERID=\"%s\"\015\000"
 1474      53455249 
 1474      443D2225 
 1474      73220D00 
 1475              		.section	.text.modem_set_user,"ax",%progbits
 1476              		.align	2
 1477              		.global	modem_set_user
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 37


 1478              		.thumb
 1479              		.thumb_func
 1480              		.type	modem_set_user, %function
 1481              	modem_set_user:
 1482              	.LFB80:
 531:.\modem.c     **** 
 532:.\modem.c     **** uint8 modem_set_user(char* user) {
 1483              		.loc 1 532 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 112
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 9CB0     		sub	sp, sp, #112
 1492              		.cfi_def_cfa_offset 120
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 533:.\modem.c     **** 	
 534:.\modem.c     ****     char cmd[100];
 535:.\modem.c     ****     sprintf(cmd,"AT#USERID=\"%s\"\r",user);		
 1496              		.loc 1 535 0
 1497 0008 07F10C03 		add	r3, r7, #12
 1498 000c 1846     		mov	r0, r3
 1499 000e 0B49     		ldr	r1, .L130
 1500 0010 7A68     		ldr	r2, [r7, #4]
 1501 0012 FFF7FEFF 		bl	sprintf
 536:.\modem.c     **** 	
 537:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1502              		.loc 1 537 0
 1503 0016 07F10C03 		add	r3, r7, #12
 1504 001a 1846     		mov	r0, r3
 1505 001c 0849     		ldr	r1, .L130+4
 1506 001e 4FF47A72 		mov	r2, #1000
 1507 0022 FFF7FEFF 		bl	at_write_command
 1508 0026 0346     		mov	r3, r0
 1509 0028 012B     		cmp	r3, #1
 1510 002a 01D1     		bne	.L127
 538:.\modem.c     ****         return 1u;
 1511              		.loc 1 538 0
 1512 002c 0123     		movs	r3, #1
 1513 002e 00E0     		b	.L129
 1514              	.L127:
 539:.\modem.c     ****     }
 540:.\modem.c     ****     /* Write to SD Card debugger
 541:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 542:.\modem.c     ****     */
 543:.\modem.c     **** 	
 544:.\modem.c     **** 	return 0u;	
 1515              		.loc 1 544 0
 1516 0030 0023     		movs	r3, #0
 1517              	.L129:
 545:.\modem.c     **** }
 1518              		.loc 1 545 0
 1519 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 38


 1520 0034 7037     		adds	r7, r7, #112
 1521 0036 BD46     		mov	sp, r7
 1522              		@ sp needed
 1523 0038 80BD     		pop	{r7, pc}
 1524              	.L131:
 1525 003a 00BF     		.align	2
 1526              	.L130:
 1527 003c D0000000 		.word	.LC18
 1528 0040 14000000 		.word	.LC2
 1529              		.cfi_endproc
 1530              	.LFE80:
 1531              		.size	modem_set_user, .-modem_set_user
 1532              		.section	.rodata
 1533              		.align	2
 1534              	.LC19:
 1535 00e0 41542350 		.ascii	"AT#PASSW=\"%s\"\015\000"
 1535      41535357 
 1535      3D222573 
 1535      220D00
 1536              		.section	.text.modem_set_password,"ax",%progbits
 1537              		.align	2
 1538              		.global	modem_set_password
 1539              		.thumb
 1540              		.thumb_func
 1541              		.type	modem_set_password, %function
 1542              	modem_set_password:
 1543              	.LFB81:
 546:.\modem.c     **** 
 547:.\modem.c     **** uint8 modem_set_password(char* pass) {
 1544              		.loc 1 547 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 112
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 9CB0     		sub	sp, sp, #112
 1553              		.cfi_def_cfa_offset 120
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 7860     		str	r0, [r7, #4]
 548:.\modem.c     **** 	
 549:.\modem.c     ****     char cmd[100];
 550:.\modem.c     ****     sprintf(cmd,"AT#PASSW=\"%s\"\r",pass);		
 1557              		.loc 1 550 0
 1558 0008 07F10C03 		add	r3, r7, #12
 1559 000c 1846     		mov	r0, r3
 1560 000e 0B49     		ldr	r1, .L136
 1561 0010 7A68     		ldr	r2, [r7, #4]
 1562 0012 FFF7FEFF 		bl	sprintf
 551:.\modem.c     **** 	
 552:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1563              		.loc 1 552 0
 1564 0016 07F10C03 		add	r3, r7, #12
 1565 001a 1846     		mov	r0, r3
 1566 001c 0849     		ldr	r1, .L136+4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 39


 1567 001e 4FF47A72 		mov	r2, #1000
 1568 0022 FFF7FEFF 		bl	at_write_command
 1569 0026 0346     		mov	r3, r0
 1570 0028 012B     		cmp	r3, #1
 1571 002a 01D1     		bne	.L133
 553:.\modem.c     ****         return 1u;
 1572              		.loc 1 553 0
 1573 002c 0123     		movs	r3, #1
 1574 002e 00E0     		b	.L135
 1575              	.L133:
 554:.\modem.c     ****     }
 555:.\modem.c     ****     /* Write to SD Card debugger
 556:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 557:.\modem.c     ****     */
 558:.\modem.c     **** 	
 559:.\modem.c     **** 	return 0u;	
 1576              		.loc 1 559 0
 1577 0030 0023     		movs	r3, #0
 1578              	.L135:
 560:.\modem.c     **** }
 1579              		.loc 1 560 0
 1580 0032 1846     		mov	r0, r3
 1581 0034 7037     		adds	r7, r7, #112
 1582 0036 BD46     		mov	sp, r7
 1583              		@ sp needed
 1584 0038 80BD     		pop	{r7, pc}
 1585              	.L137:
 1586 003a 00BF     		.align	2
 1587              	.L136:
 1588 003c E0000000 		.word	.LC19
 1589 0040 14000000 		.word	.LC2
 1590              		.cfi_endproc
 1591              	.LFE81:
 1592              		.size	modem_set_password, .-modem_set_password
 1593              		.section	.rodata
 1594 00ef 00       		.align	2
 1595              	.LC20:
 1596 00f0 41542353 		.ascii	"AT#SKTD=0,80,\"www.google.com\"\015\012\000"
 1596      4B54443D 
 1596      302C3830 
 1596      2C227777 
 1596      772E676F 
 1597              		.align	2
 1598              	.LC21:
 1599 0110 434F4E4E 		.ascii	"CONNECT\000"
 1599      45435400 
 1600              		.align	2
 1601              	.LC22:
 1602 0118 47455420 		.ascii	"GET /get_status/ HTTP/1.0\015\012\000"
 1602      2F676574 
 1602      5F737461 
 1602      7475732F 
 1602      20485454 
 1603              		.align	2
 1604              	.LC23:
 1605 0134 00       		.ascii	"\000"
 1606 0135 000000   		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 40


 1607              	.LC24:
 1608 0138 0D0A00   		.ascii	"\015\012\000"
 1609              		.section	.text.modem_get_google,"ax",%progbits
 1610              		.align	2
 1611              		.global	modem_get_google
 1612              		.thumb
 1613              		.thumb_func
 1614              		.type	modem_get_google, %function
 1615              	modem_get_google:
 1616              	.LFB82:
 561:.\modem.c     **** uint8 modem_get_google(){
 1617              		.loc 1 561 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 1000
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 ADF57A7D 		sub	sp, sp, #1000
 1626              		.cfi_def_cfa_offset 1008
 1627 0006 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
 562:.\modem.c     **** 
 563:.\modem.c     ****     // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 564:.\modem.c     ****     if( modem_state == MODEM_STATE_READY || modem_connect() != 0 ){ 
 1629              		.loc 1 564 0
 1630 0008 1D4B     		ldr	r3, .L142
 1631 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 000c 032B     		cmp	r3, #3
 1633 000e 04D0     		beq	.L139
 1634              		.loc 1 564 0 is_stmt 0 discriminator 1
 1635 0010 FFF7FEFF 		bl	modem_connect
 1636 0014 0346     		mov	r3, r0
 1637 0016 002B     		cmp	r3, #0
 1638 0018 2AD0     		beq	.L140
 1639              	.L139:
 565:.\modem.c     ****         
 566:.\modem.c     ****         if(at_write_command("AT#SKTD=0,80,\"www.google.com\"\r\n","CONNECT",10000u) != 0){
 1640              		.loc 1 566 0 is_stmt 1
 1641 001a 1A48     		ldr	r0, .L142+4
 1642 001c 1A49     		ldr	r1, .L142+8
 1643 001e 42F21072 		movw	r2, #10000
 1644 0022 FFF7FEFF 		bl	at_write_command
 1645 0026 0346     		mov	r3, r0
 1646 0028 002B     		cmp	r3, #0
 1647 002a 21D0     		beq	.L140
 1648              	.LBB3:
 567:.\modem.c     ****             
 568:.\modem.c     ****             char get_str[MAX_PACKET_LENGTH], key_str[100];
 569:.\modem.c     ****             
 570:.\modem.c     ****             //sprintf(get_str,"GET / HTTP/1.0\r\n");
 571:.\modem.c     ****             //sprintf(key_str,"Host: www.google.com\r\n");
 572:.\modem.c     ****             //sprintf(get_str,"GET /\r\n");
 573:.\modem.c     ****             //sprintf(get_str,"%s%s",
 574:.\modem.c     ****             //    get_str,
 575:.\modem.c     ****             //    "\r\n");
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 41


 576:.\modem.c     ****             
 577:.\modem.c     ****             uart_string_reset();
 1649              		.loc 1 577 0
 1650 002c FFF7FEFF 		bl	uart_string_reset
 578:.\modem.c     ****             
 579:.\modem.c     ****             //at_write_command(get_str,"",15000u);
 580:.\modem.c     **** 			
 581:.\modem.c     **** 			at_write_command("GET /get_status/ HTTP/1.0\r\n","",15000u);
 1651              		.loc 1 581 0
 1652 0030 1648     		ldr	r0, .L142+12
 1653 0032 1749     		ldr	r1, .L142+16
 1654 0034 43F69822 		movw	r2, #15000
 1655 0038 FFF7FEFF 		bl	at_write_command
 582:.\modem.c     **** 			//CyDelay(1000u);
 583:.\modem.c     **** 			//at_write_command("Host: www.google.com\r\n","",15000u);
 584:.\modem.c     **** 			CyDelay(1000u);
 1656              		.loc 1 584 0
 1657 003c 4FF47A70 		mov	r0, #1000
 1658 0040 FFF7FEFF 		bl	CyDelay
 585:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1659              		.loc 1 585 0
 1660 0044 1348     		ldr	r0, .L142+20
 1661 0046 1249     		ldr	r1, .L142+16
 1662 0048 43F69822 		movw	r2, #15000
 1663 004c FFF7FEFF 		bl	at_write_command
 586:.\modem.c     **** 			CyDelay(1000u);
 1664              		.loc 1 586 0
 1665 0050 4FF47A70 		mov	r0, #1000
 1666 0054 FFF7FEFF 		bl	CyDelay
 587:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1667              		.loc 1 587 0
 1668 0058 0E48     		ldr	r0, .L142+20
 1669 005a 0D49     		ldr	r1, .L142+16
 1670 005c 43F69822 		movw	r2, #15000
 1671 0060 FFF7FEFF 		bl	at_write_command
 588:.\modem.c     **** 			
 589:.\modem.c     **** 			CyDelay(15000u);
 1672              		.loc 1 589 0
 1673 0064 43F69820 		movw	r0, #15000
 1674 0068 FFF7FEFF 		bl	CyDelay
 590:.\modem.c     ****             
 591:.\modem.c     **** 			// Just return regardless
 592:.\modem.c     **** 			return 1u;
 1675              		.loc 1 592 0
 1676 006c 0123     		movs	r3, #1
 1677 006e 02E0     		b	.L141
 1678              	.L140:
 1679              	.LBE3:
 593:.\modem.c     ****             /*
 594:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 595:.\modem.c     ****                 // Read GET response from the buffer
 596:.\modem.c     ****                 uart_string_reset();
 597:.\modem.c     ****                 //CyDelay(5000u);
 598:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 599:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 600:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 601:.\modem.c     ****                 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 42


 602:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 603:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 604:.\modem.c     **** 
 605:.\modem.c     ****             }
 606:.\modem.c     ****             */
 607:.\modem.c     ****         }
 608:.\modem.c     ****         
 609:.\modem.c     ****     }
 610:.\modem.c     ****     
 611:.\modem.c     ****     //debug_write("MAX_GET_ATTEMPTS Exceeded.");
 612:.\modem.c     ****     modem_disconnect();
 1680              		.loc 1 612 0
 1681 0070 FFF7FEFF 		bl	modem_disconnect
 613:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1682              		.loc 1 613 0
 1683 0074 0023     		movs	r3, #0
 1684              	.L141:
 614:.\modem.c     **** }
 1685              		.loc 1 614 0
 1686 0076 1846     		mov	r0, r3
 1687 0078 07F57A77 		add	r7, r7, #1000
 1688 007c BD46     		mov	sp, r7
 1689              		@ sp needed
 1690 007e 80BD     		pop	{r7, pc}
 1691              	.L143:
 1692              		.align	2
 1693              	.L142:
 1694 0080 00000000 		.word	modem_state
 1695 0084 F0000000 		.word	.LC20
 1696 0088 10010000 		.word	.LC21
 1697 008c 18010000 		.word	.LC22
 1698 0090 34010000 		.word	.LC23
 1699 0094 38010000 		.word	.LC24
 1700              		.cfi_endproc
 1701              	.LFE82:
 1702              		.size	modem_get_google, .-modem_get_google
 1703              		.section	.rodata
 1704 013b 00       		.align	2
 1705              	.LC25:
 1706 013c 41542353 		.ascii	"AT#SD=1,0,80,\"storm.chordsrt.com\",0,0,1\015\000"
 1706      443D312C 
 1706      302C3830 
 1706      2C227374 
 1706      6F726D2E 
 1707 0165 000000   		.align	2
 1708              	.LC26:
 1709 0168 47455420 		.ascii	"GET /measurements/url_create?instrument_id=1&depth="
 1709      2F6D6561 
 1709      73757265 
 1709      6D656E74 
 1709      732F7572 
 1710 019b 31303026 		.ascii	"100&batVolt=108&key=wireless&test HTTP/1.0\015\012\000"
 1710      62617456 
 1710      6F6C743D 
 1710      31303826 
 1710      6B65793D 
 1711              		.section	.text.modem_send_packet,"ax",%progbits
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 43


 1712              		.align	2
 1713              		.global	modem_send_packet
 1714              		.thumb
 1715              		.thumb_func
 1716              		.type	modem_send_packet, %function
 1717              	modem_send_packet:
 1718              	.LFB83:
 615:.\modem.c     **** 
 616:.\modem.c     **** // send packet to Xively server
 617:.\modem.c     **** uint8 modem_send_packet(char* body){
 1719              		.loc 1 617 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 16
 1722              		@ frame_needed = 1, uses_anonymous_args = 0
 1723 0000 80B5     		push	{r7, lr}
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 7, -8
 1726              		.cfi_offset 14, -4
 1727 0002 84B0     		sub	sp, sp, #16
 1728              		.cfi_def_cfa_offset 24
 1729 0004 00AF     		add	r7, sp, #0
 1730              		.cfi_def_cfa_register 7
 1731 0006 7860     		str	r0, [r7, #4]
 618:.\modem.c     **** 
 619:.\modem.c     **** 	// Handle retries in main()
 620:.\modem.c     ****     //uint8 attempts = 0;
 621:.\modem.c     ****     //for(attempts = 0; attempts < MAX_SEND_ATTEMPTS; attempts++) {
 622:.\modem.c     ****         
 623:.\modem.c     ****     // Proceed if modem is already connected.
 624:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1732              		.loc 1 624 0
 1733 0008 0E4B     		ldr	r3, .L147
 1734 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1735 000c 032B     		cmp	r3, #3
 1736 000e 13D1     		bne	.L145
 625:.\modem.c     **** 		// Reset uart for incoming data from modem
 626:.\modem.c     ****         uart_string_reset();
 1737              		.loc 1 626 0
 1738 0010 FFF7FEFF 		bl	uart_string_reset
 627:.\modem.c     **** 			
 628:.\modem.c     **** 		// Connect to web server
 629:.\modem.c     ****         //if(at_write_command("AT#SKTD=1,80,\"api.xively.com\",0,0\r","CONNECT",5000u) != 0){
 630:.\modem.c     **** 		if(at_write_command("AT#SD=1,0,80,\"storm.chordsrt.com\",0,0,1\r","OK",15000u) != 0){
 1739              		.loc 1 630 0
 1740 0014 0C48     		ldr	r0, .L147+4
 1741 0016 0D49     		ldr	r1, .L147+8
 1742 0018 43F69822 		movw	r2, #15000
 1743 001c FFF7FEFF 		bl	at_write_command
 1744 0020 0346     		mov	r3, r0
 1745 0022 002B     		cmp	r3, #0
 1746 0024 08D0     		beq	.L145
 1747              	.LBB4:
 631:.\modem.c     **** 		//if(at_write_command("AT#SD=1,0,80,\"www.google.com\",0,0\r\n","CONNECT",15000u) != 0){
 632:.\modem.c     **** 		at_write_command("GET /measurements/url_create?instrument_id=1&depth=100&batVolt=108&key=wireless
 1748              		.loc 1 632 0
 1749 0026 0A48     		ldr	r0, .L147+12
 1750 0028 0A49     		ldr	r1, .L147+16
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 44


 1751 002a 4FF4FA62 		mov	r2, #2000
 1752 002e FFF7FEFF 		bl	at_write_command
 633:.\modem.c     ****         uint8 i;
 634:.\modem.c     ****         i = i + 1;
 1753              		.loc 1 634 0
 1754 0032 FB7B     		ldrb	r3, [r7, #15]
 1755 0034 0133     		adds	r3, r3, #1
 1756 0036 FB73     		strb	r3, [r7, #15]
 1757              	.L145:
 1758              	.LBE4:
 635:.\modem.c     **** /*			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 636:.\modem.c     **** 			// Write packet information to serial and send
 637:.\modem.c     **** 	            char put_str[MAX_PACKET_LENGTH], key_str[100];
 638:.\modem.c     **** 	            
 639:.\modem.c     **** 	            sprintf(put_str,"GET /measurements/url_create?instrument_id=1&depth=100&batVolt=108&ke
 640:.\modem.c     **** //	            sprintf(key_str,"X-ApiKey: %s\r\n", api_key);
 641:.\modem.c     **** 	            sprintf(put_str,"%s%s%s%s%d%s%s%s",
 642:.\modem.c     **** 	                put_str,
 643:.\modem.c     **** 	                key_str,
 644:.\modem.c     **** //	                "Host: api.xively.com\r\n",
 645:.\modem.c     **** //	                "Content-Length: ", strlen(body),
 646:.\modem.c     **** 	                "\r\n\r\n", body, "\r\n\032");
 647:.\modem.c     **** 	                
 648:.\modem.c     **** 				// Reset uart for incoming data from modem
 649:.\modem.c     **** 	            uart_string_reset();
 650:.\modem.c     **** 
 651:.\modem.c     **** 				if(at_write_command(put_str,"SRING: 1",10000u) != 0){
 652:.\modem.c     ****                     // Read GET response from the buffer
 653:.\modem.c     ****                     uart_string_reset();
 654:.\modem.c     ****                     //CyDelay(5000u);
 655:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","200 OK",10000u);
 656:.\modem.c     **** 					
 657:.\modem.c     ****                     return 1u;   // return 1 if succesfully sent sms
 658:.\modem.c     **** 
 659:.\modem.c     ****                 } */
 660:.\modem.c     **** 				/* GC 864
 661:.\modem.c     **** 	            if(at_write_command(put_str,"200 OK",15000u) != 0){
 662:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 663:.\modem.c     **** 	            }
 664:.\modem.c     **** 				*/
 665:.\modem.c     ****             }
 666:.\modem.c     ****             
 667:.\modem.c     ****             /* Write to SD Card debugger
 668:.\modem.c     ****             else {
 669:.\modem.c     ****                 debug_write("(AT#SSEND=1) Could not send data through connected socket.");
 670:.\modem.c     ****             }
 671:.\modem.c     ****             */
 672:.\modem.c     ****         }
 673:.\modem.c     ****         /* Write to SD Card debugger
 674:.\modem.c     ****         else {
 675:.\modem.c     ****             debug_write("(AT#SD=1,0,8081,\"api.xively.com\",0,0,1\r) Could not connect to server.")
 676:.\modem.c     ****         }
 677:.\modem.c     ****         */
 678:.\modem.c     ****             
 679:.\modem.c     ****     //}  
 680:.\modem.c     **** 	//modem_reset();
 681:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 45


 1759              		.loc 1 681 0
 1760 0038 0023     		movs	r3, #0
 682:.\modem.c     **** }
 1761              		.loc 1 682 0
 1762 003a 1846     		mov	r0, r3
 1763 003c 1037     		adds	r7, r7, #16
 1764 003e BD46     		mov	sp, r7
 1765              		@ sp needed
 1766 0040 80BD     		pop	{r7, pc}
 1767              	.L148:
 1768 0042 00BF     		.align	2
 1769              	.L147:
 1770 0044 00000000 		.word	modem_state
 1771 0048 3C010000 		.word	.LC25
 1772 004c 14000000 		.word	.LC2
 1773 0050 68010000 		.word	.LC26
 1774 0054 34010000 		.word	.LC23
 1775              		.cfi_endproc
 1776              	.LFE83:
 1777              		.size	modem_send_packet, .-modem_send_packet
 1778              		.section	.rodata
 1779              		.align	2
 1780              	.LC27:
 1781 01c8 41542353 		.ascii	"AT#SD=1,0,80,\"api.xively.com\",0,0,1\015\012\000"
 1781      443D312C 
 1781      302C3830 
 1781      2C226170 
 1781      692E7869 
 1782 01ee 0000     		.align	2
 1783              	.LC28:
 1784 01f0 41542353 		.ascii	"AT#SSEND=1\015\000"
 1784      53454E44 
 1784      3D310D00 
 1785              		.align	2
 1786              	.LC29:
 1787 01fc 3E00     		.ascii	">\000"
 1788 01fe 0000     		.align	2
 1789              	.LC30:
 1790 0200 47455420 		.ascii	"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\015\012"
 1790      2F76322F 
 1790      66656564 
 1790      732F256C 
 1790      752E6373 
 1791 022f 00       		.ascii	"\000"
 1792              		.align	2
 1793              	.LC31:
 1794 0230 582D4170 		.ascii	"X-ApiKey: %s\015\012\000"
 1794      694B6579 
 1794      3A202573 
 1794      0D0A00
 1795 023f 00       		.align	2
 1796              	.LC32:
 1797 0240 25732573 		.ascii	"%s%s%s%s%s\000"
 1797      25732573 
 1797      257300
 1798 024b 00       		.align	2
 1799              	.LC33:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 46


 1800 024c 486F7374 		.ascii	"Host: api.xively.com\015\012\000"
 1800      3A206170 
 1800      692E7869 
 1800      76656C79 
 1800      2E636F6D 
 1801 0263 00       		.align	2
 1802              	.LC34:
 1803 0264 41636365 		.ascii	"Accept: text/csv\015\012\000"
 1803      70743A20 
 1803      74657874 
 1803      2F637376 
 1803      0D0A00
 1804 0277 00       		.align	2
 1805              	.LC35:
 1806 0278 0D0A1A0D 		.ascii	"\015\012\032\015\000"
 1806      00
 1807 027d 000000   		.align	2
 1808              	.LC36:
 1809 0280 5352494E 		.ascii	"SRING: 1\000"
 1809      473A2031 
 1809      00
 1810 0289 000000   		.align	2
 1811              	.LC37:
 1812 028c 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1812      52454356 
 1812      3D312C31 
 1812      3030300D 
 1812      00
 1813 029d 000000   		.align	2
 1814              	.LC38:
 1815 02a0 0D0A0D0A 		.ascii	"\015\012\015\012\000"
 1815      00
 1816              		.section	.text.modem_get_packet,"ax",%progbits
 1817              		.align	2
 1818              		.global	modem_get_packet
 1819              		.thumb
 1820              		.thumb_func
 1821              		.type	modem_get_packet, %function
 1822              	modem_get_packet:
 1823              	.LFB84:
 683:.\modem.c     **** 
 684:.\modem.c     **** 
 685:.\modem.c     **** // read packet from Xively server
 686:.\modem.c     **** uint8 modem_get_packet(char* packet, char* csv){    
 1824              		.loc 1 686 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 1112
 1827              		@ frame_needed = 1, uses_anonymous_args = 0
 1828 0000 80B5     		push	{r7, lr}
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 7, -8
 1831              		.cfi_offset 14, -4
 1832 0002 ADF58D6D 		sub	sp, sp, #1128
 1833              		.cfi_def_cfa_offset 1136
 1834 0006 04AF     		add	r7, sp, #16
 1835              		.cfi_def_cfa 7, 1120
 1836 0008 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 47


 1837 000a 1860     		str	r0, [r3]
 1838 000c 3B46     		mov	r3, r7
 1839 000e 1960     		str	r1, [r3]
 687:.\modem.c     **** 
 688:.\modem.c     **** 	// Check if request is too long
 689:.\modem.c     ****     if (strlen(csv) > 125) {
 1840              		.loc 1 689 0
 1841 0010 3B46     		mov	r3, r7
 1842 0012 1868     		ldr	r0, [r3]
 1843 0014 FFF7FEFF 		bl	strlen
 1844 0018 0346     		mov	r3, r0
 1845 001a 7D2B     		cmp	r3, #125
 1846 001c 01D9     		bls	.L150
 690:.\modem.c     ****         /* Write to SD Card debugger
 691:.\modem.c     ****         debug_write("modem_get_packet(): csv length > 100");
 692:.\modem.c     ****         */
 693:.\modem.c     ****         return 0u;
 1847              		.loc 1 693 0
 1848 001e 0023     		movs	r3, #0
 1849 0020 5BE0     		b	.L151
 1850              	.L150:
 694:.\modem.c     ****     }
 695:.\modem.c     **** 	
 696:.\modem.c     **** 	// Changed to handle looping in main()
 697:.\modem.c     ****     //uint8 attempts = 0;            
 698:.\modem.c     ****     //for(attempts = 0; attempts < MAX_GET_ATTEMPTS; attempts++) {
 699:.\modem.c     ****         // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 700:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1851              		.loc 1 700 0
 1852 0022 304B     		ldr	r3, .L154
 1853 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1854 0026 032B     		cmp	r3, #3
 1855 0028 56D1     		bne	.L152
 701:.\modem.c     **** 		// Connect to server
 702:.\modem.c     ****         if(at_write_command("AT#SD=1,0,80,\"api.xively.com\",0,0,1\r\n","OK",20000u) != 0){
 1856              		.loc 1 702 0
 1857 002a 2F48     		ldr	r0, .L154+4
 1858 002c 2F49     		ldr	r1, .L154+8
 1859 002e 44F62062 		movw	r2, #20000
 1860 0032 FFF7FEFF 		bl	at_write_command
 1861 0036 0346     		mov	r3, r0
 1862 0038 002B     		cmp	r3, #0
 1863 003a 4DD0     		beq	.L152
 703:.\modem.c     **** 			
 704:.\modem.c     **** 			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 1864              		.loc 1 704 0
 1865 003c 2C48     		ldr	r0, .L154+12
 1866 003e 2D49     		ldr	r1, .L154+16
 1867 0040 42F21072 		movw	r2, #10000
 1868 0044 FFF7FEFF 		bl	at_write_command
 1869 0048 0346     		mov	r3, r0
 1870 004a 002B     		cmp	r3, #0
 1871 004c 44D0     		beq	.L152
 1872              	.LBB5:
 705:.\modem.c     **** 				// Write packet information to serial and send
 706:.\modem.c     **** 	            char get_str[MAX_PACKET_LENGTH], key_str[100];
 707:.\modem.c     **** 				
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 48


 708:.\modem.c     **** 	            sprintf(get_str,"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\r\n", feed_id, csv);
 1873              		.loc 1 708 0
 1874 004e 2A4B     		ldr	r3, .L154+20
 1875 0050 1A68     		ldr	r2, [r3]
 1876 0052 07F17001 		add	r1, r7, #112
 1877 0056 3B46     		mov	r3, r7
 1878 0058 0846     		mov	r0, r1
 1879 005a 2849     		ldr	r1, .L154+24
 1880 005c 1B68     		ldr	r3, [r3]
 1881 005e FFF7FEFF 		bl	sprintf
 709:.\modem.c     **** 	            sprintf(key_str,"X-ApiKey: %s\r\n", api_key);
 1882              		.loc 1 709 0
 1883 0062 274B     		ldr	r3, .L154+28
 1884 0064 1B68     		ldr	r3, [r3]
 1885 0066 07F10C02 		add	r2, r7, #12
 1886 006a 1046     		mov	r0, r2
 1887 006c 2549     		ldr	r1, .L154+32
 1888 006e 1A46     		mov	r2, r3
 1889 0070 FFF7FEFF 		bl	sprintf
 710:.\modem.c     **** 	            sprintf(get_str,"%s%s%s%s%s",
 1890              		.loc 1 710 0
 1891 0074 07F17001 		add	r1, r7, #112
 1892 0078 07F17002 		add	r2, r7, #112
 1893 007c 07F10C03 		add	r3, r7, #12
 1894 0080 2148     		ldr	r0, .L154+36
 1895 0082 0090     		str	r0, [sp]
 1896 0084 2148     		ldr	r0, .L154+40
 1897 0086 0190     		str	r0, [sp, #4]
 1898 0088 2148     		ldr	r0, .L154+44
 1899 008a 0290     		str	r0, [sp, #8]
 1900 008c 0846     		mov	r0, r1
 1901 008e 2149     		ldr	r1, .L154+48
 1902 0090 FFF7FEFF 		bl	sprintf
 711:.\modem.c     **** 	                get_str,
 712:.\modem.c     **** 	                key_str,
 713:.\modem.c     **** 	                "Host: api.xively.com\r\n",
 714:.\modem.c     **** 	                "Accept: text/csv\r\n",
 715:.\modem.c     **** 	                "\r\n\032\r");
 716:.\modem.c     **** 	            
 717:.\modem.c     **** 				// Reset uart for incoming data from modem
 718:.\modem.c     **** 	            uart_string_reset();
 1903              		.loc 1 718 0
 1904 0094 FFF7FEFF 		bl	uart_string_reset
 719:.\modem.c     **** 				
 720:.\modem.c     **** 			    if(at_write_command(get_str,"SRING: 1",10000u) != 0){
 1905              		.loc 1 720 0
 1906 0098 07F17003 		add	r3, r7, #112
 1907 009c 1846     		mov	r0, r3
 1908 009e 1E49     		ldr	r1, .L154+52
 1909 00a0 42F21072 		movw	r2, #10000
 1910 00a4 FFF7FEFF 		bl	at_write_command
 1911 00a8 0346     		mov	r3, r0
 1912 00aa 002B     		cmp	r3, #0
 1913 00ac 14D0     		beq	.L152
 721:.\modem.c     ****                     // Read GET response from the buffer
 722:.\modem.c     ****                     uart_string_reset();
 1914              		.loc 1 722 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 49


 1915 00ae FFF7FEFF 		bl	uart_string_reset
 723:.\modem.c     ****                     //CyDelay(5000u);
 724:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","OK",10000u);
 1916              		.loc 1 724 0
 1917 00b2 1A48     		ldr	r0, .L154+56
 1918 00b4 0D49     		ldr	r1, .L154+8
 1919 00b6 42F21072 		movw	r2, #10000
 1920 00ba FFF7FEFF 		bl	at_write_command
 725:.\modem.c     ****                     //strcpy(packet, uart_received_string);
 726:.\modem.c     ****                     strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 1921              		.loc 1 726 0
 1922 00be 1848     		ldr	r0, .L154+60
 1923 00c0 1849     		ldr	r1, .L154+64
 1924 00c2 FFF7FEFF 		bl	strstr
 1925 00c6 0346     		mov	r3, r0
 1926 00c8 0433     		adds	r3, r3, #4
 1927 00ca 3A1D     		adds	r2, r7, #4
 1928 00cc 1068     		ldr	r0, [r2]
 1929 00ce 1946     		mov	r1, r3
 1930 00d0 FFF7FEFF 		bl	strcpy
 727:.\modem.c     ****                     
 728:.\modem.c     ****                     //debug_write("Packet received successfully.");
 729:.\modem.c     ****                     return 1u;   // return 1 if successful
 1931              		.loc 1 729 0
 1932 00d4 0123     		movs	r3, #1
 1933 00d6 00E0     		b	.L151
 1934              	.L152:
 1935              	.LBE5:
 730:.\modem.c     **** 
 731:.\modem.c     ****                 }
 732:.\modem.c     **** 				
 733:.\modem.c     **** 				/* GC864
 734:.\modem.c     **** 	            if(at_write_command(get_str,"200 OK",15000u) != 0){
 735:.\modem.c     **** 					strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 736:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 737:.\modem.c     **** 	            }
 738:.\modem.c     **** 				*/
 739:.\modem.c     ****             }
 740:.\modem.c     **** 			/* OLD, method used AT#SD=1,0,80,\"api.xively.com\",0,0,1 combined with SSEND
 741:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 742:.\modem.c     ****                 // Read GET response from the buffer
 743:.\modem.c     ****                 uart_string_reset();
 744:.\modem.c     ****                 //CyDelay(5000u);
 745:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 746:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 747:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 748:.\modem.c     ****                 
 749:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 750:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 751:.\modem.c     **** 
 752:.\modem.c     ****             }
 753:.\modem.c     **** 			*/
 754:.\modem.c     **** 			
 755:.\modem.c     ****             /* Write to SD Card debugger
 756:.\modem.c     ****             else {
 757:.\modem.c     ****                 debug_write("(at_write_command(sendBuffer,\"OK\"...) Data sent unsuccessfully.");
 758:.\modem.c     ****             }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 50


 759:.\modem.c     ****             */
 760:.\modem.c     **** 
 761:.\modem.c     ****             //uint8 disconnected = modem_disconnect();
 762:.\modem.c     ****         }
 763:.\modem.c     ****             /* Write to SD Card debugger
 764:.\modem.c     ****             else {
 765:.\modem.c     ****                 debug_write("(AT#SD=1,0,80,\"api.xively.com\",0,0,1) Could not connect to server.")
 766:.\modem.c     ****             }
 767:.\modem.c     ****             */
 768:.\modem.c     ****         /*}
 769:.\modem.c     ****         
 770:.\modem.c     ****         if (attempts < MAX_GET_ATTEMPTS-1) { // Don't reset the modem on the last attempt since it 
 771:.\modem.c     ****             modem_reset();
 772:.\modem.c     ****         }
 773:.\modem.c     ****         */
 774:.\modem.c     ****     }
 775:.\modem.c     ****     //modem_disconnect();
 776:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1936              		.loc 1 776 0
 1937 00d8 0023     		movs	r3, #0
 1938              	.L151:
 777:.\modem.c     **** }
 1939              		.loc 1 777 0
 1940 00da 1846     		mov	r0, r3
 1941 00dc 07F58B67 		add	r7, r7, #1112
 1942 00e0 BD46     		mov	sp, r7
 1943              		@ sp needed
 1944 00e2 80BD     		pop	{r7, pc}
 1945              	.L155:
 1946              		.align	2
 1947              	.L154:
 1948 00e4 00000000 		.word	modem_state
 1949 00e8 C8010000 		.word	.LC27
 1950 00ec 14000000 		.word	.LC2
 1951 00f0 F0010000 		.word	.LC28
 1952 00f4 FC010000 		.word	.LC29
 1953 00f8 00000000 		.word	feed_id
 1954 00fc 00020000 		.word	.LC30
 1955 0100 00000000 		.word	api_key
 1956 0104 30020000 		.word	.LC31
 1957 0108 4C020000 		.word	.LC33
 1958 010c 64020000 		.word	.LC34
 1959 0110 78020000 		.word	.LC35
 1960 0114 40020000 		.word	.LC32
 1961 0118 80020000 		.word	.LC36
 1962 011c 8C020000 		.word	.LC37
 1963 0120 00000000 		.word	uart_received_string
 1964 0124 A0020000 		.word	.LC38
 1965              		.cfi_endproc
 1966              	.LFE84:
 1967              		.size	modem_get_packet, .-modem_get_packet
 1968              		.section	.rodata
 1969 02a5 000000   		.align	2
 1970              	.LC39:
 1971 02a8 6C6F636B 		.ascii	"lock\000"
 1971      00
 1972 02ad 000000   		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 51


 1973              	.LC40:
 1974 02b0 7B226D65 		.ascii	"{\"method\":\"put\",\"resource\":\"/feeds/%lu\",\"h"
 1974      74686F64 
 1974      223A2270 
 1974      7574222C 
 1974      22726573 
 1975 02da 65616465 		.ascii	"eaders\":{\"X-ApiKey\":\"%s\"},\"body\":{\"version\""
 1975      7273223A 
 1975      7B22582D 
 1975      4170694B 
 1975      6579223A 
 1976 0305 3A22312E 		.ascii	":\"1.0.0\",\"datastreams\":[{ \"id\" : \"lock\", \""
 1976      302E3022 
 1976      2C226461 
 1976      74617374 
 1976      7265616D 
 1977 032f 63757272 		.ascii	"current_value\" : \"%u\"}]}}\000"
 1977      656E745F 
 1977      76616C75 
 1977      6522203A 
 1977      20222575 
 1978 0349 000000   		.section	.text.modem_acquire_lock,"ax",%progbits
 1979              		.align	2
 1980              		.global	modem_acquire_lock
 1981              		.thumb
 1982              		.thumb_func
 1983              		.type	modem_acquire_lock, %function
 1984              	modem_acquire_lock:
 1985              	.LFB85:
 778:.\modem.c     **** 
 779:.\modem.c     **** uint8 modem_acquire_lock(){
 1986              		.loc 1 779 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 320
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 0000 80B5     		push	{r7, lr}
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 D2B0     		sub	sp, sp, #328
 1995              		.cfi_def_cfa_offset 336
 1996 0004 02AF     		add	r7, sp, #8
 1997              		.cfi_def_cfa 7, 328
 780:.\modem.c     ****     
 781:.\modem.c     ****     /*
 782:.\modem.c     ****     if (lock_acquired == 1u) {
 783:.\modem.c     ****         return 1u;
 784:.\modem.c     ****     }
 785:.\modem.c     ****     */
 786:.\modem.c     ****     
 787:.\modem.c     ****     uint8 lock = 0u;
 1998              		.loc 1 787 0
 1999 0006 0023     		movs	r3, #0
 2000 0008 87F83331 		strb	r3, [r7, #307]
 788:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2001              		.loc 1 788 0
 2002 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 52


 2003 000e C7F83C31 		str	r3, [r7, #316]
 2004 0012 6423     		movs	r3, #100
 2005 0014 C7F83831 		str	r3, [r7, #312]
 2006 0018 0223     		movs	r3, #2
 2007 001a C7F83431 		str	r3, [r7, #308]
 789:.\modem.c     ****     char data_packet[300] = {0};
 2008              		.loc 1 789 0
 2009 001e 3B1D     		adds	r3, r7, #4
 2010 0020 1A46     		mov	r2, r3
 2011 0022 4FF49673 		mov	r3, #300
 2012 0026 1046     		mov	r0, r2
 2013 0028 0021     		movs	r1, #0
 2014 002a 1A46     		mov	r2, r3
 2015 002c FFF7FEFF 		bl	memset
 790:.\modem.c     ****             
 791:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2016              		.loc 1 791 0
 2017 0030 0023     		movs	r3, #0
 2018 0032 C7F83C31 		str	r3, [r7, #316]
 2019 0036 3DE0     		b	.L157
 2020              	.L160:
 792:.\modem.c     ****         if(modem_get_packet(data_packet,"lock")){
 2021              		.loc 1 792 0
 2022 0038 3B1D     		adds	r3, r7, #4
 2023 003a 1846     		mov	r0, r3
 2024 003c 2349     		ldr	r1, .L162
 2025 003e FFF7FEFF 		bl	modem_get_packet
 2026 0042 0346     		mov	r3, r0
 2027 0044 002B     		cmp	r3, #0
 2028 0046 2CD0     		beq	.L158
 793:.\modem.c     ****             if(packet_get_uint8(data_packet, "lock", &lock) && lock == 0u){
 2029              		.loc 1 793 0
 2030 0048 3A1D     		adds	r2, r7, #4
 2031 004a 07F23313 		addw	r3, r7, #307
 2032 004e 1046     		mov	r0, r2
 2033 0050 1E49     		ldr	r1, .L162
 2034 0052 1A46     		mov	r2, r3
 2035 0054 FFF7FEFF 		bl	packet_get_uint8
 2036 0058 0346     		mov	r3, r0
 2037 005a 002B     		cmp	r3, #0
 2038 005c 21D0     		beq	.L158
 2039              		.loc 1 793 0 is_stmt 0 discriminator 1
 2040 005e 97F83331 		ldrb	r3, [r7, #307]	@ zero_extendqisi2
 2041 0062 002B     		cmp	r3, #0
 2042 0064 1DD1     		bne	.L158
 794:.\modem.c     ****             
 795:.\modem.c     ****                 memset(&data_packet[0],0,sizeof(data_packet));
 2043              		.loc 1 795 0 is_stmt 1
 2044 0066 3B1D     		adds	r3, r7, #4
 2045 0068 1846     		mov	r0, r3
 2046 006a 0021     		movs	r1, #0
 2047 006c 4FF49672 		mov	r2, #300
 2048 0070 FFF7FEFF 		bl	memset
 796:.\modem.c     ****                 sprintf(data_packet, "{"
 2049              		.loc 1 796 0
 2050 0074 164B     		ldr	r3, .L162+4
 2051 0076 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 53


 2052 0078 164B     		ldr	r3, .L162+8
 2053 007a 1B68     		ldr	r3, [r3]
 2054 007c 391D     		adds	r1, r7, #4
 2055 007e 0120     		movs	r0, #1
 2056 0080 0090     		str	r0, [sp]
 2057 0082 0846     		mov	r0, r1
 2058 0084 1449     		ldr	r1, .L162+12
 2059 0086 FFF7FEFF 		bl	sprintf
 797:.\modem.c     ****                       "\"method\":\"put\","
 798:.\modem.c     ****                       "\"resource\":\"/feeds/%lu\","
 799:.\modem.c     ****                       "\"headers\":{\"X-ApiKey\":\"%s\"},"
 800:.\modem.c     ****                       "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 801:.\modem.c     ****                             "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 802:.\modem.c     ****                       "]}}",
 803:.\modem.c     ****                       feed_id,api_key,1u);
 804:.\modem.c     ****                       
 805:.\modem.c     ****                 if(modem_send_packet(data_packet)) {
 2060              		.loc 1 805 0
 2061 008a 3B1D     		adds	r3, r7, #4
 2062 008c 1846     		mov	r0, r3
 2063 008e FFF7FEFF 		bl	modem_send_packet
 2064 0092 0346     		mov	r3, r0
 2065 0094 002B     		cmp	r3, #0
 2066 0096 04D0     		beq	.L158
 806:.\modem.c     ****                     lock_acquired = 1u;
 2067              		.loc 1 806 0
 2068 0098 104B     		ldr	r3, .L162+16
 2069 009a 0122     		movs	r2, #1
 2070 009c 1A70     		strb	r2, [r3]
 807:.\modem.c     ****                     return 1u;
 2071              		.loc 1 807 0
 2072 009e 0123     		movs	r3, #1
 2073 00a0 0FE0     		b	.L161
 2074              	.L158:
 808:.\modem.c     ****                 }
 809:.\modem.c     ****             }  
 810:.\modem.c     ****         }
 811:.\modem.c     ****         CyDelay(delay);
 2075              		.loc 1 811 0
 2076 00a2 D7F83801 		ldr	r0, [r7, #312]
 2077 00a6 FFF7FEFF 		bl	CyDelay
 791:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2078              		.loc 1 791 0
 2079 00aa D7F83C31 		ldr	r3, [r7, #316]
 2080 00ae 0133     		adds	r3, r3, #1
 2081 00b0 C7F83C31 		str	r3, [r7, #316]
 2082              	.L157:
 791:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2083              		.loc 1 791 0 is_stmt 0 discriminator 1
 2084 00b4 D7F83C21 		ldr	r2, [r7, #316]
 2085 00b8 D7F83431 		ldr	r3, [r7, #308]
 2086 00bc 9A42     		cmp	r2, r3
 2087 00be BBD3     		bcc	.L160
 812:.\modem.c     ****     }
 813:.\modem.c     ****          
 814:.\modem.c     ****     return 0u;
 2088              		.loc 1 814 0 is_stmt 1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 54


 2089 00c0 0023     		movs	r3, #0
 2090              	.L161:
 815:.\modem.c     **** }
 2091              		.loc 1 815 0
 2092 00c2 1846     		mov	r0, r3
 2093 00c4 07F5A077 		add	r7, r7, #320
 2094 00c8 BD46     		mov	sp, r7
 2095              		@ sp needed
 2096 00ca 80BD     		pop	{r7, pc}
 2097              	.L163:
 2098              		.align	2
 2099              	.L162:
 2100 00cc A8020000 		.word	.LC39
 2101 00d0 00000000 		.word	feed_id
 2102 00d4 00000000 		.word	api_key
 2103 00d8 B0020000 		.word	.LC40
 2104 00dc 00000000 		.word	lock_acquired
 2105              		.cfi_endproc
 2106              	.LFE85:
 2107              		.size	modem_acquire_lock, .-modem_acquire_lock
 2108              		.section	.text.modem_release_lock,"ax",%progbits
 2109              		.align	2
 2110              		.global	modem_release_lock
 2111              		.thumb
 2112              		.thumb_func
 2113              		.type	modem_release_lock, %function
 2114              	modem_release_lock:
 2115              	.LFB86:
 816:.\modem.c     **** 
 817:.\modem.c     **** uint8 modem_release_lock(){
 2116              		.loc 1 817 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 312
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0000 80B5     		push	{r7, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 7, -8
 2123              		.cfi_offset 14, -4
 2124 0002 D0B0     		sub	sp, sp, #320
 2125              		.cfi_def_cfa_offset 328
 2126 0004 02AF     		add	r7, sp, #8
 2127              		.cfi_def_cfa 7, 320
 818:.\modem.c     ****     /*
 819:.\modem.c     ****     if (lock_acquired == 0u) {
 820:.\modem.c     ****         return 1u;
 821:.\modem.c     ****     }
 822:.\modem.c     ****     */
 823:.\modem.c     ****     
 824:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2128              		.loc 1 824 0
 2129 0006 0023     		movs	r3, #0
 2130 0008 C7F83431 		str	r3, [r7, #308]
 2131 000c 6423     		movs	r3, #100
 2132 000e C7F83031 		str	r3, [r7, #304]
 2133 0012 0223     		movs	r3, #2
 2134 0014 C7F82C31 		str	r3, [r7, #300]
 825:.\modem.c     ****     char data_packet[300] = {0};
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 55


 2135              		.loc 1 825 0
 2136 0018 3B46     		mov	r3, r7
 2137 001a 1A46     		mov	r2, r3
 2138 001c 4FF49673 		mov	r3, #300
 2139 0020 1046     		mov	r0, r2
 2140 0022 0021     		movs	r1, #0
 2141 0024 1A46     		mov	r2, r3
 2142 0026 FFF7FEFF 		bl	memset
 826:.\modem.c     ****     
 827:.\modem.c     ****     sprintf(data_packet, "{"
 2143              		.loc 1 827 0
 2144 002a 184B     		ldr	r3, .L170
 2145 002c 1A68     		ldr	r2, [r3]
 2146 002e 184B     		ldr	r3, .L170+4
 2147 0030 1B68     		ldr	r3, [r3]
 2148 0032 3946     		mov	r1, r7
 2149 0034 0020     		movs	r0, #0
 2150 0036 0090     		str	r0, [sp]
 2151 0038 0846     		mov	r0, r1
 2152 003a 1649     		ldr	r1, .L170+8
 2153 003c FFF7FEFF 		bl	sprintf
 828:.\modem.c     ****           "\"method\":\"put\","
 829:.\modem.c     ****           "\"resource\":\"/feeds/%lu\","
 830:.\modem.c     ****           "\"headers\":{\"X-ApiKey\":\"%s\"},"
 831:.\modem.c     ****           "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 832:.\modem.c     ****                 "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 833:.\modem.c     ****           "]}}",
 834:.\modem.c     ****           feed_id, api_key, 0u);
 835:.\modem.c     ****         
 836:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2154              		.loc 1 836 0
 2155 0040 0023     		movs	r3, #0
 2156 0042 C7F83431 		str	r3, [r7, #308]
 2157 0046 14E0     		b	.L165
 2158              	.L168:
 837:.\modem.c     **** 
 838:.\modem.c     ****         if(modem_send_packet(data_packet)) {
 2159              		.loc 1 838 0
 2160 0048 3B46     		mov	r3, r7
 2161 004a 1846     		mov	r0, r3
 2162 004c FFF7FEFF 		bl	modem_send_packet
 2163 0050 0346     		mov	r3, r0
 2164 0052 002B     		cmp	r3, #0
 2165 0054 04D0     		beq	.L166
 839:.\modem.c     ****             lock_acquired = 0u;
 2166              		.loc 1 839 0
 2167 0056 104B     		ldr	r3, .L170+12
 2168 0058 0022     		movs	r2, #0
 2169 005a 1A70     		strb	r2, [r3]
 840:.\modem.c     ****             return 1u;
 2170              		.loc 1 840 0
 2171 005c 0123     		movs	r3, #1
 2172 005e 0FE0     		b	.L169
 2173              	.L166:
 841:.\modem.c     ****         }
 842:.\modem.c     ****         
 843:.\modem.c     ****         CyDelay(delay);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 56


 2174              		.loc 1 843 0
 2175 0060 D7F83001 		ldr	r0, [r7, #304]
 2176 0064 FFF7FEFF 		bl	CyDelay
 836:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2177              		.loc 1 836 0
 2178 0068 D7F83431 		ldr	r3, [r7, #308]
 2179 006c 0133     		adds	r3, r3, #1
 2180 006e C7F83431 		str	r3, [r7, #308]
 2181              	.L165:
 836:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2182              		.loc 1 836 0 is_stmt 0 discriminator 1
 2183 0072 D7F83421 		ldr	r2, [r7, #308]
 2184 0076 D7F82C31 		ldr	r3, [r7, #300]
 2185 007a 9A42     		cmp	r2, r3
 2186 007c E4D3     		bcc	.L168
 844:.\modem.c     ****     }
 845:.\modem.c     ****          
 846:.\modem.c     ****     return 0u;
 2187              		.loc 1 846 0 is_stmt 1
 2188 007e 0023     		movs	r3, #0
 2189              	.L169:
 847:.\modem.c     **** }
 2190              		.loc 1 847 0
 2191 0080 1846     		mov	r0, r3
 2192 0082 07F59C77 		add	r7, r7, #312
 2193 0086 BD46     		mov	sp, r7
 2194              		@ sp needed
 2195 0088 80BD     		pop	{r7, pc}
 2196              	.L171:
 2197 008a 00BF     		.align	2
 2198              	.L170:
 2199 008c 00000000 		.word	feed_id
 2200 0090 00000000 		.word	api_key
 2201 0094 B0020000 		.word	.LC40
 2202 0098 00000000 		.word	lock_acquired
 2203              		.cfi_endproc
 2204              	.LFE86:
 2205              		.size	modem_release_lock, .-modem_release_lock
 2206              		.section	.text.uart_string_reset,"ax",%progbits
 2207              		.align	2
 2208              		.global	uart_string_reset
 2209              		.thumb
 2210              		.thumb_func
 2211              		.type	uart_string_reset, %function
 2212              	uart_string_reset:
 2213              	.LFB87:
 848:.\modem.c     **** 
 849:.\modem.c     **** void uart_string_reset(){
 2214              		.loc 1 849 0
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 1, uses_anonymous_args = 0
 2218 0000 80B5     		push	{r7, lr}
 2219              		.cfi_def_cfa_offset 8
 2220              		.cfi_offset 7, -8
 2221              		.cfi_offset 14, -4
 2222 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 57


 2223              		.cfi_def_cfa_register 7
 850:.\modem.c     ****     // reset uart_received_string to zero
 851:.\modem.c     ****     /*
 852:.\modem.c     ****     uint16 i = 0;
 853:.\modem.c     ****     
 854:.\modem.c     ****     for(i = 0; i < 700; i++){
 855:.\modem.c     ****         uart_received_string[i] = 0;
 856:.\modem.c     ****     }
 857:.\modem.c     ****     */
 858:.\modem.c     ****     memset(&uart_received_string[0],0,sizeof(uart_received_string));
 2224              		.loc 1 858 0
 2225 0004 0548     		ldr	r0, .L173
 2226 0006 0021     		movs	r1, #0
 2227 0008 4FF47A72 		mov	r2, #1000
 2228 000c FFF7FEFF 		bl	memset
 859:.\modem.c     ****     uart_string_index = 0;
 2229              		.loc 1 859 0
 2230 0010 034B     		ldr	r3, .L173+4
 2231 0012 0022     		movs	r2, #0
 2232 0014 1A80     		strh	r2, [r3]	@ movhi
 860:.\modem.c     ****     Telit_UART_ClearRxBuffer();
 2233              		.loc 1 860 0
 2234 0016 FFF7FEFF 		bl	Telit_UART_ClearRxBuffer
 861:.\modem.c     **** //    uart_ClearTxBuffer();
 862:.\modem.c     **** }
 2235              		.loc 1 862 0
 2236 001a 80BD     		pop	{r7, pc}
 2237              	.L174:
 2238              		.align	2
 2239              	.L173:
 2240 001c 00000000 		.word	uart_received_string
 2241 0020 00000000 		.word	uart_string_index
 2242              		.cfi_endproc
 2243              	.LFE87:
 2244              		.size	uart_string_reset, .-uart_string_reset
 2245              		.section	.text.Telit_isr_rx,"ax",%progbits
 2246              		.align	2
 2247              		.global	Telit_isr_rx
 2248              		.thumb
 2249              		.thumb_func
 2250              		.type	Telit_isr_rx, %function
 2251              	Telit_isr_rx:
 2252              	.LFB88:
 863:.\modem.c     **** 
 864:.\modem.c     **** // this function fires when uart rx receives bytes (when modem is sending bytes)
 865:.\modem.c     **** CY_ISR(Telit_isr_rx){
 2253              		.loc 1 865 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 8
 2256              		@ frame_needed = 1, uses_anonymous_args = 0
 2257 0000 80B5     		push	{r7, lr}
 2258              		.cfi_def_cfa_offset 8
 2259              		.cfi_offset 7, -8
 2260              		.cfi_offset 14, -4
 2261 0002 82B0     		sub	sp, sp, #8
 2262              		.cfi_def_cfa_offset 16
 2263 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 58


 2264              		.cfi_def_cfa_register 7
 866:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2265              		.loc 1 866 0
 2266 0006 11E0     		b	.L176
 2267              	.L177:
 2268              	.LBB6:
 867:.\modem.c     ****         // hold the next char in the rx register as a temporary variable
 868:.\modem.c     ****         char rx_char_hold = Telit_UART_GetChar();
 2269              		.loc 1 868 0
 2270 0008 FFF7FEFF 		bl	Telit_UART_GetChar
 2271 000c 0346     		mov	r3, r0
 2272 000e FB71     		strb	r3, [r7, #7]
 869:.\modem.c     ****         
 870:.\modem.c     ****         // store the char in uart_received_string
 871:.\modem.c     ****         if(rx_char_hold){
 2273              		.loc 1 871 0
 2274 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2275 0012 002B     		cmp	r3, #0
 2276 0014 0AD0     		beq	.L176
 872:.\modem.c     ****             uart_received_string[uart_string_index] = rx_char_hold;
 2277              		.loc 1 872 0
 2278 0016 094B     		ldr	r3, .L178
 2279 0018 1B88     		ldrh	r3, [r3]
 2280 001a 094A     		ldr	r2, .L178+4
 2281 001c F979     		ldrb	r1, [r7, #7]
 2282 001e D154     		strb	r1, [r2, r3]
 873:.\modem.c     ****             uart_string_index++;
 2283              		.loc 1 873 0
 2284 0020 064B     		ldr	r3, .L178
 2285 0022 1B88     		ldrh	r3, [r3]
 2286 0024 0133     		adds	r3, r3, #1
 2287 0026 9AB2     		uxth	r2, r3
 2288 0028 044B     		ldr	r3, .L178
 2289 002a 1A80     		strh	r2, [r3]	@ movhi
 2290              	.L176:
 2291              	.LBE6:
 866:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2292              		.loc 1 866 0 discriminator 1
 2293 002c FFF7FEFF 		bl	Telit_UART_GetRxBufferSize
 2294 0030 0346     		mov	r3, r0
 2295 0032 002B     		cmp	r3, #0
 2296 0034 E8D1     		bne	.L177
 874:.\modem.c     ****         }
 875:.\modem.c     ****     }
 876:.\modem.c     **** }
 2297              		.loc 1 876 0
 2298 0036 0837     		adds	r7, r7, #8
 2299 0038 BD46     		mov	sp, r7
 2300              		@ sp needed
 2301 003a 80BD     		pop	{r7, pc}
 2302              	.L179:
 2303              		.align	2
 2304              	.L178:
 2305 003c 00000000 		.word	uart_string_index
 2306 0040 00000000 		.word	uart_received_string
 2307              		.cfi_endproc
 2308              	.LFE88:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 59


 2309              		.size	Telit_isr_rx, .-Telit_isr_rx
 2310              		.text
 2311              	.Letext0:
 2312              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2313              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2314              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2315              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 2316              		.section	.debug_info,"",%progbits
 2317              	.Ldebug_info0:
 2318 0000 5F070000 		.4byte	0x75f
 2319 0004 0400     		.2byte	0x4
 2320 0006 00000000 		.4byte	.Ldebug_abbrev0
 2321 000a 04       		.byte	0x4
 2322 000b 01       		.uleb128 0x1
 2323 000c B9000000 		.4byte	.LASF82
 2324 0010 01       		.byte	0x1
 2325 0011 5A000000 		.4byte	.LASF83
 2326 0015 90010000 		.4byte	.LASF84
 2327 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2328 001d 00000000 		.4byte	0
 2329 0021 00000000 		.4byte	.Ldebug_line0
 2330 0025 02       		.uleb128 0x2
 2331 0026 01       		.byte	0x1
 2332 0027 06       		.byte	0x6
 2333 0028 C6020000 		.4byte	.LASF0
 2334 002c 02       		.uleb128 0x2
 2335 002d 01       		.byte	0x1
 2336 002e 08       		.byte	0x8
 2337 002f A0020000 		.4byte	.LASF1
 2338 0033 02       		.uleb128 0x2
 2339 0034 02       		.byte	0x2
 2340 0035 05       		.byte	0x5
 2341 0036 A5000000 		.4byte	.LASF2
 2342 003a 02       		.uleb128 0x2
 2343 003b 02       		.byte	0x2
 2344 003c 07       		.byte	0x7
 2345 003d 06030000 		.4byte	.LASF3
 2346 0041 03       		.uleb128 0x3
 2347 0042 FE030000 		.4byte	.LASF9
 2348 0046 02       		.byte	0x2
 2349 0047 37       		.byte	0x37
 2350 0048 4C000000 		.4byte	0x4c
 2351 004c 02       		.uleb128 0x2
 2352 004d 04       		.byte	0x4
 2353 004e 05       		.byte	0x5
 2354 004f 1A020000 		.4byte	.LASF4
 2355 0053 02       		.uleb128 0x2
 2356 0054 04       		.byte	0x4
 2357 0055 07       		.byte	0x7
 2358 0056 A4030000 		.4byte	.LASF5
 2359 005a 02       		.uleb128 0x2
 2360 005b 08       		.byte	0x8
 2361 005c 05       		.byte	0x5
 2362 005d EC010000 		.4byte	.LASF6
 2363 0061 02       		.uleb128 0x2
 2364 0062 08       		.byte	0x8
 2365 0063 07       		.byte	0x7
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 60


 2366 0064 D2020000 		.4byte	.LASF7
 2367 0068 04       		.uleb128 0x4
 2368 0069 04       		.byte	0x4
 2369 006a 05       		.byte	0x5
 2370 006b 696E7400 		.ascii	"int\000"
 2371 006f 02       		.uleb128 0x2
 2372 0070 04       		.byte	0x4
 2373 0071 07       		.byte	0x7
 2374 0072 E9020000 		.4byte	.LASF8
 2375 0076 03       		.uleb128 0x3
 2376 0077 40030000 		.4byte	.LASF10
 2377 007b 03       		.byte	0x3
 2378 007c 41       		.byte	0x41
 2379 007d 41000000 		.4byte	0x41
 2380 0081 03       		.uleb128 0x3
 2381 0082 74030000 		.4byte	.LASF11
 2382 0086 04       		.byte	0x4
 2383 0087 A1       		.byte	0xa1
 2384 0088 2C000000 		.4byte	0x2c
 2385 008c 03       		.uleb128 0x3
 2386 008d 4A010000 		.4byte	.LASF12
 2387 0091 04       		.byte	0x4
 2388 0092 A2       		.byte	0xa2
 2389 0093 3A000000 		.4byte	0x3a
 2390 0097 03       		.uleb128 0x3
 2391 0098 91030000 		.4byte	.LASF13
 2392 009c 04       		.byte	0x4
 2393 009d A3       		.byte	0xa3
 2394 009e 53000000 		.4byte	0x53
 2395 00a2 02       		.uleb128 0x2
 2396 00a3 04       		.byte	0x4
 2397 00a4 04       		.byte	0x4
 2398 00a5 C7010000 		.4byte	.LASF14
 2399 00a9 02       		.uleb128 0x2
 2400 00aa 08       		.byte	0x8
 2401 00ab 04       		.byte	0x4
 2402 00ac C4030000 		.4byte	.LASF15
 2403 00b0 02       		.uleb128 0x2
 2404 00b1 01       		.byte	0x1
 2405 00b2 08       		.byte	0x8
 2406 00b3 28030000 		.4byte	.LASF16
 2407 00b7 02       		.uleb128 0x2
 2408 00b8 04       		.byte	0x4
 2409 00b9 07       		.byte	0x7
 2410 00ba 23020000 		.4byte	.LASF17
 2411 00be 05       		.uleb128 0x5
 2412 00bf 04       		.byte	0x4
 2413 00c0 B0000000 		.4byte	0xb0
 2414 00c4 06       		.uleb128 0x6
 2415 00c5 6B020000 		.4byte	.LASF22
 2416 00c9 01       		.byte	0x1
 2417 00ca 23       		.byte	0x23
 2418 00cb 81000000 		.4byte	0x81
 2419 00cf 00000000 		.4byte	.LFB56
 2420 00d3 2C000000 		.4byte	.LFE56-.LFB56
 2421 00d7 01       		.uleb128 0x1
 2422 00d8 9C       		.byte	0x9c
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 61


 2423 00d9 F9000000 		.4byte	0xf9
 2424 00dd 07       		.uleb128 0x7
 2425 00de 696400   		.ascii	"id\000"
 2426 00e1 01       		.byte	0x1
 2427 00e2 23       		.byte	0x23
 2428 00e3 97000000 		.4byte	0x97
 2429 00e7 02       		.uleb128 0x2
 2430 00e8 91       		.byte	0x91
 2431 00e9 74       		.sleb128 -12
 2432 00ea 07       		.uleb128 0x7
 2433 00eb 6B657900 		.ascii	"key\000"
 2434 00ef 01       		.byte	0x1
 2435 00f0 23       		.byte	0x23
 2436 00f1 BE000000 		.4byte	0xbe
 2437 00f5 02       		.uleb128 0x2
 2438 00f6 91       		.byte	0x91
 2439 00f7 70       		.sleb128 -16
 2440 00f8 00       		.byte	0
 2441 00f9 08       		.uleb128 0x8
 2442 00fa 5D040000 		.4byte	.LASF18
 2443 00fe 01       		.byte	0x1
 2444 00ff 2C       		.byte	0x2c
 2445 0100 81000000 		.4byte	0x81
 2446 0104 00000000 		.4byte	.LFB57
 2447 0108 78000000 		.4byte	.LFE57-.LFB57
 2448 010c 01       		.uleb128 0x1
 2449 010d 9C       		.byte	0x9c
 2450 010e 08       		.uleb128 0x8
 2451 010f DD030000 		.4byte	.LASF19
 2452 0113 01       		.byte	0x1
 2453 0114 53       		.byte	0x53
 2454 0115 81000000 		.4byte	0x81
 2455 0119 00000000 		.4byte	.LFB58
 2456 011d 18000000 		.4byte	.LFE58-.LFB58
 2457 0121 01       		.uleb128 0x1
 2458 0122 9C       		.byte	0x9c
 2459 0123 09       		.uleb128 0x9
 2460 0124 85030000 		.4byte	.LASF20
 2461 0128 01       		.byte	0x1
 2462 0129 5C       		.byte	0x5c
 2463 012a 00000000 		.4byte	.LFB59
 2464 012e 30000000 		.4byte	.LFE59-.LFB59
 2465 0132 01       		.uleb128 0x1
 2466 0133 9C       		.byte	0x9c
 2467 0134 09       		.uleb128 0x9
 2468 0135 7A030000 		.4byte	.LASF21
 2469 0139 01       		.byte	0x1
 2470 013a 67       		.byte	0x67
 2471 013b 00000000 		.4byte	.LFB60
 2472 013f 2C000000 		.4byte	.LFE60-.LFB60
 2473 0143 01       		.uleb128 0x1
 2474 0144 9C       		.byte	0x9c
 2475 0145 0A       		.uleb128 0xa
 2476 0146 31020000 		.4byte	.LASF23
 2477 014a 01       		.byte	0x1
 2478 014b 72       		.byte	0x72
 2479 014c 81000000 		.4byte	0x81
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 62


 2480 0150 00000000 		.4byte	.LFB61
 2481 0154 78000000 		.4byte	.LFE61-.LFB61
 2482 0158 01       		.uleb128 0x1
 2483 0159 9C       		.byte	0x9c
 2484 015a D7010000 		.4byte	0x1d7
 2485 015e 0B       		.uleb128 0xb
 2486 015f 44040000 		.4byte	.LASF24
 2487 0163 01       		.byte	0x1
 2488 0164 72       		.byte	0x72
 2489 0165 BE000000 		.4byte	0xbe
 2490 0169 02       		.uleb128 0x2
 2491 016a 91       		.byte	0x91
 2492 016b 5C       		.sleb128 -36
 2493 016c 0B       		.uleb128 0xb
 2494 016d 17000000 		.4byte	.LASF25
 2495 0171 01       		.byte	0x1
 2496 0172 72       		.byte	0x72
 2497 0173 BE000000 		.4byte	0xbe
 2498 0177 02       		.uleb128 0x2
 2499 0178 91       		.byte	0x91
 2500 0179 58       		.sleb128 -40
 2501 017a 0B       		.uleb128 0xb
 2502 017b DF040000 		.4byte	.LASF26
 2503 017f 01       		.byte	0x1
 2504 0180 72       		.byte	0x72
 2505 0181 97000000 		.4byte	0x97
 2506 0185 02       		.uleb128 0x2
 2507 0186 91       		.byte	0x91
 2508 0187 54       		.sleb128 -44
 2509 0188 0C       		.uleb128 0xc
 2510 0189 D4030000 		.4byte	.LASF27
 2511 018d 01       		.byte	0x1
 2512 018e 73       		.byte	0x73
 2513 018f 81000000 		.4byte	0x81
 2514 0193 02       		.uleb128 0x2
 2515 0194 91       		.byte	0x91
 2516 0195 77       		.sleb128 -9
 2517 0196 0D       		.uleb128 0xd
 2518 0197 6900     		.ascii	"i\000"
 2519 0199 01       		.byte	0x1
 2520 019a 74       		.byte	0x74
 2521 019b 97000000 		.4byte	0x97
 2522 019f 02       		.uleb128 0x2
 2523 01a0 91       		.byte	0x91
 2524 01a1 70       		.sleb128 -16
 2525 01a2 0C       		.uleb128 0xc
 2526 01a3 9F000000 		.4byte	.LASF28
 2527 01a7 01       		.byte	0x1
 2528 01a8 74       		.byte	0x74
 2529 01a9 97000000 		.4byte	0x97
 2530 01ad 02       		.uleb128 0x2
 2531 01ae 91       		.byte	0x91
 2532 01af 6C       		.sleb128 -20
 2533 01b0 0C       		.uleb128 0xc
 2534 01b1 CB030000 		.4byte	.LASF29
 2535 01b5 01       		.byte	0x1
 2536 01b6 74       		.byte	0x74
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 63


 2537 01b7 97000000 		.4byte	0x97
 2538 01bb 02       		.uleb128 0x2
 2539 01bc 91       		.byte	0x91
 2540 01bd 68       		.sleb128 -24
 2541 01be 0E       		.uleb128 0xe
 2542 01bf 3C000000 		.4byte	.LBB2
 2543 01c3 1E000000 		.4byte	.LBE2-.LBB2
 2544 01c7 0C       		.uleb128 0xc
 2545 01c8 00000000 		.4byte	.LASF30
 2546 01cc 01       		.byte	0x1
 2547 01cd 7B       		.byte	0x7b
 2548 01ce BE000000 		.4byte	0xbe
 2549 01d2 02       		.uleb128 0x2
 2550 01d3 91       		.byte	0x91
 2551 01d4 64       		.sleb128 -28
 2552 01d5 00       		.byte	0
 2553 01d6 00       		.byte	0
 2554 01d7 08       		.uleb128 0x8
 2555 01d8 19030000 		.4byte	.LASF31
 2556 01dc 01       		.byte	0x1
 2557 01dd 87       		.byte	0x87
 2558 01de 81000000 		.4byte	0x81
 2559 01e2 00000000 		.4byte	.LFB62
 2560 01e6 70000000 		.4byte	.LFE62-.LFB62
 2561 01ea 01       		.uleb128 0x1
 2562 01eb 9C       		.byte	0x9c
 2563 01ec 08       		.uleb128 0x8
 2564 01ed DC010000 		.4byte	.LASF32
 2565 01f1 01       		.byte	0x1
 2566 01f2 AB       		.byte	0xab
 2567 01f3 81000000 		.4byte	0x81
 2568 01f7 00000000 		.4byte	.LFB63
 2569 01fb 4C000000 		.4byte	.LFE63-.LFB63
 2570 01ff 01       		.uleb128 0x1
 2571 0200 9C       		.byte	0x9c
 2572 0201 08       		.uleb128 0x8
 2573 0202 AE020000 		.4byte	.LASF33
 2574 0206 01       		.byte	0x1
 2575 0207 CA       		.byte	0xca
 2576 0208 81000000 		.4byte	0x81
 2577 020c 00000000 		.4byte	.LFB64
 2578 0210 3C000000 		.4byte	.LFE64-.LFB64
 2579 0214 01       		.uleb128 0x1
 2580 0215 9C       		.byte	0x9c
 2581 0216 08       		.uleb128 0x8
 2582 0217 98030000 		.4byte	.LASF34
 2583 021b 01       		.byte	0x1
 2584 021c D8       		.byte	0xd8
 2585 021d 81000000 		.4byte	0x81
 2586 0221 00000000 		.4byte	.LFB65
 2587 0225 1A000000 		.4byte	.LFE65-.LFB65
 2588 0229 01       		.uleb128 0x1
 2589 022a 9C       		.byte	0x9c
 2590 022b 0F       		.uleb128 0xf
 2591 022c 7E020000 		.4byte	.LASF38
 2592 0230 01       		.byte	0x1
 2593 0231 EE       		.byte	0xee
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 64


 2594 0232 81000000 		.4byte	0x81
 2595 0236 00000000 		.4byte	.LFB66
 2596 023a 78000000 		.4byte	.LFE66-.LFB66
 2597 023e 01       		.uleb128 0x1
 2598 023f 9C       		.byte	0x9c
 2599 0240 61020000 		.4byte	0x261
 2600 0244 0C       		.uleb128 0xc
 2601 0245 66010000 		.4byte	.LASF35
 2602 0249 01       		.byte	0x1
 2603 024a F0       		.byte	0xf0
 2604 024b 81000000 		.4byte	0x81
 2605 024f 02       		.uleb128 0x2
 2606 0250 91       		.byte	0x91
 2607 0251 77       		.sleb128 -9
 2608 0252 0C       		.uleb128 0xc
 2609 0253 FA010000 		.4byte	.LASF36
 2610 0257 01       		.byte	0x1
 2611 0258 F0       		.byte	0xf0
 2612 0259 81000000 		.4byte	0x81
 2613 025d 02       		.uleb128 0x2
 2614 025e 91       		.byte	0x91
 2615 025f 76       		.sleb128 -10
 2616 0260 00       		.byte	0
 2617 0261 10       		.uleb128 0x10
 2618 0262 20040000 		.4byte	.LASF37
 2619 0266 01       		.byte	0x1
 2620 0267 3901     		.2byte	0x139
 2621 0269 81000000 		.4byte	0x81
 2622 026d 00000000 		.4byte	.LFB67
 2623 0271 38000000 		.4byte	.LFE67-.LFB67
 2624 0275 01       		.uleb128 0x1
 2625 0276 9C       		.byte	0x9c
 2626 0277 11       		.uleb128 0x11
 2627 0278 64000000 		.4byte	.LASF39
 2628 027c 01       		.byte	0x1
 2629 027d 6201     		.2byte	0x162
 2630 027f 81000000 		.4byte	0x81
 2631 0283 00000000 		.4byte	.LFB68
 2632 0287 44000000 		.4byte	.LFE68-.LFB68
 2633 028b 01       		.uleb128 0x1
 2634 028c 9C       		.byte	0x9c
 2635 028d A2020000 		.4byte	0x2a2
 2636 0291 12       		.uleb128 0x12
 2637 0292 636D6400 		.ascii	"cmd\000"
 2638 0296 01       		.byte	0x1
 2639 0297 6801     		.2byte	0x168
 2640 0299 A2020000 		.4byte	0x2a2
 2641 029d 03       		.uleb128 0x3
 2642 029e 91       		.byte	0x91
 2643 029f 947F     		.sleb128 -108
 2644 02a1 00       		.byte	0
 2645 02a2 13       		.uleb128 0x13
 2646 02a3 B0000000 		.4byte	0xb0
 2647 02a7 B2020000 		.4byte	0x2b2
 2648 02ab 14       		.uleb128 0x14
 2649 02ac B7000000 		.4byte	0xb7
 2650 02b0 63       		.byte	0x63
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 65


 2651 02b1 00       		.byte	0
 2652 02b2 15       		.uleb128 0x15
 2653 02b3 8C020000 		.4byte	.LASF40
 2654 02b7 01       		.byte	0x1
 2655 02b8 7401     		.2byte	0x174
 2656 02ba 81000000 		.4byte	0x81
 2657 02be 00000000 		.4byte	.LFB69
 2658 02c2 48000000 		.4byte	.LFE69-.LFB69
 2659 02c6 01       		.uleb128 0x1
 2660 02c7 9C       		.byte	0x9c
 2661 02c8 ED020000 		.4byte	0x2ed
 2662 02cc 16       		.uleb128 0x16
 2663 02cd FC020000 		.4byte	.LASF41
 2664 02d1 01       		.byte	0x1
 2665 02d2 7401     		.2byte	0x174
 2666 02d4 81000000 		.4byte	0x81
 2667 02d8 03       		.uleb128 0x3
 2668 02d9 91       		.byte	0x91
 2669 02da 8F7F     		.sleb128 -113
 2670 02dc 12       		.uleb128 0x12
 2671 02dd 636D6400 		.ascii	"cmd\000"
 2672 02e1 01       		.byte	0x1
 2673 02e2 7A01     		.2byte	0x17a
 2674 02e4 A2020000 		.4byte	0x2a2
 2675 02e8 03       		.uleb128 0x3
 2676 02e9 91       		.byte	0x91
 2677 02ea 947F     		.sleb128 -108
 2678 02ec 00       		.byte	0
 2679 02ed 10       		.uleb128 0x10
 2680 02ee CD010000 		.4byte	.LASF42
 2681 02f2 01       		.byte	0x1
 2682 02f3 8601     		.2byte	0x186
 2683 02f5 81000000 		.4byte	0x81
 2684 02f9 00000000 		.4byte	.LFB70
 2685 02fd 28000000 		.4byte	.LFE70-.LFB70
 2686 0301 01       		.uleb128 0x1
 2687 0302 9C       		.byte	0x9c
 2688 0303 10       		.uleb128 0x10
 2689 0304 A9040000 		.4byte	.LASF43
 2690 0308 01       		.byte	0x1
 2691 0309 9301     		.2byte	0x193
 2692 030b 81000000 		.4byte	0x81
 2693 030f 00000000 		.4byte	.LFB71
 2694 0313 28000000 		.4byte	.LFE71-.LFB71
 2695 0317 01       		.uleb128 0x1
 2696 0318 9C       		.byte	0x9c
 2697 0319 10       		.uleb128 0x10
 2698 031a 4D030000 		.4byte	.LASF44
 2699 031e 01       		.byte	0x1
 2700 031f 9F01     		.2byte	0x19f
 2701 0321 81000000 		.4byte	0x81
 2702 0325 00000000 		.4byte	.LFB72
 2703 0329 28000000 		.4byte	.LFE72-.LFB72
 2704 032d 01       		.uleb128 0x1
 2705 032e 9C       		.byte	0x9c
 2706 032f 10       		.uleb128 0x10
 2707 0330 08040000 		.4byte	.LASF45
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 66


 2708 0334 01       		.byte	0x1
 2709 0335 AC01     		.2byte	0x1ac
 2710 0337 81000000 		.4byte	0x81
 2711 033b 00000000 		.4byte	.LFB73
 2712 033f 28000000 		.4byte	.LFE73-.LFB73
 2713 0343 01       		.uleb128 0x1
 2714 0344 9C       		.byte	0x9c
 2715 0345 10       		.uleb128 0x10
 2716 0346 6B040000 		.4byte	.LASF46
 2717 034a 01       		.byte	0x1
 2718 034b B801     		.2byte	0x1b8
 2719 034d 81000000 		.4byte	0x81
 2720 0351 00000000 		.4byte	.LFB74
 2721 0355 28000000 		.4byte	.LFE74-.LFB74
 2722 0359 01       		.uleb128 0x1
 2723 035a 9C       		.byte	0x9c
 2724 035b 15       		.uleb128 0x15
 2725 035c 42020000 		.4byte	.LASF47
 2726 0360 01       		.byte	0x1
 2727 0361 C301     		.2byte	0x1c3
 2728 0363 81000000 		.4byte	0x81
 2729 0367 00000000 		.4byte	.LFB75
 2730 036b 48000000 		.4byte	.LFE75-.LFB75
 2731 036f 01       		.uleb128 0x1
 2732 0370 9C       		.byte	0x9c
 2733 0371 96030000 		.4byte	0x396
 2734 0375 16       		.uleb128 0x16
 2735 0376 F6020000 		.4byte	.LASF48
 2736 037a 01       		.byte	0x1
 2737 037b C301     		.2byte	0x1c3
 2738 037d 81000000 		.4byte	0x81
 2739 0381 03       		.uleb128 0x3
 2740 0382 91       		.byte	0x91
 2741 0383 8F7F     		.sleb128 -113
 2742 0385 12       		.uleb128 0x12
 2743 0386 636D6400 		.ascii	"cmd\000"
 2744 038a 01       		.byte	0x1
 2745 038b C401     		.2byte	0x1c4
 2746 038d A2020000 		.4byte	0x2a2
 2747 0391 03       		.uleb128 0x3
 2748 0392 91       		.byte	0x91
 2749 0393 947F     		.sleb128 -108
 2750 0395 00       		.byte	0
 2751 0396 15       		.uleb128 0x15
 2752 0397 7D040000 		.4byte	.LASF49
 2753 039b 01       		.byte	0x1
 2754 039c D001     		.2byte	0x1d0
 2755 039e 81000000 		.4byte	0x81
 2756 03a2 00000000 		.4byte	.LFB76
 2757 03a6 48000000 		.4byte	.LFE76-.LFB76
 2758 03aa 01       		.uleb128 0x1
 2759 03ab 9C       		.byte	0x9c
 2760 03ac D1030000 		.4byte	0x3d1
 2761 03b0 16       		.uleb128 0x16
 2762 03b1 F6020000 		.4byte	.LASF48
 2763 03b5 01       		.byte	0x1
 2764 03b6 D001     		.2byte	0x1d0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 67


 2765 03b8 81000000 		.4byte	0x81
 2766 03bc 03       		.uleb128 0x3
 2767 03bd 91       		.byte	0x91
 2768 03be 8F7F     		.sleb128 -113
 2769 03c0 12       		.uleb128 0x12
 2770 03c1 636D6400 		.ascii	"cmd\000"
 2771 03c5 01       		.byte	0x1
 2772 03c6 DE01     		.2byte	0x1de
 2773 03c8 A2020000 		.4byte	0x2a2
 2774 03cc 03       		.uleb128 0x3
 2775 03cd 91       		.byte	0x91
 2776 03ce 947F     		.sleb128 -108
 2777 03d0 00       		.byte	0
 2778 03d1 10       		.uleb128 0x10
 2779 03d2 35010000 		.4byte	.LASF50
 2780 03d6 01       		.byte	0x1
 2781 03d7 EA01     		.2byte	0x1ea
 2782 03d9 81000000 		.4byte	0x81
 2783 03dd 00000000 		.4byte	.LFB77
 2784 03e1 28000000 		.4byte	.LFE77-.LFB77
 2785 03e5 01       		.uleb128 0x1
 2786 03e6 9C       		.byte	0x9c
 2787 03e7 15       		.uleb128 0x15
 2788 03e8 36000000 		.4byte	.LASF51
 2789 03ec 01       		.byte	0x1
 2790 03ed F501     		.2byte	0x1f5
 2791 03ef 81000000 		.4byte	0x81
 2792 03f3 00000000 		.4byte	.LFB78
 2793 03f7 48000000 		.4byte	.LFE78-.LFB78
 2794 03fb 01       		.uleb128 0x1
 2795 03fc 9C       		.byte	0x9c
 2796 03fd 22040000 		.4byte	0x422
 2797 0401 16       		.uleb128 0x16
 2798 0402 F6020000 		.4byte	.LASF48
 2799 0406 01       		.byte	0x1
 2800 0407 F501     		.2byte	0x1f5
 2801 0409 81000000 		.4byte	0x81
 2802 040d 03       		.uleb128 0x3
 2803 040e 91       		.byte	0x91
 2804 040f 8F7F     		.sleb128 -113
 2805 0411 12       		.uleb128 0x12
 2806 0412 636D6400 		.ascii	"cmd\000"
 2807 0416 01       		.byte	0x1
 2808 0417 FC01     		.2byte	0x1fc
 2809 0419 A2020000 		.4byte	0x2a2
 2810 041d 03       		.uleb128 0x3
 2811 041e 91       		.byte	0x91
 2812 041f 947F     		.sleb128 -108
 2813 0421 00       		.byte	0
 2814 0422 10       		.uleb128 0x10
 2815 0423 6C010000 		.4byte	.LASF52
 2816 0427 01       		.byte	0x1
 2817 0428 0802     		.2byte	0x208
 2818 042a 81000000 		.4byte	0x81
 2819 042e 00000000 		.4byte	.LFB79
 2820 0432 28000000 		.4byte	.LFE79-.LFB79
 2821 0436 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 68


 2822 0437 9C       		.byte	0x9c
 2823 0438 15       		.uleb128 0x15
 2824 0439 D0040000 		.4byte	.LASF53
 2825 043d 01       		.byte	0x1
 2826 043e 1402     		.2byte	0x214
 2827 0440 81000000 		.4byte	0x81
 2828 0444 00000000 		.4byte	.LFB80
 2829 0448 44000000 		.4byte	.LFE80-.LFB80
 2830 044c 01       		.uleb128 0x1
 2831 044d 9C       		.byte	0x9c
 2832 044e 73040000 		.4byte	0x473
 2833 0452 16       		.uleb128 0x16
 2834 0453 01030000 		.4byte	.LASF54
 2835 0457 01       		.byte	0x1
 2836 0458 1402     		.2byte	0x214
 2837 045a BE000000 		.4byte	0xbe
 2838 045e 03       		.uleb128 0x3
 2839 045f 91       		.byte	0x91
 2840 0460 8C7F     		.sleb128 -116
 2841 0462 12       		.uleb128 0x12
 2842 0463 636D6400 		.ascii	"cmd\000"
 2843 0467 01       		.byte	0x1
 2844 0468 1602     		.2byte	0x216
 2845 046a A2020000 		.4byte	0x2a2
 2846 046e 03       		.uleb128 0x3
 2847 046f 91       		.byte	0x91
 2848 0470 947F     		.sleb128 -108
 2849 0472 00       		.byte	0
 2850 0473 15       		.uleb128 0x15
 2851 0474 72000000 		.4byte	.LASF55
 2852 0478 01       		.byte	0x1
 2853 0479 2302     		.2byte	0x223
 2854 047b 81000000 		.4byte	0x81
 2855 047f 00000000 		.4byte	.LFB81
 2856 0483 44000000 		.4byte	.LFE81-.LFB81
 2857 0487 01       		.uleb128 0x1
 2858 0488 9C       		.byte	0x9c
 2859 0489 AE040000 		.4byte	0x4ae
 2860 048d 16       		.uleb128 0x16
 2861 048e 9B020000 		.4byte	.LASF56
 2862 0492 01       		.byte	0x1
 2863 0493 2302     		.2byte	0x223
 2864 0495 BE000000 		.4byte	0xbe
 2865 0499 03       		.uleb128 0x3
 2866 049a 91       		.byte	0x91
 2867 049b 8C7F     		.sleb128 -116
 2868 049d 12       		.uleb128 0x12
 2869 049e 636D6400 		.ascii	"cmd\000"
 2870 04a2 01       		.byte	0x1
 2871 04a3 2502     		.2byte	0x225
 2872 04a5 A2020000 		.4byte	0x2a2
 2873 04a9 03       		.uleb128 0x3
 2874 04aa 91       		.byte	0x91
 2875 04ab 947F     		.sleb128 -108
 2876 04ad 00       		.byte	0
 2877 04ae 11       		.uleb128 0x11
 2878 04af 09020000 		.4byte	.LASF57
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 69


 2879 04b3 01       		.byte	0x1
 2880 04b4 3102     		.2byte	0x231
 2881 04b6 81000000 		.4byte	0x81
 2882 04ba 00000000 		.4byte	.LFB82
 2883 04be 98000000 		.4byte	.LFE82-.LFB82
 2884 04c2 01       		.uleb128 0x1
 2885 04c3 9C       		.byte	0x9c
 2886 04c4 F3040000 		.4byte	0x4f3
 2887 04c8 0E       		.uleb128 0xe
 2888 04c9 2C000000 		.4byte	.LBB3
 2889 04cd 44000000 		.4byte	.LBE3-.LBB3
 2890 04d1 17       		.uleb128 0x17
 2891 04d2 85000000 		.4byte	.LASF58
 2892 04d6 01       		.byte	0x1
 2893 04d7 3802     		.2byte	0x238
 2894 04d9 F3040000 		.4byte	0x4f3
 2895 04dd 03       		.uleb128 0x3
 2896 04de 91       		.byte	0x91
 2897 04df 9078     		.sleb128 -1008
 2898 04e1 17       		.uleb128 0x17
 2899 04e2 88010000 		.4byte	.LASF59
 2900 04e6 01       		.byte	0x1
 2901 04e7 3802     		.2byte	0x238
 2902 04e9 A2020000 		.4byte	0x2a2
 2903 04ed 03       		.uleb128 0x3
 2904 04ee 91       		.byte	0x91
 2905 04ef 9078     		.sleb128 -1008
 2906 04f1 00       		.byte	0
 2907 04f2 00       		.byte	0
 2908 04f3 13       		.uleb128 0x13
 2909 04f4 B0000000 		.4byte	0xb0
 2910 04f8 04050000 		.4byte	0x504
 2911 04fc 18       		.uleb128 0x18
 2912 04fd B7000000 		.4byte	0xb7
 2913 0501 E703     		.2byte	0x3e7
 2914 0503 00       		.byte	0
 2915 0504 15       		.uleb128 0x15
 2916 0505 EC030000 		.4byte	.LASF60
 2917 0509 01       		.byte	0x1
 2918 050a 6902     		.2byte	0x269
 2919 050c 81000000 		.4byte	0x81
 2920 0510 00000000 		.4byte	.LFB83
 2921 0514 58000000 		.4byte	.LFE83-.LFB83
 2922 0518 01       		.uleb128 0x1
 2923 0519 9C       		.byte	0x9c
 2924 051a 45050000 		.4byte	0x545
 2925 051e 16       		.uleb128 0x16
 2926 051f 2C020000 		.4byte	.LASF61
 2927 0523 01       		.byte	0x1
 2928 0524 6902     		.2byte	0x269
 2929 0526 BE000000 		.4byte	0xbe
 2930 052a 02       		.uleb128 0x2
 2931 052b 91       		.byte	0x91
 2932 052c 6C       		.sleb128 -20
 2933 052d 0E       		.uleb128 0xe
 2934 052e 26000000 		.4byte	.LBB4
 2935 0532 12000000 		.4byte	.LBE4-.LBB4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 70


 2936 0536 12       		.uleb128 0x12
 2937 0537 6900     		.ascii	"i\000"
 2938 0539 01       		.byte	0x1
 2939 053a 7902     		.2byte	0x279
 2940 053c 81000000 		.4byte	0x81
 2941 0540 02       		.uleb128 0x2
 2942 0541 91       		.byte	0x91
 2943 0542 77       		.sleb128 -9
 2944 0543 00       		.byte	0
 2945 0544 00       		.byte	0
 2946 0545 15       		.uleb128 0x15
 2947 0546 06000000 		.4byte	.LASF62
 2948 054a 01       		.byte	0x1
 2949 054b AE02     		.2byte	0x2ae
 2950 054d 81000000 		.4byte	0x81
 2951 0551 00000000 		.4byte	.LFB84
 2952 0555 28010000 		.4byte	.LFE84-.LFB84
 2953 0559 01       		.uleb128 0x1
 2954 055a 9C       		.byte	0x9c
 2955 055b AA050000 		.4byte	0x5aa
 2956 055f 16       		.uleb128 0x16
 2957 0560 81010000 		.4byte	.LASF63
 2958 0564 01       		.byte	0x1
 2959 0565 AE02     		.2byte	0x2ae
 2960 0567 BE000000 		.4byte	0xbe
 2961 056b 03       		.uleb128 0x3
 2962 056c 91       		.byte	0x91
 2963 056d A477     		.sleb128 -1116
 2964 056f 19       		.uleb128 0x19
 2965 0570 63737600 		.ascii	"csv\000"
 2966 0574 01       		.byte	0x1
 2967 0575 AE02     		.2byte	0x2ae
 2968 0577 BE000000 		.4byte	0xbe
 2969 057b 03       		.uleb128 0x3
 2970 057c 91       		.byte	0x91
 2971 057d A077     		.sleb128 -1120
 2972 057f 0E       		.uleb128 0xe
 2973 0580 4E000000 		.4byte	.LBB5
 2974 0584 8A000000 		.4byte	.LBE5-.LBB5
 2975 0588 17       		.uleb128 0x17
 2976 0589 85000000 		.4byte	.LASF58
 2977 058d 01       		.byte	0x1
 2978 058e C202     		.2byte	0x2c2
 2979 0590 F3040000 		.4byte	0x4f3
 2980 0594 03       		.uleb128 0x3
 2981 0595 91       		.byte	0x91
 2982 0596 9078     		.sleb128 -1008
 2983 0598 17       		.uleb128 0x17
 2984 0599 88010000 		.4byte	.LASF59
 2985 059d 01       		.byte	0x1
 2986 059e C202     		.2byte	0x2c2
 2987 05a0 A2020000 		.4byte	0x2a2
 2988 05a4 03       		.uleb128 0x3
 2989 05a5 91       		.byte	0x91
 2990 05a6 AC77     		.sleb128 -1108
 2991 05a8 00       		.byte	0
 2992 05a9 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 71


 2993 05aa 11       		.uleb128 0x11
 2994 05ab 31040000 		.4byte	.LASF64
 2995 05af 01       		.byte	0x1
 2996 05b0 0B03     		.2byte	0x30b
 2997 05b2 81000000 		.4byte	0x81
 2998 05b6 00000000 		.4byte	.LFB85
 2999 05ba E0000000 		.4byte	.LFE85-.LFB85
 3000 05be 01       		.uleb128 0x1
 3001 05bf 9C       		.byte	0x9c
 3002 05c0 0F060000 		.4byte	0x60f
 3003 05c4 17       		.uleb128 0x17
 3004 05c5 48030000 		.4byte	.LASF65
 3005 05c9 01       		.byte	0x1
 3006 05ca 1303     		.2byte	0x313
 3007 05cc 81000000 		.4byte	0x81
 3008 05d0 02       		.uleb128 0x2
 3009 05d1 91       		.byte	0x91
 3010 05d2 6B       		.sleb128 -21
 3011 05d3 12       		.uleb128 0x12
 3012 05d4 6900     		.ascii	"i\000"
 3013 05d6 01       		.byte	0x1
 3014 05d7 1403     		.2byte	0x314
 3015 05d9 97000000 		.4byte	0x97
 3016 05dd 02       		.uleb128 0x2
 3017 05de 91       		.byte	0x91
 3018 05df 74       		.sleb128 -12
 3019 05e0 17       		.uleb128 0x17
 3020 05e1 9F000000 		.4byte	.LASF28
 3021 05e5 01       		.byte	0x1
 3022 05e6 1403     		.2byte	0x314
 3023 05e8 97000000 		.4byte	0x97
 3024 05ec 02       		.uleb128 0x2
 3025 05ed 91       		.byte	0x91
 3026 05ee 70       		.sleb128 -16
 3027 05ef 17       		.uleb128 0x17
 3028 05f0 66030000 		.4byte	.LASF66
 3029 05f4 01       		.byte	0x1
 3030 05f5 1403     		.2byte	0x314
 3031 05f7 97000000 		.4byte	0x97
 3032 05fb 02       		.uleb128 0x2
 3033 05fc 91       		.byte	0x91
 3034 05fd 6C       		.sleb128 -20
 3035 05fe 17       		.uleb128 0x17
 3036 05ff 9D040000 		.4byte	.LASF67
 3037 0603 01       		.byte	0x1
 3038 0604 1503     		.2byte	0x315
 3039 0606 0F060000 		.4byte	0x60f
 3040 060a 03       		.uleb128 0x3
 3041 060b 91       		.byte	0x91
 3042 060c BC7D     		.sleb128 -324
 3043 060e 00       		.byte	0
 3044 060f 13       		.uleb128 0x13
 3045 0610 B0000000 		.4byte	0xb0
 3046 0614 20060000 		.4byte	0x620
 3047 0618 18       		.uleb128 0x18
 3048 0619 B7000000 		.4byte	0xb7
 3049 061d 2B01     		.2byte	0x12b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 72


 3050 061f 00       		.byte	0
 3051 0620 11       		.uleb128 0x11
 3052 0621 BD040000 		.4byte	.LASF68
 3053 0625 01       		.byte	0x1
 3054 0626 3103     		.2byte	0x331
 3055 0628 81000000 		.4byte	0x81
 3056 062c 00000000 		.4byte	.LFB86
 3057 0630 9C000000 		.4byte	.LFE86-.LFB86
 3058 0634 01       		.uleb128 0x1
 3059 0635 9C       		.byte	0x9c
 3060 0636 76060000 		.4byte	0x676
 3061 063a 12       		.uleb128 0x12
 3062 063b 6900     		.ascii	"i\000"
 3063 063d 01       		.byte	0x1
 3064 063e 3803     		.2byte	0x338
 3065 0640 97000000 		.4byte	0x97
 3066 0644 02       		.uleb128 0x2
 3067 0645 91       		.byte	0x91
 3068 0646 74       		.sleb128 -12
 3069 0647 17       		.uleb128 0x17
 3070 0648 9F000000 		.4byte	.LASF28
 3071 064c 01       		.byte	0x1
 3072 064d 3803     		.2byte	0x338
 3073 064f 97000000 		.4byte	0x97
 3074 0653 02       		.uleb128 0x2
 3075 0654 91       		.byte	0x91
 3076 0655 70       		.sleb128 -16
 3077 0656 17       		.uleb128 0x17
 3078 0657 66030000 		.4byte	.LASF66
 3079 065b 01       		.byte	0x1
 3080 065c 3803     		.2byte	0x338
 3081 065e 97000000 		.4byte	0x97
 3082 0662 02       		.uleb128 0x2
 3083 0663 91       		.byte	0x91
 3084 0664 6C       		.sleb128 -20
 3085 0665 17       		.uleb128 0x17
 3086 0666 9D040000 		.4byte	.LASF67
 3087 066a 01       		.byte	0x1
 3088 066b 3903     		.2byte	0x339
 3089 066d 0F060000 		.4byte	0x60f
 3090 0671 03       		.uleb128 0x3
 3091 0672 91       		.byte	0x91
 3092 0673 C07D     		.sleb128 -320
 3093 0675 00       		.byte	0
 3094 0676 1A       		.uleb128 0x1a
 3095 0677 8D000000 		.4byte	.LASF69
 3096 067b 01       		.byte	0x1
 3097 067c 5103     		.2byte	0x351
 3098 067e 00000000 		.4byte	.LFB87
 3099 0682 24000000 		.4byte	.LFE87-.LFB87
 3100 0686 01       		.uleb128 0x1
 3101 0687 9C       		.byte	0x9c
 3102 0688 1B       		.uleb128 0x1b
 3103 0689 4D000000 		.4byte	.LASF70
 3104 068d 01       		.byte	0x1
 3105 068e 6103     		.2byte	0x361
 3106 0690 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 73


 3107 0694 44000000 		.4byte	.LFE88-.LFB88
 3108 0698 01       		.uleb128 0x1
 3109 0699 9C       		.byte	0x9c
 3110 069a B8060000 		.4byte	0x6b8
 3111 069e 0E       		.uleb128 0xe
 3112 069f 08000000 		.4byte	.LBB6
 3113 06a3 24000000 		.4byte	.LBE6-.LBB6
 3114 06a7 17       		.uleb128 0x17
 3115 06a8 29000000 		.4byte	.LASF71
 3116 06ac 01       		.byte	0x1
 3117 06ad 6403     		.2byte	0x364
 3118 06af B0000000 		.4byte	0xb0
 3119 06b3 02       		.uleb128 0x2
 3120 06b4 91       		.byte	0x91
 3121 06b5 77       		.sleb128 -9
 3122 06b6 00       		.byte	0
 3123 06b7 00       		.byte	0
 3124 06b8 1C       		.uleb128 0x1c
 3125 06b9 2D030000 		.4byte	.LASF72
 3126 06bd 05       		.byte	0x5
 3127 06be 1606     		.2byte	0x616
 3128 06c0 C4060000 		.4byte	0x6c4
 3129 06c4 1D       		.uleb128 0x1d
 3130 06c5 76000000 		.4byte	0x76
 3131 06c9 1E       		.uleb128 0x1e
 3132 06ca BA020000 		.4byte	.LASF73
 3133 06ce 01       		.byte	0x1
 3134 06cf 17       		.byte	0x17
 3135 06d0 81000000 		.4byte	0x81
 3136 06d4 05       		.uleb128 0x5
 3137 06d5 03       		.byte	0x3
 3138 06d6 00000000 		.4byte	modem_state
 3139 06da 1E       		.uleb128 0x1e
 3140 06db B6030000 		.4byte	.LASF74
 3141 06df 01       		.byte	0x1
 3142 06e0 17       		.byte	0x17
 3143 06e1 81000000 		.4byte	0x81
 3144 06e5 05       		.uleb128 0x5
 3145 06e6 03       		.byte	0x3
 3146 06e7 00000000 		.4byte	lock_acquired
 3147 06eb 1E       		.uleb128 0x1e
 3148 06ec 95040000 		.4byte	.LASF75
 3149 06f0 01       		.byte	0x1
 3150 06f1 19       		.byte	0x19
 3151 06f2 97000000 		.4byte	0x97
 3152 06f6 05       		.uleb128 0x5
 3153 06f7 03       		.byte	0x3
 3154 06f8 00000000 		.4byte	feed_id
 3155 06fc 1E       		.uleb128 0x1e
 3156 06fd 55040000 		.4byte	.LASF76
 3157 0701 01       		.byte	0x1
 3158 0702 1A       		.byte	0x1a
 3159 0703 BE000000 		.4byte	0xbe
 3160 0707 05       		.uleb128 0x5
 3161 0708 03       		.byte	0x3
 3162 0709 00000000 		.4byte	api_key
 3163 070d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 74


 3164 070e 50040000 		.4byte	.LASF77
 3165 0712 01       		.byte	0x1
 3166 0713 16       		.byte	0x16
 3167 0714 68000000 		.4byte	0x68
 3168 0718 05       		.uleb128 0x5
 3169 0719 03       		.byte	0x3
 3170 071a 00000000 		.4byte	iter
 3171 071e 1E       		.uleb128 0x1e
 3172 071f 3A030000 		.4byte	.LASF78
 3173 0723 01       		.byte	0x1
 3174 0724 17       		.byte	0x17
 3175 0725 81000000 		.4byte	0x81
 3176 0729 05       		.uleb128 0x5
 3177 072a 03       		.byte	0x3
 3178 072b 00000000 		.4byte	ready
 3179 072f 1E       		.uleb128 0x1e
 3180 0730 59020000 		.4byte	.LASF79
 3181 0734 01       		.byte	0x1
 3182 0735 18       		.byte	0x18
 3183 0736 8C000000 		.4byte	0x8c
 3184 073a 05       		.uleb128 0x5
 3185 073b 03       		.byte	0x3
 3186 073c 00000000 		.4byte	uart_string_index
 3187 0740 1E       		.uleb128 0x1e
 3188 0741 51010000 		.4byte	.LASF80
 3189 0745 01       		.byte	0x1
 3190 0746 1A       		.byte	0x1a
 3191 0747 F3040000 		.4byte	0x4f3
 3192 074b 05       		.uleb128 0x5
 3193 074c 03       		.byte	0x3
 3194 074d 00000000 		.4byte	uart_received_string
 3195 0751 1E       		.uleb128 0x1e
 3196 0752 AF000000 		.4byte	.LASF81
 3197 0756 01       		.byte	0x1
 3198 0757 1B       		.byte	0x1b
 3199 0758 BE000000 		.4byte	0xbe
 3200 075c 05       		.uleb128 0x5
 3201 075d 03       		.byte	0x3
 3202 075e 00000000 		.4byte	modem_apn
 3203 0762 00       		.byte	0
 3204              		.section	.debug_abbrev,"",%progbits
 3205              	.Ldebug_abbrev0:
 3206 0000 01       		.uleb128 0x1
 3207 0001 11       		.uleb128 0x11
 3208 0002 01       		.byte	0x1
 3209 0003 25       		.uleb128 0x25
 3210 0004 0E       		.uleb128 0xe
 3211 0005 13       		.uleb128 0x13
 3212 0006 0B       		.uleb128 0xb
 3213 0007 03       		.uleb128 0x3
 3214 0008 0E       		.uleb128 0xe
 3215 0009 1B       		.uleb128 0x1b
 3216 000a 0E       		.uleb128 0xe
 3217 000b 55       		.uleb128 0x55
 3218 000c 17       		.uleb128 0x17
 3219 000d 11       		.uleb128 0x11
 3220 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 75


 3221 000f 10       		.uleb128 0x10
 3222 0010 17       		.uleb128 0x17
 3223 0011 00       		.byte	0
 3224 0012 00       		.byte	0
 3225 0013 02       		.uleb128 0x2
 3226 0014 24       		.uleb128 0x24
 3227 0015 00       		.byte	0
 3228 0016 0B       		.uleb128 0xb
 3229 0017 0B       		.uleb128 0xb
 3230 0018 3E       		.uleb128 0x3e
 3231 0019 0B       		.uleb128 0xb
 3232 001a 03       		.uleb128 0x3
 3233 001b 0E       		.uleb128 0xe
 3234 001c 00       		.byte	0
 3235 001d 00       		.byte	0
 3236 001e 03       		.uleb128 0x3
 3237 001f 16       		.uleb128 0x16
 3238 0020 00       		.byte	0
 3239 0021 03       		.uleb128 0x3
 3240 0022 0E       		.uleb128 0xe
 3241 0023 3A       		.uleb128 0x3a
 3242 0024 0B       		.uleb128 0xb
 3243 0025 3B       		.uleb128 0x3b
 3244 0026 0B       		.uleb128 0xb
 3245 0027 49       		.uleb128 0x49
 3246 0028 13       		.uleb128 0x13
 3247 0029 00       		.byte	0
 3248 002a 00       		.byte	0
 3249 002b 04       		.uleb128 0x4
 3250 002c 24       		.uleb128 0x24
 3251 002d 00       		.byte	0
 3252 002e 0B       		.uleb128 0xb
 3253 002f 0B       		.uleb128 0xb
 3254 0030 3E       		.uleb128 0x3e
 3255 0031 0B       		.uleb128 0xb
 3256 0032 03       		.uleb128 0x3
 3257 0033 08       		.uleb128 0x8
 3258 0034 00       		.byte	0
 3259 0035 00       		.byte	0
 3260 0036 05       		.uleb128 0x5
 3261 0037 0F       		.uleb128 0xf
 3262 0038 00       		.byte	0
 3263 0039 0B       		.uleb128 0xb
 3264 003a 0B       		.uleb128 0xb
 3265 003b 49       		.uleb128 0x49
 3266 003c 13       		.uleb128 0x13
 3267 003d 00       		.byte	0
 3268 003e 00       		.byte	0
 3269 003f 06       		.uleb128 0x6
 3270 0040 2E       		.uleb128 0x2e
 3271 0041 01       		.byte	0x1
 3272 0042 3F       		.uleb128 0x3f
 3273 0043 19       		.uleb128 0x19
 3274 0044 03       		.uleb128 0x3
 3275 0045 0E       		.uleb128 0xe
 3276 0046 3A       		.uleb128 0x3a
 3277 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 76


 3278 0048 3B       		.uleb128 0x3b
 3279 0049 0B       		.uleb128 0xb
 3280 004a 27       		.uleb128 0x27
 3281 004b 19       		.uleb128 0x19
 3282 004c 49       		.uleb128 0x49
 3283 004d 13       		.uleb128 0x13
 3284 004e 11       		.uleb128 0x11
 3285 004f 01       		.uleb128 0x1
 3286 0050 12       		.uleb128 0x12
 3287 0051 06       		.uleb128 0x6
 3288 0052 40       		.uleb128 0x40
 3289 0053 18       		.uleb128 0x18
 3290 0054 9742     		.uleb128 0x2117
 3291 0056 19       		.uleb128 0x19
 3292 0057 01       		.uleb128 0x1
 3293 0058 13       		.uleb128 0x13
 3294 0059 00       		.byte	0
 3295 005a 00       		.byte	0
 3296 005b 07       		.uleb128 0x7
 3297 005c 05       		.uleb128 0x5
 3298 005d 00       		.byte	0
 3299 005e 03       		.uleb128 0x3
 3300 005f 08       		.uleb128 0x8
 3301 0060 3A       		.uleb128 0x3a
 3302 0061 0B       		.uleb128 0xb
 3303 0062 3B       		.uleb128 0x3b
 3304 0063 0B       		.uleb128 0xb
 3305 0064 49       		.uleb128 0x49
 3306 0065 13       		.uleb128 0x13
 3307 0066 02       		.uleb128 0x2
 3308 0067 18       		.uleb128 0x18
 3309 0068 00       		.byte	0
 3310 0069 00       		.byte	0
 3311 006a 08       		.uleb128 0x8
 3312 006b 2E       		.uleb128 0x2e
 3313 006c 00       		.byte	0
 3314 006d 3F       		.uleb128 0x3f
 3315 006e 19       		.uleb128 0x19
 3316 006f 03       		.uleb128 0x3
 3317 0070 0E       		.uleb128 0xe
 3318 0071 3A       		.uleb128 0x3a
 3319 0072 0B       		.uleb128 0xb
 3320 0073 3B       		.uleb128 0x3b
 3321 0074 0B       		.uleb128 0xb
 3322 0075 49       		.uleb128 0x49
 3323 0076 13       		.uleb128 0x13
 3324 0077 11       		.uleb128 0x11
 3325 0078 01       		.uleb128 0x1
 3326 0079 12       		.uleb128 0x12
 3327 007a 06       		.uleb128 0x6
 3328 007b 40       		.uleb128 0x40
 3329 007c 18       		.uleb128 0x18
 3330 007d 9642     		.uleb128 0x2116
 3331 007f 19       		.uleb128 0x19
 3332 0080 00       		.byte	0
 3333 0081 00       		.byte	0
 3334 0082 09       		.uleb128 0x9
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 77


 3335 0083 2E       		.uleb128 0x2e
 3336 0084 00       		.byte	0
 3337 0085 3F       		.uleb128 0x3f
 3338 0086 19       		.uleb128 0x19
 3339 0087 03       		.uleb128 0x3
 3340 0088 0E       		.uleb128 0xe
 3341 0089 3A       		.uleb128 0x3a
 3342 008a 0B       		.uleb128 0xb
 3343 008b 3B       		.uleb128 0x3b
 3344 008c 0B       		.uleb128 0xb
 3345 008d 11       		.uleb128 0x11
 3346 008e 01       		.uleb128 0x1
 3347 008f 12       		.uleb128 0x12
 3348 0090 06       		.uleb128 0x6
 3349 0091 40       		.uleb128 0x40
 3350 0092 18       		.uleb128 0x18
 3351 0093 9642     		.uleb128 0x2116
 3352 0095 19       		.uleb128 0x19
 3353 0096 00       		.byte	0
 3354 0097 00       		.byte	0
 3355 0098 0A       		.uleb128 0xa
 3356 0099 2E       		.uleb128 0x2e
 3357 009a 01       		.byte	0x1
 3358 009b 3F       		.uleb128 0x3f
 3359 009c 19       		.uleb128 0x19
 3360 009d 03       		.uleb128 0x3
 3361 009e 0E       		.uleb128 0xe
 3362 009f 3A       		.uleb128 0x3a
 3363 00a0 0B       		.uleb128 0xb
 3364 00a1 3B       		.uleb128 0x3b
 3365 00a2 0B       		.uleb128 0xb
 3366 00a3 27       		.uleb128 0x27
 3367 00a4 19       		.uleb128 0x19
 3368 00a5 49       		.uleb128 0x49
 3369 00a6 13       		.uleb128 0x13
 3370 00a7 11       		.uleb128 0x11
 3371 00a8 01       		.uleb128 0x1
 3372 00a9 12       		.uleb128 0x12
 3373 00aa 06       		.uleb128 0x6
 3374 00ab 40       		.uleb128 0x40
 3375 00ac 18       		.uleb128 0x18
 3376 00ad 9642     		.uleb128 0x2116
 3377 00af 19       		.uleb128 0x19
 3378 00b0 01       		.uleb128 0x1
 3379 00b1 13       		.uleb128 0x13
 3380 00b2 00       		.byte	0
 3381 00b3 00       		.byte	0
 3382 00b4 0B       		.uleb128 0xb
 3383 00b5 05       		.uleb128 0x5
 3384 00b6 00       		.byte	0
 3385 00b7 03       		.uleb128 0x3
 3386 00b8 0E       		.uleb128 0xe
 3387 00b9 3A       		.uleb128 0x3a
 3388 00ba 0B       		.uleb128 0xb
 3389 00bb 3B       		.uleb128 0x3b
 3390 00bc 0B       		.uleb128 0xb
 3391 00bd 49       		.uleb128 0x49
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 78


 3392 00be 13       		.uleb128 0x13
 3393 00bf 02       		.uleb128 0x2
 3394 00c0 18       		.uleb128 0x18
 3395 00c1 00       		.byte	0
 3396 00c2 00       		.byte	0
 3397 00c3 0C       		.uleb128 0xc
 3398 00c4 34       		.uleb128 0x34
 3399 00c5 00       		.byte	0
 3400 00c6 03       		.uleb128 0x3
 3401 00c7 0E       		.uleb128 0xe
 3402 00c8 3A       		.uleb128 0x3a
 3403 00c9 0B       		.uleb128 0xb
 3404 00ca 3B       		.uleb128 0x3b
 3405 00cb 0B       		.uleb128 0xb
 3406 00cc 49       		.uleb128 0x49
 3407 00cd 13       		.uleb128 0x13
 3408 00ce 02       		.uleb128 0x2
 3409 00cf 18       		.uleb128 0x18
 3410 00d0 00       		.byte	0
 3411 00d1 00       		.byte	0
 3412 00d2 0D       		.uleb128 0xd
 3413 00d3 34       		.uleb128 0x34
 3414 00d4 00       		.byte	0
 3415 00d5 03       		.uleb128 0x3
 3416 00d6 08       		.uleb128 0x8
 3417 00d7 3A       		.uleb128 0x3a
 3418 00d8 0B       		.uleb128 0xb
 3419 00d9 3B       		.uleb128 0x3b
 3420 00da 0B       		.uleb128 0xb
 3421 00db 49       		.uleb128 0x49
 3422 00dc 13       		.uleb128 0x13
 3423 00dd 02       		.uleb128 0x2
 3424 00de 18       		.uleb128 0x18
 3425 00df 00       		.byte	0
 3426 00e0 00       		.byte	0
 3427 00e1 0E       		.uleb128 0xe
 3428 00e2 0B       		.uleb128 0xb
 3429 00e3 01       		.byte	0x1
 3430 00e4 11       		.uleb128 0x11
 3431 00e5 01       		.uleb128 0x1
 3432 00e6 12       		.uleb128 0x12
 3433 00e7 06       		.uleb128 0x6
 3434 00e8 00       		.byte	0
 3435 00e9 00       		.byte	0
 3436 00ea 0F       		.uleb128 0xf
 3437 00eb 2E       		.uleb128 0x2e
 3438 00ec 01       		.byte	0x1
 3439 00ed 3F       		.uleb128 0x3f
 3440 00ee 19       		.uleb128 0x19
 3441 00ef 03       		.uleb128 0x3
 3442 00f0 0E       		.uleb128 0xe
 3443 00f1 3A       		.uleb128 0x3a
 3444 00f2 0B       		.uleb128 0xb
 3445 00f3 3B       		.uleb128 0x3b
 3446 00f4 0B       		.uleb128 0xb
 3447 00f5 49       		.uleb128 0x49
 3448 00f6 13       		.uleb128 0x13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 79


 3449 00f7 11       		.uleb128 0x11
 3450 00f8 01       		.uleb128 0x1
 3451 00f9 12       		.uleb128 0x12
 3452 00fa 06       		.uleb128 0x6
 3453 00fb 40       		.uleb128 0x40
 3454 00fc 18       		.uleb128 0x18
 3455 00fd 9642     		.uleb128 0x2116
 3456 00ff 19       		.uleb128 0x19
 3457 0100 01       		.uleb128 0x1
 3458 0101 13       		.uleb128 0x13
 3459 0102 00       		.byte	0
 3460 0103 00       		.byte	0
 3461 0104 10       		.uleb128 0x10
 3462 0105 2E       		.uleb128 0x2e
 3463 0106 00       		.byte	0
 3464 0107 3F       		.uleb128 0x3f
 3465 0108 19       		.uleb128 0x19
 3466 0109 03       		.uleb128 0x3
 3467 010a 0E       		.uleb128 0xe
 3468 010b 3A       		.uleb128 0x3a
 3469 010c 0B       		.uleb128 0xb
 3470 010d 3B       		.uleb128 0x3b
 3471 010e 05       		.uleb128 0x5
 3472 010f 49       		.uleb128 0x49
 3473 0110 13       		.uleb128 0x13
 3474 0111 11       		.uleb128 0x11
 3475 0112 01       		.uleb128 0x1
 3476 0113 12       		.uleb128 0x12
 3477 0114 06       		.uleb128 0x6
 3478 0115 40       		.uleb128 0x40
 3479 0116 18       		.uleb128 0x18
 3480 0117 9642     		.uleb128 0x2116
 3481 0119 19       		.uleb128 0x19
 3482 011a 00       		.byte	0
 3483 011b 00       		.byte	0
 3484 011c 11       		.uleb128 0x11
 3485 011d 2E       		.uleb128 0x2e
 3486 011e 01       		.byte	0x1
 3487 011f 3F       		.uleb128 0x3f
 3488 0120 19       		.uleb128 0x19
 3489 0121 03       		.uleb128 0x3
 3490 0122 0E       		.uleb128 0xe
 3491 0123 3A       		.uleb128 0x3a
 3492 0124 0B       		.uleb128 0xb
 3493 0125 3B       		.uleb128 0x3b
 3494 0126 05       		.uleb128 0x5
 3495 0127 49       		.uleb128 0x49
 3496 0128 13       		.uleb128 0x13
 3497 0129 11       		.uleb128 0x11
 3498 012a 01       		.uleb128 0x1
 3499 012b 12       		.uleb128 0x12
 3500 012c 06       		.uleb128 0x6
 3501 012d 40       		.uleb128 0x40
 3502 012e 18       		.uleb128 0x18
 3503 012f 9642     		.uleb128 0x2116
 3504 0131 19       		.uleb128 0x19
 3505 0132 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 80


 3506 0133 13       		.uleb128 0x13
 3507 0134 00       		.byte	0
 3508 0135 00       		.byte	0
 3509 0136 12       		.uleb128 0x12
 3510 0137 34       		.uleb128 0x34
 3511 0138 00       		.byte	0
 3512 0139 03       		.uleb128 0x3
 3513 013a 08       		.uleb128 0x8
 3514 013b 3A       		.uleb128 0x3a
 3515 013c 0B       		.uleb128 0xb
 3516 013d 3B       		.uleb128 0x3b
 3517 013e 05       		.uleb128 0x5
 3518 013f 49       		.uleb128 0x49
 3519 0140 13       		.uleb128 0x13
 3520 0141 02       		.uleb128 0x2
 3521 0142 18       		.uleb128 0x18
 3522 0143 00       		.byte	0
 3523 0144 00       		.byte	0
 3524 0145 13       		.uleb128 0x13
 3525 0146 01       		.uleb128 0x1
 3526 0147 01       		.byte	0x1
 3527 0148 49       		.uleb128 0x49
 3528 0149 13       		.uleb128 0x13
 3529 014a 01       		.uleb128 0x1
 3530 014b 13       		.uleb128 0x13
 3531 014c 00       		.byte	0
 3532 014d 00       		.byte	0
 3533 014e 14       		.uleb128 0x14
 3534 014f 21       		.uleb128 0x21
 3535 0150 00       		.byte	0
 3536 0151 49       		.uleb128 0x49
 3537 0152 13       		.uleb128 0x13
 3538 0153 2F       		.uleb128 0x2f
 3539 0154 0B       		.uleb128 0xb
 3540 0155 00       		.byte	0
 3541 0156 00       		.byte	0
 3542 0157 15       		.uleb128 0x15
 3543 0158 2E       		.uleb128 0x2e
 3544 0159 01       		.byte	0x1
 3545 015a 3F       		.uleb128 0x3f
 3546 015b 19       		.uleb128 0x19
 3547 015c 03       		.uleb128 0x3
 3548 015d 0E       		.uleb128 0xe
 3549 015e 3A       		.uleb128 0x3a
 3550 015f 0B       		.uleb128 0xb
 3551 0160 3B       		.uleb128 0x3b
 3552 0161 05       		.uleb128 0x5
 3553 0162 27       		.uleb128 0x27
 3554 0163 19       		.uleb128 0x19
 3555 0164 49       		.uleb128 0x49
 3556 0165 13       		.uleb128 0x13
 3557 0166 11       		.uleb128 0x11
 3558 0167 01       		.uleb128 0x1
 3559 0168 12       		.uleb128 0x12
 3560 0169 06       		.uleb128 0x6
 3561 016a 40       		.uleb128 0x40
 3562 016b 18       		.uleb128 0x18
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 81


 3563 016c 9642     		.uleb128 0x2116
 3564 016e 19       		.uleb128 0x19
 3565 016f 01       		.uleb128 0x1
 3566 0170 13       		.uleb128 0x13
 3567 0171 00       		.byte	0
 3568 0172 00       		.byte	0
 3569 0173 16       		.uleb128 0x16
 3570 0174 05       		.uleb128 0x5
 3571 0175 00       		.byte	0
 3572 0176 03       		.uleb128 0x3
 3573 0177 0E       		.uleb128 0xe
 3574 0178 3A       		.uleb128 0x3a
 3575 0179 0B       		.uleb128 0xb
 3576 017a 3B       		.uleb128 0x3b
 3577 017b 05       		.uleb128 0x5
 3578 017c 49       		.uleb128 0x49
 3579 017d 13       		.uleb128 0x13
 3580 017e 02       		.uleb128 0x2
 3581 017f 18       		.uleb128 0x18
 3582 0180 00       		.byte	0
 3583 0181 00       		.byte	0
 3584 0182 17       		.uleb128 0x17
 3585 0183 34       		.uleb128 0x34
 3586 0184 00       		.byte	0
 3587 0185 03       		.uleb128 0x3
 3588 0186 0E       		.uleb128 0xe
 3589 0187 3A       		.uleb128 0x3a
 3590 0188 0B       		.uleb128 0xb
 3591 0189 3B       		.uleb128 0x3b
 3592 018a 05       		.uleb128 0x5
 3593 018b 49       		.uleb128 0x49
 3594 018c 13       		.uleb128 0x13
 3595 018d 02       		.uleb128 0x2
 3596 018e 18       		.uleb128 0x18
 3597 018f 00       		.byte	0
 3598 0190 00       		.byte	0
 3599 0191 18       		.uleb128 0x18
 3600 0192 21       		.uleb128 0x21
 3601 0193 00       		.byte	0
 3602 0194 49       		.uleb128 0x49
 3603 0195 13       		.uleb128 0x13
 3604 0196 2F       		.uleb128 0x2f
 3605 0197 05       		.uleb128 0x5
 3606 0198 00       		.byte	0
 3607 0199 00       		.byte	0
 3608 019a 19       		.uleb128 0x19
 3609 019b 05       		.uleb128 0x5
 3610 019c 00       		.byte	0
 3611 019d 03       		.uleb128 0x3
 3612 019e 08       		.uleb128 0x8
 3613 019f 3A       		.uleb128 0x3a
 3614 01a0 0B       		.uleb128 0xb
 3615 01a1 3B       		.uleb128 0x3b
 3616 01a2 05       		.uleb128 0x5
 3617 01a3 49       		.uleb128 0x49
 3618 01a4 13       		.uleb128 0x13
 3619 01a5 02       		.uleb128 0x2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 82


 3620 01a6 18       		.uleb128 0x18
 3621 01a7 00       		.byte	0
 3622 01a8 00       		.byte	0
 3623 01a9 1A       		.uleb128 0x1a
 3624 01aa 2E       		.uleb128 0x2e
 3625 01ab 00       		.byte	0
 3626 01ac 3F       		.uleb128 0x3f
 3627 01ad 19       		.uleb128 0x19
 3628 01ae 03       		.uleb128 0x3
 3629 01af 0E       		.uleb128 0xe
 3630 01b0 3A       		.uleb128 0x3a
 3631 01b1 0B       		.uleb128 0xb
 3632 01b2 3B       		.uleb128 0x3b
 3633 01b3 05       		.uleb128 0x5
 3634 01b4 11       		.uleb128 0x11
 3635 01b5 01       		.uleb128 0x1
 3636 01b6 12       		.uleb128 0x12
 3637 01b7 06       		.uleb128 0x6
 3638 01b8 40       		.uleb128 0x40
 3639 01b9 18       		.uleb128 0x18
 3640 01ba 9642     		.uleb128 0x2116
 3641 01bc 19       		.uleb128 0x19
 3642 01bd 00       		.byte	0
 3643 01be 00       		.byte	0
 3644 01bf 1B       		.uleb128 0x1b
 3645 01c0 2E       		.uleb128 0x2e
 3646 01c1 01       		.byte	0x1
 3647 01c2 3F       		.uleb128 0x3f
 3648 01c3 19       		.uleb128 0x19
 3649 01c4 03       		.uleb128 0x3
 3650 01c5 0E       		.uleb128 0xe
 3651 01c6 3A       		.uleb128 0x3a
 3652 01c7 0B       		.uleb128 0xb
 3653 01c8 3B       		.uleb128 0x3b
 3654 01c9 05       		.uleb128 0x5
 3655 01ca 27       		.uleb128 0x27
 3656 01cb 19       		.uleb128 0x19
 3657 01cc 11       		.uleb128 0x11
 3658 01cd 01       		.uleb128 0x1
 3659 01ce 12       		.uleb128 0x12
 3660 01cf 06       		.uleb128 0x6
 3661 01d0 40       		.uleb128 0x40
 3662 01d1 18       		.uleb128 0x18
 3663 01d2 9642     		.uleb128 0x2116
 3664 01d4 19       		.uleb128 0x19
 3665 01d5 01       		.uleb128 0x1
 3666 01d6 13       		.uleb128 0x13
 3667 01d7 00       		.byte	0
 3668 01d8 00       		.byte	0
 3669 01d9 1C       		.uleb128 0x1c
 3670 01da 34       		.uleb128 0x34
 3671 01db 00       		.byte	0
 3672 01dc 03       		.uleb128 0x3
 3673 01dd 0E       		.uleb128 0xe
 3674 01de 3A       		.uleb128 0x3a
 3675 01df 0B       		.uleb128 0xb
 3676 01e0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 83


 3677 01e1 05       		.uleb128 0x5
 3678 01e2 49       		.uleb128 0x49
 3679 01e3 13       		.uleb128 0x13
 3680 01e4 3F       		.uleb128 0x3f
 3681 01e5 19       		.uleb128 0x19
 3682 01e6 3C       		.uleb128 0x3c
 3683 01e7 19       		.uleb128 0x19
 3684 01e8 00       		.byte	0
 3685 01e9 00       		.byte	0
 3686 01ea 1D       		.uleb128 0x1d
 3687 01eb 35       		.uleb128 0x35
 3688 01ec 00       		.byte	0
 3689 01ed 49       		.uleb128 0x49
 3690 01ee 13       		.uleb128 0x13
 3691 01ef 00       		.byte	0
 3692 01f0 00       		.byte	0
 3693 01f1 1E       		.uleb128 0x1e
 3694 01f2 34       		.uleb128 0x34
 3695 01f3 00       		.byte	0
 3696 01f4 03       		.uleb128 0x3
 3697 01f5 0E       		.uleb128 0xe
 3698 01f6 3A       		.uleb128 0x3a
 3699 01f7 0B       		.uleb128 0xb
 3700 01f8 3B       		.uleb128 0x3b
 3701 01f9 0B       		.uleb128 0xb
 3702 01fa 49       		.uleb128 0x49
 3703 01fb 13       		.uleb128 0x13
 3704 01fc 3F       		.uleb128 0x3f
 3705 01fd 19       		.uleb128 0x19
 3706 01fe 02       		.uleb128 0x2
 3707 01ff 18       		.uleb128 0x18
 3708 0200 00       		.byte	0
 3709 0201 00       		.byte	0
 3710 0202 00       		.byte	0
 3711              		.section	.debug_aranges,"",%progbits
 3712 0000 1C010000 		.4byte	0x11c
 3713 0004 0200     		.2byte	0x2
 3714 0006 00000000 		.4byte	.Ldebug_info0
 3715 000a 04       		.byte	0x4
 3716 000b 00       		.byte	0
 3717 000c 0000     		.2byte	0
 3718 000e 0000     		.2byte	0
 3719 0010 00000000 		.4byte	.LFB56
 3720 0014 2C000000 		.4byte	.LFE56-.LFB56
 3721 0018 00000000 		.4byte	.LFB57
 3722 001c 78000000 		.4byte	.LFE57-.LFB57
 3723 0020 00000000 		.4byte	.LFB58
 3724 0024 18000000 		.4byte	.LFE58-.LFB58
 3725 0028 00000000 		.4byte	.LFB59
 3726 002c 30000000 		.4byte	.LFE59-.LFB59
 3727 0030 00000000 		.4byte	.LFB60
 3728 0034 2C000000 		.4byte	.LFE60-.LFB60
 3729 0038 00000000 		.4byte	.LFB61
 3730 003c 78000000 		.4byte	.LFE61-.LFB61
 3731 0040 00000000 		.4byte	.LFB62
 3732 0044 70000000 		.4byte	.LFE62-.LFB62
 3733 0048 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 84


 3734 004c 4C000000 		.4byte	.LFE63-.LFB63
 3735 0050 00000000 		.4byte	.LFB64
 3736 0054 3C000000 		.4byte	.LFE64-.LFB64
 3737 0058 00000000 		.4byte	.LFB65
 3738 005c 1A000000 		.4byte	.LFE65-.LFB65
 3739 0060 00000000 		.4byte	.LFB66
 3740 0064 78000000 		.4byte	.LFE66-.LFB66
 3741 0068 00000000 		.4byte	.LFB67
 3742 006c 38000000 		.4byte	.LFE67-.LFB67
 3743 0070 00000000 		.4byte	.LFB68
 3744 0074 44000000 		.4byte	.LFE68-.LFB68
 3745 0078 00000000 		.4byte	.LFB69
 3746 007c 48000000 		.4byte	.LFE69-.LFB69
 3747 0080 00000000 		.4byte	.LFB70
 3748 0084 28000000 		.4byte	.LFE70-.LFB70
 3749 0088 00000000 		.4byte	.LFB71
 3750 008c 28000000 		.4byte	.LFE71-.LFB71
 3751 0090 00000000 		.4byte	.LFB72
 3752 0094 28000000 		.4byte	.LFE72-.LFB72
 3753 0098 00000000 		.4byte	.LFB73
 3754 009c 28000000 		.4byte	.LFE73-.LFB73
 3755 00a0 00000000 		.4byte	.LFB74
 3756 00a4 28000000 		.4byte	.LFE74-.LFB74
 3757 00a8 00000000 		.4byte	.LFB75
 3758 00ac 48000000 		.4byte	.LFE75-.LFB75
 3759 00b0 00000000 		.4byte	.LFB76
 3760 00b4 48000000 		.4byte	.LFE76-.LFB76
 3761 00b8 00000000 		.4byte	.LFB77
 3762 00bc 28000000 		.4byte	.LFE77-.LFB77
 3763 00c0 00000000 		.4byte	.LFB78
 3764 00c4 48000000 		.4byte	.LFE78-.LFB78
 3765 00c8 00000000 		.4byte	.LFB79
 3766 00cc 28000000 		.4byte	.LFE79-.LFB79
 3767 00d0 00000000 		.4byte	.LFB80
 3768 00d4 44000000 		.4byte	.LFE80-.LFB80
 3769 00d8 00000000 		.4byte	.LFB81
 3770 00dc 44000000 		.4byte	.LFE81-.LFB81
 3771 00e0 00000000 		.4byte	.LFB82
 3772 00e4 98000000 		.4byte	.LFE82-.LFB82
 3773 00e8 00000000 		.4byte	.LFB83
 3774 00ec 58000000 		.4byte	.LFE83-.LFB83
 3775 00f0 00000000 		.4byte	.LFB84
 3776 00f4 28010000 		.4byte	.LFE84-.LFB84
 3777 00f8 00000000 		.4byte	.LFB85
 3778 00fc E0000000 		.4byte	.LFE85-.LFB85
 3779 0100 00000000 		.4byte	.LFB86
 3780 0104 9C000000 		.4byte	.LFE86-.LFB86
 3781 0108 00000000 		.4byte	.LFB87
 3782 010c 24000000 		.4byte	.LFE87-.LFB87
 3783 0110 00000000 		.4byte	.LFB88
 3784 0114 44000000 		.4byte	.LFE88-.LFB88
 3785 0118 00000000 		.4byte	0
 3786 011c 00000000 		.4byte	0
 3787              		.section	.debug_ranges,"",%progbits
 3788              	.Ldebug_ranges0:
 3789 0000 00000000 		.4byte	.LFB56
 3790 0004 2C000000 		.4byte	.LFE56
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 85


 3791 0008 00000000 		.4byte	.LFB57
 3792 000c 78000000 		.4byte	.LFE57
 3793 0010 00000000 		.4byte	.LFB58
 3794 0014 18000000 		.4byte	.LFE58
 3795 0018 00000000 		.4byte	.LFB59
 3796 001c 30000000 		.4byte	.LFE59
 3797 0020 00000000 		.4byte	.LFB60
 3798 0024 2C000000 		.4byte	.LFE60
 3799 0028 00000000 		.4byte	.LFB61
 3800 002c 78000000 		.4byte	.LFE61
 3801 0030 00000000 		.4byte	.LFB62
 3802 0034 70000000 		.4byte	.LFE62
 3803 0038 00000000 		.4byte	.LFB63
 3804 003c 4C000000 		.4byte	.LFE63
 3805 0040 00000000 		.4byte	.LFB64
 3806 0044 3C000000 		.4byte	.LFE64
 3807 0048 00000000 		.4byte	.LFB65
 3808 004c 1A000000 		.4byte	.LFE65
 3809 0050 00000000 		.4byte	.LFB66
 3810 0054 78000000 		.4byte	.LFE66
 3811 0058 00000000 		.4byte	.LFB67
 3812 005c 38000000 		.4byte	.LFE67
 3813 0060 00000000 		.4byte	.LFB68
 3814 0064 44000000 		.4byte	.LFE68
 3815 0068 00000000 		.4byte	.LFB69
 3816 006c 48000000 		.4byte	.LFE69
 3817 0070 00000000 		.4byte	.LFB70
 3818 0074 28000000 		.4byte	.LFE70
 3819 0078 00000000 		.4byte	.LFB71
 3820 007c 28000000 		.4byte	.LFE71
 3821 0080 00000000 		.4byte	.LFB72
 3822 0084 28000000 		.4byte	.LFE72
 3823 0088 00000000 		.4byte	.LFB73
 3824 008c 28000000 		.4byte	.LFE73
 3825 0090 00000000 		.4byte	.LFB74
 3826 0094 28000000 		.4byte	.LFE74
 3827 0098 00000000 		.4byte	.LFB75
 3828 009c 48000000 		.4byte	.LFE75
 3829 00a0 00000000 		.4byte	.LFB76
 3830 00a4 48000000 		.4byte	.LFE76
 3831 00a8 00000000 		.4byte	.LFB77
 3832 00ac 28000000 		.4byte	.LFE77
 3833 00b0 00000000 		.4byte	.LFB78
 3834 00b4 48000000 		.4byte	.LFE78
 3835 00b8 00000000 		.4byte	.LFB79
 3836 00bc 28000000 		.4byte	.LFE79
 3837 00c0 00000000 		.4byte	.LFB80
 3838 00c4 44000000 		.4byte	.LFE80
 3839 00c8 00000000 		.4byte	.LFB81
 3840 00cc 44000000 		.4byte	.LFE81
 3841 00d0 00000000 		.4byte	.LFB82
 3842 00d4 98000000 		.4byte	.LFE82
 3843 00d8 00000000 		.4byte	.LFB83
 3844 00dc 58000000 		.4byte	.LFE83
 3845 00e0 00000000 		.4byte	.LFB84
 3846 00e4 28010000 		.4byte	.LFE84
 3847 00e8 00000000 		.4byte	.LFB85
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 86


 3848 00ec E0000000 		.4byte	.LFE85
 3849 00f0 00000000 		.4byte	.LFB86
 3850 00f4 9C000000 		.4byte	.LFE86
 3851 00f8 00000000 		.4byte	.LFB87
 3852 00fc 24000000 		.4byte	.LFE87
 3853 0100 00000000 		.4byte	.LFB88
 3854 0104 44000000 		.4byte	.LFE88
 3855 0108 00000000 		.4byte	0
 3856 010c 00000000 		.4byte	0
 3857              		.section	.debug_line,"",%progbits
 3858              	.Ldebug_line0:
 3859 0000 B0040000 		.section	.debug_str,"MS",%progbits,1
 3859      02004A01 
 3859      00000201 
 3859      FB0E0D00 
 3859      01010101 
 3860              	.LASF30:
 3861 0000 76616C69 		.ascii	"valid\000"
 3861      6400
 3862              	.LASF62:
 3863 0006 6D6F6465 		.ascii	"modem_get_packet\000"
 3863      6D5F6765 
 3863      745F7061 
 3863      636B6574 
 3863      00
 3864              	.LASF25:
 3865 0017 65787065 		.ascii	"expected_response\000"
 3865      63746564 
 3865      5F726573 
 3865      706F6E73 
 3865      6500
 3866              	.LASF71:
 3867 0029 72785F63 		.ascii	"rx_char_hold\000"
 3867      6861725F 
 3867      686F6C64 
 3867      00
 3868              	.LASF51:
 3869 0036 6D6F6465 		.ascii	"modem_enable_CDMA_data\000"
 3869      6D5F656E 
 3869      61626C65 
 3869      5F43444D 
 3869      415F6461 
 3870              	.LASF70:
 3871 004d 54656C69 		.ascii	"Telit_isr_rx\000"
 3871      745F6973 
 3871      725F7278 
 3871      00
 3872              	.LASF83:
 3873 005a 2E5C6D6F 		.ascii	".\\modem.c\000"
 3873      64656D2E 
 3873      6300
 3874              	.LASF39:
 3875 0064 6D6F6465 		.ascii	"modem_set_apn\000"
 3875      6D5F7365 
 3875      745F6170 
 3875      6E00
 3876              	.LASF55:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 87


 3877 0072 6D6F6465 		.ascii	"modem_set_password\000"
 3877      6D5F7365 
 3877      745F7061 
 3877      7373776F 
 3877      726400
 3878              	.LASF58:
 3879 0085 6765745F 		.ascii	"get_str\000"
 3879      73747200 
 3880              	.LASF69:
 3881 008d 75617274 		.ascii	"uart_string_reset\000"
 3881      5F737472 
 3881      696E675F 
 3881      72657365 
 3881      7400
 3882              	.LASF28:
 3883 009f 64656C61 		.ascii	"delay\000"
 3883      7900
 3884              	.LASF2:
 3885 00a5 73686F72 		.ascii	"short int\000"
 3885      7420696E 
 3885      7400
 3886              	.LASF81:
 3887 00af 6D6F6465 		.ascii	"modem_apn\000"
 3887      6D5F6170 
 3887      6E00
 3888              	.LASF82:
 3889 00b9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3889      4320342E 
 3889      382E3420 
 3889      32303134 
 3889      30353236 
 3890 00ec 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3890      20726576 
 3890      6973696F 
 3890      6E203231 
 3890      31333538 
 3891 011f 30202D66 		.ascii	"0 -ffunction-sections\000"
 3891      66756E63 
 3891      74696F6E 
 3891      2D736563 
 3891      74696F6E 
 3892              	.LASF50:
 3893 0135 6D6F6465 		.ascii	"modem_get_sw_version\000"
 3893      6D5F6765 
 3893      745F7377 
 3893      5F766572 
 3893      73696F6E 
 3894              	.LASF12:
 3895 014a 75696E74 		.ascii	"uint16\000"
 3895      313600
 3896              	.LASF80:
 3897 0151 75617274 		.ascii	"uart_received_string\000"
 3897      5F726563 
 3897      65697665 
 3897      645F7374 
 3897      72696E67 
 3898              	.LASF35:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 88


 3899 0166 636F756E 		.ascii	"count\000"
 3899      7400
 3900              	.LASF52:
 3901 016c 6D6F6465 		.ascii	"modem_test_CDMA_data\000"
 3901      6D5F7465 
 3901      73745F43 
 3901      444D415F 
 3901      64617461 
 3902              	.LASF63:
 3903 0181 7061636B 		.ascii	"packet\000"
 3903      657400
 3904              	.LASF59:
 3905 0188 6B65795F 		.ascii	"key_str\000"
 3905      73747200 
 3906              	.LASF84:
 3907 0190 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 3907      73657273 
 3907      5C4D6174 
 3907      74686577 
 3907      5C676974 
 3908 01bd 6172642E 		.ascii	"ard.cydsn\000"
 3908      63796473 
 3908      6E00
 3909              	.LASF14:
 3910 01c7 666C6F61 		.ascii	"float\000"
 3910      7400
 3911              	.LASF42:
 3912 01cd 6D6F6465 		.ascii	"modem_get_time\000"
 3912      6D5F6765 
 3912      745F7469 
 3912      6D6500
 3913              	.LASF32:
 3914 01dc 6D6F6465 		.ascii	"modem_power_off\000"
 3914      6D5F706F 
 3914      7765725F 
 3914      6F666600 
 3915              	.LASF6:
 3916 01ec 6C6F6E67 		.ascii	"long long int\000"
 3916      206C6F6E 
 3916      6720696E 
 3916      7400
 3917              	.LASF36:
 3918 01fa 6E657477 		.ascii	"network_status\000"
 3918      6F726B5F 
 3918      73746174 
 3918      757300
 3919              	.LASF57:
 3920 0209 6D6F6465 		.ascii	"modem_get_google\000"
 3920      6D5F6765 
 3920      745F676F 
 3920      6F676C65 
 3920      00
 3921              	.LASF4:
 3922 021a 6C6F6E67 		.ascii	"long int\000"
 3922      20696E74 
 3922      00
 3923              	.LASF17:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 89


 3924 0223 73697A65 		.ascii	"sizetype\000"
 3924      74797065 
 3924      00
 3925              	.LASF61:
 3926 022c 626F6479 		.ascii	"body\000"
 3926      00
 3927              	.LASF23:
 3928 0231 61745F77 		.ascii	"at_write_command\000"
 3928      72697465 
 3928      5F636F6D 
 3928      6D616E64 
 3928      00
 3929              	.LASF47:
 3930 0242 6D6F6465 		.ascii	"modem_set_flow_control\000"
 3930      6D5F7365 
 3930      745F666C 
 3930      6F775F63 
 3930      6F6E7472 
 3931              	.LASF79:
 3932 0259 75617274 		.ascii	"uart_string_index\000"
 3932      5F737472 
 3932      696E675F 
 3932      696E6465 
 3932      7800
 3933              	.LASF22:
 3934 026b 6D6F6465 		.ascii	"modem_set_api_feed\000"
 3934      6D5F7365 
 3934      745F6170 
 3934      695F6665 
 3934      656400
 3935              	.LASF38:
 3936 027e 6D6F6465 		.ascii	"modem_connect\000"
 3936      6D5F636F 
 3936      6E6E6563 
 3936      7400
 3937              	.LASF40:
 3938 028c 6D6F6465 		.ascii	"modem_set_band\000"
 3938      6D5F7365 
 3938      745F6261 
 3938      6E6400
 3939              	.LASF56:
 3940 029b 70617373 		.ascii	"pass\000"
 3940      00
 3941              	.LASF1:
 3942 02a0 756E7369 		.ascii	"unsigned char\000"
 3942      676E6564 
 3942      20636861 
 3942      7200
 3943              	.LASF33:
 3944 02ae 6D6F6465 		.ascii	"modem_reset\000"
 3944      6D5F7265 
 3944      73657400 
 3945              	.LASF73:
 3946 02ba 6D6F6465 		.ascii	"modem_state\000"
 3946      6D5F7374 
 3946      61746500 
 3947              	.LASF0:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 90


 3948 02c6 7369676E 		.ascii	"signed char\000"
 3948      65642063 
 3948      68617200 
 3949              	.LASF7:
 3950 02d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3950      206C6F6E 
 3950      6720756E 
 3950      7369676E 
 3950      65642069 
 3951              	.LASF8:
 3952 02e9 756E7369 		.ascii	"unsigned int\000"
 3952      676E6564 
 3952      20696E74 
 3952      00
 3953              	.LASF48:
 3954 02f6 70617261 		.ascii	"param\000"
 3954      6D00
 3955              	.LASF41:
 3956 02fc 62616E64 		.ascii	"band\000"
 3956      00
 3957              	.LASF54:
 3958 0301 75736572 		.ascii	"user\000"
 3958      00
 3959              	.LASF3:
 3960 0306 73686F72 		.ascii	"short unsigned int\000"
 3960      7420756E 
 3960      7369676E 
 3960      65642069 
 3960      6E7400
 3961              	.LASF31:
 3962 0319 6D6F6465 		.ascii	"modem_power_on\000"
 3962      6D5F706F 
 3962      7765725F 
 3962      6F6E00
 3963              	.LASF16:
 3964 0328 63686172 		.ascii	"char\000"
 3964      00
 3965              	.LASF72:
 3966 032d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3966      52784275 
 3966      66666572 
 3966      00
 3967              	.LASF78:
 3968 033a 72656164 		.ascii	"ready\000"
 3968      7900
 3969              	.LASF10:
 3970 0340 696E7433 		.ascii	"int32_t\000"
 3970      325F7400 
 3971              	.LASF65:
 3972 0348 6C6F636B 		.ascii	"lock\000"
 3972      00
 3973              	.LASF44:
 3974 034d 6D6F6465 		.ascii	"modem_get_signal_quality\000"
 3974      6D5F6765 
 3974      745F7369 
 3974      676E616C 
 3974      5F717561 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 91


 3975              	.LASF66:
 3976 0366 6C6F636B 		.ascii	"lock_attempts\000"
 3976      5F617474 
 3976      656D7074 
 3976      7300
 3977              	.LASF11:
 3978 0374 75696E74 		.ascii	"uint8\000"
 3978      3800
 3979              	.LASF21:
 3980 037a 6D6F6465 		.ascii	"modem_stop\000"
 3980      6D5F7374 
 3980      6F7000
 3981              	.LASF20:
 3982 0385 6D6F6465 		.ascii	"modem_start\000"
 3982      6D5F7374 
 3982      61727400 
 3983              	.LASF13:
 3984 0391 75696E74 		.ascii	"uint32\000"
 3984      333200
 3985              	.LASF34:
 3986 0398 6D6F6465 		.ascii	"modem_setup\000"
 3986      6D5F7365 
 3986      74757000 
 3987              	.LASF5:
 3988 03a4 6C6F6E67 		.ascii	"long unsigned int\000"
 3988      20756E73 
 3988      69676E65 
 3988      6420696E 
 3988      7400
 3989              	.LASF74:
 3990 03b6 6C6F636B 		.ascii	"lock_acquired\000"
 3990      5F616371 
 3990      75697265 
 3990      6400
 3991              	.LASF15:
 3992 03c4 646F7562 		.ascii	"double\000"
 3992      6C6500
 3993              	.LASF29:
 3994 03cb 696E7465 		.ascii	"interval\000"
 3994      7276616C 
 3994      00
 3995              	.LASF27:
 3996 03d4 72657370 		.ascii	"response\000"
 3996      6F6E7365 
 3996      00
 3997              	.LASF19:
 3998 03dd 6D6F6465 		.ascii	"modem_shutdown\000"
 3998      6D5F7368 
 3998      7574646F 
 3998      776E00
 3999              	.LASF60:
 4000 03ec 6D6F6465 		.ascii	"modem_send_packet\000"
 4000      6D5F7365 
 4000      6E645F70 
 4000      61636B65 
 4000      7400
 4001              	.LASF9:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 92


 4002 03fe 5F5F696E 		.ascii	"__int32_t\000"
 4002      7433325F 
 4002      7400
 4003              	.LASF45:
 4004 0408 6D6F6465 		.ascii	"modem_get_serial_number\000"
 4004      6D5F6765 
 4004      745F7365 
 4004      7269616C 
 4004      5F6E756D 
 4005              	.LASF37:
 4006 0420 6D6F6465 		.ascii	"modem_disconnect\000"
 4006      6D5F6469 
 4006      73636F6E 
 4006      6E656374 
 4006      00
 4007              	.LASF64:
 4008 0431 6D6F6465 		.ascii	"modem_acquire_lock\000"
 4008      6D5F6163 
 4008      71756972 
 4008      655F6C6F 
 4008      636B00
 4009              	.LASF24:
 4010 0444 75617274 		.ascii	"uart_string\000"
 4010      5F737472 
 4010      696E6700 
 4011              	.LASF77:
 4012 0450 69746572 		.ascii	"iter\000"
 4012      00
 4013              	.LASF76:
 4014 0455 6170695F 		.ascii	"api_key\000"
 4014      6B657900 
 4015              	.LASF18:
 4016 045d 6D6F6465 		.ascii	"modem_startup\000"
 4016      6D5F7374 
 4016      61727475 
 4016      7000
 4017              	.LASF46:
 4018 046b 6D6F6465 		.ascii	"modem_get_profile\000"
 4018      6D5F6765 
 4018      745F7072 
 4018      6F66696C 
 4018      6500
 4019              	.LASF49:
 4020 047d 6D6F6465 		.ascii	"modem_set_error_reports\000"
 4020      6D5F7365 
 4020      745F6572 
 4020      726F725F 
 4020      7265706F 
 4021              	.LASF75:
 4022 0495 66656564 		.ascii	"feed_id\000"
 4022      5F696400 
 4023              	.LASF67:
 4024 049d 64617461 		.ascii	"data_packet\000"
 4024      5F706163 
 4024      6B657400 
 4025              	.LASF43:
 4026 04a9 6D6F6465 		.ascii	"modem_check_network\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccu6ei5I.s 			page 93


 4026      6D5F6368 
 4026      65636B5F 
 4026      6E657477 
 4026      6F726B00 
 4027              	.LASF68:
 4028 04bd 6D6F6465 		.ascii	"modem_release_lock\000"
 4028      6D5F7265 
 4028      6C656173 
 4028      655F6C6F 
 4028      636B00
 4029              	.LASF53:
 4030 04d0 6D6F6465 		.ascii	"modem_set_user\000"
 4030      6D5F7365 
 4030      745F7573 
 4030      657200
 4031              	.LASF26:
 4032 04df 75617274 		.ascii	"uart_timeout\000"
 4032      5F74696D 
 4032      656F7574 
 4032      00
 4033              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
