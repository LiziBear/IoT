ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"modem.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	iter
  19              		.bss
  20              		.align	2
  21              		.type	iter, %object
  22              		.size	iter, 4
  23              	iter:
  24 0000 00000000 		.space	4
  25              		.comm	modem_state,1,1
  26              		.global	lock_acquired
  27              		.type	lock_acquired, %object
  28              		.size	lock_acquired, 1
  29              	lock_acquired:
  30 0004 00       		.space	1
  31              		.global	ready
  32              		.type	ready, %object
  33              		.size	ready, 1
  34              	ready:
  35 0005 00       		.space	1
  36              		.global	uart_string_index
  37              		.align	1
  38              		.type	uart_string_index, %object
  39              		.size	uart_string_index, 2
  40              	uart_string_index:
  41 0006 0000     		.space	2
  42              		.comm	feed_id,4,4
  43              		.global	uart_received_string
  44              		.align	2
  45              		.type	uart_received_string, %object
  46              		.size	uart_received_string, 1000
  47              	uart_received_string:
  48 0008 00000000 		.space	1000
  48      00000000 
  48      00000000 
  48      00000000 
  48      00000000 
  49              		.comm	api_key,4,4
  50              		.global	modem_apn
  51              		.section	.rodata
  52              		.align	2
  53              	.LC0:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 2


  54 0000 6570632E 		.ascii	"epc.tmobile.com\000"
  54      746D6F62 
  54      696C652E 
  54      636F6D00 
  55              		.data
  56              		.align	2
  57              		.type	modem_apn, %object
  58              		.size	modem_apn, 4
  59              	modem_apn:
  60 0000 00000000 		.word	.LC0
  61              		.section	.text.modem_set_api_feed,"ax",%progbits
  62              		.align	2
  63              		.global	modem_set_api_feed
  64              		.thumb
  65              		.thumb_func
  66              		.type	modem_set_api_feed, %function
  67              	modem_set_api_feed:
  68              	.LFB56:
  69              		.file 1 ".\\modem.c"
   1:.\modem.c     **** ///* ========================================
   2:.\modem.c     **** // *
   3:.\modem.c     **** // * Copyright YOUR COMPANY, THE YEAR
   4:.\modem.c     **** // * All Rights Reserved
   5:.\modem.c     **** // * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\modem.c     **** // *
   7:.\modem.c     **** // * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\modem.c     **** // * WHICH IS THE PROPERTY OF your company.
   9:.\modem.c     **** // *
  10:.\modem.c     **** // * ========================================
  11:.\modem.c     **** //*/
  12:.\modem.c     **** //
  13:.\modem.c     **** 
  14:.\modem.c     **** #include <device.h>
  15:.\modem.c     **** #include <stdio.h>
  16:.\modem.c     **** #include <string.h>
  17:.\modem.c     **** #include "modem.h"
  18:.\modem.c     **** #include "packet.h"
  19:.\modem.c     **** //#include "debug.h" TODO: ACCOUNT FOR THIS
  20:.\modem.c     **** 
  21:.\modem.c     **** // declare varaiables
  22:.\modem.c     **** int	   iter = 0;
  23:.\modem.c     **** uint8  modem_state, lock_acquired = 0u, ready = 0u;
  24:.\modem.c     **** uint16 uart_string_index = 0u;
  25:.\modem.c     **** uint32 feed_id;
  26:.\modem.c     **** char   uart_received_string[1000] = {0}, *api_key;
  27:.\modem.c     **** char*  modem_apn = "epc.tmobile.com";
  28:.\modem.c     **** 
  29:.\modem.c     **** 
  30:.\modem.c     **** 
  31:.\modem.c     **** // prototype modem interrupt
  32:.\modem.c     **** CY_ISR_PROTO(Telit_isr_rx);
  33:.\modem.c     **** void uart_string_reset();
  34:.\modem.c     **** 
  35:.\modem.c     **** uint8 modem_set_api_feed(uint32 id, char* key){
  70              		.loc 1 35 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 3


  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75 0000 80B4     		push	{r7}
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
  36:.\modem.c     ****     feed_id = id;
  84              		.loc 1 36 0
  85 000a 064B     		ldr	r3, .L3
  86 000c 7A68     		ldr	r2, [r7, #4]
  87 000e 1A60     		str	r2, [r3]
  37:.\modem.c     ****     api_key = key;
  88              		.loc 1 37 0
  89 0010 054B     		ldr	r3, .L3+4
  90 0012 3A68     		ldr	r2, [r7]
  91 0014 1A60     		str	r2, [r3]
  38:.\modem.c     ****     return 1u;
  92              		.loc 1 38 0
  93 0016 0123     		movs	r3, #1
  39:.\modem.c     **** }
  94              		.loc 1 39 0
  95 0018 1846     		mov	r0, r3
  96 001a 0C37     		adds	r7, r7, #12
  97 001c BD46     		mov	sp, r7
  98              		@ sp needed
  99 001e 5DF8047B 		ldr	r7, [sp], #4
 100 0022 7047     		bx	lr
 101              	.L4:
 102              		.align	2
 103              	.L3:
 104 0024 00000000 		.word	feed_id
 105 0028 00000000 		.word	api_key
 106              		.cfi_endproc
 107              	.LFE56:
 108              		.size	modem_set_api_feed, .-modem_set_api_feed
 109              		.section	.text.modem_startup,"ax",%progbits
 110              		.align	2
 111              		.global	modem_startup
 112              		.thumb
 113              		.thumb_func
 114              		.type	modem_startup, %function
 115              	modem_startup:
 116              	.LFB57:
  40:.\modem.c     **** 
  41:.\modem.c     **** // startup sequence to power on the modem, start modem
  42:.\modem.c     **** // components and prepare for sending/receiving messages
  43:.\modem.c     **** // over the network
  44:.\modem.c     **** uint8	modem_startup() {
 117              		.loc 1 44 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 4


 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
  45:.\modem.c     **** 	iter = 0, ready = 0u;
 127              		.loc 1 45 0
 128 0004 1A4B     		ldr	r3, .L10
 129 0006 0022     		movs	r2, #0
 130 0008 1A60     		str	r2, [r3]
 131 000a 1A4B     		ldr	r3, .L10+4
 132 000c 0022     		movs	r2, #0
 133 000e 1A70     		strb	r2, [r3]
  46:.\modem.c     **** 
  47:.\modem.c     **** 	modem_start();
 134              		.loc 1 47 0
 135 0010 FFF7FEFF 		bl	modem_start
  48:.\modem.c     **** 	
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 136              		.loc 1 49 0
 137 0014 24E0     		b	.L6
 138              	.L9:
  50:.\modem.c     **** 		iter++;
 139              		.loc 1 50 0
 140 0016 164B     		ldr	r3, .L10
 141 0018 1B68     		ldr	r3, [r3]
 142 001a 5A1C     		adds	r2, r3, #1
 143 001c 144B     		ldr	r3, .L10
 144 001e 1A60     		str	r2, [r3]
  51:.\modem.c     **** 
  52:.\modem.c     **** 		/* Set up the modem */
  53:.\modem.c     **** 		//LED_Write(!LED_Read());
  54:.\modem.c     **** 		ready = modem_power_on();
 145              		.loc 1 54 0
 146 0020 FFF7FEFF 		bl	modem_power_on
 147 0024 0346     		mov	r3, r0
 148 0026 1A46     		mov	r2, r3
 149 0028 124B     		ldr	r3, .L10+4
 150 002a 1A70     		strb	r2, [r3]
  55:.\modem.c     **** 		//LED_Write(!LED_Read());
  56:.\modem.c     **** 		//ready = at_write_command("AT\r","OK",1000u);      
  57:.\modem.c     **** 		modem_set_flow_control(0u);	
 151              		.loc 1 57 0
 152 002c 0020     		movs	r0, #0
 153 002e FFF7FEFF 		bl	modem_set_flow_control
  58:.\modem.c     **** 		modem_setup();
 154              		.loc 1 58 0
 155 0032 FFF7FEFF 		bl	modem_setup
  59:.\modem.c     **** 		
  60:.\modem.c     **** 		if ( ready == 1u ) {
 156              		.loc 1 60 0
 157 0036 0F4B     		ldr	r3, .L10+4
 158 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 003a 012B     		cmp	r3, #1
 160 003c 0ED1     		bne	.L7
  61:.\modem.c     **** 			// Connect modem to network
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 5


  62:.\modem.c     **** 			// (modem_connect already accounts for retries)
  63:.\modem.c     **** 			//LED_Write(!LED_Read());
  64:.\modem.c     **** 			ready = modem_connect();
 161              		.loc 1 64 0
 162 003e FFF7FEFF 		bl	modem_connect
 163 0042 0346     		mov	r3, r0
 164 0044 1A46     		mov	r2, r3
 165 0046 0B4B     		ldr	r3, .L10+4
 166 0048 1A70     		strb	r2, [r3]
  65:.\modem.c     **** 			
  66:.\modem.c     **** 			if( ready == 3u ) {
 167              		.loc 1 66 0
 168 004a 0A4B     		ldr	r3, .L10+4
 169 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 004e 032B     		cmp	r3, #3
 171 0050 06D1     		bne	.L6
  67:.\modem.c     **** 								
  68:.\modem.c     **** 				iter = MAX_CONN_ATTEMPTS;//break;	
 172              		.loc 1 68 0
 173 0052 074B     		ldr	r3, .L10
 174 0054 0522     		movs	r2, #5
 175 0056 1A60     		str	r2, [r3]
  69:.\modem.c     **** 				return 1u;
 176              		.loc 1 69 0
 177 0058 0123     		movs	r3, #1
 178 005a 06E0     		b	.L8
 179              	.L7:
  70:.\modem.c     **** 			}
  71:.\modem.c     **** 		}
  72:.\modem.c     **** 		else {
  73:.\modem.c     **** 			modem_reset();
 180              		.loc 1 73 0
 181 005c FFF7FEFF 		bl	modem_reset
 182              	.L6:
  49:.\modem.c     **** 	while( iter < MAX_CONN_ATTEMPTS) {
 183              		.loc 1 49 0 discriminator 1
 184 0060 034B     		ldr	r3, .L10
 185 0062 1B68     		ldr	r3, [r3]
 186 0064 042B     		cmp	r3, #4
 187 0066 D6DD     		ble	.L9
  74:.\modem.c     **** 		}
  75:.\modem.c     **** 	}
  76:.\modem.c     **** 	
  77:.\modem.c     **** 	// Timed out -- Failed to connect
  78:.\modem.c     **** 	return 0u;
 188              		.loc 1 78 0
 189 0068 0023     		movs	r3, #0
 190              	.L8:
  79:.\modem.c     **** }
 191              		.loc 1 79 0
 192 006a 1846     		mov	r0, r3
 193 006c 80BD     		pop	{r7, pc}
 194              	.L11:
 195 006e 00BF     		.align	2
 196              	.L10:
 197 0070 00000000 		.word	iter
 198 0074 00000000 		.word	ready
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 6


 199              		.cfi_endproc
 200              	.LFE57:
 201              		.size	modem_startup, .-modem_startup
 202              		.section	.text.modem_shutdown,"ax",%progbits
 203              		.align	2
 204              		.global	modem_shutdown
 205              		.thumb
 206              		.thumb_func
 207              		.type	modem_shutdown, %function
 208              	modem_shutdown:
 209              	.LFB58:
  80:.\modem.c     **** 
  81:.\modem.c     **** // shutdown sequence to stop modem components
  82:.\modem.c     **** // and power down the modem
  83:.\modem.c     **** uint8 	modem_shutdown() {
 210              		.loc 1 83 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
  84:.\modem.c     **** 	if (modem_power_off()){
 220              		.loc 1 84 0
 221 0004 FFF7FEFF 		bl	modem_power_off
 222 0008 0346     		mov	r3, r0
 223 000a 002B     		cmp	r3, #0
 224 000c 01D0     		beq	.L13
  85:.\modem.c     **** 		return 1u;	
 225              		.loc 1 85 0
 226 000e 0123     		movs	r3, #1
 227 0010 00E0     		b	.L14
 228              	.L13:
  86:.\modem.c     **** 	}
  87:.\modem.c     **** 	
  88:.\modem.c     **** 	return 0u;
 229              		.loc 1 88 0
 230 0012 0023     		movs	r3, #0
 231              	.L14:
  89:.\modem.c     **** }
 232              		.loc 1 89 0
 233 0014 1846     		mov	r0, r3
 234 0016 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE58:
 237              		.size	modem_shutdown, .-modem_shutdown
 238              		.section	.text.modem_start,"ax",%progbits
 239              		.align	2
 240              		.global	modem_start
 241              		.thumb
 242              		.thumb_func
 243              		.type	modem_start, %function
 244              	modem_start:
 245              	.LFB59:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 7


  90:.\modem.c     **** 
  91:.\modem.c     **** // initialize modem
  92:.\modem.c     **** void modem_start(){
 246              		.loc 1 92 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  93:.\modem.c     ****     Telit_UART_Start();
 256              		.loc 1 93 0
 257 0004 FFF7FEFF 		bl	Telit_UART_Start
  94:.\modem.c     ****     Telit_ControlReg_Write(0u);
 258              		.loc 1 94 0
 259 0008 0020     		movs	r0, #0
 260 000a FFF7FEFF 		bl	Telit_ControlReg_Write
  95:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
  96:.\modem.c     **** 	Telit_ON_Write(1u);			// Prep modem for "push button"
 261              		.loc 1 96 0
 262 000e 0120     		movs	r0, #1
 263 0010 FFF7FEFF 		bl	Telit_ON_Write
  97:.\modem.c     **** 	Telit_RST_Write(1u);		// Prep modem for "push button"
 264              		.loc 1 97 0
 265 0014 0120     		movs	r0, #1
 266 0016 FFF7FEFF 		bl	Telit_RST_Write
  98:.\modem.c     ****     Telit_isr_rx_StartEx(Telit_isr_rx);
 267              		.loc 1 98 0
 268 001a 0348     		ldr	r0, .L16
 269 001c FFF7FEFF 		bl	Telit_isr_rx_StartEx
  99:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 270              		.loc 1 99 0
 271 0020 024B     		ldr	r3, .L16+4
 272 0022 0022     		movs	r2, #0
 273 0024 1A70     		strb	r2, [r3]
 100:.\modem.c     **** }
 274              		.loc 1 100 0
 275 0026 80BD     		pop	{r7, pc}
 276              	.L17:
 277              		.align	2
 278              	.L16:
 279 0028 00000000 		.word	Telit_isr_rx
 280 002c 00000000 		.word	modem_state
 281              		.cfi_endproc
 282              	.LFE59:
 283              		.size	modem_start, .-modem_start
 284              		.section	.text.modem_stop,"ax",%progbits
 285              		.align	2
 286              		.global	modem_stop
 287              		.thumb
 288              		.thumb_func
 289              		.type	modem_stop, %function
 290              	modem_stop:
 291              	.LFB60:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 8


 101:.\modem.c     **** 
 102:.\modem.c     **** // deinitialize modem
 103:.\modem.c     **** void modem_stop(){
 292              		.loc 1 103 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 104:.\modem.c     ****     Telit_UART_Stop();
 302              		.loc 1 104 0
 303 0004 FFF7FEFF 		bl	Telit_UART_Stop
 105:.\modem.c     ****     Telit_ControlReg_Write(0u);
 304              		.loc 1 105 0
 305 0008 0020     		movs	r0, #0
 306 000a FFF7FEFF 		bl	Telit_ControlReg_Write
 106:.\modem.c     ****     //Telit_PWR_Write(0u);        // 0u Enables power to cell module
 107:.\modem.c     **** 	Telit_ON_Write(0u);			// Save energy by pulling down "push button"
 307              		.loc 1 107 0
 308 000e 0020     		movs	r0, #0
 309 0010 FFF7FEFF 		bl	Telit_ON_Write
 108:.\modem.c     **** 	Telit_RST_Write(0u);		// Save energy by pulling down "push button"
 310              		.loc 1 108 0
 311 0014 0020     		movs	r0, #0
 312 0016 FFF7FEFF 		bl	Telit_RST_Write
 109:.\modem.c     ****     Telit_isr_rx_Stop();
 313              		.loc 1 109 0
 314 001a FFF7FEFF 		bl	Telit_isr_rx_Stop
 110:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 315              		.loc 1 110 0
 316 001e 024B     		ldr	r3, .L19
 317 0020 0022     		movs	r2, #0
 318 0022 1A70     		strb	r2, [r3]
 111:.\modem.c     **** }
 319              		.loc 1 111 0
 320 0024 80BD     		pop	{r7, pc}
 321              	.L20:
 322 0026 00BF     		.align	2
 323              	.L19:
 324 0028 00000000 		.word	modem_state
 325              		.cfi_endproc
 326              	.LFE60:
 327              		.size	modem_stop, .-modem_stop
 328              		.section	.text.at_write_command,"ax",%progbits
 329              		.align	2
 330              		.global	at_write_command
 331              		.thumb
 332              		.thumb_func
 333              		.type	at_write_command, %function
 334              	at_write_command:
 335              	.LFB61:
 112:.\modem.c     **** 
 113:.\modem.c     **** // send at-command to modem
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 9


 114:.\modem.c     **** uint8 at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout){
 336              		.loc 1 114 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 40
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 8AB0     		sub	sp, sp, #40
 345              		.cfi_def_cfa_offset 48
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 F860     		str	r0, [r7, #12]
 349 0008 B960     		str	r1, [r7, #8]
 350 000a 7A60     		str	r2, [r7, #4]
 115:.\modem.c     ****     uint8 response = 0u;
 351              		.loc 1 115 0
 352 000c 0023     		movs	r3, #0
 353 000e 87F82730 		strb	r3, [r7, #39]
 116:.\modem.c     ****     uint32 i = 0u, delay = 100u, interval = uart_timeout/delay;
 354              		.loc 1 116 0
 355 0012 0023     		movs	r3, #0
 356 0014 3B62     		str	r3, [r7, #32]
 357 0016 6423     		movs	r3, #100
 358 0018 FB61     		str	r3, [r7, #28]
 359 001a 7A68     		ldr	r2, [r7, #4]
 360 001c FB69     		ldr	r3, [r7, #28]
 361 001e B2FBF3F3 		udiv	r3, r2, r3
 362 0022 BB61     		str	r3, [r7, #24]
 117:.\modem.c     ****     
 118:.\modem.c     ****     uart_string_reset();
 363              		.loc 1 118 0
 364 0024 FFF7FEFF 		bl	uart_string_reset
 119:.\modem.c     ****     Telit_UART_PutString(uart_string);//Telit_UART_PutString("AT\r");
 365              		.loc 1 119 0
 366 0028 F868     		ldr	r0, [r7, #12]
 367 002a FFF7FEFF 		bl	Telit_UART_PutString
 120:.\modem.c     ****     
 121:.\modem.c     ****     if( strcmp(expected_response, "") != 0){
 368              		.loc 1 121 0
 369 002e BB68     		ldr	r3, [r7, #8]
 370 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371 0032 002B     		cmp	r3, #0
 372 0034 18D0     		beq	.L22
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 373              		.loc 1 122 0
 374 0036 0023     		movs	r3, #0
 375 0038 3B62     		str	r3, [r7, #32]
 376 003a 11E0     		b	.L23
 377              	.L25:
 378              	.LBB2:
 123:.\modem.c     ****             char* valid = strstr(uart_received_string, expected_response);
 379              		.loc 1 123 0
 380 003c 0D48     		ldr	r0, .L27
 381 003e B968     		ldr	r1, [r7, #8]
 382 0040 FFF7FEFF 		bl	strstr
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 10


 383 0044 7861     		str	r0, [r7, #20]
 124:.\modem.c     ****             if(valid != NULL){
 384              		.loc 1 124 0
 385 0046 7B69     		ldr	r3, [r7, #20]
 386 0048 002B     		cmp	r3, #0
 387 004a 03D0     		beq	.L24
 125:.\modem.c     ****                 response = 1u;
 388              		.loc 1 125 0
 389 004c 0123     		movs	r3, #1
 390 004e 87F82730 		strb	r3, [r7, #39]
 126:.\modem.c     ****                 break;
 391              		.loc 1 126 0
 392 0052 09E0     		b	.L22
 393              	.L24:
 127:.\modem.c     ****             }
 128:.\modem.c     ****             CyDelay(delay);
 394              		.loc 1 128 0
 395 0054 F869     		ldr	r0, [r7, #28]
 396 0056 FFF7FEFF 		bl	CyDelay
 397              	.LBE2:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 398              		.loc 1 122 0
 399 005a 3B6A     		ldr	r3, [r7, #32]
 400 005c 0133     		adds	r3, r3, #1
 401 005e 3B62     		str	r3, [r7, #32]
 402              	.L23:
 122:.\modem.c     ****         for(i=0;i<interval;i++){
 403              		.loc 1 122 0 is_stmt 0 discriminator 1
 404 0060 3A6A     		ldr	r2, [r7, #32]
 405 0062 BB69     		ldr	r3, [r7, #24]
 406 0064 9A42     		cmp	r2, r3
 407 0066 E9D3     		bcc	.L25
 408              	.L22:
 129:.\modem.c     ****         }
 130:.\modem.c     ****     }
 131:.\modem.c     ****     
 132:.\modem.c     ****     return response;
 409              		.loc 1 132 0 is_stmt 1
 410 0068 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 133:.\modem.c     **** }
 411              		.loc 1 133 0
 412 006c 1846     		mov	r0, r3
 413 006e 2837     		adds	r7, r7, #40
 414 0070 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0072 80BD     		pop	{r7, pc}
 417              	.L28:
 418              		.align	2
 419              	.L27:
 420 0074 00000000 		.word	uart_received_string
 421              		.cfi_endproc
 422              	.LFE61:
 423              		.size	at_write_command, .-at_write_command
 424              		.section	.rodata
 425              		.align	2
 426              	.LC1:
 427 0010 41540D00 		.ascii	"AT\015\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 11


 428              		.align	2
 429              	.LC2:
 430 0014 4F4B00   		.ascii	"OK\000"
 431              		.section	.text.modem_power_on,"ax",%progbits
 432              		.align	2
 433              		.global	modem_power_on
 434              		.thumb
 435              		.thumb_func
 436              		.type	modem_power_on, %function
 437              	modem_power_on:
 438              	.LFB62:
 134:.\modem.c     **** 
 135:.\modem.c     **** uint8 modem_power_on(){
 439              		.loc 1 135 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 136:.\modem.c     **** 
 137:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) {
 449              		.loc 1 137 0
 450 0004 174B     		ldr	r3, .L33
 451 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0008 002B     		cmp	r3, #0
 453 000a 01D0     		beq	.L30
 138:.\modem.c     ****         // Modem is already on
 139:.\modem.c     ****         return 1u;
 454              		.loc 1 139 0
 455 000c 0123     		movs	r3, #1
 456 000e 26E0     		b	.L31
 457              	.L30:
 140:.\modem.c     ****     }
 141:.\modem.c     ****     
 142:.\modem.c     ****     // Set ON, PWR pins low
 143:.\modem.c     ****     Telit_ON_Write(0u); 
 458              		.loc 1 143 0
 459 0010 0020     		movs	r0, #0
 460 0012 FFF7FEFF 		bl	Telit_ON_Write
 144:.\modem.c     ****     Telit_RST_Write(0u);
 461              		.loc 1 144 0
 462 0016 0020     		movs	r0, #0
 463 0018 FFF7FEFF 		bl	Telit_RST_Write
 145:.\modem.c     ****     
 146:.\modem.c     ****     // Provide power to Telit module
 147:.\modem.c     ****     //Telit_PWR_Write(0u); //provide power to modem
 148:.\modem.c     ****     Telit_ControlReg_Write(1u);
 464              		.loc 1 148 0
 465 001c 0120     		movs	r0, #1
 466 001e FFF7FEFF 		bl	Telit_ControlReg_Write
 149:.\modem.c     ****     
 150:.\modem.c     ****     // "Push" the ON button for 2 seconds
 151:.\modem.c     ****     Telit_ON_Write(1u); 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 12


 467              		.loc 1 151 0
 468 0022 0120     		movs	r0, #1
 469 0024 FFF7FEFF 		bl	Telit_ON_Write
 152:.\modem.c     ****     CyDelay(2000u);     // the pad ON# must be tied low for at least 1 second and then released.
 470              		.loc 1 152 0
 471 0028 4FF4FA60 		mov	r0, #2000
 472 002c FFF7FEFF 		bl	CyDelay
 153:.\modem.c     ****     //CyDelay(1500u);     // At least 3 seconds if VBAT < 3.4 for GC 864
 154:.\modem.c     ****     Telit_ON_Write(0u); 
 473              		.loc 1 154 0
 474 0030 0020     		movs	r0, #0
 475 0032 FFF7FEFF 		bl	Telit_ON_Write
 155:.\modem.c     ****     
 156:.\modem.c     ****     CyDelay(5000u);  
 476              		.loc 1 156 0
 477 0036 41F28830 		movw	r0, #5000
 478 003a FFF7FEFF 		bl	CyDelay
 157:.\modem.c     ****     /* NOTE:
 158:.\modem.c     ****         "To get the desirable stability, 
 159:.\modem.c     ****         CC864-DUAL needs at least 10 seconds 
 160:.\modem.c     ****         after the PWRMON goes HIGH.*/
 161:.\modem.c     **** 	
 162:.\modem.c     **** 	if(at_write_command("AT\r","OK",1000u) == 1){    
 479              		.loc 1 162 0
 480 003e 0A48     		ldr	r0, .L33+4
 481 0040 0A49     		ldr	r1, .L33+8
 482 0042 4FF47A72 		mov	r2, #1000
 483 0046 FFF7FEFF 		bl	at_write_command
 484 004a 0346     		mov	r3, r0
 485 004c 012B     		cmp	r3, #1
 486 004e 05D1     		bne	.L32
 163:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 487              		.loc 1 163 0
 488 0050 044B     		ldr	r3, .L33
 489 0052 0122     		movs	r2, #1
 490 0054 1A70     		strb	r2, [r3]
 164:.\modem.c     ****         return modem_state;
 491              		.loc 1 164 0
 492 0056 034B     		ldr	r3, .L33
 493 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 005a 00E0     		b	.L31
 495              	.L32:
 165:.\modem.c     ****     }	
 166:.\modem.c     **** 	
 167:.\modem.c     **** 	// Failed to turn on
 168:.\modem.c     ****     return 0u;
 496              		.loc 1 168 0
 497 005c 0023     		movs	r3, #0
 498              	.L31:
 169:.\modem.c     **** }
 499              		.loc 1 169 0
 500 005e 1846     		mov	r0, r3
 501 0060 80BD     		pop	{r7, pc}
 502              	.L34:
 503 0062 00BF     		.align	2
 504              	.L33:
 505 0064 00000000 		.word	modem_state
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 13


 506 0068 10000000 		.word	.LC1
 507 006c 14000000 		.word	.LC2
 508              		.cfi_endproc
 509              	.LFE62:
 510              		.size	modem_power_on, .-modem_power_on
 511              		.section	.text.modem_power_off,"ax",%progbits
 512              		.align	2
 513              		.global	modem_power_off
 514              		.thumb
 515              		.thumb_func
 516              		.type	modem_power_off, %function
 517              	modem_power_off:
 518              	.LFB63:
 170:.\modem.c     **** 
 171:.\modem.c     **** uint8 modem_power_off(){
 519              		.loc 1 171 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 172:.\modem.c     **** 	
 173:.\modem.c     ****     if (modem_state == MODEM_STATE_OFF) {
 529              		.loc 1 173 0
 530 0004 104B     		ldr	r3, .L38
 531 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0008 002B     		cmp	r3, #0
 533 000a 01D1     		bne	.L36
 174:.\modem.c     ****         // Modem is already off
 175:.\modem.c     ****         return 1u;
 534              		.loc 1 175 0
 535 000c 0123     		movs	r3, #1
 536 000e 19E0     		b	.L37
 537              	.L36:
 176:.\modem.c     ****     }
 177:.\modem.c     **** 	
 178:.\modem.c     ****     // Try to disconnect the modem.  
 179:.\modem.c     ****     // Continue whether or not disconnect is successful
 180:.\modem.c     ****     modem_disconnect();
 538              		.loc 1 180 0
 539 0010 FFF7FEFF 		bl	modem_disconnect
 181:.\modem.c     ****     
 182:.\modem.c     ****     // "Push" the ON button for 
 183:.\modem.c     ****     Telit_ON_Write(1u);
 540              		.loc 1 183 0
 541 0014 0120     		movs	r0, #1
 542 0016 FFF7FEFF 		bl	Telit_ON_Write
 184:.\modem.c     ****     CyDelay(2500u);  // To turn the CC864-DUAL off, the ON/OFF Pin must be tied low for 2 second an
 543              		.loc 1 184 0
 544 001a 40F6C410 		movw	r0, #2500
 545 001e FFF7FEFF 		bl	CyDelay
 185:.\modem.c     ****     Telit_ON_Write(0u);
 546              		.loc 1 185 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 14


 547 0022 0020     		movs	r0, #0
 548 0024 FFF7FEFF 		bl	Telit_ON_Write
 186:.\modem.c     ****     
 187:.\modem.c     ****     CyDelay(5000u); 
 549              		.loc 1 187 0
 550 0028 41F28830 		movw	r0, #5000
 551 002c FFF7FEFF 		bl	CyDelay
 188:.\modem.c     ****     /* CyDelay(5000u); // wait for module to turn off
 189:.\modem.c     ****         "Normally it will be above 10 seconds later from releasing
 190:.\modem.c     ****         ON/OFF# and DTE should monitor the status of PWRMON to see the
 191:.\modem.c     ****         actual power off."  */
 192:.\modem.c     ****     
 193:.\modem.c     ****     // Book keeping
 194:.\modem.c     ****     Telit_ControlReg_Write(0u);    
 552              		.loc 1 194 0
 553 0030 0020     		movs	r0, #0
 554 0032 FFF7FEFF 		bl	Telit_ControlReg_Write
 195:.\modem.c     ****     //Telit_PWR_Write(1u); // Cut power to modem; 1u Disables power to the modem
 196:.\modem.c     ****     Telit_RST_Write(0u); // Make sure the RESET "button" is not pressed
 555              		.loc 1 196 0
 556 0036 0020     		movs	r0, #0
 557 0038 FFF7FEFF 		bl	Telit_RST_Write
 197:.\modem.c     ****     
 198:.\modem.c     ****     modem_state = MODEM_STATE_OFF;
 558              		.loc 1 198 0
 559 003c 024B     		ldr	r3, .L38
 560 003e 0022     		movs	r2, #0
 561 0040 1A70     		strb	r2, [r3]
 199:.\modem.c     ****     return 1u;
 562              		.loc 1 199 0
 563 0042 0123     		movs	r3, #1
 564              	.L37:
 200:.\modem.c     **** }
 565              		.loc 1 200 0
 566 0044 1846     		mov	r0, r3
 567 0046 80BD     		pop	{r7, pc}
 568              	.L39:
 569              		.align	2
 570              	.L38:
 571 0048 00000000 		.word	modem_state
 572              		.cfi_endproc
 573              	.LFE63:
 574              		.size	modem_power_off, .-modem_power_off
 575              		.section	.text.modem_reset,"ax",%progbits
 576              		.align	2
 577              		.global	modem_reset
 578              		.thumb
 579              		.thumb_func
 580              		.type	modem_reset, %function
 581              	modem_reset:
 582              	.LFB64:
 201:.\modem.c     **** 
 202:.\modem.c     **** uint8 modem_reset(){
 583              		.loc 1 202 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 15


 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 203:.\modem.c     ****     if (modem_state != MODEM_STATE_OFF) { // The modem is idle/ready (powered on)
 593              		.loc 1 203 0
 594 0004 0C4B     		ldr	r3, .L43
 595 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596 0008 002B     		cmp	r3, #0
 597 000a 10D0     		beq	.L41
 204:.\modem.c     ****         
 205:.\modem.c     ****         Telit_RST_Write(1u);
 598              		.loc 1 205 0
 599 000c 0120     		movs	r0, #1
 600 000e FFF7FEFF 		bl	Telit_RST_Write
 206:.\modem.c     ****         CyDelay(500u);  //   To reset and to reboot the module, 
 601              		.loc 1 206 0
 602 0012 4FF4FA70 		mov	r0, #500
 603 0016 FFF7FEFF 		bl	CyDelay
 207:.\modem.c     ****                         // the RESET pin must be tied low for at least 200 milliseconds and then re
 208:.\modem.c     ****         Telit_RST_Write(0u);
 604              		.loc 1 208 0
 605 001a 0020     		movs	r0, #0
 606 001c FFF7FEFF 		bl	Telit_RST_Write
 209:.\modem.c     ****         
 210:.\modem.c     ****         CyDelay(5000u); //CyDelay(5000u);
 607              		.loc 1 210 0
 608 0020 41F28830 		movw	r0, #5000
 609 0024 FFF7FEFF 		bl	CyDelay
 211:.\modem.c     ****         modem_state = MODEM_STATE_IDLE;
 610              		.loc 1 211 0
 611 0028 034B     		ldr	r3, .L43
 612 002a 0122     		movs	r2, #1
 613 002c 1A70     		strb	r2, [r3]
 614              	.L41:
 212:.\modem.c     ****     }
 213:.\modem.c     ****     return modem_state;
 615              		.loc 1 213 0
 616 002e 024B     		ldr	r3, .L43
 617 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214:.\modem.c     **** }
 618              		.loc 1 214 0
 619 0032 1846     		mov	r0, r3
 620 0034 80BD     		pop	{r7, pc}
 621              	.L44:
 622 0036 00BF     		.align	2
 623              	.L43:
 624 0038 00000000 		.word	modem_state
 625              		.cfi_endproc
 626              	.LFE64:
 627              		.size	modem_reset, .-modem_reset
 628              		.section	.text.modem_setup,"ax",%progbits
 629              		.align	2
 630              		.global	modem_setup
 631              		.thumb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 16


 632              		.thumb_func
 633              		.type	modem_setup, %function
 634              	modem_setup:
 635              	.LFB65:
 215:.\modem.c     **** 
 216:.\modem.c     **** uint8 modem_setup() {
 636              		.loc 1 216 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 217:.\modem.c     **** /* Initialize configurations for the modem */
 218:.\modem.c     **** 	// Set Error Reports to verbose mode
 219:.\modem.c     **** 	if (modem_set_error_reports(2u) != 1u) {
 646              		.loc 1 219 0
 647 0004 0220     		movs	r0, #2
 648 0006 FFF7FEFF 		bl	modem_set_error_reports
 649 000a 0346     		mov	r3, r0
 650 000c 012B     		cmp	r3, #1
 651 000e 01D0     		beq	.L46
 220:.\modem.c     **** 		return 0u;
 652              		.loc 1 220 0
 653 0010 0023     		movs	r3, #0
 654 0012 00E0     		b	.L47
 655              	.L46:
 221:.\modem.c     **** 	}
 222:.\modem.c     **** 	
 223:.\modem.c     **** 	/* UNCOMMENT when using GC864 instead of CC864
 224:.\modem.c     **** 	// Set the APN for GC864-Dual-V2
 225:.\modem.c     **** 	if (modem_set_apn() != 1u) {
 226:.\modem.c     **** 		return 0u;
 227:.\modem.c     **** 	}
 228:.\modem.c     **** 		
 229:.\modem.c     **** 	// Select the band for GC864-Dual-V2
 230:.\modem.c     **** 	if (modem_set_band(1u) != 1u) {
 231:.\modem.c     **** 		return 0u;
 232:.\modem.c     **** 	}
 233:.\modem.c     **** 	*/
 234:.\modem.c     **** 	
 235:.\modem.c     **** 	return 1u;
 656              		.loc 1 235 0
 657 0014 0123     		movs	r3, #1
 658              	.L47:
 236:.\modem.c     **** }
 659              		.loc 1 236 0
 660 0016 1846     		mov	r0, r3
 661 0018 80BD     		pop	{r7, pc}
 662              		.cfi_endproc
 663              	.LFE65:
 664              		.size	modem_setup, .-modem_setup
 665 001a 00BF     		.section	.rodata
 666 0017 00       		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 17


 667              	.LC3:
 668 0018 41542353 		.ascii	"AT#SGACT=1,1\015\000"
 668      47414354 
 668      3D312C31 
 668      0D00
 669              		.section	.text.modem_connect,"ax",%progbits
 670              		.align	2
 671              		.global	modem_connect
 672              		.thumb
 673              		.thumb_func
 674              		.type	modem_connect, %function
 675              	modem_connect:
 676              	.LFB66:
 237:.\modem.c     **** 
 238:.\modem.c     **** uint8 modem_connect(){
 677              		.loc 1 238 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 239:.\modem.c     **** /* Establish modem connection with the network */	
 240:.\modem.c     **** 	uint8 count = 0u, network_status = 0u;
 689              		.loc 1 240 0
 690 0006 0023     		movs	r3, #0
 691 0008 FB71     		strb	r3, [r7, #7]
 692 000a 0023     		movs	r3, #0
 693 000c BB71     		strb	r3, [r7, #6]
 241:.\modem.c     **** 	
 242:.\modem.c     **** 	// Check if modem is registered on home network
 243:.\modem.c     **** 	// Buffer should return +CREG: 0,1
 244:.\modem.c     **** 	// modem_check_network returns 1u if buffer contains ",1"
 245:.\modem.c     **** 	network_status = modem_check_network();
 694              		.loc 1 245 0
 695 000e FFF7FEFF 		bl	modem_check_network
 696 0012 0346     		mov	r3, r0
 697 0014 BB71     		strb	r3, [r7, #6]
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 698              		.loc 1 246 0
 699 0016 0AE0     		b	.L49
 700              	.L51:
 247:.\modem.c     **** 
 248:.\modem.c     **** 		network_status = modem_check_network();
 701              		.loc 1 248 0
 702 0018 FFF7FEFF 		bl	modem_check_network
 703 001c 0346     		mov	r3, r0
 704 001e BB71     		strb	r3, [r7, #6]
 249:.\modem.c     **** 		CyDelay(3000u);
 705              		.loc 1 249 0
 706 0020 40F6B830 		movw	r0, #3000
 707 0024 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 18


 250:.\modem.c     **** 		count++;
 708              		.loc 1 250 0
 709 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 710 002a 0133     		adds	r3, r3, #1
 711 002c FB71     		strb	r3, [r7, #7]
 712              	.L49:
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 713              		.loc 1 246 0 discriminator 1
 714 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 715 0030 002B     		cmp	r3, #0
 716 0032 02D1     		bne	.L50
 246:.\modem.c     **** 	while(network_status == 0u && count < MAX_CONN_ATTEMPTS) {
 717              		.loc 1 246 0 is_stmt 0 discriminator 2
 718 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 0036 042B     		cmp	r3, #4
 720 0038 EED9     		bls	.L51
 721              	.L50:
 251:.\modem.c     **** 	}
 252:.\modem.c     **** 	
 253:.\modem.c     **** 	if (network_status == 1u) {		
 722              		.loc 1 253 0 is_stmt 1
 723 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 724 003c 012B     		cmp	r3, #1
 725 003e 0ED1     		bne	.L52
 254:.\modem.c     **** 		// Try to activate network context
 255:.\modem.c     **** 		// #SGACT1,<0,1> is for multisocket
 256:.\modem.c     **** 		// For now, use #GPRS, which is from Enhanced Easy IP commands
 257:.\modem.c     **** 	    if(at_write_command("AT#SGACT=1,1\r","OK",5000u) == 1){    
 726              		.loc 1 257 0
 727 0040 0A48     		ldr	r0, .L54
 728 0042 0B49     		ldr	r1, .L54+4
 729 0044 41F28832 		movw	r2, #5000
 730 0048 FFF7FEFF 		bl	at_write_command
 731 004c 0346     		mov	r3, r0
 732 004e 012B     		cmp	r3, #1
 733 0050 05D1     		bne	.L52
 258:.\modem.c     **** 		//if(at_write_command("AT#GPRS=1\r","OK",5000u) == 1){    // Used for GSM (ATT, TMobile)
 259:.\modem.c     **** 	        modem_state = MODEM_STATE_READY;
 734              		.loc 1 259 0
 735 0052 084B     		ldr	r3, .L54+8
 736 0054 0322     		movs	r2, #3
 737 0056 1A70     		strb	r2, [r3]
 260:.\modem.c     **** 	        return modem_state;
 738              		.loc 1 260 0
 739 0058 064B     		ldr	r3, .L54+8
 740 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 005c 01E0     		b	.L53
 742              	.L52:
 261:.\modem.c     **** 	    }		
 262:.\modem.c     **** 	}
 263:.\modem.c     **** 	
 264:.\modem.c     ****     /* Write to SD Card debugger
 265:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 266:.\modem.c     ****     */
 267:.\modem.c     **** 
 268:.\modem.c     ****     return modem_state;
 743              		.loc 1 268 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 19


 744 005e 054B     		ldr	r3, .L54+8
 745 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746              	.L53:
 269:.\modem.c     ****     
 270:.\modem.c     **** /*
 271:.\modem.c     ****     if(at_write_command("AT+CREG=1\r","OK",5000u)){
 272:.\modem.c     ****         if(at_write_command("AT+CREG?\r","OK",5000u)){
 273:.\modem.c     ****         //if(!at_write_command("AT#CGPADDR=1\r","\"",5000u)){
 274:.\modem.c     ****             if(at_write_command("AT#SGACT=1,1\r","OK",30000u)){
 275:.\modem.c     ****                 modem_state = MODEM_STATE_READY;
 276:.\modem.c     ****                 //return 1u; // connected to network
 277:.\modem.c     ****             }
 278:.\modem.c     ****             else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 279:.\modem.c     ****         }
 280:.\modem.c     ****        else debug_write("(AT#CGPADDR=1) No IP Address Exists.");   Returns IP address.. should be c
 281:.\modem.c     ****     }
 282:.\modem.c     ****     else debug_write("(AT+CREG=1) Could not register to network."); CREG reports registration statu
 283:.\modem.c     ****     
 284:.\modem.c     ****     return 0u;
 285:.\modem.c     **** */
 286:.\modem.c     **** /*
 287:.\modem.c     ****     at_write_command("AT+CSQ\r","OK",5000u); // get signal strength
 288:.\modem.c     ****     
 289:.\modem.c     ****     if (!at_write_command("AT+CREG=1\r","OK",5000u)) { // look for network
 290:.\modem.c     ****         debug_write("(AT+CREG=1) Could not register to network.");
 291:.\modem.c     ****     }
 292:.\modem.c     ****     
 293:.\modem.c     ****     at_write_command("AT#SCFG=1,1,0,0,1200,0\r","OK",5000u); // config parameter
 294:.\modem.c     ****     
 295:.\modem.c     ****     if (at_write_command("AT#CGPADDR=1\r","OK",5000u)) {// check if ip address exists
 296:.\modem.c     ****         debug_write("(AT#CGPADDR=1) No IP Address Exists.");    
 297:.\modem.c     ****     }
 298:.\modem.c     ****     
 299:.\modem.c     ****     at_write_command("AT#SGACT?","OK",30000u);
 300:.\modem.c     ****     
 301:.\modem.c     ****     uint8 success  = at_write_command("AT#SGACT=1,1\r","OK",30000u); // This command should return 
 302:.\modem.c     ****     //success = at_write_command("AT#SD=1,0,50000,\"141.212.136.222\",0,0,1\r","OK",5000u); // conn
 303:.\modem.c     ****     
 304:.\modem.c     ****     if (!success) {
 305:.\modem.c     ****         debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 306:.\modem.c     ****     }
 307:.\modem.c     ****     
 308:.\modem.c     ****     return success;
 309:.\modem.c     ****     */
 310:.\modem.c     ****     
 311:.\modem.c     **** }
 747              		.loc 1 311 0
 748 0062 1846     		mov	r0, r3
 749 0064 0837     		adds	r7, r7, #8
 750 0066 BD46     		mov	sp, r7
 751              		@ sp needed
 752 0068 80BD     		pop	{r7, pc}
 753              	.L55:
 754 006a 00BF     		.align	2
 755              	.L54:
 756 006c 18000000 		.word	.LC3
 757 0070 14000000 		.word	.LC2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 20


 758 0074 00000000 		.word	modem_state
 759              		.cfi_endproc
 760              	.LFE66:
 761              		.size	modem_connect, .-modem_connect
 762              		.section	.rodata
 763 0026 0000     		.align	2
 764              	.LC4:
 765 0028 41542353 		.ascii	"AT#SGACT=1,0\015\000"
 765      47414354 
 765      3D312C30 
 765      0D00
 766              		.section	.text.modem_disconnect,"ax",%progbits
 767              		.align	2
 768              		.global	modem_disconnect
 769              		.thumb
 770              		.thumb_func
 771              		.type	modem_disconnect, %function
 772              	modem_disconnect:
 773              	.LFB67:
 312:.\modem.c     **** 
 313:.\modem.c     **** uint8 modem_disconnect(){
 774              		.loc 1 313 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778 0000 80B5     		push	{r7, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 314:.\modem.c     **** /* Close modem connection to network */
 315:.\modem.c     **** 	
 316:.\modem.c     ****     // Proceed if modem is not connected to network.  Otherwise, try to disconnect from the network
 317:.\modem.c     ****     if(modem_state != MODEM_STATE_READY) {
 784              		.loc 1 317 0
 785 0004 094B     		ldr	r3, .L59
 786 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 0008 032B     		cmp	r3, #3
 788 000a 0CD0     		beq	.L57
 318:.\modem.c     ****         /* Can use this statement instead for GSM (ATT, TMobile)
 319:.\modem.c     **** 		return (at_write_command("AT#GPRS=0\r","OK",5000u) == 1u);
 320:.\modem.c     **** 		*/
 321:.\modem.c     **** 		return (at_write_command("AT#SGACT=1,0\r","OK",5000u) == 1u);
 789              		.loc 1 321 0
 790 000c 0848     		ldr	r0, .L59+4
 791 000e 0949     		ldr	r1, .L59+8
 792 0010 41F28832 		movw	r2, #5000
 793 0014 FFF7FEFF 		bl	at_write_command
 794 0018 0346     		mov	r3, r0
 795 001a 012B     		cmp	r3, #1
 796 001c 14BF     		ite	ne
 797 001e 0023     		movne	r3, #0
 798 0020 0123     		moveq	r3, #1
 799 0022 DBB2     		uxtb	r3, r3
 800 0024 00E0     		b	.L58
 801              	.L57:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 21


 322:.\modem.c     **** 			
 323:.\modem.c     **** 		/*
 324:.\modem.c     **** 		if(at_write_command("AT#SH=1","OK",10000u) == 1){
 325:.\modem.c     ****             if(at_write_command("AT#SGACT=1,0","OK",10000u) == 1){
 326:.\modem.c     ****                 modem_state = MODEM_STATE_IDLE;
 327:.\modem.c     ****                 return 1u;
 328:.\modem.c     ****             }
 329:.\modem.c     ****             // Write to SD Card debugger
 330:.\modem.c     ****             else {
 331:.\modem.c     ****                 debug_write("(AT#SGACT=1,0) Could not disconnect.");
 332:.\modem.c     ****             }
 333:.\modem.c     ****             
 334:.\modem.c     ****         }
 335:.\modem.c     ****         Write to SD Card debugger
 336:.\modem.c     ****         else {
 337:.\modem.c     ****             debug_write("(AT#SH=1) Could not close socket.");
 338:.\modem.c     ****         }
 339:.\modem.c     ****         */
 340:.\modem.c     ****     }
 341:.\modem.c     ****     /* Write to SD Card debugger
 342:.\modem.c     ****     else {
 343:.\modem.c     ****         if (modem_state == MODEM_STATE_OFF) {
 344:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_OFF" );
 345:.\modem.c     ****         }
 346:.\modem.c     ****         else if (modem_state == MODEM_STATE_IDLE) {
 347:.\modem.c     ****             debug_write( "(modem_state != MODEM_STATE_READY) modem_state = MODEM_STATE_IDLE" );
 348:.\modem.c     ****         }
 349:.\modem.c     ****     }
 350:.\modem.c     ****     */
 351:.\modem.c     ****     return 0u; // failed to disconnect
 802              		.loc 1 351 0
 803 0026 0023     		movs	r3, #0
 804              	.L58:
 352:.\modem.c     **** }
 805              		.loc 1 352 0
 806 0028 1846     		mov	r0, r3
 807 002a 80BD     		pop	{r7, pc}
 808              	.L60:
 809              		.align	2
 810              	.L59:
 811 002c 00000000 		.word	modem_state
 812 0030 28000000 		.word	.LC4
 813 0034 14000000 		.word	.LC2
 814              		.cfi_endproc
 815              	.LFE67:
 816              		.size	modem_disconnect, .-modem_disconnect
 817              		.section	.rodata
 818 0036 0000     		.align	2
 819              	.LC5:
 820 0038 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"%s\"\015\000"
 820      4744434F 
 820      4E543D31 
 820      2C224950 
 820      222C2225 
 821              		.section	.text.modem_set_apn,"ax",%progbits
 822              		.align	2
 823              		.global	modem_set_apn
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 22


 824              		.thumb
 825              		.thumb_func
 826              		.type	modem_set_apn, %function
 827              	modem_set_apn:
 828              	.LFB68:
 353:.\modem.c     **** 
 354:.\modem.c     **** uint8 modem_set_apn() {
 829              		.loc 1 354 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 104
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 9AB0     		sub	sp, sp, #104
 838              		.cfi_def_cfa_offset 112
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 355:.\modem.c     **** /* 
 356:.\modem.c     **** 	Set the access point that the modem connects to.
 357:.\modem.c     **** 	The APN is defined in "modem_apn" at the
 358:.\modem.c     **** 	top of this file 
 359:.\modem.c     **** */
 360:.\modem.c     ****     char cmd[100];
 361:.\modem.c     ****     sprintf(cmd,"AT+CGDCONT=1,\"IP\",\"%s\"\r",modem_apn);
 841              		.loc 1 361 0
 842 0006 0C4B     		ldr	r3, .L65
 843 0008 1B68     		ldr	r3, [r3]
 844 000a 3A1D     		adds	r2, r7, #4
 845 000c 1046     		mov	r0, r2
 846 000e 0B49     		ldr	r1, .L65+4
 847 0010 1A46     		mov	r2, r3
 848 0012 FFF7FEFF 		bl	sprintf
 362:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 849              		.loc 1 362 0
 850 0016 3B1D     		adds	r3, r7, #4
 851 0018 1846     		mov	r0, r3
 852 001a 0949     		ldr	r1, .L65+8
 853 001c 4FF4FA62 		mov	r2, #2000
 854 0020 FFF7FEFF 		bl	at_write_command
 855 0024 0346     		mov	r3, r0
 856 0026 012B     		cmp	r3, #1
 857 0028 01D1     		bne	.L62
 363:.\modem.c     ****         return 1u;
 858              		.loc 1 363 0
 859 002a 0123     		movs	r3, #1
 860 002c 00E0     		b	.L64
 861              	.L62:
 364:.\modem.c     ****     }
 365:.\modem.c     ****     /* Write to SD Card debugger
 366:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 367:.\modem.c     ****     */
 368:.\modem.c     **** 
 369:.\modem.c     ****     return 0u; 
 862              		.loc 1 369 0
 863 002e 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 23


 864              	.L64:
 370:.\modem.c     **** }
 865              		.loc 1 370 0
 866 0030 1846     		mov	r0, r3
 867 0032 6837     		adds	r7, r7, #104
 868 0034 BD46     		mov	sp, r7
 869              		@ sp needed
 870 0036 80BD     		pop	{r7, pc}
 871              	.L66:
 872              		.align	2
 873              	.L65:
 874 0038 00000000 		.word	modem_apn
 875 003c 38000000 		.word	.LC5
 876 0040 14000000 		.word	.LC2
 877              		.cfi_endproc
 878              	.LFE68:
 879              		.size	modem_set_apn, .-modem_set_apn
 880              		.section	.rodata
 881              		.align	2
 882              	.LC6:
 883 0050 41542342 		.ascii	"AT#BND=%d\015\000"
 883      4E443D25 
 883      640D00
 884              		.section	.text.modem_set_band,"ax",%progbits
 885              		.align	2
 886              		.global	modem_set_band
 887              		.thumb
 888              		.thumb_func
 889              		.type	modem_set_band, %function
 890              	modem_set_band:
 891              	.LFB69:
 371:.\modem.c     **** 
 372:.\modem.c     **** uint8 modem_set_band(uint8 band) {
 892              		.loc 1 372 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 112
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896 0000 80B5     		push	{r7, lr}
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 7, -8
 899              		.cfi_offset 14, -4
 900 0002 9CB0     		sub	sp, sp, #112
 901              		.cfi_def_cfa_offset 120
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 904 0006 0346     		mov	r3, r0
 905 0008 FB71     		strb	r3, [r7, #7]
 373:.\modem.c     **** /* 
 374:.\modem.c     **** 	Set the band on which the modem should communicate on
 375:.\modem.c     **** 	Band ranges from <0,3>
 376:.\modem.c     **** 	"epc.tmobile.com" uses band 1
 377:.\modem.c     **** */
 378:.\modem.c     ****     char cmd[100];
 379:.\modem.c     ****     sprintf(cmd,"AT#BND=%d\r",band);
 906              		.loc 1 379 0
 907 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 908 000c 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 24


 909 0010 1046     		mov	r0, r2
 910 0012 0B49     		ldr	r1, .L71
 911 0014 1A46     		mov	r2, r3
 912 0016 FFF7FEFF 		bl	sprintf
 380:.\modem.c     ****     if(at_write_command(cmd,"OK",2000u) == 1u){      
 913              		.loc 1 380 0
 914 001a 07F10C03 		add	r3, r7, #12
 915 001e 1846     		mov	r0, r3
 916 0020 0849     		ldr	r1, .L71+4
 917 0022 4FF4FA62 		mov	r2, #2000
 918 0026 FFF7FEFF 		bl	at_write_command
 919 002a 0346     		mov	r3, r0
 920 002c 012B     		cmp	r3, #1
 921 002e 01D1     		bne	.L68
 381:.\modem.c     ****         return 1u;
 922              		.loc 1 381 0
 923 0030 0123     		movs	r3, #1
 924 0032 00E0     		b	.L70
 925              	.L68:
 382:.\modem.c     ****     }
 383:.\modem.c     ****     /* Write to SD Card debugger
 384:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 385:.\modem.c     ****     */
 386:.\modem.c     **** 
 387:.\modem.c     ****     return 0u; 
 926              		.loc 1 387 0
 927 0034 0023     		movs	r3, #0
 928              	.L70:
 388:.\modem.c     **** }
 929              		.loc 1 388 0
 930 0036 1846     		mov	r0, r3
 931 0038 7037     		adds	r7, r7, #112
 932 003a BD46     		mov	sp, r7
 933              		@ sp needed
 934 003c 80BD     		pop	{r7, pc}
 935              	.L72:
 936 003e 00BF     		.align	2
 937              	.L71:
 938 0040 50000000 		.word	.LC6
 939 0044 14000000 		.word	.LC2
 940              		.cfi_endproc
 941              	.LFE69:
 942              		.size	modem_set_band, .-modem_set_band
 943              		.section	.rodata
 944 005b 00       		.align	2
 945              	.LC7:
 946 005c 41542B43 		.ascii	"AT+CCLK?\015\000"
 946      434C4B3F 
 946      0D00
 947              		.section	.text.modem_get_time,"ax",%progbits
 948              		.align	2
 949              		.global	modem_get_time
 950              		.thumb
 951              		.thumb_func
 952              		.type	modem_get_time, %function
 953              	modem_get_time:
 954              	.LFB70:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 25


 389:.\modem.c     **** 
 390:.\modem.c     **** uint8 modem_get_time(){
 955              		.loc 1 390 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 391:.\modem.c     ****     if(at_write_command("AT+CCLK?\r","OK",1000u) == 1u){      
 965              		.loc 1 391 0
 966 0004 0648     		ldr	r0, .L76
 967 0006 0749     		ldr	r1, .L76+4
 968 0008 4FF47A72 		mov	r2, #1000
 969 000c FFF7FEFF 		bl	at_write_command
 970 0010 0346     		mov	r3, r0
 971 0012 012B     		cmp	r3, #1
 972 0014 01D1     		bne	.L74
 392:.\modem.c     ****         return 1u;
 973              		.loc 1 392 0
 974 0016 0123     		movs	r3, #1
 975 0018 00E0     		b	.L75
 976              	.L74:
 393:.\modem.c     ****     }
 394:.\modem.c     ****     /* Write to SD Card debugger
 395:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 396:.\modem.c     ****     */
 397:.\modem.c     ****     
 398:.\modem.c     ****     /* Parse Time from data packet */
 399:.\modem.c     **** 
 400:.\modem.c     ****     return 0u;  
 977              		.loc 1 400 0
 978 001a 0023     		movs	r3, #0
 979              	.L75:
 401:.\modem.c     **** }
 980              		.loc 1 401 0
 981 001c 1846     		mov	r0, r3
 982 001e 80BD     		pop	{r7, pc}
 983              	.L77:
 984              		.align	2
 985              	.L76:
 986 0020 5C000000 		.word	.LC7
 987 0024 14000000 		.word	.LC2
 988              		.cfi_endproc
 989              	.LFE70:
 990              		.size	modem_get_time, .-modem_get_time
 991              		.section	.rodata
 992 0066 0000     		.align	2
 993              	.LC8:
 994 0068 41542B43 		.ascii	"AT+CREG?\015\000"
 994      5245473F 
 994      0D00
 995 0072 0000     		.align	2
 996              	.LC9:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 26


 997 0074 2C3100   		.ascii	",1\000"
 998              		.section	.text.modem_check_network,"ax",%progbits
 999              		.align	2
 1000              		.global	modem_check_network
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	modem_check_network, %function
 1004              	modem_check_network:
 1005              	.LFB71:
 402:.\modem.c     **** 
 403:.\modem.c     **** uint8 modem_check_network() {
 1006              		.loc 1 403 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 00AF     		add	r7, sp, #0
 1015              		.cfi_def_cfa_register 7
 404:.\modem.c     ****     if(at_write_command("AT+CREG?\r",",1",1000u) == 1u){      
 1016              		.loc 1 404 0
 1017 0004 0648     		ldr	r0, .L81
 1018 0006 0749     		ldr	r1, .L81+4
 1019 0008 4FF47A72 		mov	r2, #1000
 1020 000c FFF7FEFF 		bl	at_write_command
 1021 0010 0346     		mov	r3, r0
 1022 0012 012B     		cmp	r3, #1
 1023 0014 01D1     		bne	.L79
 405:.\modem.c     ****         return 1u;
 1024              		.loc 1 405 0
 1025 0016 0123     		movs	r3, #1
 1026 0018 00E0     		b	.L80
 1027              	.L79:
 406:.\modem.c     ****     }
 407:.\modem.c     ****     /* Write to SD Card debugger
 408:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 409:.\modem.c     ****     */
 410:.\modem.c     ****     
 411:.\modem.c     ****     /* Parse Time from data packet */
 412:.\modem.c     **** 
 413:.\modem.c     ****     return 0u;      
 1028              		.loc 1 413 0
 1029 001a 0023     		movs	r3, #0
 1030              	.L80:
 414:.\modem.c     **** }
 1031              		.loc 1 414 0
 1032 001c 1846     		mov	r0, r3
 1033 001e 80BD     		pop	{r7, pc}
 1034              	.L82:
 1035              		.align	2
 1036              	.L81:
 1037 0020 68000000 		.word	.LC8
 1038 0024 74000000 		.word	.LC9
 1039              		.cfi_endproc
 1040              	.LFE71:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 27


 1041              		.size	modem_check_network, .-modem_check_network
 1042              		.section	.rodata
 1043 0077 00       		.align	2
 1044              	.LC10:
 1045 0078 41542B43 		.ascii	"AT+CSQ\015\000"
 1045      53510D00 
 1046              		.section	.text.modem_get_signal_quality,"ax",%progbits
 1047              		.align	2
 1048              		.global	modem_get_signal_quality
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	modem_get_signal_quality, %function
 1052              	modem_get_signal_quality:
 1053              	.LFB72:
 415:.\modem.c     **** uint8 modem_get_signal_quality(){
 1054              		.loc 1 415 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 416:.\modem.c     ****     if(at_write_command("AT+CSQ\r","OK",1000u) == 1u){      
 1064              		.loc 1 416 0
 1065 0004 0648     		ldr	r0, .L86
 1066 0006 0749     		ldr	r1, .L86+4
 1067 0008 4FF47A72 		mov	r2, #1000
 1068 000c FFF7FEFF 		bl	at_write_command
 1069 0010 0346     		mov	r3, r0
 1070 0012 012B     		cmp	r3, #1
 1071 0014 01D1     		bne	.L84
 417:.\modem.c     ****         return 1u;
 1072              		.loc 1 417 0
 1073 0016 0123     		movs	r3, #1
 1074 0018 00E0     		b	.L85
 1075              	.L84:
 418:.\modem.c     ****     }
 419:.\modem.c     ****     /* Write to SD Card debugger
 420:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 421:.\modem.c     ****     */
 422:.\modem.c     ****     
 423:.\modem.c     ****     /* Parse Time from data packet */
 424:.\modem.c     **** 
 425:.\modem.c     ****     return 0u;  
 1076              		.loc 1 425 0
 1077 001a 0023     		movs	r3, #0
 1078              	.L85:
 426:.\modem.c     **** }
 1079              		.loc 1 426 0
 1080 001c 1846     		mov	r0, r3
 1081 001e 80BD     		pop	{r7, pc}
 1082              	.L87:
 1083              		.align	2
 1084              	.L86:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 28


 1085 0020 78000000 		.word	.LC10
 1086 0024 14000000 		.word	.LC2
 1087              		.cfi_endproc
 1088              	.LFE72:
 1089              		.size	modem_get_signal_quality, .-modem_get_signal_quality
 1090              		.section	.rodata
 1091              		.align	2
 1092              	.LC11:
 1093 0080 41542B43 		.ascii	"AT+CGSN\015\000"
 1093      47534E0D 
 1093      00
 1094              		.section	.text.modem_get_serial_number,"ax",%progbits
 1095              		.align	2
 1096              		.global	modem_get_serial_number
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	modem_get_serial_number, %function
 1100              	modem_get_serial_number:
 1101              	.LFB73:
 427:.\modem.c     **** 
 428:.\modem.c     **** uint8 modem_get_serial_number(){
 1102              		.loc 1 428 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 429:.\modem.c     ****     if(at_write_command("AT+CGSN\r","OK",1000u) == 1u){      
 1112              		.loc 1 429 0
 1113 0004 0648     		ldr	r0, .L91
 1114 0006 0749     		ldr	r1, .L91+4
 1115 0008 4FF47A72 		mov	r2, #1000
 1116 000c FFF7FEFF 		bl	at_write_command
 1117 0010 0346     		mov	r3, r0
 1118 0012 012B     		cmp	r3, #1
 1119 0014 01D1     		bne	.L89
 430:.\modem.c     ****         return 1u;
 1120              		.loc 1 430 0
 1121 0016 0123     		movs	r3, #1
 1122 0018 00E0     		b	.L90
 1123              	.L89:
 431:.\modem.c     ****     }
 432:.\modem.c     ****     /* Write to SD Card debugger
 433:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 434:.\modem.c     ****     */
 435:.\modem.c     **** 
 436:.\modem.c     ****     return 0u;  
 1124              		.loc 1 436 0
 1125 001a 0023     		movs	r3, #0
 1126              	.L90:
 437:.\modem.c     **** }
 1127              		.loc 1 437 0
 1128 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 29


 1129 001e 80BD     		pop	{r7, pc}
 1130              	.L92:
 1131              		.align	2
 1132              	.L91:
 1133 0020 80000000 		.word	.LC11
 1134 0024 14000000 		.word	.LC2
 1135              		.cfi_endproc
 1136              	.LFE73:
 1137              		.size	modem_get_serial_number, .-modem_get_serial_number
 1138              		.section	.rodata
 1139 0089 000000   		.align	2
 1140              	.LC12:
 1141 008c 41542656 		.ascii	"AT&V\015\000"
 1141      0D00
 1142              		.section	.text.modem_get_profile,"ax",%progbits
 1143              		.align	2
 1144              		.global	modem_get_profile
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	modem_get_profile, %function
 1148              	modem_get_profile:
 1149              	.LFB74:
 438:.\modem.c     **** 
 439:.\modem.c     **** 
 440:.\modem.c     **** uint8 modem_get_profile(){
 1150              		.loc 1 440 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 441:.\modem.c     ****     if(at_write_command("AT&V\r","OK",1000u) == 1u){      
 1160              		.loc 1 441 0
 1161 0004 0648     		ldr	r0, .L96
 1162 0006 0749     		ldr	r1, .L96+4
 1163 0008 4FF47A72 		mov	r2, #1000
 1164 000c FFF7FEFF 		bl	at_write_command
 1165 0010 0346     		mov	r3, r0
 1166 0012 012B     		cmp	r3, #1
 1167 0014 01D1     		bne	.L94
 442:.\modem.c     ****         return 1u;
 1168              		.loc 1 442 0
 1169 0016 0123     		movs	r3, #1
 1170 0018 00E0     		b	.L95
 1171              	.L94:
 443:.\modem.c     ****     }
 444:.\modem.c     ****     /* Write to SD Card debugger
 445:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 446:.\modem.c     ****     */
 447:.\modem.c     **** 
 448:.\modem.c     ****     return 0u;  
 1172              		.loc 1 448 0
 1173 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 30


 1174              	.L95:
 449:.\modem.c     **** }
 1175              		.loc 1 449 0
 1176 001c 1846     		mov	r0, r3
 1177 001e 80BD     		pop	{r7, pc}
 1178              	.L97:
 1179              		.align	2
 1180              	.L96:
 1181 0020 8C000000 		.word	.LC12
 1182 0024 14000000 		.word	.LC2
 1183              		.cfi_endproc
 1184              	.LFE74:
 1185              		.size	modem_get_profile, .-modem_get_profile
 1186              		.section	.rodata
 1187 0092 0000     		.align	2
 1188              	.LC13:
 1189 0094 4154264B 		.ascii	"AT&K%u\015\000"
 1189      25750D00 
 1190              		.section	.text.modem_set_flow_control,"ax",%progbits
 1191              		.align	2
 1192              		.global	modem_set_flow_control
 1193              		.thumb
 1194              		.thumb_func
 1195              		.type	modem_set_flow_control, %function
 1196              	modem_set_flow_control:
 1197              	.LFB75:
 450:.\modem.c     **** 
 451:.\modem.c     **** uint8 modem_set_flow_control(uint8 param){
 1198              		.loc 1 451 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 112
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 9CB0     		sub	sp, sp, #112
 1207              		.cfi_def_cfa_offset 120
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB71     		strb	r3, [r7, #7]
 452:.\modem.c     ****     char cmd[100];
 453:.\modem.c     ****     sprintf(cmd,"AT&K%u\r",param);
 1212              		.loc 1 453 0
 1213 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 000c 07F10C02 		add	r2, r7, #12
 1215 0010 1046     		mov	r0, r2
 1216 0012 0B49     		ldr	r1, .L102
 1217 0014 1A46     		mov	r2, r3
 1218 0016 FFF7FEFF 		bl	sprintf
 454:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1219              		.loc 1 454 0
 1220 001a 07F10C03 		add	r3, r7, #12
 1221 001e 1846     		mov	r0, r3
 1222 0020 0849     		ldr	r1, .L102+4
 1223 0022 4FF47A72 		mov	r2, #1000
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 31


 1224 0026 FFF7FEFF 		bl	at_write_command
 1225 002a 0346     		mov	r3, r0
 1226 002c 012B     		cmp	r3, #1
 1227 002e 01D1     		bne	.L99
 455:.\modem.c     ****         return 1u;
 1228              		.loc 1 455 0
 1229 0030 0123     		movs	r3, #1
 1230 0032 00E0     		b	.L101
 1231              	.L99:
 456:.\modem.c     ****     }
 457:.\modem.c     ****     /* Write to SD Card debugger
 458:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 459:.\modem.c     ****     */
 460:.\modem.c     **** 
 461:.\modem.c     ****     return 0u;  
 1232              		.loc 1 461 0
 1233 0034 0023     		movs	r3, #0
 1234              	.L101:
 462:.\modem.c     **** }
 1235              		.loc 1 462 0
 1236 0036 1846     		mov	r0, r3
 1237 0038 7037     		adds	r7, r7, #112
 1238 003a BD46     		mov	sp, r7
 1239              		@ sp needed
 1240 003c 80BD     		pop	{r7, pc}
 1241              	.L103:
 1242 003e 00BF     		.align	2
 1243              	.L102:
 1244 0040 94000000 		.word	.LC13
 1245 0044 14000000 		.word	.LC2
 1246              		.cfi_endproc
 1247              	.LFE75:
 1248              		.size	modem_set_flow_control, .-modem_set_flow_control
 1249              		.section	.rodata
 1250              		.align	2
 1251              	.LC14:
 1252 009c 41542B43 		.ascii	"AT+CMEE=%u\015\000"
 1252      4D45453D 
 1252      25750D00 
 1253              		.section	.text.modem_set_error_reports,"ax",%progbits
 1254              		.align	2
 1255              		.global	modem_set_error_reports
 1256              		.thumb
 1257              		.thumb_func
 1258              		.type	modem_set_error_reports, %function
 1259              	modem_set_error_reports:
 1260              	.LFB76:
 463:.\modem.c     **** 
 464:.\modem.c     **** uint8 modem_set_error_reports(uint8 param){
 1261              		.loc 1 464 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 112
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 32


 1269 0002 9CB0     		sub	sp, sp, #112
 1270              		.cfi_def_cfa_offset 120
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 0346     		mov	r3, r0
 1274 0008 FB71     		strb	r3, [r7, #7]
 465:.\modem.c     **** 	/*
 466:.\modem.c     **** 	2.4. Enable Extended Error Result codes
 467:.\modem.c     **** 	Disable the Error Report in numerical and verbose format:
 468:.\modem.c     **** 	AT+CMEE=0
 469:.\modem.c     **** 	OK
 470:.\modem.c     **** 	Enable the Error Report in numerical format:
 471:.\modem.c     **** 	AT+CMEE=1
 472:.\modem.c     **** 	OK
 473:.\modem.c     **** 	Enable the Error Report in verbose format:
 474:.\modem.c     **** 	AT+CMEE=2
 475:.\modem.c     **** 	OK
 476:.\modem.c     **** 	*/
 477:.\modem.c     **** 	
 478:.\modem.c     ****     char cmd[100];
 479:.\modem.c     ****     sprintf(cmd,"AT+CMEE=%u\r",param);
 1275              		.loc 1 479 0
 1276 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1277 000c 07F10C02 		add	r2, r7, #12
 1278 0010 1046     		mov	r0, r2
 1279 0012 0B49     		ldr	r1, .L108
 1280 0014 1A46     		mov	r2, r3
 1281 0016 FFF7FEFF 		bl	sprintf
 480:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1282              		.loc 1 480 0
 1283 001a 07F10C03 		add	r3, r7, #12
 1284 001e 1846     		mov	r0, r3
 1285 0020 0849     		ldr	r1, .L108+4
 1286 0022 4FF47A72 		mov	r2, #1000
 1287 0026 FFF7FEFF 		bl	at_write_command
 1288 002a 0346     		mov	r3, r0
 1289 002c 012B     		cmp	r3, #1
 1290 002e 01D1     		bne	.L105
 481:.\modem.c     ****         return 1u;
 1291              		.loc 1 481 0
 1292 0030 0123     		movs	r3, #1
 1293 0032 00E0     		b	.L107
 1294              	.L105:
 482:.\modem.c     ****     }
 483:.\modem.c     ****     /* Write to SD Card debugger
 484:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 485:.\modem.c     ****     */
 486:.\modem.c     **** 
 487:.\modem.c     ****     return 0u;  
 1295              		.loc 1 487 0
 1296 0034 0023     		movs	r3, #0
 1297              	.L107:
 488:.\modem.c     **** }
 1298              		.loc 1 488 0
 1299 0036 1846     		mov	r0, r3
 1300 0038 7037     		adds	r7, r7, #112
 1301 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 33


 1302              		@ sp needed
 1303 003c 80BD     		pop	{r7, pc}
 1304              	.L109:
 1305 003e 00BF     		.align	2
 1306              	.L108:
 1307 0040 9C000000 		.word	.LC14
 1308 0044 14000000 		.word	.LC2
 1309              		.cfi_endproc
 1310              	.LFE76:
 1311              		.size	modem_set_error_reports, .-modem_set_error_reports
 1312              		.section	.rodata
 1313              		.align	2
 1314              	.LC15:
 1315 00a8 41542B43 		.ascii	"AT+CGMR\015\000"
 1315      474D520D 
 1315      00
 1316              		.section	.text.modem_get_sw_version,"ax",%progbits
 1317              		.align	2
 1318              		.global	modem_get_sw_version
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	modem_get_sw_version, %function
 1322              	modem_get_sw_version:
 1323              	.LFB77:
 489:.\modem.c     **** 
 490:.\modem.c     **** uint8 modem_get_sw_version(){
 1324              		.loc 1 490 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
 491:.\modem.c     ****     if(at_write_command("AT+CGMR\r","OK",1000u) == 1u){      
 1334              		.loc 1 491 0
 1335 0004 0648     		ldr	r0, .L113
 1336 0006 0749     		ldr	r1, .L113+4
 1337 0008 4FF47A72 		mov	r2, #1000
 1338 000c FFF7FEFF 		bl	at_write_command
 1339 0010 0346     		mov	r3, r0
 1340 0012 012B     		cmp	r3, #1
 1341 0014 01D1     		bne	.L111
 492:.\modem.c     ****         return 1u;
 1342              		.loc 1 492 0
 1343 0016 0123     		movs	r3, #1
 1344 0018 00E0     		b	.L112
 1345              	.L111:
 493:.\modem.c     ****     }
 494:.\modem.c     ****     /* Write to SD Card debugger
 495:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 496:.\modem.c     ****     */
 497:.\modem.c     **** 
 498:.\modem.c     ****     return 0u;  
 1346              		.loc 1 498 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 34


 1347 001a 0023     		movs	r3, #0
 1348              	.L112:
 499:.\modem.c     **** }
 1349              		.loc 1 499 0
 1350 001c 1846     		mov	r0, r3
 1351 001e 80BD     		pop	{r7, pc}
 1352              	.L114:
 1353              		.align	2
 1354              	.L113:
 1355 0020 A8000000 		.word	.LC15
 1356 0024 14000000 		.word	.LC2
 1357              		.cfi_endproc
 1358              	.LFE77:
 1359              		.size	modem_get_sw_version, .-modem_get_sw_version
 1360              		.section	.rodata
 1361 00b1 000000   		.align	2
 1362              	.LC16:
 1363 00b4 41542343 		.ascii	"AT#CDMADC=%u\015\000"
 1363      444D4144 
 1363      433D2575 
 1363      0D00
 1364              		.section	.text.modem_enable_CDMA_data,"ax",%progbits
 1365              		.align	2
 1366              		.global	modem_enable_CDMA_data
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	modem_enable_CDMA_data, %function
 1370              	modem_enable_CDMA_data:
 1371              	.LFB78:
 500:.\modem.c     **** 
 501:.\modem.c     **** uint8 modem_enable_CDMA_data(uint8 param){
 1372              		.loc 1 501 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 112
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 9CB0     		sub	sp, sp, #112
 1381              		.cfi_def_cfa_offset 120
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 1384 0006 0346     		mov	r3, r0
 1385 0008 FB71     		strb	r3, [r7, #7]
 502:.\modem.c     **** 	/*
 503:.\modem.c     **** 	4.2.12 CDMA Data Connection
 504:.\modem.c     **** 	0 - CDMA Data connection deactivation request
 505:.\modem.c     **** 	1 - CDMA Data connection activation request
 506:.\modem.c     **** 	*/
 507:.\modem.c     **** 	
 508:.\modem.c     ****     char cmd[100];
 509:.\modem.c     ****     sprintf(cmd,"AT#CDMADC=%u\r",param);
 1386              		.loc 1 509 0
 1387 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1388 000c 07F10C02 		add	r2, r7, #12
 1389 0010 1046     		mov	r0, r2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 35


 1390 0012 0B49     		ldr	r1, .L119
 1391 0014 1A46     		mov	r2, r3
 1392 0016 FFF7FEFF 		bl	sprintf
 510:.\modem.c     ****     if(at_write_command(cmd,"OK",5000u) == 1u){      
 1393              		.loc 1 510 0
 1394 001a 07F10C03 		add	r3, r7, #12
 1395 001e 1846     		mov	r0, r3
 1396 0020 0849     		ldr	r1, .L119+4
 1397 0022 41F28832 		movw	r2, #5000
 1398 0026 FFF7FEFF 		bl	at_write_command
 1399 002a 0346     		mov	r3, r0
 1400 002c 012B     		cmp	r3, #1
 1401 002e 01D1     		bne	.L116
 511:.\modem.c     ****         return 1u;
 1402              		.loc 1 511 0
 1403 0030 0123     		movs	r3, #1
 1404 0032 00E0     		b	.L118
 1405              	.L116:
 512:.\modem.c     ****     }
 513:.\modem.c     ****     /* Write to SD Card debugger
 514:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 515:.\modem.c     ****     */
 516:.\modem.c     **** 
 517:.\modem.c     ****     return 0u;  
 1406              		.loc 1 517 0
 1407 0034 0023     		movs	r3, #0
 1408              	.L118:
 518:.\modem.c     **** }
 1409              		.loc 1 518 0
 1410 0036 1846     		mov	r0, r3
 1411 0038 7037     		adds	r7, r7, #112
 1412 003a BD46     		mov	sp, r7
 1413              		@ sp needed
 1414 003c 80BD     		pop	{r7, pc}
 1415              	.L120:
 1416 003e 00BF     		.align	2
 1417              	.L119:
 1418 0040 B4000000 		.word	.LC16
 1419 0044 14000000 		.word	.LC2
 1420              		.cfi_endproc
 1421              	.LFE78:
 1422              		.size	modem_enable_CDMA_data, .-modem_enable_CDMA_data
 1423              		.section	.rodata
 1424 00c2 0000     		.align	2
 1425              	.LC17:
 1426 00c4 41542343 		.ascii	"AT#CDMADC?\015\000"
 1426      444D4144 
 1426      433F0D00 
 1427              		.section	.text.modem_test_CDMA_data,"ax",%progbits
 1428              		.align	2
 1429              		.global	modem_test_CDMA_data
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	modem_test_CDMA_data, %function
 1433              	modem_test_CDMA_data:
 1434              	.LFB79:
 519:.\modem.c     **** 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 36


 520:.\modem.c     **** uint8 modem_test_CDMA_data(){
 1435              		.loc 1 520 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 00AF     		add	r7, sp, #0
 1444              		.cfi_def_cfa_register 7
 521:.\modem.c     **** 	
 522:.\modem.c     ****     if(at_write_command("AT#CDMADC?\r","OK",1000u) == 1u){      
 1445              		.loc 1 522 0
 1446 0004 0648     		ldr	r0, .L124
 1447 0006 0749     		ldr	r1, .L124+4
 1448 0008 4FF47A72 		mov	r2, #1000
 1449 000c FFF7FEFF 		bl	at_write_command
 1450 0010 0346     		mov	r3, r0
 1451 0012 012B     		cmp	r3, #1
 1452 0014 01D1     		bne	.L122
 523:.\modem.c     ****         return 1u;
 1453              		.loc 1 523 0
 1454 0016 0123     		movs	r3, #1
 1455 0018 00E0     		b	.L123
 1456              	.L122:
 524:.\modem.c     ****     }
 525:.\modem.c     ****     /* Write to SD Card debugger
 526:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 527:.\modem.c     ****     */
 528:.\modem.c     **** 
 529:.\modem.c     ****     return 0u;	
 1457              		.loc 1 529 0
 1458 001a 0023     		movs	r3, #0
 1459              	.L123:
 530:.\modem.c     **** }
 1460              		.loc 1 530 0
 1461 001c 1846     		mov	r0, r3
 1462 001e 80BD     		pop	{r7, pc}
 1463              	.L125:
 1464              		.align	2
 1465              	.L124:
 1466 0020 C4000000 		.word	.LC17
 1467 0024 14000000 		.word	.LC2
 1468              		.cfi_endproc
 1469              	.LFE79:
 1470              		.size	modem_test_CDMA_data, .-modem_test_CDMA_data
 1471              		.section	.rodata
 1472              		.align	2
 1473              	.LC18:
 1474 00d0 41542355 		.ascii	"AT#USERID=\"%s\"\015\000"
 1474      53455249 
 1474      443D2225 
 1474      73220D00 
 1475              		.section	.text.modem_set_user,"ax",%progbits
 1476              		.align	2
 1477              		.global	modem_set_user
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 37


 1478              		.thumb
 1479              		.thumb_func
 1480              		.type	modem_set_user, %function
 1481              	modem_set_user:
 1482              	.LFB80:
 531:.\modem.c     **** 
 532:.\modem.c     **** uint8 modem_set_user(char* user) {
 1483              		.loc 1 532 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 112
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 9CB0     		sub	sp, sp, #112
 1492              		.cfi_def_cfa_offset 120
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 533:.\modem.c     **** 	
 534:.\modem.c     ****     char cmd[100];
 535:.\modem.c     ****     sprintf(cmd,"AT#USERID=\"%s\"\r",user);		
 1496              		.loc 1 535 0
 1497 0008 07F10C03 		add	r3, r7, #12
 1498 000c 1846     		mov	r0, r3
 1499 000e 0B49     		ldr	r1, .L130
 1500 0010 7A68     		ldr	r2, [r7, #4]
 1501 0012 FFF7FEFF 		bl	sprintf
 536:.\modem.c     **** 	
 537:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1502              		.loc 1 537 0
 1503 0016 07F10C03 		add	r3, r7, #12
 1504 001a 1846     		mov	r0, r3
 1505 001c 0849     		ldr	r1, .L130+4
 1506 001e 4FF47A72 		mov	r2, #1000
 1507 0022 FFF7FEFF 		bl	at_write_command
 1508 0026 0346     		mov	r3, r0
 1509 0028 012B     		cmp	r3, #1
 1510 002a 01D1     		bne	.L127
 538:.\modem.c     ****         return 1u;
 1511              		.loc 1 538 0
 1512 002c 0123     		movs	r3, #1
 1513 002e 00E0     		b	.L129
 1514              	.L127:
 539:.\modem.c     ****     }
 540:.\modem.c     ****     /* Write to SD Card debugger
 541:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 542:.\modem.c     ****     */
 543:.\modem.c     **** 	
 544:.\modem.c     **** 	return 0u;	
 1515              		.loc 1 544 0
 1516 0030 0023     		movs	r3, #0
 1517              	.L129:
 545:.\modem.c     **** }
 1518              		.loc 1 545 0
 1519 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 38


 1520 0034 7037     		adds	r7, r7, #112
 1521 0036 BD46     		mov	sp, r7
 1522              		@ sp needed
 1523 0038 80BD     		pop	{r7, pc}
 1524              	.L131:
 1525 003a 00BF     		.align	2
 1526              	.L130:
 1527 003c D0000000 		.word	.LC18
 1528 0040 14000000 		.word	.LC2
 1529              		.cfi_endproc
 1530              	.LFE80:
 1531              		.size	modem_set_user, .-modem_set_user
 1532              		.section	.rodata
 1533              		.align	2
 1534              	.LC19:
 1535 00e0 41542350 		.ascii	"AT#PASSW=\"%s\"\015\000"
 1535      41535357 
 1535      3D222573 
 1535      220D00
 1536              		.section	.text.modem_set_password,"ax",%progbits
 1537              		.align	2
 1538              		.global	modem_set_password
 1539              		.thumb
 1540              		.thumb_func
 1541              		.type	modem_set_password, %function
 1542              	modem_set_password:
 1543              	.LFB81:
 546:.\modem.c     **** 
 547:.\modem.c     **** uint8 modem_set_password(char* pass) {
 1544              		.loc 1 547 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 112
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 9CB0     		sub	sp, sp, #112
 1553              		.cfi_def_cfa_offset 120
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 7860     		str	r0, [r7, #4]
 548:.\modem.c     **** 	
 549:.\modem.c     ****     char cmd[100];
 550:.\modem.c     ****     sprintf(cmd,"AT#PASSW=\"%s\"\r",pass);		
 1557              		.loc 1 550 0
 1558 0008 07F10C03 		add	r3, r7, #12
 1559 000c 1846     		mov	r0, r3
 1560 000e 0B49     		ldr	r1, .L136
 1561 0010 7A68     		ldr	r2, [r7, #4]
 1562 0012 FFF7FEFF 		bl	sprintf
 551:.\modem.c     **** 	
 552:.\modem.c     ****     if(at_write_command(cmd,"OK",1000u) == 1u){      
 1563              		.loc 1 552 0
 1564 0016 07F10C03 		add	r3, r7, #12
 1565 001a 1846     		mov	r0, r3
 1566 001c 0849     		ldr	r1, .L136+4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 39


 1567 001e 4FF47A72 		mov	r2, #1000
 1568 0022 FFF7FEFF 		bl	at_write_command
 1569 0026 0346     		mov	r3, r0
 1570 0028 012B     		cmp	r3, #1
 1571 002a 01D1     		bne	.L133
 553:.\modem.c     ****         return 1u;
 1572              		.loc 1 553 0
 1573 002c 0123     		movs	r3, #1
 1574 002e 00E0     		b	.L135
 1575              	.L133:
 554:.\modem.c     ****     }
 555:.\modem.c     ****     /* Write to SD Card debugger
 556:.\modem.c     ****     else debug_write("(AT#SGACT=1,1) No IP Address Assigned.");
 557:.\modem.c     ****     */
 558:.\modem.c     **** 	
 559:.\modem.c     **** 	return 0u;	
 1576              		.loc 1 559 0
 1577 0030 0023     		movs	r3, #0
 1578              	.L135:
 560:.\modem.c     **** }
 1579              		.loc 1 560 0
 1580 0032 1846     		mov	r0, r3
 1581 0034 7037     		adds	r7, r7, #112
 1582 0036 BD46     		mov	sp, r7
 1583              		@ sp needed
 1584 0038 80BD     		pop	{r7, pc}
 1585              	.L137:
 1586 003a 00BF     		.align	2
 1587              	.L136:
 1588 003c E0000000 		.word	.LC19
 1589 0040 14000000 		.word	.LC2
 1590              		.cfi_endproc
 1591              	.LFE81:
 1592              		.size	modem_set_password, .-modem_set_password
 1593              		.section	.rodata
 1594 00ef 00       		.align	2
 1595              	.LC20:
 1596 00f0 41542353 		.ascii	"AT#SKTD=0,80,\"www.google.com\"\015\012\000"
 1596      4B54443D 
 1596      302C3830 
 1596      2C227777 
 1596      772E676F 
 1597              		.align	2
 1598              	.LC21:
 1599 0110 434F4E4E 		.ascii	"CONNECT\000"
 1599      45435400 
 1600              		.align	2
 1601              	.LC22:
 1602 0118 47455420 		.ascii	"GET /get_status/ HTTP/1.0\015\012\000"
 1602      2F676574 
 1602      5F737461 
 1602      7475732F 
 1602      20485454 
 1603              		.align	2
 1604              	.LC23:
 1605 0134 00       		.ascii	"\000"
 1606 0135 000000   		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 40


 1607              	.LC24:
 1608 0138 0D0A00   		.ascii	"\015\012\000"
 1609              		.section	.text.modem_get_google,"ax",%progbits
 1610              		.align	2
 1611              		.global	modem_get_google
 1612              		.thumb
 1613              		.thumb_func
 1614              		.type	modem_get_google, %function
 1615              	modem_get_google:
 1616              	.LFB82:
 561:.\modem.c     **** uint8 modem_get_google(){
 1617              		.loc 1 561 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 1000
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 ADF57A7D 		sub	sp, sp, #1000
 1626              		.cfi_def_cfa_offset 1008
 1627 0006 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
 562:.\modem.c     **** 
 563:.\modem.c     ****     // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 564:.\modem.c     ****     if( modem_state == MODEM_STATE_READY || modem_connect() != 0 ){ 
 1629              		.loc 1 564 0
 1630 0008 1D4B     		ldr	r3, .L142
 1631 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 000c 032B     		cmp	r3, #3
 1633 000e 04D0     		beq	.L139
 1634              		.loc 1 564 0 is_stmt 0 discriminator 1
 1635 0010 FFF7FEFF 		bl	modem_connect
 1636 0014 0346     		mov	r3, r0
 1637 0016 002B     		cmp	r3, #0
 1638 0018 2AD0     		beq	.L140
 1639              	.L139:
 565:.\modem.c     ****         
 566:.\modem.c     ****         if(at_write_command("AT#SKTD=0,80,\"www.google.com\"\r\n","CONNECT",10000u) != 0){
 1640              		.loc 1 566 0 is_stmt 1
 1641 001a 1A48     		ldr	r0, .L142+4
 1642 001c 1A49     		ldr	r1, .L142+8
 1643 001e 42F21072 		movw	r2, #10000
 1644 0022 FFF7FEFF 		bl	at_write_command
 1645 0026 0346     		mov	r3, r0
 1646 0028 002B     		cmp	r3, #0
 1647 002a 21D0     		beq	.L140
 1648              	.LBB3:
 567:.\modem.c     ****             
 568:.\modem.c     ****             char get_str[MAX_PACKET_LENGTH], key_str[100];
 569:.\modem.c     ****             
 570:.\modem.c     ****             //sprintf(get_str,"GET / HTTP/1.0\r\n");
 571:.\modem.c     ****             //sprintf(key_str,"Host: www.google.com\r\n");
 572:.\modem.c     ****             //sprintf(get_str,"GET /\r\n");
 573:.\modem.c     ****             //sprintf(get_str,"%s%s",
 574:.\modem.c     ****             //    get_str,
 575:.\modem.c     ****             //    "\r\n");
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 41


 576:.\modem.c     ****             
 577:.\modem.c     ****             uart_string_reset();
 1649              		.loc 1 577 0
 1650 002c FFF7FEFF 		bl	uart_string_reset
 578:.\modem.c     ****             
 579:.\modem.c     ****             //at_write_command(get_str,"",15000u);
 580:.\modem.c     **** 			
 581:.\modem.c     **** 			at_write_command("GET /get_status/ HTTP/1.0\r\n","",15000u);
 1651              		.loc 1 581 0
 1652 0030 1648     		ldr	r0, .L142+12
 1653 0032 1749     		ldr	r1, .L142+16
 1654 0034 43F69822 		movw	r2, #15000
 1655 0038 FFF7FEFF 		bl	at_write_command
 582:.\modem.c     **** 			//CyDelay(1000u);
 583:.\modem.c     **** 			//at_write_command("Host: www.google.com\r\n","",15000u);
 584:.\modem.c     **** 			CyDelay(1000u);
 1656              		.loc 1 584 0
 1657 003c 4FF47A70 		mov	r0, #1000
 1658 0040 FFF7FEFF 		bl	CyDelay
 585:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1659              		.loc 1 585 0
 1660 0044 1348     		ldr	r0, .L142+20
 1661 0046 1249     		ldr	r1, .L142+16
 1662 0048 43F69822 		movw	r2, #15000
 1663 004c FFF7FEFF 		bl	at_write_command
 586:.\modem.c     **** 			CyDelay(1000u);
 1664              		.loc 1 586 0
 1665 0050 4FF47A70 		mov	r0, #1000
 1666 0054 FFF7FEFF 		bl	CyDelay
 587:.\modem.c     **** 			at_write_command("\r\n","",15000u);
 1667              		.loc 1 587 0
 1668 0058 0E48     		ldr	r0, .L142+20
 1669 005a 0D49     		ldr	r1, .L142+16
 1670 005c 43F69822 		movw	r2, #15000
 1671 0060 FFF7FEFF 		bl	at_write_command
 588:.\modem.c     **** 			
 589:.\modem.c     **** 			CyDelay(15000u);
 1672              		.loc 1 589 0
 1673 0064 43F69820 		movw	r0, #15000
 1674 0068 FFF7FEFF 		bl	CyDelay
 590:.\modem.c     ****             
 591:.\modem.c     **** 			// Just return regardless
 592:.\modem.c     **** 			return 1u;
 1675              		.loc 1 592 0
 1676 006c 0123     		movs	r3, #1
 1677 006e 02E0     		b	.L141
 1678              	.L140:
 1679              	.LBE3:
 593:.\modem.c     ****             /*
 594:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 595:.\modem.c     ****                 // Read GET response from the buffer
 596:.\modem.c     ****                 uart_string_reset();
 597:.\modem.c     ****                 //CyDelay(5000u);
 598:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 599:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 600:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 601:.\modem.c     ****                 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 42


 602:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 603:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 604:.\modem.c     **** 
 605:.\modem.c     ****             }
 606:.\modem.c     ****             */
 607:.\modem.c     ****         }
 608:.\modem.c     ****         
 609:.\modem.c     ****     }
 610:.\modem.c     ****     
 611:.\modem.c     ****     //debug_write("MAX_GET_ATTEMPTS Exceeded.");
 612:.\modem.c     ****     modem_disconnect();
 1680              		.loc 1 612 0
 1681 0070 FFF7FEFF 		bl	modem_disconnect
 613:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1682              		.loc 1 613 0
 1683 0074 0023     		movs	r3, #0
 1684              	.L141:
 614:.\modem.c     **** }
 1685              		.loc 1 614 0
 1686 0076 1846     		mov	r0, r3
 1687 0078 07F57A77 		add	r7, r7, #1000
 1688 007c BD46     		mov	sp, r7
 1689              		@ sp needed
 1690 007e 80BD     		pop	{r7, pc}
 1691              	.L143:
 1692              		.align	2
 1693              	.L142:
 1694 0080 00000000 		.word	modem_state
 1695 0084 F0000000 		.word	.LC20
 1696 0088 10010000 		.word	.LC21
 1697 008c 18010000 		.word	.LC22
 1698 0090 34010000 		.word	.LC23
 1699 0094 38010000 		.word	.LC24
 1700              		.cfi_endproc
 1701              	.LFE82:
 1702              		.size	modem_get_google, .-modem_get_google
 1703              		.section	.rodata
 1704 013b 00       		.align	2
 1705              	.LC25:
 1706 013c 41542353 		.ascii	"AT#SD=1,0,80,\"storm.chordsrt.com\",0,0,1\015\000"
 1706      443D312C 
 1706      302C3830 
 1706      2C227374 
 1706      6F726D2E 
 1707 0165 000000   		.align	2
 1708              	.LC26:
 1709 0168 25732564 		.ascii	"%s%d%s%s%s\000"
 1709      25732573 
 1709      257300
 1710 0173 00       		.align	2
 1711              	.LC27:
 1712 0174 47455420 		.ascii	"GET /measurements/url_create?instrument_id=\000"
 1712      2F6D6561 
 1712      73757265 
 1712      6D656E74 
 1712      732F7572 
 1713              		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 43


 1714              	.LC28:
 1715 01a0 26646570 		.ascii	"&depth=\000"
 1715      74683D00 
 1716              		.align	2
 1717              	.LC29:
 1718 01a8 266B6579 		.ascii	"&key=wireless&test HTTP/1.0\015\012\000"
 1718      3D776972 
 1718      656C6573 
 1718      73267465 
 1718      73742048 
 1719              		.section	.text.modem_send_packet,"ax",%progbits
 1720              		.align	2
 1721              		.global	modem_send_packet
 1722              		.thumb
 1723              		.thumb_func
 1724              		.type	modem_send_packet, %function
 1725              	modem_send_packet:
 1726              	.LFB83:
 615:.\modem.c     **** 
 616:.\modem.c     **** // send packet to Xively server
 617:.\modem.c     **** uint8 modem_send_packet(char* body){
 1727              		.loc 1 617 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 1008
 1730              		@ frame_needed = 1, uses_anonymous_args = 0
 1731 0000 80B5     		push	{r7, lr}
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 7, -8
 1734              		.cfi_offset 14, -4
 1735 0002 ADF5806D 		sub	sp, sp, #1024
 1736              		.cfi_def_cfa_offset 1032
 1737 0006 04AF     		add	r7, sp, #16
 1738              		.cfi_def_cfa 7, 1016
 1739 0008 3B1D     		adds	r3, r7, #4
 1740 000a 1860     		str	r0, [r3]
 618:.\modem.c     **** 
 619:.\modem.c     **** 	// Handle retries in main()
 620:.\modem.c     ****     //uint8 attempts = 0;
 621:.\modem.c     ****     //for(attempts = 0; attempts < MAX_SEND_ATTEMPTS; attempts++) {
 622:.\modem.c     ****         
 623:.\modem.c     ****     // Proceed if modem is already connected.
 624:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1741              		.loc 1 624 0
 1742 000c 154B     		ldr	r3, .L147
 1743 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1744 0010 032B     		cmp	r3, #3
 1745 0012 21D1     		bne	.L145
 625:.\modem.c     **** 		// Reset uart for incoming data from modem
 626:.\modem.c     ****         uart_string_reset();
 1746              		.loc 1 626 0
 1747 0014 FFF7FEFF 		bl	uart_string_reset
 627:.\modem.c     **** 			
 628:.\modem.c     **** 		// Connect to web server
 629:.\modem.c     ****         //if(at_write_command("AT#SKTD=1,80,\"api.xively.com\",0,0\r","CONNECT",5000u) != 0){
 630:.\modem.c     **** 		if(at_write_command("AT#SD=1,0,80,\"storm.chordsrt.com\",0,0,1\r","OK",15000u) != 0){
 1748              		.loc 1 630 0
 1749 0018 1348     		ldr	r0, .L147+4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 44


 1750 001a 1449     		ldr	r1, .L147+8
 1751 001c 43F69822 		movw	r2, #15000
 1752 0020 FFF7FEFF 		bl	at_write_command
 1753 0024 0346     		mov	r3, r0
 1754 0026 002B     		cmp	r3, #0
 1755 0028 16D0     		beq	.L145
 1756              	.LBB4:
 631:.\modem.c     ****             char put_str[MAX_PACKET_LENGTH];
 632:.\modem.c     ****             sprintf(put_str, "%s%d%s%s%s", "GET /measurements/url_create?instrument_id=", NODE_NUMB
 1757              		.loc 1 632 0
 1758 002a 07F10803 		add	r3, r7, #8
 1759 002e 104A     		ldr	r2, .L147+12
 1760 0030 0092     		str	r2, [sp]
 1761 0032 3A1D     		adds	r2, r7, #4
 1762 0034 1268     		ldr	r2, [r2]
 1763 0036 0192     		str	r2, [sp, #4]
 1764 0038 0E4A     		ldr	r2, .L147+16
 1765 003a 0292     		str	r2, [sp, #8]
 1766 003c 1846     		mov	r0, r3
 1767 003e 0E49     		ldr	r1, .L147+20
 1768 0040 0E4A     		ldr	r2, .L147+24
 1769 0042 0223     		movs	r3, #2
 1770 0044 FFF7FEFF 		bl	sprintf
 633:.\modem.c     ****                     "&depth=", body, "&key=wireless&test HTTP/1.0\r\n");
 634:.\modem.c     **** 		//if(at_write_command("AT#SD=1,0,80,\"www.google.com\",0,0\r\n","CONNECT",15000u) != 0){
 635:.\modem.c     ****             at_write_command(put_str, "", 2000u);
 1771              		.loc 1 635 0
 1772 0048 07F10803 		add	r3, r7, #8
 1773 004c 1846     		mov	r0, r3
 1774 004e 0C49     		ldr	r1, .L147+28
 1775 0050 4FF4FA62 		mov	r2, #2000
 1776 0054 FFF7FEFF 		bl	at_write_command
 1777              	.L145:
 1778              	.LBE4:
 636:.\modem.c     **** //		at_write_command("GET /measurements/url_create?instrument_id=1&depth=100&batVolt=108&key=wirele
 637:.\modem.c     **** /*			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 638:.\modem.c     **** 			// Write packet information to serial and send
 639:.\modem.c     **** 	            char put_str[MAX_PACKET_LENGTH], key_str[100];
 640:.\modem.c     **** 	            
 641:.\modem.c     **** 	            sprintf(put_str,"GET /measurements/url_create?instrument_id=1&depth=100&batVolt=108&ke
 642:.\modem.c     **** //	            sprintf(key_str,"X-ApiKey: %s\r\n", api_key);
 643:.\modem.c     **** 	            sprintf(put_str,"%s%s%s%s%d%s%s%s",
 644:.\modem.c     **** 	                put_str,
 645:.\modem.c     **** 	                key_str,
 646:.\modem.c     **** //	                "Host: api.xively.com\r\n",
 647:.\modem.c     **** //	                "Content-Length: ", strlen(body),
 648:.\modem.c     **** 	                "\r\n\r\n", body, "\r\n\032");
 649:.\modem.c     **** 	                
 650:.\modem.c     **** 				// Reset uart for incoming data from modem
 651:.\modem.c     **** 	            uart_string_reset();
 652:.\modem.c     **** 
 653:.\modem.c     **** 				if(at_write_command(put_str,"SRING: 1",10000u) != 0){
 654:.\modem.c     ****                     // Read GET response from the buffer
 655:.\modem.c     ****                     uart_string_reset();
 656:.\modem.c     ****                     //CyDelay(5000u);
 657:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","200 OK",10000u);
 658:.\modem.c     **** 					
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 45


 659:.\modem.c     ****                     return 1u;   // return 1 if succesfully sent sms
 660:.\modem.c     **** 
 661:.\modem.c     ****                 } */
 662:.\modem.c     **** 				/* GC 864
 663:.\modem.c     **** 	            if(at_write_command(put_str,"200 OK",15000u) != 0){
 664:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 665:.\modem.c     **** 	            }
 666:.\modem.c     **** 				*/
 667:.\modem.c     ****             }
 668:.\modem.c     ****             
 669:.\modem.c     ****             /* Write to SD Card debugger
 670:.\modem.c     ****             else {
 671:.\modem.c     ****                 debug_write("(AT#SSEND=1) Could not send data through connected socket.");
 672:.\modem.c     ****             }
 673:.\modem.c     ****             */
 674:.\modem.c     ****         }
 675:.\modem.c     ****         /* Write to SD Card debugger
 676:.\modem.c     ****         else {
 677:.\modem.c     ****             debug_write("(AT#SD=1,0,8081,\"api.xively.com\",0,0,1\r) Could not connect to server.")
 678:.\modem.c     ****         }
 679:.\modem.c     ****         */
 680:.\modem.c     ****             
 681:.\modem.c     ****     //}  
 682:.\modem.c     **** 	//modem_reset();
 683:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1779              		.loc 1 683 0
 1780 0058 0023     		movs	r3, #0
 684:.\modem.c     **** }
 1781              		.loc 1 684 0
 1782 005a 1846     		mov	r0, r3
 1783 005c 07F57C77 		add	r7, r7, #1008
 1784 0060 BD46     		mov	sp, r7
 1785              		@ sp needed
 1786 0062 80BD     		pop	{r7, pc}
 1787              	.L148:
 1788              		.align	2
 1789              	.L147:
 1790 0064 00000000 		.word	modem_state
 1791 0068 3C010000 		.word	.LC25
 1792 006c 14000000 		.word	.LC2
 1793 0070 A0010000 		.word	.LC28
 1794 0074 A8010000 		.word	.LC29
 1795 0078 68010000 		.word	.LC26
 1796 007c 74010000 		.word	.LC27
 1797 0080 34010000 		.word	.LC23
 1798              		.cfi_endproc
 1799              	.LFE83:
 1800              		.size	modem_send_packet, .-modem_send_packet
 1801              		.section	.rodata
 1802 01c6 0000     		.align	2
 1803              	.LC30:
 1804 01c8 41542353 		.ascii	"AT#SD=1,0,80,\"api.xively.com\",0,0,1\015\012\000"
 1804      443D312C 
 1804      302C3830 
 1804      2C226170 
 1804      692E7869 
 1805 01ee 0000     		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 46


 1806              	.LC31:
 1807 01f0 41542353 		.ascii	"AT#SSEND=1\015\000"
 1807      53454E44 
 1807      3D310D00 
 1808              		.align	2
 1809              	.LC32:
 1810 01fc 3E00     		.ascii	">\000"
 1811 01fe 0000     		.align	2
 1812              	.LC33:
 1813 0200 47455420 		.ascii	"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\015\012"
 1813      2F76322F 
 1813      66656564 
 1813      732F256C 
 1813      752E6373 
 1814 022f 00       		.ascii	"\000"
 1815              		.align	2
 1816              	.LC34:
 1817 0230 582D4170 		.ascii	"X-ApiKey: %s\015\012\000"
 1817      694B6579 
 1817      3A202573 
 1817      0D0A00
 1818 023f 00       		.align	2
 1819              	.LC35:
 1820 0240 25732573 		.ascii	"%s%s%s%s%s\000"
 1820      25732573 
 1820      257300
 1821 024b 00       		.align	2
 1822              	.LC36:
 1823 024c 486F7374 		.ascii	"Host: api.xively.com\015\012\000"
 1823      3A206170 
 1823      692E7869 
 1823      76656C79 
 1823      2E636F6D 
 1824 0263 00       		.align	2
 1825              	.LC37:
 1826 0264 41636365 		.ascii	"Accept: text/csv\015\012\000"
 1826      70743A20 
 1826      74657874 
 1826      2F637376 
 1826      0D0A00
 1827 0277 00       		.align	2
 1828              	.LC38:
 1829 0278 0D0A1A0D 		.ascii	"\015\012\032\015\000"
 1829      00
 1830 027d 000000   		.align	2
 1831              	.LC39:
 1832 0280 5352494E 		.ascii	"SRING: 1\000"
 1832      473A2031 
 1832      00
 1833 0289 000000   		.align	2
 1834              	.LC40:
 1835 028c 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1835      52454356 
 1835      3D312C31 
 1835      3030300D 
 1835      00
 1836 029d 000000   		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 47


 1837              	.LC41:
 1838 02a0 0D0A0D0A 		.ascii	"\015\012\015\012\000"
 1838      00
 1839              		.section	.text.modem_get_packet,"ax",%progbits
 1840              		.align	2
 1841              		.global	modem_get_packet
 1842              		.thumb
 1843              		.thumb_func
 1844              		.type	modem_get_packet, %function
 1845              	modem_get_packet:
 1846              	.LFB84:
 685:.\modem.c     **** 
 686:.\modem.c     **** 
 687:.\modem.c     **** // read packet from Xively server
 688:.\modem.c     **** uint8 modem_get_packet(char* packet, char* csv){    
 1847              		.loc 1 688 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 1112
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851 0000 80B5     		push	{r7, lr}
 1852              		.cfi_def_cfa_offset 8
 1853              		.cfi_offset 7, -8
 1854              		.cfi_offset 14, -4
 1855 0002 ADF58D6D 		sub	sp, sp, #1128
 1856              		.cfi_def_cfa_offset 1136
 1857 0006 04AF     		add	r7, sp, #16
 1858              		.cfi_def_cfa 7, 1120
 1859 0008 3B1D     		adds	r3, r7, #4
 1860 000a 1860     		str	r0, [r3]
 1861 000c 3B46     		mov	r3, r7
 1862 000e 1960     		str	r1, [r3]
 689:.\modem.c     **** 
 690:.\modem.c     **** 	// Check if request is too long
 691:.\modem.c     ****     if (strlen(csv) > 125) {
 1863              		.loc 1 691 0
 1864 0010 3B46     		mov	r3, r7
 1865 0012 1868     		ldr	r0, [r3]
 1866 0014 FFF7FEFF 		bl	strlen
 1867 0018 0346     		mov	r3, r0
 1868 001a 7D2B     		cmp	r3, #125
 1869 001c 01D9     		bls	.L150
 692:.\modem.c     ****         /* Write to SD Card debugger
 693:.\modem.c     ****         debug_write("modem_get_packet(): csv length > 100");
 694:.\modem.c     ****         */
 695:.\modem.c     ****         return 0u;
 1870              		.loc 1 695 0
 1871 001e 0023     		movs	r3, #0
 1872 0020 5BE0     		b	.L151
 1873              	.L150:
 696:.\modem.c     ****     }
 697:.\modem.c     **** 	
 698:.\modem.c     **** 	// Changed to handle looping in main()
 699:.\modem.c     ****     //uint8 attempts = 0;            
 700:.\modem.c     ****     //for(attempts = 0; attempts < MAX_GET_ATTEMPTS; attempts++) {
 701:.\modem.c     ****         // Proceed if modem is already connected.  Otherwise, try to join the network and proceed
 702:.\modem.c     ****     if( modem_state == MODEM_STATE_READY ){ 
 1874              		.loc 1 702 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 48


 1875 0022 304B     		ldr	r3, .L154
 1876 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1877 0026 032B     		cmp	r3, #3
 1878 0028 56D1     		bne	.L152
 703:.\modem.c     **** 		// Connect to server
 704:.\modem.c     ****         if(at_write_command("AT#SD=1,0,80,\"api.xively.com\",0,0,1\r\n","OK",20000u) != 0){
 1879              		.loc 1 704 0
 1880 002a 2F48     		ldr	r0, .L154+4
 1881 002c 2F49     		ldr	r1, .L154+8
 1882 002e 44F62062 		movw	r2, #20000
 1883 0032 FFF7FEFF 		bl	at_write_command
 1884 0036 0346     		mov	r3, r0
 1885 0038 002B     		cmp	r3, #0
 1886 003a 4DD0     		beq	.L152
 705:.\modem.c     **** 			
 706:.\modem.c     **** 			if(at_write_command("AT#SSEND=1\r",">",10000u) != 0){
 1887              		.loc 1 706 0
 1888 003c 2C48     		ldr	r0, .L154+12
 1889 003e 2D49     		ldr	r1, .L154+16
 1890 0040 42F21072 		movw	r2, #10000
 1891 0044 FFF7FEFF 		bl	at_write_command
 1892 0048 0346     		mov	r3, r0
 1893 004a 002B     		cmp	r3, #0
 1894 004c 44D0     		beq	.L152
 1895              	.LBB5:
 707:.\modem.c     **** 				// Write packet information to serial and send
 708:.\modem.c     **** 	            char get_str[MAX_PACKET_LENGTH], key_str[100];
 709:.\modem.c     **** 				
 710:.\modem.c     **** 	            sprintf(get_str,"GET /v2/feeds/%lu.csv?datastreams=%s HTTP/1.0\r\n", feed_id, csv);
 1896              		.loc 1 710 0
 1897 004e 2A4B     		ldr	r3, .L154+20
 1898 0050 1A68     		ldr	r2, [r3]
 1899 0052 07F17001 		add	r1, r7, #112
 1900 0056 3B46     		mov	r3, r7
 1901 0058 0846     		mov	r0, r1
 1902 005a 2849     		ldr	r1, .L154+24
 1903 005c 1B68     		ldr	r3, [r3]
 1904 005e FFF7FEFF 		bl	sprintf
 711:.\modem.c     **** 	            sprintf(key_str,"X-ApiKey: %s\r\n", api_key);
 1905              		.loc 1 711 0
 1906 0062 274B     		ldr	r3, .L154+28
 1907 0064 1B68     		ldr	r3, [r3]
 1908 0066 07F10C02 		add	r2, r7, #12
 1909 006a 1046     		mov	r0, r2
 1910 006c 2549     		ldr	r1, .L154+32
 1911 006e 1A46     		mov	r2, r3
 1912 0070 FFF7FEFF 		bl	sprintf
 712:.\modem.c     **** 	            sprintf(get_str,"%s%s%s%s%s",
 1913              		.loc 1 712 0
 1914 0074 07F17001 		add	r1, r7, #112
 1915 0078 07F17002 		add	r2, r7, #112
 1916 007c 07F10C03 		add	r3, r7, #12
 1917 0080 2148     		ldr	r0, .L154+36
 1918 0082 0090     		str	r0, [sp]
 1919 0084 2148     		ldr	r0, .L154+40
 1920 0086 0190     		str	r0, [sp, #4]
 1921 0088 2148     		ldr	r0, .L154+44
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 49


 1922 008a 0290     		str	r0, [sp, #8]
 1923 008c 0846     		mov	r0, r1
 1924 008e 2149     		ldr	r1, .L154+48
 1925 0090 FFF7FEFF 		bl	sprintf
 713:.\modem.c     **** 	                get_str,
 714:.\modem.c     **** 	                key_str,
 715:.\modem.c     **** 	                "Host: api.xively.com\r\n",
 716:.\modem.c     **** 	                "Accept: text/csv\r\n",
 717:.\modem.c     **** 	                "\r\n\032\r");
 718:.\modem.c     **** 	            
 719:.\modem.c     **** 				// Reset uart for incoming data from modem
 720:.\modem.c     **** 	            uart_string_reset();
 1926              		.loc 1 720 0
 1927 0094 FFF7FEFF 		bl	uart_string_reset
 721:.\modem.c     **** 				
 722:.\modem.c     **** 			    if(at_write_command(get_str,"SRING: 1",10000u) != 0){
 1928              		.loc 1 722 0
 1929 0098 07F17003 		add	r3, r7, #112
 1930 009c 1846     		mov	r0, r3
 1931 009e 1E49     		ldr	r1, .L154+52
 1932 00a0 42F21072 		movw	r2, #10000
 1933 00a4 FFF7FEFF 		bl	at_write_command
 1934 00a8 0346     		mov	r3, r0
 1935 00aa 002B     		cmp	r3, #0
 1936 00ac 14D0     		beq	.L152
 723:.\modem.c     ****                     // Read GET response from the buffer
 724:.\modem.c     ****                     uart_string_reset();
 1937              		.loc 1 724 0
 1938 00ae FFF7FEFF 		bl	uart_string_reset
 725:.\modem.c     ****                     //CyDelay(5000u);
 726:.\modem.c     ****                     at_write_command("AT#SRECV=1,1000\r","OK",10000u);
 1939              		.loc 1 726 0
 1940 00b2 1A48     		ldr	r0, .L154+56
 1941 00b4 0D49     		ldr	r1, .L154+8
 1942 00b6 42F21072 		movw	r2, #10000
 1943 00ba FFF7FEFF 		bl	at_write_command
 727:.\modem.c     ****                     //strcpy(packet, uart_received_string);
 728:.\modem.c     ****                     strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 1944              		.loc 1 728 0
 1945 00be 1848     		ldr	r0, .L154+60
 1946 00c0 1849     		ldr	r1, .L154+64
 1947 00c2 FFF7FEFF 		bl	strstr
 1948 00c6 0346     		mov	r3, r0
 1949 00c8 0433     		adds	r3, r3, #4
 1950 00ca 3A1D     		adds	r2, r7, #4
 1951 00cc 1068     		ldr	r0, [r2]
 1952 00ce 1946     		mov	r1, r3
 1953 00d0 FFF7FEFF 		bl	strcpy
 729:.\modem.c     ****                     
 730:.\modem.c     ****                     //debug_write("Packet received successfully.");
 731:.\modem.c     ****                     return 1u;   // return 1 if successful
 1954              		.loc 1 731 0
 1955 00d4 0123     		movs	r3, #1
 1956 00d6 00E0     		b	.L151
 1957              	.L152:
 1958              	.LBE5:
 732:.\modem.c     **** 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 50


 733:.\modem.c     ****                 }
 734:.\modem.c     **** 				
 735:.\modem.c     **** 				/* GC864
 736:.\modem.c     **** 	            if(at_write_command(get_str,"200 OK",15000u) != 0){
 737:.\modem.c     **** 					strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 738:.\modem.c     **** 	                return 1u;   // return 1 if HTTP request was successful
 739:.\modem.c     **** 	            }
 740:.\modem.c     **** 				*/
 741:.\modem.c     ****             }
 742:.\modem.c     **** 			/* OLD, method used AT#SD=1,0,80,\"api.xively.com\",0,0,1 combined with SSEND
 743:.\modem.c     ****             if(at_write_command(get_str,"SRING: 1",15000u) != 0){
 744:.\modem.c     ****                 // Read GET response from the buffer
 745:.\modem.c     ****                 uart_string_reset();
 746:.\modem.c     ****                 //CyDelay(5000u);
 747:.\modem.c     ****                 at_write_command("AT#SRECV=1,700\r","OK",15000u);
 748:.\modem.c     ****                 //strcpy(packet, uart_received_string);
 749:.\modem.c     ****                 strcpy(packet, strstr(uart_received_string, "\r\n\r\n")+strlen("\r\n\r\n"));
 750:.\modem.c     ****                 
 751:.\modem.c     ****                 CyDelay(1000u); //debug_write("Packet received successfully.");
 752:.\modem.c     ****                 return 1u;   // return 1 if succesfully sent sms
 753:.\modem.c     **** 
 754:.\modem.c     ****             }
 755:.\modem.c     **** 			*/
 756:.\modem.c     **** 			
 757:.\modem.c     ****             /* Write to SD Card debugger
 758:.\modem.c     ****             else {
 759:.\modem.c     ****                 debug_write("(at_write_command(sendBuffer,\"OK\"...) Data sent unsuccessfully.");
 760:.\modem.c     ****             }
 761:.\modem.c     ****             */
 762:.\modem.c     **** 
 763:.\modem.c     ****             //uint8 disconnected = modem_disconnect();
 764:.\modem.c     ****         }
 765:.\modem.c     ****             /* Write to SD Card debugger
 766:.\modem.c     ****             else {
 767:.\modem.c     ****                 debug_write("(AT#SD=1,0,80,\"api.xively.com\",0,0,1) Could not connect to server.")
 768:.\modem.c     ****             }
 769:.\modem.c     ****             */
 770:.\modem.c     ****         /*}
 771:.\modem.c     ****         
 772:.\modem.c     ****         if (attempts < MAX_GET_ATTEMPTS-1) { // Don't reset the modem on the last attempt since it 
 773:.\modem.c     ****             modem_reset();
 774:.\modem.c     ****         }
 775:.\modem.c     ****         */
 776:.\modem.c     ****     }
 777:.\modem.c     ****     //modem_disconnect();
 778:.\modem.c     ****     return 0u;   // return 0 if failure to send sms
 1959              		.loc 1 778 0
 1960 00d8 0023     		movs	r3, #0
 1961              	.L151:
 779:.\modem.c     **** }
 1962              		.loc 1 779 0
 1963 00da 1846     		mov	r0, r3
 1964 00dc 07F58B67 		add	r7, r7, #1112
 1965 00e0 BD46     		mov	sp, r7
 1966              		@ sp needed
 1967 00e2 80BD     		pop	{r7, pc}
 1968              	.L155:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 51


 1969              		.align	2
 1970              	.L154:
 1971 00e4 00000000 		.word	modem_state
 1972 00e8 C8010000 		.word	.LC30
 1973 00ec 14000000 		.word	.LC2
 1974 00f0 F0010000 		.word	.LC31
 1975 00f4 FC010000 		.word	.LC32
 1976 00f8 00000000 		.word	feed_id
 1977 00fc 00020000 		.word	.LC33
 1978 0100 00000000 		.word	api_key
 1979 0104 30020000 		.word	.LC34
 1980 0108 4C020000 		.word	.LC36
 1981 010c 64020000 		.word	.LC37
 1982 0110 78020000 		.word	.LC38
 1983 0114 40020000 		.word	.LC35
 1984 0118 80020000 		.word	.LC39
 1985 011c 8C020000 		.word	.LC40
 1986 0120 00000000 		.word	uart_received_string
 1987 0124 A0020000 		.word	.LC41
 1988              		.cfi_endproc
 1989              	.LFE84:
 1990              		.size	modem_get_packet, .-modem_get_packet
 1991              		.section	.rodata
 1992 02a5 000000   		.align	2
 1993              	.LC42:
 1994 02a8 6C6F636B 		.ascii	"lock\000"
 1994      00
 1995 02ad 000000   		.align	2
 1996              	.LC43:
 1997 02b0 7B226D65 		.ascii	"{\"method\":\"put\",\"resource\":\"/feeds/%lu\",\"h"
 1997      74686F64 
 1997      223A2270 
 1997      7574222C 
 1997      22726573 
 1998 02da 65616465 		.ascii	"eaders\":{\"X-ApiKey\":\"%s\"},\"body\":{\"version\""
 1998      7273223A 
 1998      7B22582D 
 1998      4170694B 
 1998      6579223A 
 1999 0305 3A22312E 		.ascii	":\"1.0.0\",\"datastreams\":[{ \"id\" : \"lock\", \""
 1999      302E3022 
 1999      2C226461 
 1999      74617374 
 1999      7265616D 
 2000 032f 63757272 		.ascii	"current_value\" : \"%u\"}]}}\000"
 2000      656E745F 
 2000      76616C75 
 2000      6522203A 
 2000      20222575 
 2001 0349 000000   		.section	.text.modem_acquire_lock,"ax",%progbits
 2002              		.align	2
 2003              		.global	modem_acquire_lock
 2004              		.thumb
 2005              		.thumb_func
 2006              		.type	modem_acquire_lock, %function
 2007              	modem_acquire_lock:
 2008              	.LFB85:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 52


 780:.\modem.c     **** 
 781:.\modem.c     **** uint8 modem_acquire_lock(){
 2009              		.loc 1 781 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 320
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 80B5     		push	{r7, lr}
 2014              		.cfi_def_cfa_offset 8
 2015              		.cfi_offset 7, -8
 2016              		.cfi_offset 14, -4
 2017 0002 D2B0     		sub	sp, sp, #328
 2018              		.cfi_def_cfa_offset 336
 2019 0004 02AF     		add	r7, sp, #8
 2020              		.cfi_def_cfa 7, 328
 782:.\modem.c     ****     
 783:.\modem.c     ****     /*
 784:.\modem.c     ****     if (lock_acquired == 1u) {
 785:.\modem.c     ****         return 1u;
 786:.\modem.c     ****     }
 787:.\modem.c     ****     */
 788:.\modem.c     ****     
 789:.\modem.c     ****     uint8 lock = 0u;
 2021              		.loc 1 789 0
 2022 0006 0023     		movs	r3, #0
 2023 0008 87F83331 		strb	r3, [r7, #307]
 790:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2024              		.loc 1 790 0
 2025 000c 0023     		movs	r3, #0
 2026 000e C7F83C31 		str	r3, [r7, #316]
 2027 0012 6423     		movs	r3, #100
 2028 0014 C7F83831 		str	r3, [r7, #312]
 2029 0018 0223     		movs	r3, #2
 2030 001a C7F83431 		str	r3, [r7, #308]
 791:.\modem.c     ****     char data_packet[300] = {0};
 2031              		.loc 1 791 0
 2032 001e 3B1D     		adds	r3, r7, #4
 2033 0020 1A46     		mov	r2, r3
 2034 0022 4FF49673 		mov	r3, #300
 2035 0026 1046     		mov	r0, r2
 2036 0028 0021     		movs	r1, #0
 2037 002a 1A46     		mov	r2, r3
 2038 002c FFF7FEFF 		bl	memset
 792:.\modem.c     ****             
 793:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2039              		.loc 1 793 0
 2040 0030 0023     		movs	r3, #0
 2041 0032 C7F83C31 		str	r3, [r7, #316]
 2042 0036 3DE0     		b	.L157
 2043              	.L160:
 794:.\modem.c     ****         if(modem_get_packet(data_packet,"lock")){
 2044              		.loc 1 794 0
 2045 0038 3B1D     		adds	r3, r7, #4
 2046 003a 1846     		mov	r0, r3
 2047 003c 2349     		ldr	r1, .L162
 2048 003e FFF7FEFF 		bl	modem_get_packet
 2049 0042 0346     		mov	r3, r0
 2050 0044 002B     		cmp	r3, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 53


 2051 0046 2CD0     		beq	.L158
 795:.\modem.c     ****             if(packet_get_uint8(data_packet, "lock", &lock) && lock == 0u){
 2052              		.loc 1 795 0
 2053 0048 3A1D     		adds	r2, r7, #4
 2054 004a 07F23313 		addw	r3, r7, #307
 2055 004e 1046     		mov	r0, r2
 2056 0050 1E49     		ldr	r1, .L162
 2057 0052 1A46     		mov	r2, r3
 2058 0054 FFF7FEFF 		bl	packet_get_uint8
 2059 0058 0346     		mov	r3, r0
 2060 005a 002B     		cmp	r3, #0
 2061 005c 21D0     		beq	.L158
 2062              		.loc 1 795 0 is_stmt 0 discriminator 1
 2063 005e 97F83331 		ldrb	r3, [r7, #307]	@ zero_extendqisi2
 2064 0062 002B     		cmp	r3, #0
 2065 0064 1DD1     		bne	.L158
 796:.\modem.c     ****             
 797:.\modem.c     ****                 memset(&data_packet[0],0,sizeof(data_packet));
 2066              		.loc 1 797 0 is_stmt 1
 2067 0066 3B1D     		adds	r3, r7, #4
 2068 0068 1846     		mov	r0, r3
 2069 006a 0021     		movs	r1, #0
 2070 006c 4FF49672 		mov	r2, #300
 2071 0070 FFF7FEFF 		bl	memset
 798:.\modem.c     ****                 sprintf(data_packet, "{"
 2072              		.loc 1 798 0
 2073 0074 164B     		ldr	r3, .L162+4
 2074 0076 1A68     		ldr	r2, [r3]
 2075 0078 164B     		ldr	r3, .L162+8
 2076 007a 1B68     		ldr	r3, [r3]
 2077 007c 391D     		adds	r1, r7, #4
 2078 007e 0120     		movs	r0, #1
 2079 0080 0090     		str	r0, [sp]
 2080 0082 0846     		mov	r0, r1
 2081 0084 1449     		ldr	r1, .L162+12
 2082 0086 FFF7FEFF 		bl	sprintf
 799:.\modem.c     ****                       "\"method\":\"put\","
 800:.\modem.c     ****                       "\"resource\":\"/feeds/%lu\","
 801:.\modem.c     ****                       "\"headers\":{\"X-ApiKey\":\"%s\"},"
 802:.\modem.c     ****                       "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 803:.\modem.c     ****                             "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 804:.\modem.c     ****                       "]}}",
 805:.\modem.c     ****                       feed_id,api_key,1u);
 806:.\modem.c     ****                       
 807:.\modem.c     ****                 if(modem_send_packet(data_packet)) {
 2083              		.loc 1 807 0
 2084 008a 3B1D     		adds	r3, r7, #4
 2085 008c 1846     		mov	r0, r3
 2086 008e FFF7FEFF 		bl	modem_send_packet
 2087 0092 0346     		mov	r3, r0
 2088 0094 002B     		cmp	r3, #0
 2089 0096 04D0     		beq	.L158
 808:.\modem.c     ****                     lock_acquired = 1u;
 2090              		.loc 1 808 0
 2091 0098 104B     		ldr	r3, .L162+16
 2092 009a 0122     		movs	r2, #1
 2093 009c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 54


 809:.\modem.c     ****                     return 1u;
 2094              		.loc 1 809 0
 2095 009e 0123     		movs	r3, #1
 2096 00a0 0FE0     		b	.L161
 2097              	.L158:
 810:.\modem.c     ****                 }
 811:.\modem.c     ****             }  
 812:.\modem.c     ****         }
 813:.\modem.c     ****         CyDelay(delay);
 2098              		.loc 1 813 0
 2099 00a2 D7F83801 		ldr	r0, [r7, #312]
 2100 00a6 FFF7FEFF 		bl	CyDelay
 793:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2101              		.loc 1 793 0
 2102 00aa D7F83C31 		ldr	r3, [r7, #316]
 2103 00ae 0133     		adds	r3, r3, #1
 2104 00b0 C7F83C31 		str	r3, [r7, #316]
 2105              	.L157:
 793:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2106              		.loc 1 793 0 is_stmt 0 discriminator 1
 2107 00b4 D7F83C21 		ldr	r2, [r7, #316]
 2108 00b8 D7F83431 		ldr	r3, [r7, #308]
 2109 00bc 9A42     		cmp	r2, r3
 2110 00be BBD3     		bcc	.L160
 814:.\modem.c     ****     }
 815:.\modem.c     ****          
 816:.\modem.c     ****     return 0u;
 2111              		.loc 1 816 0 is_stmt 1
 2112 00c0 0023     		movs	r3, #0
 2113              	.L161:
 817:.\modem.c     **** }
 2114              		.loc 1 817 0
 2115 00c2 1846     		mov	r0, r3
 2116 00c4 07F5A077 		add	r7, r7, #320
 2117 00c8 BD46     		mov	sp, r7
 2118              		@ sp needed
 2119 00ca 80BD     		pop	{r7, pc}
 2120              	.L163:
 2121              		.align	2
 2122              	.L162:
 2123 00cc A8020000 		.word	.LC42
 2124 00d0 00000000 		.word	feed_id
 2125 00d4 00000000 		.word	api_key
 2126 00d8 B0020000 		.word	.LC43
 2127 00dc 00000000 		.word	lock_acquired
 2128              		.cfi_endproc
 2129              	.LFE85:
 2130              		.size	modem_acquire_lock, .-modem_acquire_lock
 2131              		.section	.text.modem_release_lock,"ax",%progbits
 2132              		.align	2
 2133              		.global	modem_release_lock
 2134              		.thumb
 2135              		.thumb_func
 2136              		.type	modem_release_lock, %function
 2137              	modem_release_lock:
 2138              	.LFB86:
 818:.\modem.c     **** 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 55


 819:.\modem.c     **** uint8 modem_release_lock(){
 2139              		.loc 1 819 0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 312
 2142              		@ frame_needed = 1, uses_anonymous_args = 0
 2143 0000 80B5     		push	{r7, lr}
 2144              		.cfi_def_cfa_offset 8
 2145              		.cfi_offset 7, -8
 2146              		.cfi_offset 14, -4
 2147 0002 D0B0     		sub	sp, sp, #320
 2148              		.cfi_def_cfa_offset 328
 2149 0004 02AF     		add	r7, sp, #8
 2150              		.cfi_def_cfa 7, 320
 820:.\modem.c     ****     /*
 821:.\modem.c     ****     if (lock_acquired == 0u) {
 822:.\modem.c     ****         return 1u;
 823:.\modem.c     ****     }
 824:.\modem.c     ****     */
 825:.\modem.c     ****     
 826:.\modem.c     ****     uint32 i = 0u, delay = 100u, lock_attempts = 2u;    
 2151              		.loc 1 826 0
 2152 0006 0023     		movs	r3, #0
 2153 0008 C7F83431 		str	r3, [r7, #308]
 2154 000c 6423     		movs	r3, #100
 2155 000e C7F83031 		str	r3, [r7, #304]
 2156 0012 0223     		movs	r3, #2
 2157 0014 C7F82C31 		str	r3, [r7, #300]
 827:.\modem.c     ****     char data_packet[300] = {0};
 2158              		.loc 1 827 0
 2159 0018 3B46     		mov	r3, r7
 2160 001a 1A46     		mov	r2, r3
 2161 001c 4FF49673 		mov	r3, #300
 2162 0020 1046     		mov	r0, r2
 2163 0022 0021     		movs	r1, #0
 2164 0024 1A46     		mov	r2, r3
 2165 0026 FFF7FEFF 		bl	memset
 828:.\modem.c     ****     
 829:.\modem.c     ****     sprintf(data_packet, "{"
 2166              		.loc 1 829 0
 2167 002a 184B     		ldr	r3, .L170
 2168 002c 1A68     		ldr	r2, [r3]
 2169 002e 184B     		ldr	r3, .L170+4
 2170 0030 1B68     		ldr	r3, [r3]
 2171 0032 3946     		mov	r1, r7
 2172 0034 0020     		movs	r0, #0
 2173 0036 0090     		str	r0, [sp]
 2174 0038 0846     		mov	r0, r1
 2175 003a 1649     		ldr	r1, .L170+8
 2176 003c FFF7FEFF 		bl	sprintf
 830:.\modem.c     ****           "\"method\":\"put\","
 831:.\modem.c     ****           "\"resource\":\"/feeds/%lu\","
 832:.\modem.c     ****           "\"headers\":{\"X-ApiKey\":\"%s\"},"
 833:.\modem.c     ****           "\"body\":{\"version\":\"1.0.0\",\"datastreams\":["
 834:.\modem.c     ****                 "{ \"id\" : \"lock\", \"current_value\" : \"%u\"}"
 835:.\modem.c     ****           "]}}",
 836:.\modem.c     ****           feed_id, api_key, 0u);
 837:.\modem.c     ****         
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 56


 838:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2177              		.loc 1 838 0
 2178 0040 0023     		movs	r3, #0
 2179 0042 C7F83431 		str	r3, [r7, #308]
 2180 0046 14E0     		b	.L165
 2181              	.L168:
 839:.\modem.c     **** 
 840:.\modem.c     ****         if(modem_send_packet(data_packet)) {
 2182              		.loc 1 840 0
 2183 0048 3B46     		mov	r3, r7
 2184 004a 1846     		mov	r0, r3
 2185 004c FFF7FEFF 		bl	modem_send_packet
 2186 0050 0346     		mov	r3, r0
 2187 0052 002B     		cmp	r3, #0
 2188 0054 04D0     		beq	.L166
 841:.\modem.c     ****             lock_acquired = 0u;
 2189              		.loc 1 841 0
 2190 0056 104B     		ldr	r3, .L170+12
 2191 0058 0022     		movs	r2, #0
 2192 005a 1A70     		strb	r2, [r3]
 842:.\modem.c     ****             return 1u;
 2193              		.loc 1 842 0
 2194 005c 0123     		movs	r3, #1
 2195 005e 0FE0     		b	.L169
 2196              	.L166:
 843:.\modem.c     ****         }
 844:.\modem.c     ****         
 845:.\modem.c     ****         CyDelay(delay);
 2197              		.loc 1 845 0
 2198 0060 D7F83001 		ldr	r0, [r7, #304]
 2199 0064 FFF7FEFF 		bl	CyDelay
 838:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2200              		.loc 1 838 0
 2201 0068 D7F83431 		ldr	r3, [r7, #308]
 2202 006c 0133     		adds	r3, r3, #1
 2203 006e C7F83431 		str	r3, [r7, #308]
 2204              	.L165:
 838:.\modem.c     ****     for(i=0u; i < lock_attempts; i++) {
 2205              		.loc 1 838 0 is_stmt 0 discriminator 1
 2206 0072 D7F83421 		ldr	r2, [r7, #308]
 2207 0076 D7F82C31 		ldr	r3, [r7, #300]
 2208 007a 9A42     		cmp	r2, r3
 2209 007c E4D3     		bcc	.L168
 846:.\modem.c     ****     }
 847:.\modem.c     ****          
 848:.\modem.c     ****     return 0u;
 2210              		.loc 1 848 0 is_stmt 1
 2211 007e 0023     		movs	r3, #0
 2212              	.L169:
 849:.\modem.c     **** }
 2213              		.loc 1 849 0
 2214 0080 1846     		mov	r0, r3
 2215 0082 07F59C77 		add	r7, r7, #312
 2216 0086 BD46     		mov	sp, r7
 2217              		@ sp needed
 2218 0088 80BD     		pop	{r7, pc}
 2219              	.L171:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 57


 2220 008a 00BF     		.align	2
 2221              	.L170:
 2222 008c 00000000 		.word	feed_id
 2223 0090 00000000 		.word	api_key
 2224 0094 B0020000 		.word	.LC43
 2225 0098 00000000 		.word	lock_acquired
 2226              		.cfi_endproc
 2227              	.LFE86:
 2228              		.size	modem_release_lock, .-modem_release_lock
 2229              		.section	.text.uart_string_reset,"ax",%progbits
 2230              		.align	2
 2231              		.global	uart_string_reset
 2232              		.thumb
 2233              		.thumb_func
 2234              		.type	uart_string_reset, %function
 2235              	uart_string_reset:
 2236              	.LFB87:
 850:.\modem.c     **** 
 851:.\modem.c     **** void uart_string_reset(){
 2237              		.loc 1 851 0
 2238              		.cfi_startproc
 2239              		@ args = 0, pretend = 0, frame = 0
 2240              		@ frame_needed = 1, uses_anonymous_args = 0
 2241 0000 80B5     		push	{r7, lr}
 2242              		.cfi_def_cfa_offset 8
 2243              		.cfi_offset 7, -8
 2244              		.cfi_offset 14, -4
 2245 0002 00AF     		add	r7, sp, #0
 2246              		.cfi_def_cfa_register 7
 852:.\modem.c     ****     // reset uart_received_string to zero
 853:.\modem.c     ****     /*
 854:.\modem.c     ****     uint16 i = 0;
 855:.\modem.c     ****     
 856:.\modem.c     ****     for(i = 0; i < 700; i++){
 857:.\modem.c     ****         uart_received_string[i] = 0;
 858:.\modem.c     ****     }
 859:.\modem.c     ****     */
 860:.\modem.c     ****     memset(&uart_received_string[0],0,sizeof(uart_received_string));
 2247              		.loc 1 860 0
 2248 0004 0548     		ldr	r0, .L173
 2249 0006 0021     		movs	r1, #0
 2250 0008 4FF47A72 		mov	r2, #1000
 2251 000c FFF7FEFF 		bl	memset
 861:.\modem.c     ****     uart_string_index = 0;
 2252              		.loc 1 861 0
 2253 0010 034B     		ldr	r3, .L173+4
 2254 0012 0022     		movs	r2, #0
 2255 0014 1A80     		strh	r2, [r3]	@ movhi
 862:.\modem.c     ****     Telit_UART_ClearRxBuffer();
 2256              		.loc 1 862 0
 2257 0016 FFF7FEFF 		bl	Telit_UART_ClearRxBuffer
 863:.\modem.c     **** //    uart_ClearTxBuffer();
 864:.\modem.c     **** }
 2258              		.loc 1 864 0
 2259 001a 80BD     		pop	{r7, pc}
 2260              	.L174:
 2261              		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 58


 2262              	.L173:
 2263 001c 00000000 		.word	uart_received_string
 2264 0020 00000000 		.word	uart_string_index
 2265              		.cfi_endproc
 2266              	.LFE87:
 2267              		.size	uart_string_reset, .-uart_string_reset
 2268              		.section	.text.Telit_isr_rx,"ax",%progbits
 2269              		.align	2
 2270              		.global	Telit_isr_rx
 2271              		.thumb
 2272              		.thumb_func
 2273              		.type	Telit_isr_rx, %function
 2274              	Telit_isr_rx:
 2275              	.LFB88:
 865:.\modem.c     **** 
 866:.\modem.c     **** // this function fires when uart rx receives bytes (when modem is sending bytes)
 867:.\modem.c     **** CY_ISR(Telit_isr_rx){
 2276              		.loc 1 867 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 8
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280 0000 80B5     		push	{r7, lr}
 2281              		.cfi_def_cfa_offset 8
 2282              		.cfi_offset 7, -8
 2283              		.cfi_offset 14, -4
 2284 0002 82B0     		sub	sp, sp, #8
 2285              		.cfi_def_cfa_offset 16
 2286 0004 00AF     		add	r7, sp, #0
 2287              		.cfi_def_cfa_register 7
 868:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2288              		.loc 1 868 0
 2289 0006 11E0     		b	.L176
 2290              	.L177:
 2291              	.LBB6:
 869:.\modem.c     ****         // hold the next char in the rx register as a temporary variable
 870:.\modem.c     ****         char rx_char_hold = Telit_UART_GetChar();
 2292              		.loc 1 870 0
 2293 0008 FFF7FEFF 		bl	Telit_UART_GetChar
 2294 000c 0346     		mov	r3, r0
 2295 000e FB71     		strb	r3, [r7, #7]
 871:.\modem.c     ****         
 872:.\modem.c     ****         // store the char in uart_received_string
 873:.\modem.c     ****         if(rx_char_hold){
 2296              		.loc 1 873 0
 2297 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2298 0012 002B     		cmp	r3, #0
 2299 0014 0AD0     		beq	.L176
 874:.\modem.c     ****             uart_received_string[uart_string_index] = rx_char_hold;
 2300              		.loc 1 874 0
 2301 0016 094B     		ldr	r3, .L178
 2302 0018 1B88     		ldrh	r3, [r3]
 2303 001a 094A     		ldr	r2, .L178+4
 2304 001c F979     		ldrb	r1, [r7, #7]
 2305 001e D154     		strb	r1, [r2, r3]
 875:.\modem.c     ****             uart_string_index++;
 2306              		.loc 1 875 0
 2307 0020 064B     		ldr	r3, .L178
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 59


 2308 0022 1B88     		ldrh	r3, [r3]
 2309 0024 0133     		adds	r3, r3, #1
 2310 0026 9AB2     		uxth	r2, r3
 2311 0028 044B     		ldr	r3, .L178
 2312 002a 1A80     		strh	r2, [r3]	@ movhi
 2313              	.L176:
 2314              	.LBE6:
 868:.\modem.c     ****     while (Telit_UART_GetRxBufferSize()){
 2315              		.loc 1 868 0 discriminator 1
 2316 002c FFF7FEFF 		bl	Telit_UART_GetRxBufferSize
 2317 0030 0346     		mov	r3, r0
 2318 0032 002B     		cmp	r3, #0
 2319 0034 E8D1     		bne	.L177
 876:.\modem.c     ****         }
 877:.\modem.c     ****     }
 878:.\modem.c     **** }
 2320              		.loc 1 878 0
 2321 0036 0837     		adds	r7, r7, #8
 2322 0038 BD46     		mov	sp, r7
 2323              		@ sp needed
 2324 003a 80BD     		pop	{r7, pc}
 2325              	.L179:
 2326              		.align	2
 2327              	.L178:
 2328 003c 00000000 		.word	uart_string_index
 2329 0040 00000000 		.word	uart_received_string
 2330              		.cfi_endproc
 2331              	.LFE88:
 2332              		.size	Telit_isr_rx, .-Telit_isr_rx
 2333              		.text
 2334              	.Letext0:
 2335              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2336              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 2337              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2338              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 2339              		.section	.debug_info,"",%progbits
 2340              	.Ldebug_info0:
 2341 0000 63070000 		.4byte	0x763
 2342 0004 0400     		.2byte	0x4
 2343 0006 00000000 		.4byte	.Ldebug_abbrev0
 2344 000a 04       		.byte	0x4
 2345 000b 01       		.uleb128 0x1
 2346 000c C7000000 		.4byte	.LASF83
 2347 0010 01       		.byte	0x1
 2348 0011 5A000000 		.4byte	.LASF84
 2349 0015 9E010000 		.4byte	.LASF85
 2350 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2351 001d 00000000 		.4byte	0
 2352 0021 00000000 		.4byte	.Ldebug_line0
 2353 0025 02       		.uleb128 0x2
 2354 0026 01       		.byte	0x1
 2355 0027 06       		.byte	0x6
 2356 0028 D4020000 		.4byte	.LASF0
 2357 002c 02       		.uleb128 0x2
 2358 002d 01       		.byte	0x1
 2359 002e 08       		.byte	0x8
 2360 002f AE020000 		.4byte	.LASF1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 60


 2361 0033 02       		.uleb128 0x2
 2362 0034 02       		.byte	0x2
 2363 0035 05       		.byte	0x5
 2364 0036 B3000000 		.4byte	.LASF2
 2365 003a 02       		.uleb128 0x2
 2366 003b 02       		.byte	0x2
 2367 003c 07       		.byte	0x7
 2368 003d 14030000 		.4byte	.LASF3
 2369 0041 03       		.uleb128 0x3
 2370 0042 0C040000 		.4byte	.LASF9
 2371 0046 02       		.byte	0x2
 2372 0047 37       		.byte	0x37
 2373 0048 4C000000 		.4byte	0x4c
 2374 004c 02       		.uleb128 0x2
 2375 004d 04       		.byte	0x4
 2376 004e 05       		.byte	0x5
 2377 004f 28020000 		.4byte	.LASF4
 2378 0053 02       		.uleb128 0x2
 2379 0054 04       		.byte	0x4
 2380 0055 07       		.byte	0x7
 2381 0056 B2030000 		.4byte	.LASF5
 2382 005a 02       		.uleb128 0x2
 2383 005b 08       		.byte	0x8
 2384 005c 05       		.byte	0x5
 2385 005d FA010000 		.4byte	.LASF6
 2386 0061 02       		.uleb128 0x2
 2387 0062 08       		.byte	0x8
 2388 0063 07       		.byte	0x7
 2389 0064 E0020000 		.4byte	.LASF7
 2390 0068 04       		.uleb128 0x4
 2391 0069 04       		.byte	0x4
 2392 006a 05       		.byte	0x5
 2393 006b 696E7400 		.ascii	"int\000"
 2394 006f 02       		.uleb128 0x2
 2395 0070 04       		.byte	0x4
 2396 0071 07       		.byte	0x7
 2397 0072 F7020000 		.4byte	.LASF8
 2398 0076 03       		.uleb128 0x3
 2399 0077 4E030000 		.4byte	.LASF10
 2400 007b 03       		.byte	0x3
 2401 007c 41       		.byte	0x41
 2402 007d 41000000 		.4byte	0x41
 2403 0081 03       		.uleb128 0x3
 2404 0082 82030000 		.4byte	.LASF11
 2405 0086 04       		.byte	0x4
 2406 0087 A1       		.byte	0xa1
 2407 0088 2C000000 		.4byte	0x2c
 2408 008c 03       		.uleb128 0x3
 2409 008d 58010000 		.4byte	.LASF12
 2410 0091 04       		.byte	0x4
 2411 0092 A2       		.byte	0xa2
 2412 0093 3A000000 		.4byte	0x3a
 2413 0097 03       		.uleb128 0x3
 2414 0098 9F030000 		.4byte	.LASF13
 2415 009c 04       		.byte	0x4
 2416 009d A3       		.byte	0xa3
 2417 009e 53000000 		.4byte	0x53
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 61


 2418 00a2 02       		.uleb128 0x2
 2419 00a3 04       		.byte	0x4
 2420 00a4 04       		.byte	0x4
 2421 00a5 D5010000 		.4byte	.LASF14
 2422 00a9 02       		.uleb128 0x2
 2423 00aa 08       		.byte	0x8
 2424 00ab 04       		.byte	0x4
 2425 00ac D2030000 		.4byte	.LASF15
 2426 00b0 02       		.uleb128 0x2
 2427 00b1 01       		.byte	0x1
 2428 00b2 08       		.byte	0x8
 2429 00b3 36030000 		.4byte	.LASF16
 2430 00b7 02       		.uleb128 0x2
 2431 00b8 04       		.byte	0x4
 2432 00b9 07       		.byte	0x7
 2433 00ba 31020000 		.4byte	.LASF17
 2434 00be 05       		.uleb128 0x5
 2435 00bf 04       		.byte	0x4
 2436 00c0 B0000000 		.4byte	0xb0
 2437 00c4 06       		.uleb128 0x6
 2438 00c5 79020000 		.4byte	.LASF22
 2439 00c9 01       		.byte	0x1
 2440 00ca 23       		.byte	0x23
 2441 00cb 81000000 		.4byte	0x81
 2442 00cf 00000000 		.4byte	.LFB56
 2443 00d3 2C000000 		.4byte	.LFE56-.LFB56
 2444 00d7 01       		.uleb128 0x1
 2445 00d8 9C       		.byte	0x9c
 2446 00d9 F9000000 		.4byte	0xf9
 2447 00dd 07       		.uleb128 0x7
 2448 00de 696400   		.ascii	"id\000"
 2449 00e1 01       		.byte	0x1
 2450 00e2 23       		.byte	0x23
 2451 00e3 97000000 		.4byte	0x97
 2452 00e7 02       		.uleb128 0x2
 2453 00e8 91       		.byte	0x91
 2454 00e9 74       		.sleb128 -12
 2455 00ea 07       		.uleb128 0x7
 2456 00eb 6B657900 		.ascii	"key\000"
 2457 00ef 01       		.byte	0x1
 2458 00f0 23       		.byte	0x23
 2459 00f1 BE000000 		.4byte	0xbe
 2460 00f5 02       		.uleb128 0x2
 2461 00f6 91       		.byte	0x91
 2462 00f7 70       		.sleb128 -16
 2463 00f8 00       		.byte	0
 2464 00f9 08       		.uleb128 0x8
 2465 00fa 8D000000 		.4byte	.LASF18
 2466 00fe 01       		.byte	0x1
 2467 00ff 2C       		.byte	0x2c
 2468 0100 81000000 		.4byte	0x81
 2469 0104 00000000 		.4byte	.LFB57
 2470 0108 78000000 		.4byte	.LFE57-.LFB57
 2471 010c 01       		.uleb128 0x1
 2472 010d 9C       		.byte	0x9c
 2473 010e 08       		.uleb128 0x8
 2474 010f EB030000 		.4byte	.LASF19
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 62


 2475 0113 01       		.byte	0x1
 2476 0114 53       		.byte	0x53
 2477 0115 81000000 		.4byte	0x81
 2478 0119 00000000 		.4byte	.LFB58
 2479 011d 18000000 		.4byte	.LFE58-.LFB58
 2480 0121 01       		.uleb128 0x1
 2481 0122 9C       		.byte	0x9c
 2482 0123 09       		.uleb128 0x9
 2483 0124 93030000 		.4byte	.LASF20
 2484 0128 01       		.byte	0x1
 2485 0129 5C       		.byte	0x5c
 2486 012a 00000000 		.4byte	.LFB59
 2487 012e 30000000 		.4byte	.LFE59-.LFB59
 2488 0132 01       		.uleb128 0x1
 2489 0133 9C       		.byte	0x9c
 2490 0134 09       		.uleb128 0x9
 2491 0135 88030000 		.4byte	.LASF21
 2492 0139 01       		.byte	0x1
 2493 013a 67       		.byte	0x67
 2494 013b 00000000 		.4byte	.LFB60
 2495 013f 2C000000 		.4byte	.LFE60-.LFB60
 2496 0143 01       		.uleb128 0x1
 2497 0144 9C       		.byte	0x9c
 2498 0145 0A       		.uleb128 0xa
 2499 0146 3F020000 		.4byte	.LASF23
 2500 014a 01       		.byte	0x1
 2501 014b 72       		.byte	0x72
 2502 014c 81000000 		.4byte	0x81
 2503 0150 00000000 		.4byte	.LFB61
 2504 0154 78000000 		.4byte	.LFE61-.LFB61
 2505 0158 01       		.uleb128 0x1
 2506 0159 9C       		.byte	0x9c
 2507 015a D7010000 		.4byte	0x1d7
 2508 015e 0B       		.uleb128 0xb
 2509 015f 52040000 		.4byte	.LASF24
 2510 0163 01       		.byte	0x1
 2511 0164 72       		.byte	0x72
 2512 0165 BE000000 		.4byte	0xbe
 2513 0169 02       		.uleb128 0x2
 2514 016a 91       		.byte	0x91
 2515 016b 5C       		.sleb128 -36
 2516 016c 0B       		.uleb128 0xb
 2517 016d 17000000 		.4byte	.LASF25
 2518 0171 01       		.byte	0x1
 2519 0172 72       		.byte	0x72
 2520 0173 BE000000 		.4byte	0xbe
 2521 0177 02       		.uleb128 0x2
 2522 0178 91       		.byte	0x91
 2523 0179 58       		.sleb128 -40
 2524 017a 0B       		.uleb128 0xb
 2525 017b E7040000 		.4byte	.LASF26
 2526 017f 01       		.byte	0x1
 2527 0180 72       		.byte	0x72
 2528 0181 97000000 		.4byte	0x97
 2529 0185 02       		.uleb128 0x2
 2530 0186 91       		.byte	0x91
 2531 0187 54       		.sleb128 -44
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 63


 2532 0188 0C       		.uleb128 0xc
 2533 0189 E2030000 		.4byte	.LASF27
 2534 018d 01       		.byte	0x1
 2535 018e 73       		.byte	0x73
 2536 018f 81000000 		.4byte	0x81
 2537 0193 02       		.uleb128 0x2
 2538 0194 91       		.byte	0x91
 2539 0195 77       		.sleb128 -9
 2540 0196 0D       		.uleb128 0xd
 2541 0197 6900     		.ascii	"i\000"
 2542 0199 01       		.byte	0x1
 2543 019a 74       		.byte	0x74
 2544 019b 97000000 		.4byte	0x97
 2545 019f 02       		.uleb128 0x2
 2546 01a0 91       		.byte	0x91
 2547 01a1 70       		.sleb128 -16
 2548 01a2 0C       		.uleb128 0xc
 2549 01a3 AD000000 		.4byte	.LASF28
 2550 01a7 01       		.byte	0x1
 2551 01a8 74       		.byte	0x74
 2552 01a9 97000000 		.4byte	0x97
 2553 01ad 02       		.uleb128 0x2
 2554 01ae 91       		.byte	0x91
 2555 01af 6C       		.sleb128 -20
 2556 01b0 0C       		.uleb128 0xc
 2557 01b1 D9030000 		.4byte	.LASF29
 2558 01b5 01       		.byte	0x1
 2559 01b6 74       		.byte	0x74
 2560 01b7 97000000 		.4byte	0x97
 2561 01bb 02       		.uleb128 0x2
 2562 01bc 91       		.byte	0x91
 2563 01bd 68       		.sleb128 -24
 2564 01be 0E       		.uleb128 0xe
 2565 01bf 3C000000 		.4byte	.LBB2
 2566 01c3 1E000000 		.4byte	.LBE2-.LBB2
 2567 01c7 0C       		.uleb128 0xc
 2568 01c8 00000000 		.4byte	.LASF30
 2569 01cc 01       		.byte	0x1
 2570 01cd 7B       		.byte	0x7b
 2571 01ce BE000000 		.4byte	0xbe
 2572 01d2 02       		.uleb128 0x2
 2573 01d3 91       		.byte	0x91
 2574 01d4 64       		.sleb128 -28
 2575 01d5 00       		.byte	0
 2576 01d6 00       		.byte	0
 2577 01d7 08       		.uleb128 0x8
 2578 01d8 27030000 		.4byte	.LASF31
 2579 01dc 01       		.byte	0x1
 2580 01dd 87       		.byte	0x87
 2581 01de 81000000 		.4byte	0x81
 2582 01e2 00000000 		.4byte	.LFB62
 2583 01e6 70000000 		.4byte	.LFE62-.LFB62
 2584 01ea 01       		.uleb128 0x1
 2585 01eb 9C       		.byte	0x9c
 2586 01ec 08       		.uleb128 0x8
 2587 01ed EA010000 		.4byte	.LASF32
 2588 01f1 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 64


 2589 01f2 AB       		.byte	0xab
 2590 01f3 81000000 		.4byte	0x81
 2591 01f7 00000000 		.4byte	.LFB63
 2592 01fb 4C000000 		.4byte	.LFE63-.LFB63
 2593 01ff 01       		.uleb128 0x1
 2594 0200 9C       		.byte	0x9c
 2595 0201 08       		.uleb128 0x8
 2596 0202 BC020000 		.4byte	.LASF33
 2597 0206 01       		.byte	0x1
 2598 0207 CA       		.byte	0xca
 2599 0208 81000000 		.4byte	0x81
 2600 020c 00000000 		.4byte	.LFB64
 2601 0210 3C000000 		.4byte	.LFE64-.LFB64
 2602 0214 01       		.uleb128 0x1
 2603 0215 9C       		.byte	0x9c
 2604 0216 08       		.uleb128 0x8
 2605 0217 A6030000 		.4byte	.LASF34
 2606 021b 01       		.byte	0x1
 2607 021c D8       		.byte	0xd8
 2608 021d 81000000 		.4byte	0x81
 2609 0221 00000000 		.4byte	.LFB65
 2610 0225 1A000000 		.4byte	.LFE65-.LFB65
 2611 0229 01       		.uleb128 0x1
 2612 022a 9C       		.byte	0x9c
 2613 022b 0F       		.uleb128 0xf
 2614 022c 8C020000 		.4byte	.LASF38
 2615 0230 01       		.byte	0x1
 2616 0231 EE       		.byte	0xee
 2617 0232 81000000 		.4byte	0x81
 2618 0236 00000000 		.4byte	.LFB66
 2619 023a 78000000 		.4byte	.LFE66-.LFB66
 2620 023e 01       		.uleb128 0x1
 2621 023f 9C       		.byte	0x9c
 2622 0240 61020000 		.4byte	0x261
 2623 0244 0C       		.uleb128 0xc
 2624 0245 74010000 		.4byte	.LASF35
 2625 0249 01       		.byte	0x1
 2626 024a F0       		.byte	0xf0
 2627 024b 81000000 		.4byte	0x81
 2628 024f 02       		.uleb128 0x2
 2629 0250 91       		.byte	0x91
 2630 0251 77       		.sleb128 -9
 2631 0252 0C       		.uleb128 0xc
 2632 0253 08020000 		.4byte	.LASF36
 2633 0257 01       		.byte	0x1
 2634 0258 F0       		.byte	0xf0
 2635 0259 81000000 		.4byte	0x81
 2636 025d 02       		.uleb128 0x2
 2637 025e 91       		.byte	0x91
 2638 025f 76       		.sleb128 -10
 2639 0260 00       		.byte	0
 2640 0261 10       		.uleb128 0x10
 2641 0262 2E040000 		.4byte	.LASF37
 2642 0266 01       		.byte	0x1
 2643 0267 3901     		.2byte	0x139
 2644 0269 81000000 		.4byte	0x81
 2645 026d 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 65


 2646 0271 38000000 		.4byte	.LFE67-.LFB67
 2647 0275 01       		.uleb128 0x1
 2648 0276 9C       		.byte	0x9c
 2649 0277 11       		.uleb128 0x11
 2650 0278 64000000 		.4byte	.LASF39
 2651 027c 01       		.byte	0x1
 2652 027d 6201     		.2byte	0x162
 2653 027f 81000000 		.4byte	0x81
 2654 0283 00000000 		.4byte	.LFB68
 2655 0287 44000000 		.4byte	.LFE68-.LFB68
 2656 028b 01       		.uleb128 0x1
 2657 028c 9C       		.byte	0x9c
 2658 028d A2020000 		.4byte	0x2a2
 2659 0291 12       		.uleb128 0x12
 2660 0292 636D6400 		.ascii	"cmd\000"
 2661 0296 01       		.byte	0x1
 2662 0297 6801     		.2byte	0x168
 2663 0299 A2020000 		.4byte	0x2a2
 2664 029d 03       		.uleb128 0x3
 2665 029e 91       		.byte	0x91
 2666 029f 947F     		.sleb128 -108
 2667 02a1 00       		.byte	0
 2668 02a2 13       		.uleb128 0x13
 2669 02a3 B0000000 		.4byte	0xb0
 2670 02a7 B2020000 		.4byte	0x2b2
 2671 02ab 14       		.uleb128 0x14
 2672 02ac B7000000 		.4byte	0xb7
 2673 02b0 63       		.byte	0x63
 2674 02b1 00       		.byte	0
 2675 02b2 15       		.uleb128 0x15
 2676 02b3 9A020000 		.4byte	.LASF40
 2677 02b7 01       		.byte	0x1
 2678 02b8 7401     		.2byte	0x174
 2679 02ba 81000000 		.4byte	0x81
 2680 02be 00000000 		.4byte	.LFB69
 2681 02c2 48000000 		.4byte	.LFE69-.LFB69
 2682 02c6 01       		.uleb128 0x1
 2683 02c7 9C       		.byte	0x9c
 2684 02c8 ED020000 		.4byte	0x2ed
 2685 02cc 16       		.uleb128 0x16
 2686 02cd 0A030000 		.4byte	.LASF41
 2687 02d1 01       		.byte	0x1
 2688 02d2 7401     		.2byte	0x174
 2689 02d4 81000000 		.4byte	0x81
 2690 02d8 03       		.uleb128 0x3
 2691 02d9 91       		.byte	0x91
 2692 02da 8F7F     		.sleb128 -113
 2693 02dc 12       		.uleb128 0x12
 2694 02dd 636D6400 		.ascii	"cmd\000"
 2695 02e1 01       		.byte	0x1
 2696 02e2 7A01     		.2byte	0x17a
 2697 02e4 A2020000 		.4byte	0x2a2
 2698 02e8 03       		.uleb128 0x3
 2699 02e9 91       		.byte	0x91
 2700 02ea 947F     		.sleb128 -108
 2701 02ec 00       		.byte	0
 2702 02ed 10       		.uleb128 0x10
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 66


 2703 02ee DB010000 		.4byte	.LASF42
 2704 02f2 01       		.byte	0x1
 2705 02f3 8601     		.2byte	0x186
 2706 02f5 81000000 		.4byte	0x81
 2707 02f9 00000000 		.4byte	.LFB70
 2708 02fd 28000000 		.4byte	.LFE70-.LFB70
 2709 0301 01       		.uleb128 0x1
 2710 0302 9C       		.byte	0x9c
 2711 0303 10       		.uleb128 0x10
 2712 0304 B1040000 		.4byte	.LASF43
 2713 0308 01       		.byte	0x1
 2714 0309 9301     		.2byte	0x193
 2715 030b 81000000 		.4byte	0x81
 2716 030f 00000000 		.4byte	.LFB71
 2717 0313 28000000 		.4byte	.LFE71-.LFB71
 2718 0317 01       		.uleb128 0x1
 2719 0318 9C       		.byte	0x9c
 2720 0319 10       		.uleb128 0x10
 2721 031a 5B030000 		.4byte	.LASF44
 2722 031e 01       		.byte	0x1
 2723 031f 9F01     		.2byte	0x19f
 2724 0321 81000000 		.4byte	0x81
 2725 0325 00000000 		.4byte	.LFB72
 2726 0329 28000000 		.4byte	.LFE72-.LFB72
 2727 032d 01       		.uleb128 0x1
 2728 032e 9C       		.byte	0x9c
 2729 032f 10       		.uleb128 0x10
 2730 0330 16040000 		.4byte	.LASF45
 2731 0334 01       		.byte	0x1
 2732 0335 AC01     		.2byte	0x1ac
 2733 0337 81000000 		.4byte	0x81
 2734 033b 00000000 		.4byte	.LFB73
 2735 033f 28000000 		.4byte	.LFE73-.LFB73
 2736 0343 01       		.uleb128 0x1
 2737 0344 9C       		.byte	0x9c
 2738 0345 10       		.uleb128 0x10
 2739 0346 73040000 		.4byte	.LASF46
 2740 034a 01       		.byte	0x1
 2741 034b B801     		.2byte	0x1b8
 2742 034d 81000000 		.4byte	0x81
 2743 0351 00000000 		.4byte	.LFB74
 2744 0355 28000000 		.4byte	.LFE74-.LFB74
 2745 0359 01       		.uleb128 0x1
 2746 035a 9C       		.byte	0x9c
 2747 035b 15       		.uleb128 0x15
 2748 035c 50020000 		.4byte	.LASF47
 2749 0360 01       		.byte	0x1
 2750 0361 C301     		.2byte	0x1c3
 2751 0363 81000000 		.4byte	0x81
 2752 0367 00000000 		.4byte	.LFB75
 2753 036b 48000000 		.4byte	.LFE75-.LFB75
 2754 036f 01       		.uleb128 0x1
 2755 0370 9C       		.byte	0x9c
 2756 0371 96030000 		.4byte	0x396
 2757 0375 16       		.uleb128 0x16
 2758 0376 04030000 		.4byte	.LASF48
 2759 037a 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 67


 2760 037b C301     		.2byte	0x1c3
 2761 037d 81000000 		.4byte	0x81
 2762 0381 03       		.uleb128 0x3
 2763 0382 91       		.byte	0x91
 2764 0383 8F7F     		.sleb128 -113
 2765 0385 12       		.uleb128 0x12
 2766 0386 636D6400 		.ascii	"cmd\000"
 2767 038a 01       		.byte	0x1
 2768 038b C401     		.2byte	0x1c4
 2769 038d A2020000 		.4byte	0x2a2
 2770 0391 03       		.uleb128 0x3
 2771 0392 91       		.byte	0x91
 2772 0393 947F     		.sleb128 -108
 2773 0395 00       		.byte	0
 2774 0396 15       		.uleb128 0x15
 2775 0397 85040000 		.4byte	.LASF49
 2776 039b 01       		.byte	0x1
 2777 039c D001     		.2byte	0x1d0
 2778 039e 81000000 		.4byte	0x81
 2779 03a2 00000000 		.4byte	.LFB76
 2780 03a6 48000000 		.4byte	.LFE76-.LFB76
 2781 03aa 01       		.uleb128 0x1
 2782 03ab 9C       		.byte	0x9c
 2783 03ac D1030000 		.4byte	0x3d1
 2784 03b0 16       		.uleb128 0x16
 2785 03b1 04030000 		.4byte	.LASF48
 2786 03b5 01       		.byte	0x1
 2787 03b6 D001     		.2byte	0x1d0
 2788 03b8 81000000 		.4byte	0x81
 2789 03bc 03       		.uleb128 0x3
 2790 03bd 91       		.byte	0x91
 2791 03be 8F7F     		.sleb128 -113
 2792 03c0 12       		.uleb128 0x12
 2793 03c1 636D6400 		.ascii	"cmd\000"
 2794 03c5 01       		.byte	0x1
 2795 03c6 DE01     		.2byte	0x1de
 2796 03c8 A2020000 		.4byte	0x2a2
 2797 03cc 03       		.uleb128 0x3
 2798 03cd 91       		.byte	0x91
 2799 03ce 947F     		.sleb128 -108
 2800 03d0 00       		.byte	0
 2801 03d1 10       		.uleb128 0x10
 2802 03d2 43010000 		.4byte	.LASF50
 2803 03d6 01       		.byte	0x1
 2804 03d7 EA01     		.2byte	0x1ea
 2805 03d9 81000000 		.4byte	0x81
 2806 03dd 00000000 		.4byte	.LFB77
 2807 03e1 28000000 		.4byte	.LFE77-.LFB77
 2808 03e5 01       		.uleb128 0x1
 2809 03e6 9C       		.byte	0x9c
 2810 03e7 15       		.uleb128 0x15
 2811 03e8 36000000 		.4byte	.LASF51
 2812 03ec 01       		.byte	0x1
 2813 03ed F501     		.2byte	0x1f5
 2814 03ef 81000000 		.4byte	0x81
 2815 03f3 00000000 		.4byte	.LFB78
 2816 03f7 48000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 68


 2817 03fb 01       		.uleb128 0x1
 2818 03fc 9C       		.byte	0x9c
 2819 03fd 22040000 		.4byte	0x422
 2820 0401 16       		.uleb128 0x16
 2821 0402 04030000 		.4byte	.LASF48
 2822 0406 01       		.byte	0x1
 2823 0407 F501     		.2byte	0x1f5
 2824 0409 81000000 		.4byte	0x81
 2825 040d 03       		.uleb128 0x3
 2826 040e 91       		.byte	0x91
 2827 040f 8F7F     		.sleb128 -113
 2828 0411 12       		.uleb128 0x12
 2829 0412 636D6400 		.ascii	"cmd\000"
 2830 0416 01       		.byte	0x1
 2831 0417 FC01     		.2byte	0x1fc
 2832 0419 A2020000 		.4byte	0x2a2
 2833 041d 03       		.uleb128 0x3
 2834 041e 91       		.byte	0x91
 2835 041f 947F     		.sleb128 -108
 2836 0421 00       		.byte	0
 2837 0422 10       		.uleb128 0x10
 2838 0423 7A010000 		.4byte	.LASF52
 2839 0427 01       		.byte	0x1
 2840 0428 0802     		.2byte	0x208
 2841 042a 81000000 		.4byte	0x81
 2842 042e 00000000 		.4byte	.LFB79
 2843 0432 28000000 		.4byte	.LFE79-.LFB79
 2844 0436 01       		.uleb128 0x1
 2845 0437 9C       		.byte	0x9c
 2846 0438 15       		.uleb128 0x15
 2847 0439 D8040000 		.4byte	.LASF53
 2848 043d 01       		.byte	0x1
 2849 043e 1402     		.2byte	0x214
 2850 0440 81000000 		.4byte	0x81
 2851 0444 00000000 		.4byte	.LFB80
 2852 0448 44000000 		.4byte	.LFE80-.LFB80
 2853 044c 01       		.uleb128 0x1
 2854 044d 9C       		.byte	0x9c
 2855 044e 73040000 		.4byte	0x473
 2856 0452 16       		.uleb128 0x16
 2857 0453 0F030000 		.4byte	.LASF54
 2858 0457 01       		.byte	0x1
 2859 0458 1402     		.2byte	0x214
 2860 045a BE000000 		.4byte	0xbe
 2861 045e 03       		.uleb128 0x3
 2862 045f 91       		.byte	0x91
 2863 0460 8C7F     		.sleb128 -116
 2864 0462 12       		.uleb128 0x12
 2865 0463 636D6400 		.ascii	"cmd\000"
 2866 0467 01       		.byte	0x1
 2867 0468 1602     		.2byte	0x216
 2868 046a A2020000 		.4byte	0x2a2
 2869 046e 03       		.uleb128 0x3
 2870 046f 91       		.byte	0x91
 2871 0470 947F     		.sleb128 -108
 2872 0472 00       		.byte	0
 2873 0473 15       		.uleb128 0x15
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 69


 2874 0474 72000000 		.4byte	.LASF55
 2875 0478 01       		.byte	0x1
 2876 0479 2302     		.2byte	0x223
 2877 047b 81000000 		.4byte	0x81
 2878 047f 00000000 		.4byte	.LFB81
 2879 0483 44000000 		.4byte	.LFE81-.LFB81
 2880 0487 01       		.uleb128 0x1
 2881 0488 9C       		.byte	0x9c
 2882 0489 AE040000 		.4byte	0x4ae
 2883 048d 16       		.uleb128 0x16
 2884 048e A9020000 		.4byte	.LASF56
 2885 0492 01       		.byte	0x1
 2886 0493 2302     		.2byte	0x223
 2887 0495 BE000000 		.4byte	0xbe
 2888 0499 03       		.uleb128 0x3
 2889 049a 91       		.byte	0x91
 2890 049b 8C7F     		.sleb128 -116
 2891 049d 12       		.uleb128 0x12
 2892 049e 636D6400 		.ascii	"cmd\000"
 2893 04a2 01       		.byte	0x1
 2894 04a3 2502     		.2byte	0x225
 2895 04a5 A2020000 		.4byte	0x2a2
 2896 04a9 03       		.uleb128 0x3
 2897 04aa 91       		.byte	0x91
 2898 04ab 947F     		.sleb128 -108
 2899 04ad 00       		.byte	0
 2900 04ae 11       		.uleb128 0x11
 2901 04af 17020000 		.4byte	.LASF57
 2902 04b3 01       		.byte	0x1
 2903 04b4 3102     		.2byte	0x231
 2904 04b6 81000000 		.4byte	0x81
 2905 04ba 00000000 		.4byte	.LFB82
 2906 04be 98000000 		.4byte	.LFE82-.LFB82
 2907 04c2 01       		.uleb128 0x1
 2908 04c3 9C       		.byte	0x9c
 2909 04c4 F3040000 		.4byte	0x4f3
 2910 04c8 0E       		.uleb128 0xe
 2911 04c9 2C000000 		.4byte	.LBB3
 2912 04cd 44000000 		.4byte	.LBE3-.LBB3
 2913 04d1 17       		.uleb128 0x17
 2914 04d2 85000000 		.4byte	.LASF58
 2915 04d6 01       		.byte	0x1
 2916 04d7 3802     		.2byte	0x238
 2917 04d9 F3040000 		.4byte	0x4f3
 2918 04dd 03       		.uleb128 0x3
 2919 04de 91       		.byte	0x91
 2920 04df 9078     		.sleb128 -1008
 2921 04e1 17       		.uleb128 0x17
 2922 04e2 96010000 		.4byte	.LASF59
 2923 04e6 01       		.byte	0x1
 2924 04e7 3802     		.2byte	0x238
 2925 04e9 A2020000 		.4byte	0x2a2
 2926 04ed 03       		.uleb128 0x3
 2927 04ee 91       		.byte	0x91
 2928 04ef 9078     		.sleb128 -1008
 2929 04f1 00       		.byte	0
 2930 04f2 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 70


 2931 04f3 13       		.uleb128 0x13
 2932 04f4 B0000000 		.4byte	0xb0
 2933 04f8 04050000 		.4byte	0x504
 2934 04fc 18       		.uleb128 0x18
 2935 04fd B7000000 		.4byte	0xb7
 2936 0501 E703     		.2byte	0x3e7
 2937 0503 00       		.byte	0
 2938 0504 15       		.uleb128 0x15
 2939 0505 FA030000 		.4byte	.LASF60
 2940 0509 01       		.byte	0x1
 2941 050a 6902     		.2byte	0x269
 2942 050c 81000000 		.4byte	0x81
 2943 0510 00000000 		.4byte	.LFB83
 2944 0514 84000000 		.4byte	.LFE83-.LFB83
 2945 0518 01       		.uleb128 0x1
 2946 0519 9C       		.byte	0x9c
 2947 051a 49050000 		.4byte	0x549
 2948 051e 16       		.uleb128 0x16
 2949 051f 3A020000 		.4byte	.LASF61
 2950 0523 01       		.byte	0x1
 2951 0524 6902     		.2byte	0x269
 2952 0526 BE000000 		.4byte	0xbe
 2953 052a 03       		.uleb128 0x3
 2954 052b 91       		.byte	0x91
 2955 052c 8C78     		.sleb128 -1012
 2956 052e 0E       		.uleb128 0xe
 2957 052f 2A000000 		.4byte	.LBB4
 2958 0533 2E000000 		.4byte	.LBE4-.LBB4
 2959 0537 17       		.uleb128 0x17
 2960 0538 6B040000 		.4byte	.LASF62
 2961 053c 01       		.byte	0x1
 2962 053d 7702     		.2byte	0x277
 2963 053f F3040000 		.4byte	0x4f3
 2964 0543 03       		.uleb128 0x3
 2965 0544 91       		.byte	0x91
 2966 0545 9078     		.sleb128 -1008
 2967 0547 00       		.byte	0
 2968 0548 00       		.byte	0
 2969 0549 15       		.uleb128 0x15
 2970 054a 06000000 		.4byte	.LASF63
 2971 054e 01       		.byte	0x1
 2972 054f B002     		.2byte	0x2b0
 2973 0551 81000000 		.4byte	0x81
 2974 0555 00000000 		.4byte	.LFB84
 2975 0559 28010000 		.4byte	.LFE84-.LFB84
 2976 055d 01       		.uleb128 0x1
 2977 055e 9C       		.byte	0x9c
 2978 055f AE050000 		.4byte	0x5ae
 2979 0563 16       		.uleb128 0x16
 2980 0564 8F010000 		.4byte	.LASF64
 2981 0568 01       		.byte	0x1
 2982 0569 B002     		.2byte	0x2b0
 2983 056b BE000000 		.4byte	0xbe
 2984 056f 03       		.uleb128 0x3
 2985 0570 91       		.byte	0x91
 2986 0571 A477     		.sleb128 -1116
 2987 0573 19       		.uleb128 0x19
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 71


 2988 0574 63737600 		.ascii	"csv\000"
 2989 0578 01       		.byte	0x1
 2990 0579 B002     		.2byte	0x2b0
 2991 057b BE000000 		.4byte	0xbe
 2992 057f 03       		.uleb128 0x3
 2993 0580 91       		.byte	0x91
 2994 0581 A077     		.sleb128 -1120
 2995 0583 0E       		.uleb128 0xe
 2996 0584 4E000000 		.4byte	.LBB5
 2997 0588 8A000000 		.4byte	.LBE5-.LBB5
 2998 058c 17       		.uleb128 0x17
 2999 058d 85000000 		.4byte	.LASF58
 3000 0591 01       		.byte	0x1
 3001 0592 C402     		.2byte	0x2c4
 3002 0594 F3040000 		.4byte	0x4f3
 3003 0598 03       		.uleb128 0x3
 3004 0599 91       		.byte	0x91
 3005 059a 9078     		.sleb128 -1008
 3006 059c 17       		.uleb128 0x17
 3007 059d 96010000 		.4byte	.LASF59
 3008 05a1 01       		.byte	0x1
 3009 05a2 C402     		.2byte	0x2c4
 3010 05a4 A2020000 		.4byte	0x2a2
 3011 05a8 03       		.uleb128 0x3
 3012 05a9 91       		.byte	0x91
 3013 05aa AC77     		.sleb128 -1108
 3014 05ac 00       		.byte	0
 3015 05ad 00       		.byte	0
 3016 05ae 11       		.uleb128 0x11
 3017 05af 3F040000 		.4byte	.LASF65
 3018 05b3 01       		.byte	0x1
 3019 05b4 0D03     		.2byte	0x30d
 3020 05b6 81000000 		.4byte	0x81
 3021 05ba 00000000 		.4byte	.LFB85
 3022 05be E0000000 		.4byte	.LFE85-.LFB85
 3023 05c2 01       		.uleb128 0x1
 3024 05c3 9C       		.byte	0x9c
 3025 05c4 13060000 		.4byte	0x613
 3026 05c8 17       		.uleb128 0x17
 3027 05c9 56030000 		.4byte	.LASF66
 3028 05cd 01       		.byte	0x1
 3029 05ce 1503     		.2byte	0x315
 3030 05d0 81000000 		.4byte	0x81
 3031 05d4 02       		.uleb128 0x2
 3032 05d5 91       		.byte	0x91
 3033 05d6 6B       		.sleb128 -21
 3034 05d7 12       		.uleb128 0x12
 3035 05d8 6900     		.ascii	"i\000"
 3036 05da 01       		.byte	0x1
 3037 05db 1603     		.2byte	0x316
 3038 05dd 97000000 		.4byte	0x97
 3039 05e1 02       		.uleb128 0x2
 3040 05e2 91       		.byte	0x91
 3041 05e3 74       		.sleb128 -12
 3042 05e4 17       		.uleb128 0x17
 3043 05e5 AD000000 		.4byte	.LASF28
 3044 05e9 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 72


 3045 05ea 1603     		.2byte	0x316
 3046 05ec 97000000 		.4byte	0x97
 3047 05f0 02       		.uleb128 0x2
 3048 05f1 91       		.byte	0x91
 3049 05f2 70       		.sleb128 -16
 3050 05f3 17       		.uleb128 0x17
 3051 05f4 74030000 		.4byte	.LASF67
 3052 05f8 01       		.byte	0x1
 3053 05f9 1603     		.2byte	0x316
 3054 05fb 97000000 		.4byte	0x97
 3055 05ff 02       		.uleb128 0x2
 3056 0600 91       		.byte	0x91
 3057 0601 6C       		.sleb128 -20
 3058 0602 17       		.uleb128 0x17
 3059 0603 A5040000 		.4byte	.LASF68
 3060 0607 01       		.byte	0x1
 3061 0608 1703     		.2byte	0x317
 3062 060a 13060000 		.4byte	0x613
 3063 060e 03       		.uleb128 0x3
 3064 060f 91       		.byte	0x91
 3065 0610 BC7D     		.sleb128 -324
 3066 0612 00       		.byte	0
 3067 0613 13       		.uleb128 0x13
 3068 0614 B0000000 		.4byte	0xb0
 3069 0618 24060000 		.4byte	0x624
 3070 061c 18       		.uleb128 0x18
 3071 061d B7000000 		.4byte	0xb7
 3072 0621 2B01     		.2byte	0x12b
 3073 0623 00       		.byte	0
 3074 0624 11       		.uleb128 0x11
 3075 0625 C5040000 		.4byte	.LASF69
 3076 0629 01       		.byte	0x1
 3077 062a 3303     		.2byte	0x333
 3078 062c 81000000 		.4byte	0x81
 3079 0630 00000000 		.4byte	.LFB86
 3080 0634 9C000000 		.4byte	.LFE86-.LFB86
 3081 0638 01       		.uleb128 0x1
 3082 0639 9C       		.byte	0x9c
 3083 063a 7A060000 		.4byte	0x67a
 3084 063e 12       		.uleb128 0x12
 3085 063f 6900     		.ascii	"i\000"
 3086 0641 01       		.byte	0x1
 3087 0642 3A03     		.2byte	0x33a
 3088 0644 97000000 		.4byte	0x97
 3089 0648 02       		.uleb128 0x2
 3090 0649 91       		.byte	0x91
 3091 064a 74       		.sleb128 -12
 3092 064b 17       		.uleb128 0x17
 3093 064c AD000000 		.4byte	.LASF28
 3094 0650 01       		.byte	0x1
 3095 0651 3A03     		.2byte	0x33a
 3096 0653 97000000 		.4byte	0x97
 3097 0657 02       		.uleb128 0x2
 3098 0658 91       		.byte	0x91
 3099 0659 70       		.sleb128 -16
 3100 065a 17       		.uleb128 0x17
 3101 065b 74030000 		.4byte	.LASF67
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 73


 3102 065f 01       		.byte	0x1
 3103 0660 3A03     		.2byte	0x33a
 3104 0662 97000000 		.4byte	0x97
 3105 0666 02       		.uleb128 0x2
 3106 0667 91       		.byte	0x91
 3107 0668 6C       		.sleb128 -20
 3108 0669 17       		.uleb128 0x17
 3109 066a A5040000 		.4byte	.LASF68
 3110 066e 01       		.byte	0x1
 3111 066f 3B03     		.2byte	0x33b
 3112 0671 13060000 		.4byte	0x613
 3113 0675 03       		.uleb128 0x3
 3114 0676 91       		.byte	0x91
 3115 0677 C07D     		.sleb128 -320
 3116 0679 00       		.byte	0
 3117 067a 1A       		.uleb128 0x1a
 3118 067b 9B000000 		.4byte	.LASF70
 3119 067f 01       		.byte	0x1
 3120 0680 5303     		.2byte	0x353
 3121 0682 00000000 		.4byte	.LFB87
 3122 0686 24000000 		.4byte	.LFE87-.LFB87
 3123 068a 01       		.uleb128 0x1
 3124 068b 9C       		.byte	0x9c
 3125 068c 1B       		.uleb128 0x1b
 3126 068d 4D000000 		.4byte	.LASF71
 3127 0691 01       		.byte	0x1
 3128 0692 6303     		.2byte	0x363
 3129 0694 00000000 		.4byte	.LFB88
 3130 0698 44000000 		.4byte	.LFE88-.LFB88
 3131 069c 01       		.uleb128 0x1
 3132 069d 9C       		.byte	0x9c
 3133 069e BC060000 		.4byte	0x6bc
 3134 06a2 0E       		.uleb128 0xe
 3135 06a3 08000000 		.4byte	.LBB6
 3136 06a7 24000000 		.4byte	.LBE6-.LBB6
 3137 06ab 17       		.uleb128 0x17
 3138 06ac 29000000 		.4byte	.LASF72
 3139 06b0 01       		.byte	0x1
 3140 06b1 6603     		.2byte	0x366
 3141 06b3 B0000000 		.4byte	0xb0
 3142 06b7 02       		.uleb128 0x2
 3143 06b8 91       		.byte	0x91
 3144 06b9 77       		.sleb128 -9
 3145 06ba 00       		.byte	0
 3146 06bb 00       		.byte	0
 3147 06bc 1C       		.uleb128 0x1c
 3148 06bd 3B030000 		.4byte	.LASF73
 3149 06c1 05       		.byte	0x5
 3150 06c2 1606     		.2byte	0x616
 3151 06c4 C8060000 		.4byte	0x6c8
 3152 06c8 1D       		.uleb128 0x1d
 3153 06c9 76000000 		.4byte	0x76
 3154 06cd 1E       		.uleb128 0x1e
 3155 06ce C8020000 		.4byte	.LASF74
 3156 06d2 01       		.byte	0x1
 3157 06d3 17       		.byte	0x17
 3158 06d4 81000000 		.4byte	0x81
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 74


 3159 06d8 05       		.uleb128 0x5
 3160 06d9 03       		.byte	0x3
 3161 06da 00000000 		.4byte	modem_state
 3162 06de 1E       		.uleb128 0x1e
 3163 06df C4030000 		.4byte	.LASF75
 3164 06e3 01       		.byte	0x1
 3165 06e4 17       		.byte	0x17
 3166 06e5 81000000 		.4byte	0x81
 3167 06e9 05       		.uleb128 0x5
 3168 06ea 03       		.byte	0x3
 3169 06eb 00000000 		.4byte	lock_acquired
 3170 06ef 1E       		.uleb128 0x1e
 3171 06f0 9D040000 		.4byte	.LASF76
 3172 06f4 01       		.byte	0x1
 3173 06f5 19       		.byte	0x19
 3174 06f6 97000000 		.4byte	0x97
 3175 06fa 05       		.uleb128 0x5
 3176 06fb 03       		.byte	0x3
 3177 06fc 00000000 		.4byte	feed_id
 3178 0700 1E       		.uleb128 0x1e
 3179 0701 63040000 		.4byte	.LASF77
 3180 0705 01       		.byte	0x1
 3181 0706 1A       		.byte	0x1a
 3182 0707 BE000000 		.4byte	0xbe
 3183 070b 05       		.uleb128 0x5
 3184 070c 03       		.byte	0x3
 3185 070d 00000000 		.4byte	api_key
 3186 0711 1E       		.uleb128 0x1e
 3187 0712 5E040000 		.4byte	.LASF78
 3188 0716 01       		.byte	0x1
 3189 0717 16       		.byte	0x16
 3190 0718 68000000 		.4byte	0x68
 3191 071c 05       		.uleb128 0x5
 3192 071d 03       		.byte	0x3
 3193 071e 00000000 		.4byte	iter
 3194 0722 1E       		.uleb128 0x1e
 3195 0723 48030000 		.4byte	.LASF79
 3196 0727 01       		.byte	0x1
 3197 0728 17       		.byte	0x17
 3198 0729 81000000 		.4byte	0x81
 3199 072d 05       		.uleb128 0x5
 3200 072e 03       		.byte	0x3
 3201 072f 00000000 		.4byte	ready
 3202 0733 1E       		.uleb128 0x1e
 3203 0734 67020000 		.4byte	.LASF80
 3204 0738 01       		.byte	0x1
 3205 0739 18       		.byte	0x18
 3206 073a 8C000000 		.4byte	0x8c
 3207 073e 05       		.uleb128 0x5
 3208 073f 03       		.byte	0x3
 3209 0740 00000000 		.4byte	uart_string_index
 3210 0744 1E       		.uleb128 0x1e
 3211 0745 5F010000 		.4byte	.LASF81
 3212 0749 01       		.byte	0x1
 3213 074a 1A       		.byte	0x1a
 3214 074b F3040000 		.4byte	0x4f3
 3215 074f 05       		.uleb128 0x5
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 75


 3216 0750 03       		.byte	0x3
 3217 0751 00000000 		.4byte	uart_received_string
 3218 0755 1E       		.uleb128 0x1e
 3219 0756 BD000000 		.4byte	.LASF82
 3220 075a 01       		.byte	0x1
 3221 075b 1B       		.byte	0x1b
 3222 075c BE000000 		.4byte	0xbe
 3223 0760 05       		.uleb128 0x5
 3224 0761 03       		.byte	0x3
 3225 0762 00000000 		.4byte	modem_apn
 3226 0766 00       		.byte	0
 3227              		.section	.debug_abbrev,"",%progbits
 3228              	.Ldebug_abbrev0:
 3229 0000 01       		.uleb128 0x1
 3230 0001 11       		.uleb128 0x11
 3231 0002 01       		.byte	0x1
 3232 0003 25       		.uleb128 0x25
 3233 0004 0E       		.uleb128 0xe
 3234 0005 13       		.uleb128 0x13
 3235 0006 0B       		.uleb128 0xb
 3236 0007 03       		.uleb128 0x3
 3237 0008 0E       		.uleb128 0xe
 3238 0009 1B       		.uleb128 0x1b
 3239 000a 0E       		.uleb128 0xe
 3240 000b 55       		.uleb128 0x55
 3241 000c 17       		.uleb128 0x17
 3242 000d 11       		.uleb128 0x11
 3243 000e 01       		.uleb128 0x1
 3244 000f 10       		.uleb128 0x10
 3245 0010 17       		.uleb128 0x17
 3246 0011 00       		.byte	0
 3247 0012 00       		.byte	0
 3248 0013 02       		.uleb128 0x2
 3249 0014 24       		.uleb128 0x24
 3250 0015 00       		.byte	0
 3251 0016 0B       		.uleb128 0xb
 3252 0017 0B       		.uleb128 0xb
 3253 0018 3E       		.uleb128 0x3e
 3254 0019 0B       		.uleb128 0xb
 3255 001a 03       		.uleb128 0x3
 3256 001b 0E       		.uleb128 0xe
 3257 001c 00       		.byte	0
 3258 001d 00       		.byte	0
 3259 001e 03       		.uleb128 0x3
 3260 001f 16       		.uleb128 0x16
 3261 0020 00       		.byte	0
 3262 0021 03       		.uleb128 0x3
 3263 0022 0E       		.uleb128 0xe
 3264 0023 3A       		.uleb128 0x3a
 3265 0024 0B       		.uleb128 0xb
 3266 0025 3B       		.uleb128 0x3b
 3267 0026 0B       		.uleb128 0xb
 3268 0027 49       		.uleb128 0x49
 3269 0028 13       		.uleb128 0x13
 3270 0029 00       		.byte	0
 3271 002a 00       		.byte	0
 3272 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 76


 3273 002c 24       		.uleb128 0x24
 3274 002d 00       		.byte	0
 3275 002e 0B       		.uleb128 0xb
 3276 002f 0B       		.uleb128 0xb
 3277 0030 3E       		.uleb128 0x3e
 3278 0031 0B       		.uleb128 0xb
 3279 0032 03       		.uleb128 0x3
 3280 0033 08       		.uleb128 0x8
 3281 0034 00       		.byte	0
 3282 0035 00       		.byte	0
 3283 0036 05       		.uleb128 0x5
 3284 0037 0F       		.uleb128 0xf
 3285 0038 00       		.byte	0
 3286 0039 0B       		.uleb128 0xb
 3287 003a 0B       		.uleb128 0xb
 3288 003b 49       		.uleb128 0x49
 3289 003c 13       		.uleb128 0x13
 3290 003d 00       		.byte	0
 3291 003e 00       		.byte	0
 3292 003f 06       		.uleb128 0x6
 3293 0040 2E       		.uleb128 0x2e
 3294 0041 01       		.byte	0x1
 3295 0042 3F       		.uleb128 0x3f
 3296 0043 19       		.uleb128 0x19
 3297 0044 03       		.uleb128 0x3
 3298 0045 0E       		.uleb128 0xe
 3299 0046 3A       		.uleb128 0x3a
 3300 0047 0B       		.uleb128 0xb
 3301 0048 3B       		.uleb128 0x3b
 3302 0049 0B       		.uleb128 0xb
 3303 004a 27       		.uleb128 0x27
 3304 004b 19       		.uleb128 0x19
 3305 004c 49       		.uleb128 0x49
 3306 004d 13       		.uleb128 0x13
 3307 004e 11       		.uleb128 0x11
 3308 004f 01       		.uleb128 0x1
 3309 0050 12       		.uleb128 0x12
 3310 0051 06       		.uleb128 0x6
 3311 0052 40       		.uleb128 0x40
 3312 0053 18       		.uleb128 0x18
 3313 0054 9742     		.uleb128 0x2117
 3314 0056 19       		.uleb128 0x19
 3315 0057 01       		.uleb128 0x1
 3316 0058 13       		.uleb128 0x13
 3317 0059 00       		.byte	0
 3318 005a 00       		.byte	0
 3319 005b 07       		.uleb128 0x7
 3320 005c 05       		.uleb128 0x5
 3321 005d 00       		.byte	0
 3322 005e 03       		.uleb128 0x3
 3323 005f 08       		.uleb128 0x8
 3324 0060 3A       		.uleb128 0x3a
 3325 0061 0B       		.uleb128 0xb
 3326 0062 3B       		.uleb128 0x3b
 3327 0063 0B       		.uleb128 0xb
 3328 0064 49       		.uleb128 0x49
 3329 0065 13       		.uleb128 0x13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 77


 3330 0066 02       		.uleb128 0x2
 3331 0067 18       		.uleb128 0x18
 3332 0068 00       		.byte	0
 3333 0069 00       		.byte	0
 3334 006a 08       		.uleb128 0x8
 3335 006b 2E       		.uleb128 0x2e
 3336 006c 00       		.byte	0
 3337 006d 3F       		.uleb128 0x3f
 3338 006e 19       		.uleb128 0x19
 3339 006f 03       		.uleb128 0x3
 3340 0070 0E       		.uleb128 0xe
 3341 0071 3A       		.uleb128 0x3a
 3342 0072 0B       		.uleb128 0xb
 3343 0073 3B       		.uleb128 0x3b
 3344 0074 0B       		.uleb128 0xb
 3345 0075 49       		.uleb128 0x49
 3346 0076 13       		.uleb128 0x13
 3347 0077 11       		.uleb128 0x11
 3348 0078 01       		.uleb128 0x1
 3349 0079 12       		.uleb128 0x12
 3350 007a 06       		.uleb128 0x6
 3351 007b 40       		.uleb128 0x40
 3352 007c 18       		.uleb128 0x18
 3353 007d 9642     		.uleb128 0x2116
 3354 007f 19       		.uleb128 0x19
 3355 0080 00       		.byte	0
 3356 0081 00       		.byte	0
 3357 0082 09       		.uleb128 0x9
 3358 0083 2E       		.uleb128 0x2e
 3359 0084 00       		.byte	0
 3360 0085 3F       		.uleb128 0x3f
 3361 0086 19       		.uleb128 0x19
 3362 0087 03       		.uleb128 0x3
 3363 0088 0E       		.uleb128 0xe
 3364 0089 3A       		.uleb128 0x3a
 3365 008a 0B       		.uleb128 0xb
 3366 008b 3B       		.uleb128 0x3b
 3367 008c 0B       		.uleb128 0xb
 3368 008d 11       		.uleb128 0x11
 3369 008e 01       		.uleb128 0x1
 3370 008f 12       		.uleb128 0x12
 3371 0090 06       		.uleb128 0x6
 3372 0091 40       		.uleb128 0x40
 3373 0092 18       		.uleb128 0x18
 3374 0093 9642     		.uleb128 0x2116
 3375 0095 19       		.uleb128 0x19
 3376 0096 00       		.byte	0
 3377 0097 00       		.byte	0
 3378 0098 0A       		.uleb128 0xa
 3379 0099 2E       		.uleb128 0x2e
 3380 009a 01       		.byte	0x1
 3381 009b 3F       		.uleb128 0x3f
 3382 009c 19       		.uleb128 0x19
 3383 009d 03       		.uleb128 0x3
 3384 009e 0E       		.uleb128 0xe
 3385 009f 3A       		.uleb128 0x3a
 3386 00a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 78


 3387 00a1 3B       		.uleb128 0x3b
 3388 00a2 0B       		.uleb128 0xb
 3389 00a3 27       		.uleb128 0x27
 3390 00a4 19       		.uleb128 0x19
 3391 00a5 49       		.uleb128 0x49
 3392 00a6 13       		.uleb128 0x13
 3393 00a7 11       		.uleb128 0x11
 3394 00a8 01       		.uleb128 0x1
 3395 00a9 12       		.uleb128 0x12
 3396 00aa 06       		.uleb128 0x6
 3397 00ab 40       		.uleb128 0x40
 3398 00ac 18       		.uleb128 0x18
 3399 00ad 9642     		.uleb128 0x2116
 3400 00af 19       		.uleb128 0x19
 3401 00b0 01       		.uleb128 0x1
 3402 00b1 13       		.uleb128 0x13
 3403 00b2 00       		.byte	0
 3404 00b3 00       		.byte	0
 3405 00b4 0B       		.uleb128 0xb
 3406 00b5 05       		.uleb128 0x5
 3407 00b6 00       		.byte	0
 3408 00b7 03       		.uleb128 0x3
 3409 00b8 0E       		.uleb128 0xe
 3410 00b9 3A       		.uleb128 0x3a
 3411 00ba 0B       		.uleb128 0xb
 3412 00bb 3B       		.uleb128 0x3b
 3413 00bc 0B       		.uleb128 0xb
 3414 00bd 49       		.uleb128 0x49
 3415 00be 13       		.uleb128 0x13
 3416 00bf 02       		.uleb128 0x2
 3417 00c0 18       		.uleb128 0x18
 3418 00c1 00       		.byte	0
 3419 00c2 00       		.byte	0
 3420 00c3 0C       		.uleb128 0xc
 3421 00c4 34       		.uleb128 0x34
 3422 00c5 00       		.byte	0
 3423 00c6 03       		.uleb128 0x3
 3424 00c7 0E       		.uleb128 0xe
 3425 00c8 3A       		.uleb128 0x3a
 3426 00c9 0B       		.uleb128 0xb
 3427 00ca 3B       		.uleb128 0x3b
 3428 00cb 0B       		.uleb128 0xb
 3429 00cc 49       		.uleb128 0x49
 3430 00cd 13       		.uleb128 0x13
 3431 00ce 02       		.uleb128 0x2
 3432 00cf 18       		.uleb128 0x18
 3433 00d0 00       		.byte	0
 3434 00d1 00       		.byte	0
 3435 00d2 0D       		.uleb128 0xd
 3436 00d3 34       		.uleb128 0x34
 3437 00d4 00       		.byte	0
 3438 00d5 03       		.uleb128 0x3
 3439 00d6 08       		.uleb128 0x8
 3440 00d7 3A       		.uleb128 0x3a
 3441 00d8 0B       		.uleb128 0xb
 3442 00d9 3B       		.uleb128 0x3b
 3443 00da 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 79


 3444 00db 49       		.uleb128 0x49
 3445 00dc 13       		.uleb128 0x13
 3446 00dd 02       		.uleb128 0x2
 3447 00de 18       		.uleb128 0x18
 3448 00df 00       		.byte	0
 3449 00e0 00       		.byte	0
 3450 00e1 0E       		.uleb128 0xe
 3451 00e2 0B       		.uleb128 0xb
 3452 00e3 01       		.byte	0x1
 3453 00e4 11       		.uleb128 0x11
 3454 00e5 01       		.uleb128 0x1
 3455 00e6 12       		.uleb128 0x12
 3456 00e7 06       		.uleb128 0x6
 3457 00e8 00       		.byte	0
 3458 00e9 00       		.byte	0
 3459 00ea 0F       		.uleb128 0xf
 3460 00eb 2E       		.uleb128 0x2e
 3461 00ec 01       		.byte	0x1
 3462 00ed 3F       		.uleb128 0x3f
 3463 00ee 19       		.uleb128 0x19
 3464 00ef 03       		.uleb128 0x3
 3465 00f0 0E       		.uleb128 0xe
 3466 00f1 3A       		.uleb128 0x3a
 3467 00f2 0B       		.uleb128 0xb
 3468 00f3 3B       		.uleb128 0x3b
 3469 00f4 0B       		.uleb128 0xb
 3470 00f5 49       		.uleb128 0x49
 3471 00f6 13       		.uleb128 0x13
 3472 00f7 11       		.uleb128 0x11
 3473 00f8 01       		.uleb128 0x1
 3474 00f9 12       		.uleb128 0x12
 3475 00fa 06       		.uleb128 0x6
 3476 00fb 40       		.uleb128 0x40
 3477 00fc 18       		.uleb128 0x18
 3478 00fd 9642     		.uleb128 0x2116
 3479 00ff 19       		.uleb128 0x19
 3480 0100 01       		.uleb128 0x1
 3481 0101 13       		.uleb128 0x13
 3482 0102 00       		.byte	0
 3483 0103 00       		.byte	0
 3484 0104 10       		.uleb128 0x10
 3485 0105 2E       		.uleb128 0x2e
 3486 0106 00       		.byte	0
 3487 0107 3F       		.uleb128 0x3f
 3488 0108 19       		.uleb128 0x19
 3489 0109 03       		.uleb128 0x3
 3490 010a 0E       		.uleb128 0xe
 3491 010b 3A       		.uleb128 0x3a
 3492 010c 0B       		.uleb128 0xb
 3493 010d 3B       		.uleb128 0x3b
 3494 010e 05       		.uleb128 0x5
 3495 010f 49       		.uleb128 0x49
 3496 0110 13       		.uleb128 0x13
 3497 0111 11       		.uleb128 0x11
 3498 0112 01       		.uleb128 0x1
 3499 0113 12       		.uleb128 0x12
 3500 0114 06       		.uleb128 0x6
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 80


 3501 0115 40       		.uleb128 0x40
 3502 0116 18       		.uleb128 0x18
 3503 0117 9642     		.uleb128 0x2116
 3504 0119 19       		.uleb128 0x19
 3505 011a 00       		.byte	0
 3506 011b 00       		.byte	0
 3507 011c 11       		.uleb128 0x11
 3508 011d 2E       		.uleb128 0x2e
 3509 011e 01       		.byte	0x1
 3510 011f 3F       		.uleb128 0x3f
 3511 0120 19       		.uleb128 0x19
 3512 0121 03       		.uleb128 0x3
 3513 0122 0E       		.uleb128 0xe
 3514 0123 3A       		.uleb128 0x3a
 3515 0124 0B       		.uleb128 0xb
 3516 0125 3B       		.uleb128 0x3b
 3517 0126 05       		.uleb128 0x5
 3518 0127 49       		.uleb128 0x49
 3519 0128 13       		.uleb128 0x13
 3520 0129 11       		.uleb128 0x11
 3521 012a 01       		.uleb128 0x1
 3522 012b 12       		.uleb128 0x12
 3523 012c 06       		.uleb128 0x6
 3524 012d 40       		.uleb128 0x40
 3525 012e 18       		.uleb128 0x18
 3526 012f 9642     		.uleb128 0x2116
 3527 0131 19       		.uleb128 0x19
 3528 0132 01       		.uleb128 0x1
 3529 0133 13       		.uleb128 0x13
 3530 0134 00       		.byte	0
 3531 0135 00       		.byte	0
 3532 0136 12       		.uleb128 0x12
 3533 0137 34       		.uleb128 0x34
 3534 0138 00       		.byte	0
 3535 0139 03       		.uleb128 0x3
 3536 013a 08       		.uleb128 0x8
 3537 013b 3A       		.uleb128 0x3a
 3538 013c 0B       		.uleb128 0xb
 3539 013d 3B       		.uleb128 0x3b
 3540 013e 05       		.uleb128 0x5
 3541 013f 49       		.uleb128 0x49
 3542 0140 13       		.uleb128 0x13
 3543 0141 02       		.uleb128 0x2
 3544 0142 18       		.uleb128 0x18
 3545 0143 00       		.byte	0
 3546 0144 00       		.byte	0
 3547 0145 13       		.uleb128 0x13
 3548 0146 01       		.uleb128 0x1
 3549 0147 01       		.byte	0x1
 3550 0148 49       		.uleb128 0x49
 3551 0149 13       		.uleb128 0x13
 3552 014a 01       		.uleb128 0x1
 3553 014b 13       		.uleb128 0x13
 3554 014c 00       		.byte	0
 3555 014d 00       		.byte	0
 3556 014e 14       		.uleb128 0x14
 3557 014f 21       		.uleb128 0x21
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 81


 3558 0150 00       		.byte	0
 3559 0151 49       		.uleb128 0x49
 3560 0152 13       		.uleb128 0x13
 3561 0153 2F       		.uleb128 0x2f
 3562 0154 0B       		.uleb128 0xb
 3563 0155 00       		.byte	0
 3564 0156 00       		.byte	0
 3565 0157 15       		.uleb128 0x15
 3566 0158 2E       		.uleb128 0x2e
 3567 0159 01       		.byte	0x1
 3568 015a 3F       		.uleb128 0x3f
 3569 015b 19       		.uleb128 0x19
 3570 015c 03       		.uleb128 0x3
 3571 015d 0E       		.uleb128 0xe
 3572 015e 3A       		.uleb128 0x3a
 3573 015f 0B       		.uleb128 0xb
 3574 0160 3B       		.uleb128 0x3b
 3575 0161 05       		.uleb128 0x5
 3576 0162 27       		.uleb128 0x27
 3577 0163 19       		.uleb128 0x19
 3578 0164 49       		.uleb128 0x49
 3579 0165 13       		.uleb128 0x13
 3580 0166 11       		.uleb128 0x11
 3581 0167 01       		.uleb128 0x1
 3582 0168 12       		.uleb128 0x12
 3583 0169 06       		.uleb128 0x6
 3584 016a 40       		.uleb128 0x40
 3585 016b 18       		.uleb128 0x18
 3586 016c 9642     		.uleb128 0x2116
 3587 016e 19       		.uleb128 0x19
 3588 016f 01       		.uleb128 0x1
 3589 0170 13       		.uleb128 0x13
 3590 0171 00       		.byte	0
 3591 0172 00       		.byte	0
 3592 0173 16       		.uleb128 0x16
 3593 0174 05       		.uleb128 0x5
 3594 0175 00       		.byte	0
 3595 0176 03       		.uleb128 0x3
 3596 0177 0E       		.uleb128 0xe
 3597 0178 3A       		.uleb128 0x3a
 3598 0179 0B       		.uleb128 0xb
 3599 017a 3B       		.uleb128 0x3b
 3600 017b 05       		.uleb128 0x5
 3601 017c 49       		.uleb128 0x49
 3602 017d 13       		.uleb128 0x13
 3603 017e 02       		.uleb128 0x2
 3604 017f 18       		.uleb128 0x18
 3605 0180 00       		.byte	0
 3606 0181 00       		.byte	0
 3607 0182 17       		.uleb128 0x17
 3608 0183 34       		.uleb128 0x34
 3609 0184 00       		.byte	0
 3610 0185 03       		.uleb128 0x3
 3611 0186 0E       		.uleb128 0xe
 3612 0187 3A       		.uleb128 0x3a
 3613 0188 0B       		.uleb128 0xb
 3614 0189 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 82


 3615 018a 05       		.uleb128 0x5
 3616 018b 49       		.uleb128 0x49
 3617 018c 13       		.uleb128 0x13
 3618 018d 02       		.uleb128 0x2
 3619 018e 18       		.uleb128 0x18
 3620 018f 00       		.byte	0
 3621 0190 00       		.byte	0
 3622 0191 18       		.uleb128 0x18
 3623 0192 21       		.uleb128 0x21
 3624 0193 00       		.byte	0
 3625 0194 49       		.uleb128 0x49
 3626 0195 13       		.uleb128 0x13
 3627 0196 2F       		.uleb128 0x2f
 3628 0197 05       		.uleb128 0x5
 3629 0198 00       		.byte	0
 3630 0199 00       		.byte	0
 3631 019a 19       		.uleb128 0x19
 3632 019b 05       		.uleb128 0x5
 3633 019c 00       		.byte	0
 3634 019d 03       		.uleb128 0x3
 3635 019e 08       		.uleb128 0x8
 3636 019f 3A       		.uleb128 0x3a
 3637 01a0 0B       		.uleb128 0xb
 3638 01a1 3B       		.uleb128 0x3b
 3639 01a2 05       		.uleb128 0x5
 3640 01a3 49       		.uleb128 0x49
 3641 01a4 13       		.uleb128 0x13
 3642 01a5 02       		.uleb128 0x2
 3643 01a6 18       		.uleb128 0x18
 3644 01a7 00       		.byte	0
 3645 01a8 00       		.byte	0
 3646 01a9 1A       		.uleb128 0x1a
 3647 01aa 2E       		.uleb128 0x2e
 3648 01ab 00       		.byte	0
 3649 01ac 3F       		.uleb128 0x3f
 3650 01ad 19       		.uleb128 0x19
 3651 01ae 03       		.uleb128 0x3
 3652 01af 0E       		.uleb128 0xe
 3653 01b0 3A       		.uleb128 0x3a
 3654 01b1 0B       		.uleb128 0xb
 3655 01b2 3B       		.uleb128 0x3b
 3656 01b3 05       		.uleb128 0x5
 3657 01b4 11       		.uleb128 0x11
 3658 01b5 01       		.uleb128 0x1
 3659 01b6 12       		.uleb128 0x12
 3660 01b7 06       		.uleb128 0x6
 3661 01b8 40       		.uleb128 0x40
 3662 01b9 18       		.uleb128 0x18
 3663 01ba 9642     		.uleb128 0x2116
 3664 01bc 19       		.uleb128 0x19
 3665 01bd 00       		.byte	0
 3666 01be 00       		.byte	0
 3667 01bf 1B       		.uleb128 0x1b
 3668 01c0 2E       		.uleb128 0x2e
 3669 01c1 01       		.byte	0x1
 3670 01c2 3F       		.uleb128 0x3f
 3671 01c3 19       		.uleb128 0x19
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 83


 3672 01c4 03       		.uleb128 0x3
 3673 01c5 0E       		.uleb128 0xe
 3674 01c6 3A       		.uleb128 0x3a
 3675 01c7 0B       		.uleb128 0xb
 3676 01c8 3B       		.uleb128 0x3b
 3677 01c9 05       		.uleb128 0x5
 3678 01ca 27       		.uleb128 0x27
 3679 01cb 19       		.uleb128 0x19
 3680 01cc 11       		.uleb128 0x11
 3681 01cd 01       		.uleb128 0x1
 3682 01ce 12       		.uleb128 0x12
 3683 01cf 06       		.uleb128 0x6
 3684 01d0 40       		.uleb128 0x40
 3685 01d1 18       		.uleb128 0x18
 3686 01d2 9642     		.uleb128 0x2116
 3687 01d4 19       		.uleb128 0x19
 3688 01d5 01       		.uleb128 0x1
 3689 01d6 13       		.uleb128 0x13
 3690 01d7 00       		.byte	0
 3691 01d8 00       		.byte	0
 3692 01d9 1C       		.uleb128 0x1c
 3693 01da 34       		.uleb128 0x34
 3694 01db 00       		.byte	0
 3695 01dc 03       		.uleb128 0x3
 3696 01dd 0E       		.uleb128 0xe
 3697 01de 3A       		.uleb128 0x3a
 3698 01df 0B       		.uleb128 0xb
 3699 01e0 3B       		.uleb128 0x3b
 3700 01e1 05       		.uleb128 0x5
 3701 01e2 49       		.uleb128 0x49
 3702 01e3 13       		.uleb128 0x13
 3703 01e4 3F       		.uleb128 0x3f
 3704 01e5 19       		.uleb128 0x19
 3705 01e6 3C       		.uleb128 0x3c
 3706 01e7 19       		.uleb128 0x19
 3707 01e8 00       		.byte	0
 3708 01e9 00       		.byte	0
 3709 01ea 1D       		.uleb128 0x1d
 3710 01eb 35       		.uleb128 0x35
 3711 01ec 00       		.byte	0
 3712 01ed 49       		.uleb128 0x49
 3713 01ee 13       		.uleb128 0x13
 3714 01ef 00       		.byte	0
 3715 01f0 00       		.byte	0
 3716 01f1 1E       		.uleb128 0x1e
 3717 01f2 34       		.uleb128 0x34
 3718 01f3 00       		.byte	0
 3719 01f4 03       		.uleb128 0x3
 3720 01f5 0E       		.uleb128 0xe
 3721 01f6 3A       		.uleb128 0x3a
 3722 01f7 0B       		.uleb128 0xb
 3723 01f8 3B       		.uleb128 0x3b
 3724 01f9 0B       		.uleb128 0xb
 3725 01fa 49       		.uleb128 0x49
 3726 01fb 13       		.uleb128 0x13
 3727 01fc 3F       		.uleb128 0x3f
 3728 01fd 19       		.uleb128 0x19
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 84


 3729 01fe 02       		.uleb128 0x2
 3730 01ff 18       		.uleb128 0x18
 3731 0200 00       		.byte	0
 3732 0201 00       		.byte	0
 3733 0202 00       		.byte	0
 3734              		.section	.debug_aranges,"",%progbits
 3735 0000 1C010000 		.4byte	0x11c
 3736 0004 0200     		.2byte	0x2
 3737 0006 00000000 		.4byte	.Ldebug_info0
 3738 000a 04       		.byte	0x4
 3739 000b 00       		.byte	0
 3740 000c 0000     		.2byte	0
 3741 000e 0000     		.2byte	0
 3742 0010 00000000 		.4byte	.LFB56
 3743 0014 2C000000 		.4byte	.LFE56-.LFB56
 3744 0018 00000000 		.4byte	.LFB57
 3745 001c 78000000 		.4byte	.LFE57-.LFB57
 3746 0020 00000000 		.4byte	.LFB58
 3747 0024 18000000 		.4byte	.LFE58-.LFB58
 3748 0028 00000000 		.4byte	.LFB59
 3749 002c 30000000 		.4byte	.LFE59-.LFB59
 3750 0030 00000000 		.4byte	.LFB60
 3751 0034 2C000000 		.4byte	.LFE60-.LFB60
 3752 0038 00000000 		.4byte	.LFB61
 3753 003c 78000000 		.4byte	.LFE61-.LFB61
 3754 0040 00000000 		.4byte	.LFB62
 3755 0044 70000000 		.4byte	.LFE62-.LFB62
 3756 0048 00000000 		.4byte	.LFB63
 3757 004c 4C000000 		.4byte	.LFE63-.LFB63
 3758 0050 00000000 		.4byte	.LFB64
 3759 0054 3C000000 		.4byte	.LFE64-.LFB64
 3760 0058 00000000 		.4byte	.LFB65
 3761 005c 1A000000 		.4byte	.LFE65-.LFB65
 3762 0060 00000000 		.4byte	.LFB66
 3763 0064 78000000 		.4byte	.LFE66-.LFB66
 3764 0068 00000000 		.4byte	.LFB67
 3765 006c 38000000 		.4byte	.LFE67-.LFB67
 3766 0070 00000000 		.4byte	.LFB68
 3767 0074 44000000 		.4byte	.LFE68-.LFB68
 3768 0078 00000000 		.4byte	.LFB69
 3769 007c 48000000 		.4byte	.LFE69-.LFB69
 3770 0080 00000000 		.4byte	.LFB70
 3771 0084 28000000 		.4byte	.LFE70-.LFB70
 3772 0088 00000000 		.4byte	.LFB71
 3773 008c 28000000 		.4byte	.LFE71-.LFB71
 3774 0090 00000000 		.4byte	.LFB72
 3775 0094 28000000 		.4byte	.LFE72-.LFB72
 3776 0098 00000000 		.4byte	.LFB73
 3777 009c 28000000 		.4byte	.LFE73-.LFB73
 3778 00a0 00000000 		.4byte	.LFB74
 3779 00a4 28000000 		.4byte	.LFE74-.LFB74
 3780 00a8 00000000 		.4byte	.LFB75
 3781 00ac 48000000 		.4byte	.LFE75-.LFB75
 3782 00b0 00000000 		.4byte	.LFB76
 3783 00b4 48000000 		.4byte	.LFE76-.LFB76
 3784 00b8 00000000 		.4byte	.LFB77
 3785 00bc 28000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 85


 3786 00c0 00000000 		.4byte	.LFB78
 3787 00c4 48000000 		.4byte	.LFE78-.LFB78
 3788 00c8 00000000 		.4byte	.LFB79
 3789 00cc 28000000 		.4byte	.LFE79-.LFB79
 3790 00d0 00000000 		.4byte	.LFB80
 3791 00d4 44000000 		.4byte	.LFE80-.LFB80
 3792 00d8 00000000 		.4byte	.LFB81
 3793 00dc 44000000 		.4byte	.LFE81-.LFB81
 3794 00e0 00000000 		.4byte	.LFB82
 3795 00e4 98000000 		.4byte	.LFE82-.LFB82
 3796 00e8 00000000 		.4byte	.LFB83
 3797 00ec 84000000 		.4byte	.LFE83-.LFB83
 3798 00f0 00000000 		.4byte	.LFB84
 3799 00f4 28010000 		.4byte	.LFE84-.LFB84
 3800 00f8 00000000 		.4byte	.LFB85
 3801 00fc E0000000 		.4byte	.LFE85-.LFB85
 3802 0100 00000000 		.4byte	.LFB86
 3803 0104 9C000000 		.4byte	.LFE86-.LFB86
 3804 0108 00000000 		.4byte	.LFB87
 3805 010c 24000000 		.4byte	.LFE87-.LFB87
 3806 0110 00000000 		.4byte	.LFB88
 3807 0114 44000000 		.4byte	.LFE88-.LFB88
 3808 0118 00000000 		.4byte	0
 3809 011c 00000000 		.4byte	0
 3810              		.section	.debug_ranges,"",%progbits
 3811              	.Ldebug_ranges0:
 3812 0000 00000000 		.4byte	.LFB56
 3813 0004 2C000000 		.4byte	.LFE56
 3814 0008 00000000 		.4byte	.LFB57
 3815 000c 78000000 		.4byte	.LFE57
 3816 0010 00000000 		.4byte	.LFB58
 3817 0014 18000000 		.4byte	.LFE58
 3818 0018 00000000 		.4byte	.LFB59
 3819 001c 30000000 		.4byte	.LFE59
 3820 0020 00000000 		.4byte	.LFB60
 3821 0024 2C000000 		.4byte	.LFE60
 3822 0028 00000000 		.4byte	.LFB61
 3823 002c 78000000 		.4byte	.LFE61
 3824 0030 00000000 		.4byte	.LFB62
 3825 0034 70000000 		.4byte	.LFE62
 3826 0038 00000000 		.4byte	.LFB63
 3827 003c 4C000000 		.4byte	.LFE63
 3828 0040 00000000 		.4byte	.LFB64
 3829 0044 3C000000 		.4byte	.LFE64
 3830 0048 00000000 		.4byte	.LFB65
 3831 004c 1A000000 		.4byte	.LFE65
 3832 0050 00000000 		.4byte	.LFB66
 3833 0054 78000000 		.4byte	.LFE66
 3834 0058 00000000 		.4byte	.LFB67
 3835 005c 38000000 		.4byte	.LFE67
 3836 0060 00000000 		.4byte	.LFB68
 3837 0064 44000000 		.4byte	.LFE68
 3838 0068 00000000 		.4byte	.LFB69
 3839 006c 48000000 		.4byte	.LFE69
 3840 0070 00000000 		.4byte	.LFB70
 3841 0074 28000000 		.4byte	.LFE70
 3842 0078 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 86


 3843 007c 28000000 		.4byte	.LFE71
 3844 0080 00000000 		.4byte	.LFB72
 3845 0084 28000000 		.4byte	.LFE72
 3846 0088 00000000 		.4byte	.LFB73
 3847 008c 28000000 		.4byte	.LFE73
 3848 0090 00000000 		.4byte	.LFB74
 3849 0094 28000000 		.4byte	.LFE74
 3850 0098 00000000 		.4byte	.LFB75
 3851 009c 48000000 		.4byte	.LFE75
 3852 00a0 00000000 		.4byte	.LFB76
 3853 00a4 48000000 		.4byte	.LFE76
 3854 00a8 00000000 		.4byte	.LFB77
 3855 00ac 28000000 		.4byte	.LFE77
 3856 00b0 00000000 		.4byte	.LFB78
 3857 00b4 48000000 		.4byte	.LFE78
 3858 00b8 00000000 		.4byte	.LFB79
 3859 00bc 28000000 		.4byte	.LFE79
 3860 00c0 00000000 		.4byte	.LFB80
 3861 00c4 44000000 		.4byte	.LFE80
 3862 00c8 00000000 		.4byte	.LFB81
 3863 00cc 44000000 		.4byte	.LFE81
 3864 00d0 00000000 		.4byte	.LFB82
 3865 00d4 98000000 		.4byte	.LFE82
 3866 00d8 00000000 		.4byte	.LFB83
 3867 00dc 84000000 		.4byte	.LFE83
 3868 00e0 00000000 		.4byte	.LFB84
 3869 00e4 28010000 		.4byte	.LFE84
 3870 00e8 00000000 		.4byte	.LFB85
 3871 00ec E0000000 		.4byte	.LFE85
 3872 00f0 00000000 		.4byte	.LFB86
 3873 00f4 9C000000 		.4byte	.LFE86
 3874 00f8 00000000 		.4byte	.LFB87
 3875 00fc 24000000 		.4byte	.LFE87
 3876 0100 00000000 		.4byte	.LFB88
 3877 0104 44000000 		.4byte	.LFE88
 3878 0108 00000000 		.4byte	0
 3879 010c 00000000 		.4byte	0
 3880              		.section	.debug_line,"",%progbits
 3881              	.Ldebug_line0:
 3882 0000 B0040000 		.section	.debug_str,"MS",%progbits,1
 3882      02004A01 
 3882      00000201 
 3882      FB0E0D00 
 3882      01010101 
 3883              	.LASF30:
 3884 0000 76616C69 		.ascii	"valid\000"
 3884      6400
 3885              	.LASF63:
 3886 0006 6D6F6465 		.ascii	"modem_get_packet\000"
 3886      6D5F6765 
 3886      745F7061 
 3886      636B6574 
 3886      00
 3887              	.LASF25:
 3888 0017 65787065 		.ascii	"expected_response\000"
 3888      63746564 
 3888      5F726573 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 87


 3888      706F6E73 
 3888      6500
 3889              	.LASF72:
 3890 0029 72785F63 		.ascii	"rx_char_hold\000"
 3890      6861725F 
 3890      686F6C64 
 3890      00
 3891              	.LASF51:
 3892 0036 6D6F6465 		.ascii	"modem_enable_CDMA_data\000"
 3892      6D5F656E 
 3892      61626C65 
 3892      5F43444D 
 3892      415F6461 
 3893              	.LASF71:
 3894 004d 54656C69 		.ascii	"Telit_isr_rx\000"
 3894      745F6973 
 3894      725F7278 
 3894      00
 3895              	.LASF84:
 3896 005a 2E5C6D6F 		.ascii	".\\modem.c\000"
 3896      64656D2E 
 3896      6300
 3897              	.LASF39:
 3898 0064 6D6F6465 		.ascii	"modem_set_apn\000"
 3898      6D5F7365 
 3898      745F6170 
 3898      6E00
 3899              	.LASF55:
 3900 0072 6D6F6465 		.ascii	"modem_set_password\000"
 3900      6D5F7365 
 3900      745F7061 
 3900      7373776F 
 3900      726400
 3901              	.LASF58:
 3902 0085 6765745F 		.ascii	"get_str\000"
 3902      73747200 
 3903              	.LASF18:
 3904 008d 6D6F6465 		.ascii	"modem_startup\000"
 3904      6D5F7374 
 3904      61727475 
 3904      7000
 3905              	.LASF70:
 3906 009b 75617274 		.ascii	"uart_string_reset\000"
 3906      5F737472 
 3906      696E675F 
 3906      72657365 
 3906      7400
 3907              	.LASF28:
 3908 00ad 64656C61 		.ascii	"delay\000"
 3908      7900
 3909              	.LASF2:
 3910 00b3 73686F72 		.ascii	"short int\000"
 3910      7420696E 
 3910      7400
 3911              	.LASF82:
 3912 00bd 6D6F6465 		.ascii	"modem_apn\000"
 3912      6D5F6170 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 88


 3912      6E00
 3913              	.LASF83:
 3914 00c7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3914      4320342E 
 3914      382E3420 
 3914      32303134 
 3914      30353236 
 3915 00fa 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3915      20726576 
 3915      6973696F 
 3915      6E203231 
 3915      31333538 
 3916 012d 30202D66 		.ascii	"0 -ffunction-sections\000"
 3916      66756E63 
 3916      74696F6E 
 3916      2D736563 
 3916      74696F6E 
 3917              	.LASF50:
 3918 0143 6D6F6465 		.ascii	"modem_get_sw_version\000"
 3918      6D5F6765 
 3918      745F7377 
 3918      5F766572 
 3918      73696F6E 
 3919              	.LASF12:
 3920 0158 75696E74 		.ascii	"uint16\000"
 3920      313600
 3921              	.LASF81:
 3922 015f 75617274 		.ascii	"uart_received_string\000"
 3922      5F726563 
 3922      65697665 
 3922      645F7374 
 3922      72696E67 
 3923              	.LASF35:
 3924 0174 636F756E 		.ascii	"count\000"
 3924      7400
 3925              	.LASF52:
 3926 017a 6D6F6465 		.ascii	"modem_test_CDMA_data\000"
 3926      6D5F7465 
 3926      73745F43 
 3926      444D415F 
 3926      64617461 
 3927              	.LASF64:
 3928 018f 7061636B 		.ascii	"packet\000"
 3928      657400
 3929              	.LASF59:
 3930 0196 6B65795F 		.ascii	"key_str\000"
 3930      73747200 
 3931              	.LASF85:
 3932 019e 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 3932      73657273 
 3932      5C4D6174 
 3932      74686577 
 3932      5C676974 
 3933 01cb 6172642E 		.ascii	"ard.cydsn\000"
 3933      63796473 
 3933      6E00
 3934              	.LASF14:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 89


 3935 01d5 666C6F61 		.ascii	"float\000"
 3935      7400
 3936              	.LASF42:
 3937 01db 6D6F6465 		.ascii	"modem_get_time\000"
 3937      6D5F6765 
 3937      745F7469 
 3937      6D6500
 3938              	.LASF32:
 3939 01ea 6D6F6465 		.ascii	"modem_power_off\000"
 3939      6D5F706F 
 3939      7765725F 
 3939      6F666600 
 3940              	.LASF6:
 3941 01fa 6C6F6E67 		.ascii	"long long int\000"
 3941      206C6F6E 
 3941      6720696E 
 3941      7400
 3942              	.LASF36:
 3943 0208 6E657477 		.ascii	"network_status\000"
 3943      6F726B5F 
 3943      73746174 
 3943      757300
 3944              	.LASF57:
 3945 0217 6D6F6465 		.ascii	"modem_get_google\000"
 3945      6D5F6765 
 3945      745F676F 
 3945      6F676C65 
 3945      00
 3946              	.LASF4:
 3947 0228 6C6F6E67 		.ascii	"long int\000"
 3947      20696E74 
 3947      00
 3948              	.LASF17:
 3949 0231 73697A65 		.ascii	"sizetype\000"
 3949      74797065 
 3949      00
 3950              	.LASF61:
 3951 023a 626F6479 		.ascii	"body\000"
 3951      00
 3952              	.LASF23:
 3953 023f 61745F77 		.ascii	"at_write_command\000"
 3953      72697465 
 3953      5F636F6D 
 3953      6D616E64 
 3953      00
 3954              	.LASF47:
 3955 0250 6D6F6465 		.ascii	"modem_set_flow_control\000"
 3955      6D5F7365 
 3955      745F666C 
 3955      6F775F63 
 3955      6F6E7472 
 3956              	.LASF80:
 3957 0267 75617274 		.ascii	"uart_string_index\000"
 3957      5F737472 
 3957      696E675F 
 3957      696E6465 
 3957      7800
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 90


 3958              	.LASF22:
 3959 0279 6D6F6465 		.ascii	"modem_set_api_feed\000"
 3959      6D5F7365 
 3959      745F6170 
 3959      695F6665 
 3959      656400
 3960              	.LASF38:
 3961 028c 6D6F6465 		.ascii	"modem_connect\000"
 3961      6D5F636F 
 3961      6E6E6563 
 3961      7400
 3962              	.LASF40:
 3963 029a 6D6F6465 		.ascii	"modem_set_band\000"
 3963      6D5F7365 
 3963      745F6261 
 3963      6E6400
 3964              	.LASF56:
 3965 02a9 70617373 		.ascii	"pass\000"
 3965      00
 3966              	.LASF1:
 3967 02ae 756E7369 		.ascii	"unsigned char\000"
 3967      676E6564 
 3967      20636861 
 3967      7200
 3968              	.LASF33:
 3969 02bc 6D6F6465 		.ascii	"modem_reset\000"
 3969      6D5F7265 
 3969      73657400 
 3970              	.LASF74:
 3971 02c8 6D6F6465 		.ascii	"modem_state\000"
 3971      6D5F7374 
 3971      61746500 
 3972              	.LASF0:
 3973 02d4 7369676E 		.ascii	"signed char\000"
 3973      65642063 
 3973      68617200 
 3974              	.LASF7:
 3975 02e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 3975      206C6F6E 
 3975      6720756E 
 3975      7369676E 
 3975      65642069 
 3976              	.LASF8:
 3977 02f7 756E7369 		.ascii	"unsigned int\000"
 3977      676E6564 
 3977      20696E74 
 3977      00
 3978              	.LASF48:
 3979 0304 70617261 		.ascii	"param\000"
 3979      6D00
 3980              	.LASF41:
 3981 030a 62616E64 		.ascii	"band\000"
 3981      00
 3982              	.LASF54:
 3983 030f 75736572 		.ascii	"user\000"
 3983      00
 3984              	.LASF3:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 91


 3985 0314 73686F72 		.ascii	"short unsigned int\000"
 3985      7420756E 
 3985      7369676E 
 3985      65642069 
 3985      6E7400
 3986              	.LASF31:
 3987 0327 6D6F6465 		.ascii	"modem_power_on\000"
 3987      6D5F706F 
 3987      7765725F 
 3987      6F6E00
 3988              	.LASF16:
 3989 0336 63686172 		.ascii	"char\000"
 3989      00
 3990              	.LASF73:
 3991 033b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3991      52784275 
 3991      66666572 
 3991      00
 3992              	.LASF79:
 3993 0348 72656164 		.ascii	"ready\000"
 3993      7900
 3994              	.LASF10:
 3995 034e 696E7433 		.ascii	"int32_t\000"
 3995      325F7400 
 3996              	.LASF66:
 3997 0356 6C6F636B 		.ascii	"lock\000"
 3997      00
 3998              	.LASF44:
 3999 035b 6D6F6465 		.ascii	"modem_get_signal_quality\000"
 3999      6D5F6765 
 3999      745F7369 
 3999      676E616C 
 3999      5F717561 
 4000              	.LASF67:
 4001 0374 6C6F636B 		.ascii	"lock_attempts\000"
 4001      5F617474 
 4001      656D7074 
 4001      7300
 4002              	.LASF11:
 4003 0382 75696E74 		.ascii	"uint8\000"
 4003      3800
 4004              	.LASF21:
 4005 0388 6D6F6465 		.ascii	"modem_stop\000"
 4005      6D5F7374 
 4005      6F7000
 4006              	.LASF20:
 4007 0393 6D6F6465 		.ascii	"modem_start\000"
 4007      6D5F7374 
 4007      61727400 
 4008              	.LASF13:
 4009 039f 75696E74 		.ascii	"uint32\000"
 4009      333200
 4010              	.LASF34:
 4011 03a6 6D6F6465 		.ascii	"modem_setup\000"
 4011      6D5F7365 
 4011      74757000 
 4012              	.LASF5:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 92


 4013 03b2 6C6F6E67 		.ascii	"long unsigned int\000"
 4013      20756E73 
 4013      69676E65 
 4013      6420696E 
 4013      7400
 4014              	.LASF75:
 4015 03c4 6C6F636B 		.ascii	"lock_acquired\000"
 4015      5F616371 
 4015      75697265 
 4015      6400
 4016              	.LASF15:
 4017 03d2 646F7562 		.ascii	"double\000"
 4017      6C6500
 4018              	.LASF29:
 4019 03d9 696E7465 		.ascii	"interval\000"
 4019      7276616C 
 4019      00
 4020              	.LASF27:
 4021 03e2 72657370 		.ascii	"response\000"
 4021      6F6E7365 
 4021      00
 4022              	.LASF19:
 4023 03eb 6D6F6465 		.ascii	"modem_shutdown\000"
 4023      6D5F7368 
 4023      7574646F 
 4023      776E00
 4024              	.LASF60:
 4025 03fa 6D6F6465 		.ascii	"modem_send_packet\000"
 4025      6D5F7365 
 4025      6E645F70 
 4025      61636B65 
 4025      7400
 4026              	.LASF9:
 4027 040c 5F5F696E 		.ascii	"__int32_t\000"
 4027      7433325F 
 4027      7400
 4028              	.LASF45:
 4029 0416 6D6F6465 		.ascii	"modem_get_serial_number\000"
 4029      6D5F6765 
 4029      745F7365 
 4029      7269616C 
 4029      5F6E756D 
 4030              	.LASF37:
 4031 042e 6D6F6465 		.ascii	"modem_disconnect\000"
 4031      6D5F6469 
 4031      73636F6E 
 4031      6E656374 
 4031      00
 4032              	.LASF65:
 4033 043f 6D6F6465 		.ascii	"modem_acquire_lock\000"
 4033      6D5F6163 
 4033      71756972 
 4033      655F6C6F 
 4033      636B00
 4034              	.LASF24:
 4035 0452 75617274 		.ascii	"uart_string\000"
 4035      5F737472 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccbM0m7Z.s 			page 93


 4035      696E6700 
 4036              	.LASF78:
 4037 045e 69746572 		.ascii	"iter\000"
 4037      00
 4038              	.LASF77:
 4039 0463 6170695F 		.ascii	"api_key\000"
 4039      6B657900 
 4040              	.LASF62:
 4041 046b 7075745F 		.ascii	"put_str\000"
 4041      73747200 
 4042              	.LASF46:
 4043 0473 6D6F6465 		.ascii	"modem_get_profile\000"
 4043      6D5F6765 
 4043      745F7072 
 4043      6F66696C 
 4043      6500
 4044              	.LASF49:
 4045 0485 6D6F6465 		.ascii	"modem_set_error_reports\000"
 4045      6D5F7365 
 4045      745F6572 
 4045      726F725F 
 4045      7265706F 
 4046              	.LASF76:
 4047 049d 66656564 		.ascii	"feed_id\000"
 4047      5F696400 
 4048              	.LASF68:
 4049 04a5 64617461 		.ascii	"data_packet\000"
 4049      5F706163 
 4049      6B657400 
 4050              	.LASF43:
 4051 04b1 6D6F6465 		.ascii	"modem_check_network\000"
 4051      6D5F6368 
 4051      65636B5F 
 4051      6E657477 
 4051      6F726B00 
 4052              	.LASF69:
 4053 04c5 6D6F6465 		.ascii	"modem_release_lock\000"
 4053      6D5F7265 
 4053      6C656173 
 4053      655F6C6F 
 4053      636B00
 4054              	.LASF53:
 4055 04d8 6D6F6465 		.ascii	"modem_set_user\000"
 4055      6D5F7365 
 4055      745F7573 
 4055      657200
 4056              	.LASF26:
 4057 04e7 75617274 		.ascii	"uart_timeout\000"
 4057      5F74696D 
 4057      656F7574 
 4057      00
 4058              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
