ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	API_KEY
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 33766F75 		.ascii	"3vouwxRpF9JQfVNwHMMvi08V4JbFbrfdD6FuUcXeAmiOU4hO\000"
  22      77785270 
  22      46394A51 
  22      66564E77 
  22      484D4D76 
  23              		.data
  24              		.align	2
  25              		.type	API_KEY, %object
  26              		.size	API_KEY, 4
  27              	API_KEY:
  28 0000 00000000 		.word	.LC0
  29              		.global	data_packet
  30              		.bss
  31              		.align	2
  32              		.type	data_packet, %object
  33              		.size	data_packet, 1000
  34              	data_packet:
  35 0000 00000000 		.space	1000
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	test_csv
  37              		.align	2
  38              		.type	test_csv, %object
  39              		.size	test_csv, 100
  40              	test_csv:
  41 03e8 00000000 		.space	100
  41      00000000 
  41      00000000 
  41      00000000 
  41      00000000 
  42              		.comm	iter,4,4
  43              		.comm	sign,4,4
  44              		.comm	ready,1,1
  45              		.comm	loops,1,1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 2


  46              		.comm	lock,1,1
  47              		.comm	packet_ready,1,1
  48              		.comm	packet_len,2,2
  49              		.comm	wakeup_interval_counter,4,4
  50              		.global	ultrasonic_reading
  51              		.align	2
  52              		.type	ultrasonic_reading, %object
  53              		.size	ultrasonic_reading, 12
  54              	ultrasonic_reading:
  55 044c 00000000 		.space	12
  55      00000000 
  55      00000000 
  56              		.comm	v_out,4,4
  57              		.section	.text.Wakeup_ISR,"ax",%progbits
  58              		.align	2
  59              		.global	Wakeup_ISR
  60              		.thumb
  61              		.thumb_func
  62              		.type	Wakeup_ISR, %function
  63              	Wakeup_ISR:
  64              	.LFB56:
  65              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <device.h>
  13:.\main.c      **** #include <project.h>
  14:.\main.c      **** #include "modem.h"
  15:.\main.c      **** #include "packet.h"
  16:.\main.c      **** #include "ultrasonic.h"
  17:.\main.c      **** 
  18:.\main.c      **** // define global variables
  19:.\main.c      **** #define SLEEPTIMER_INTERVAL_COUNTER (470u) // Number of wakeups before turn LED on 470 @ 256ms ~2 m
  20:.\main.c      **** #define WRITE_DEBUG 1
  21:.\main.c      **** #define FEED_ID 1738356304
  22:.\main.c      **** 
  23:.\main.c      **** const char *API_KEY = "3vouwxRpF9JQfVNwHMMvi08V4JbFbrfdD6FuUcXeAmiOU4hO";
  24:.\main.c      **** char   data_packet[MAX_PACKET_LENGTH] = {0}, test_csv[100] = {0};
  25:.\main.c      **** int    iter, sign;
  26:.\main.c      **** uint8  ready, loops, lock, packet_ready;
  27:.\main.c      **** uint16 packet_len;
  28:.\main.c      **** uint32 wakeup_interval_counter;
  29:.\main.c      **** UltrasonicReading ultrasonic_reading    = {.valid = 0};     // Initialize UltrasonicReading.valid t
  30:.\main.c      **** 
  31:.\main.c      **** /* autosampler variables
  32:.\main.c      **** uint8 t_sample, trigger_sampler, bottle_count, tmp;
  33:.\main.c      **** */
  34:.\main.c      **** CY_ISR_PROTO(Wakeup_ISR);
  35:.\main.c      **** uint8   blink_LED(uint8 n_blinks);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 3


  36:.\main.c      **** uint8	modem_setup();
  37:.\main.c      **** uint8   modem_get_time();
  38:.\main.c      **** uint8   modem_check_network();
  39:.\main.c      **** uint8   modem_get_signal_quality();
  40:.\main.c      **** uint8   modem_get_serial_number();
  41:.\main.c      **** uint8   modem_get_google();
  42:.\main.c      **** uint8   modem_get_profile();
  43:.\main.c      **** uint8   modem_set_flow_control(uint8 param);
  44:.\main.c      **** uint8 	modem_set_error_reports(uint8 param);
  45:.\main.c      **** uint8   modem_get_sw_version();
  46:.\main.c      **** uint8 	modem_enable_CDMA_data(uint8 param);
  47:.\main.c      **** uint8	modem_test_CDMA_data();
  48:.\main.c      **** uint8	modem_set_user(char* user);
  49:.\main.c      **** uint8	modem_set_password(char* pass);
  50:.\main.c      **** uint8 	at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout);
  51:.\main.c      **** 
  52:.\main.c      **** float   v_out;
  53:.\main.c      **** 
  54:.\main.c      **** CY_ISR(Wakeup_ISR)
  55:.\main.c      **** {
  66              		.loc 1 55 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  56:.\main.c      ****     /***************************************************************************
  57:.\main.c      ****     * This function must always be called (when the Sleep Timer's interrupt
  58:.\main.c      ****     * is disabled or enabled) after wake up to clear the ctw_int status bit.
  59:.\main.c      ****     * It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  60:.\main.c      ****     * of the ILO) after CTW event occurred.
  61:.\main.c      ****     ***************************************************************************/
  62:.\main.c      ****     SleepTimer_GetStatus();
  76              		.loc 1 62 0
  77 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  63:.\main.c      **** }
  78              		.loc 1 63 0
  79 0008 80BD     		pop	{r7, pc}
  80              		.cfi_endproc
  81              	.LFE56:
  82              		.size	Wakeup_ISR, .-Wakeup_ISR
  83              		.global	__aeabi_f2uiz
  84 000a 00BF     		.section	.rodata
  85 0031 000000   		.align	2
  86              	.LC1:
  87 0034 25732564 		.ascii	"%s%d\000"
  87      00
  88 0039 000000   		.align	2
  89              	.LC2:
  90 003c 25732573 		.ascii	"%s%s, %u\015\012\000"
  90      2C202575 
  90      0D0A00
  91 0047 00       		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 4


  92              	.LC3:
  93 0048 746D7000 		.ascii	"tmp\000"
  94              		.align	2
  95              	.LC4:
  96 004c 6C6F636B 		.ascii	"lock,tmp\000"
  96      2C746D70 
  96      00
  97 0055 000000   		.align	2
  98              	.LC5:
  99 0058 6C6F636B 		.ascii	"lock\000"
  99      00
 100 005d 000000   		.section	.text.main,"ax",%progbits
 101              		.align	2
 102              		.global	main
 103              		.thumb
 104              		.thumb_func
 105              		.type	main, %function
 106              	main:
 107              	.LFB57:
  64:.\main.c      **** 
  65:.\main.c      **** void main()
  66:.\main.c      **** {
 108              		.loc 1 66 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              		.cfi_def_cfa_offset 16
 118 0004 02AF     		add	r7, sp, #8
 119              		.cfi_def_cfa 7, 8
  67:.\main.c      ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  68:.\main.c      ****     CyGlobalIntEnable; /* Uncomment this line to enable global interrupts. */
 120              		.loc 1 68 0
 121              	@ 68 ".\main.c" 1
 122 0006 62B6     		CPSIE   i
 123              	@ 0 "" 2
  69:.\main.c      **** 	
  70:.\main.c      **** 	CyDelay(5u);  // Short delay to make sure device is ready for low power entry
 124              		.loc 1 70 0
 125              		.thumb
 126 0008 0520     		movs	r0, #5
 127 000a FFF7FEFF 		bl	CyDelay
  71:.\main.c      **** 	
  72:.\main.c      **** 	sleep_isr_StartEx(Wakeup_ISR); // Start Sleep ISR
 128              		.loc 1 72 0
 129 000e 8A48     		ldr	r0, .L13
 130 0010 FFF7FEFF 		bl	sleep_isr_StartEx
  73:.\main.c      **** 	SleepTimer_Start();			   // Start SleepTimer Compnent	
 131              		.loc 1 73 0
 132 0014 FFF7FEFF 		bl	SleepTimer_Start
  74:.\main.c      ****     
  75:.\main.c      ****     modem_set_api_feed(FEED_ID, API_KEY);
 133              		.loc 1 75 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 5


 134 0018 884B     		ldr	r3, .L13+4
 135 001a 1B68     		ldr	r3, [r3]
 136 001c 8848     		ldr	r0, .L13+8
 137 001e 1946     		mov	r1, r3
 138 0020 FFF7FEFF 		bl	modem_set_api_feed
  76:.\main.c      ****     
  77:.\main.c      ****     //ADC_SAR_1_Start();
  78:.\main.c      ****     //modem_start();
  79:.\main.c      ****     //modem_power_on();    
  80:.\main.c      ****     //modem_get_serial_number();
  81:.\main.c      ****     
  82:.\main.c      ****     // Check/set flow control: Change from 3 (default - bidirectional) to 0 (no flow control) --> D
  83:.\main.c      ****     /*
  84:.\main.c      **** 	modem_set_flow_control(0u); 
  85:.\main.c      ****     modem_get_profile(); //
  86:.\main.c      ****     modem_get_sw_version();
  87:.\main.c      **** 	modem_set_error_reports(2u);
  88:.\main.c      **** 	*/
  89:.\main.c      **** 	
  90:.\main.c      **** 	// Init and enable CDMA
  91:.\main.c      **** 	/*
  92:.\main.c      **** 	modem_set_user("");
  93:.\main.c      **** 	modem_set_password("");	
  94:.\main.c      **** 	modem_test_CDMA_data();
  95:.\main.c      **** 	modem_enable_CDMA_data(1u);
  96:.\main.c      **** 	modem_test_CDMA_data();
  97:.\main.c      **** 	*/
  98:.\main.c      **** 
  99:.\main.c      ****     // Initialize variables
 100:.\main.c      ****     ready			= 1u;
 139              		.loc 1 100 0
 140 0024 874B     		ldr	r3, .L13+12
 141 0026 0122     		movs	r2, #1
 142 0028 1A70     		strb	r2, [r3]
 101:.\main.c      **** 	loops			= 0u;
 143              		.loc 1 101 0
 144 002a 874B     		ldr	r3, .L13+16
 145 002c 0022     		movs	r2, #0
 146 002e 1A70     		strb	r2, [r3]
 102:.\main.c      **** 	lock			= 0u;
 147              		.loc 1 102 0
 148 0030 864B     		ldr	r3, .L13+20
 149 0032 0022     		movs	r2, #0
 150 0034 1A70     		strb	r2, [r3]
 103:.\main.c      **** 	packet_ready	= 0u;
 151              		.loc 1 103 0
 152 0036 864B     		ldr	r3, .L13+24
 153 0038 0022     		movs	r2, #0
 154 003a 1A70     		strb	r2, [r3]
 104:.\main.c      **** 	iter            = 0;
 155              		.loc 1 104 0
 156 003c 854B     		ldr	r3, .L13+28
 157 003e 0022     		movs	r2, #0
 158 0040 1A60     		str	r2, [r3]
 105:.\main.c      ****     sign            = 1;
 159              		.loc 1 105 0
 160 0042 854B     		ldr	r3, .L13+32
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 6


 161 0044 0122     		movs	r2, #1
 162 0046 1A60     		str	r2, [r3]
 106:.\main.c      ****     packet_len      = 0u;
 163              		.loc 1 106 0
 164 0048 844B     		ldr	r3, .L13+36
 165 004a 0022     		movs	r2, #0
 166 004c 1A80     		strh	r2, [r3]	@ movhi
 107:.\main.c      **** 	wakeup_interval_counter = 0u;	
 167              		.loc 1 107 0
 168 004e 844B     		ldr	r3, .L13+40
 169 0050 0022     		movs	r2, #0
 170 0052 1A60     		str	r2, [r3]
 108:.\main.c      ****     v_out           = 0.0;
 171              		.loc 1 108 0
 172 0054 834B     		ldr	r3, .L13+44
 173 0056 4FF00002 		mov	r2, #0
 174 005a 1A60     		str	r2, [r3]	@ float
 109:.\main.c      **** 
 110:.\main.c      ****     
 111:.\main.c      ****     VBAT_READ_EN_Write(0u);
 175              		.loc 1 111 0
 176 005c 0020     		movs	r0, #0
 177 005e FFF7FEFF 		bl	VBAT_READ_EN_Write
 112:.\main.c      **** 	Pin2_Write(0u);
 178              		.loc 1 112 0
 179 0062 0020     		movs	r0, #0
 180 0064 FFF7FEFF 		bl	Pin2_Write
 113:.\main.c      **** 	Pin17_Write(0u);
 181              		.loc 1 113 0
 182 0068 0020     		movs	r0, #0
 183 006a FFF7FEFF 		bl	Pin17_Write
 114:.\main.c      **** 	Pin18_Write(0u);
 184              		.loc 1 114 0
 185 006e 0020     		movs	r0, #0
 186 0070 FFF7FEFF 		bl	Pin18_Write
 115:.\main.c      ****     Pin37_Write(0u);
 187              		.loc 1 115 0
 188 0074 0020     		movs	r0, #0
 189 0076 FFF7FEFF 		bl	Pin37_Write
 116:.\main.c      ****     Pin38_Write(0u);
 190              		.loc 1 116 0
 191 007a 0020     		movs	r0, #0
 192 007c FFF7FEFF 		bl	Pin38_Write
 117:.\main.c      ****     Pin39_Write(0u);
 193              		.loc 1 117 0
 194 0080 0020     		movs	r0, #0
 195 0082 FFF7FEFF 		bl	Pin39_Write
 196              	.L12:
 118:.\main.c      ****     //Pin34_Write(0u);
 119:.\main.c      ****     //Pin35_Write(0u);
 120:.\main.c      ****     
 121:.\main.c      **** //    WaveDAC8_1_Start(); /* Start WaveDAC8  */
 122:.\main.c      **** 
 123:.\main.c      **** 
 124:.\main.c      ****     for(;;)
 125:.\main.c      **** 	{
 126:.\main.c      **** 		if ( ready == 1u ){
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 7


 197              		.loc 1 126 0
 198 0086 6F4B     		ldr	r3, .L13+12
 199 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 200 008a 012B     		cmp	r3, #1
 201 008c 40F0B280 		bne	.L3
 127:.\main.c      **** 			iter = 0;
 202              		.loc 1 127 0
 203 0090 704B     		ldr	r3, .L13+28
 204 0092 0022     		movs	r2, #0
 205 0094 1A60     		str	r2, [r3]
 128:.\main.c      **** 			if (clear_packet(data_packet)) {
 206              		.loc 1 128 0
 207 0096 7448     		ldr	r0, .L13+48
 208 0098 FFF7FEFF 		bl	clear_packet
 209 009c 0346     		mov	r3, r0
 210 009e 002B     		cmp	r3, #0
 211 00a0 05D0     		beq	.L4
 129:.\main.c      ****                 packet_len = 0u;
 212              		.loc 1 129 0
 213 00a2 6E4B     		ldr	r3, .L13+36
 214 00a4 0022     		movs	r2, #0
 215 00a6 1A80     		strh	r2, [r3]	@ movhi
 130:.\main.c      ****                 packet_ready = 0u;
 216              		.loc 1 130 0
 217 00a8 694B     		ldr	r3, .L13+24
 218 00aa 0022     		movs	r2, #0
 219 00ac 1A70     		strb	r2, [r3]
 220              	.L4:
 131:.\main.c      ****             }
 132:.\main.c      **** 			
 133:.\main.c      **** 			blink_LED(3u);
 221              		.loc 1 133 0
 222 00ae 0320     		movs	r0, #3
 223 00b0 FFF7FEFF 		bl	blink_LED
 134:.\main.c      **** 			
 135:.\main.c      ****             if (ultrasonic_get_reading(&ultrasonic_reading)){
 224              		.loc 1 135 0
 225 00b4 6D48     		ldr	r0, .L13+52
 226 00b6 FFF7FEFF 		bl	ultrasonic_get_reading
 227 00ba 0346     		mov	r3, r0
 228 00bc 002B     		cmp	r3, #0
 229 00be 0BD0     		beq	.L5
 136:.\main.c      ****                 sprintf(data_packet, "%s%d", data_packet,
 137:.\main.c      ****                     (uint16) (ultrasonic_reading.depth));              
 230              		.loc 1 137 0
 231 00c0 6A4B     		ldr	r3, .L13+52
 232 00c2 5B68     		ldr	r3, [r3, #4]	@ float
 233 00c4 1846     		mov	r0, r3
 234 00c6 FFF7FEFF 		bl	__aeabi_f2uiz
 235 00ca 0346     		mov	r3, r0
 236 00cc 9BB2     		uxth	r3, r3
 136:.\main.c      ****                 sprintf(data_packet, "%s%d", data_packet,
 237              		.loc 1 136 0
 238 00ce 6648     		ldr	r0, .L13+48
 239 00d0 6749     		ldr	r1, .L13+56
 240 00d2 654A     		ldr	r2, .L13+48
 241 00d4 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 8


 242              	.L5:
 138:.\main.c      ****             }
 139:.\main.c      **** 			
 140:.\main.c      **** 			blink_LED(3u);
 243              		.loc 1 140 0
 244 00d8 0320     		movs	r0, #3
 245 00da FFF7FEFF 		bl	blink_LED
 141:.\main.c      **** 			
 142:.\main.c      **** 			// Set up the modem and connect to network					
 143:.\main.c      **** 			LED_Write(!LED_Read());
 246              		.loc 1 143 0
 247 00de FFF7FEFF 		bl	LED_Read
 248 00e2 0346     		mov	r3, r0
 249 00e4 002B     		cmp	r3, #0
 250 00e6 14BF     		ite	ne
 251 00e8 0023     		movne	r3, #0
 252 00ea 0123     		moveq	r3, #1
 253 00ec DBB2     		uxtb	r3, r3
 254 00ee 1846     		mov	r0, r3
 255 00f0 FFF7FEFF 		bl	LED_Write
 144:.\main.c      **** 			if (modem_startup()) {
 256              		.loc 1 144 0
 257 00f4 FFF7FEFF 		bl	modem_startup
 258 00f8 0346     		mov	r3, r0
 259 00fa 002B     		cmp	r3, #0
 260 00fc 6ED0     		beq	.L6
 145:.\main.c      **** 				//modem_get_serial_number();
 146:.\main.c      **** 
 147:.\main.c      **** 				
 148:.\main.c      **** 				// Send a packet
 149:.\main.c      **** 				LED_Write(!LED_Read());	
 261              		.loc 1 149 0
 262 00fe FFF7FEFF 		bl	LED_Read
 263 0102 0346     		mov	r3, r0
 264 0104 002B     		cmp	r3, #0
 265 0106 14BF     		ite	ne
 266 0108 0023     		movne	r3, #0
 267 010a 0123     		moveq	r3, #1
 268 010c DBB2     		uxtb	r3, r3
 269 010e 1846     		mov	r0, r3
 270 0110 FFF7FEFF 		bl	LED_Write
 150:.\main.c      **** 				sprintf(data_packet,"%s%s, %u\r\n", data_packet,
 271              		.loc 1 150 0
 272 0114 4C4B     		ldr	r3, .L13+16
 273 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 274 0118 0093     		str	r3, [sp]
 275 011a 5348     		ldr	r0, .L13+48
 276 011c 5549     		ldr	r1, .L13+60
 277 011e 524A     		ldr	r2, .L13+48
 278 0120 554B     		ldr	r3, .L13+64
 279 0122 FFF7FEFF 		bl	sprintf
 151:.\main.c      **** 	        		"tmp", loops);  
 152:.\main.c      **** 				ready = modem_send_packet(data_packet);
 280              		.loc 1 152 0
 281 0126 5048     		ldr	r0, .L13+48
 282 0128 FFF7FEFF 		bl	modem_send_packet
 283 012c 0346     		mov	r3, r0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 9


 284 012e 1A46     		mov	r2, r3
 285 0130 444B     		ldr	r3, .L13+12
 286 0132 1A70     		strb	r2, [r3]
 153:.\main.c      **** 				CyDelay(5000u);    // Don't need VVV
 287              		.loc 1 153 0
 288 0134 41F28830 		movw	r0, #5000
 289 0138 FFF7FEFF 		bl	CyDelay
 154:.\main.c      **** 				
 155:.\main.c      **** 				if (clear_packet(data_packet)) {
 290              		.loc 1 155 0
 291 013c 4A48     		ldr	r0, .L13+48
 292 013e FFF7FEFF 		bl	clear_packet
 293 0142 0346     		mov	r3, r0
 294 0144 002B     		cmp	r3, #0
 295 0146 05D0     		beq	.L7
 156:.\main.c      **** 	                packet_len = 0u;
 296              		.loc 1 156 0
 297 0148 444B     		ldr	r3, .L13+36
 298 014a 0022     		movs	r2, #0
 299 014c 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      **** 	                packet_ready = 0u;
 300              		.loc 1 157 0
 301 014e 404B     		ldr	r3, .L13+24
 302 0150 0022     		movs	r2, #0
 303 0152 1A70     		strb	r2, [r3]
 304              	.L7:
 158:.\main.c      **** 	            }
 159:.\main.c      **** 				
 160:.\main.c      **** 				// Request a packet
 161:.\main.c      **** 				LED_Write(!LED_Read());	
 305              		.loc 1 161 0
 306 0154 FFF7FEFF 		bl	LED_Read
 307 0158 0346     		mov	r3, r0
 308 015a 002B     		cmp	r3, #0
 309 015c 14BF     		ite	ne
 310 015e 0023     		movne	r3, #0
 311 0160 0123     		moveq	r3, #1
 312 0162 DBB2     		uxtb	r3, r3
 313 0164 1846     		mov	r0, r3
 314 0166 FFF7FEFF 		bl	LED_Write
 162:.\main.c      **** 				if( modem_get_packet(data_packet,"lock,tmp") ){
 315              		.loc 1 162 0
 316 016a 3F48     		ldr	r0, .L13+48
 317 016c 4349     		ldr	r1, .L13+68
 318 016e FFF7FEFF 		bl	modem_get_packet
 319 0172 0346     		mov	r3, r0
 320 0174 002B     		cmp	r3, #0
 321 0176 31D0     		beq	.L6
 163:.\main.c      **** 				
 164:.\main.c      **** 					// Code to test moving the actuator 					
 165:.\main.c      **** 					if(packet_get_uint8(data_packet,"lock",&lock)){
 322              		.loc 1 165 0
 323 0178 3B48     		ldr	r0, .L13+48
 324 017a 4149     		ldr	r1, .L13+72
 325 017c 334A     		ldr	r2, .L13+20
 326 017e FFF7FEFF 		bl	packet_get_uint8
 327 0182 0346     		mov	r3, r0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 10


 328 0184 002B     		cmp	r3, #0
 329 0186 29D0     		beq	.L6
 166:.\main.c      **** 						if(lock == 1u){	
 330              		.loc 1 166 0
 331 0188 304B     		ldr	r3, .L13+20
 332 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 333 018c 012B     		cmp	r3, #1
 334 018e 25D1     		bne	.L6
 167:.\main.c      **** 							// Supply power to breakout board
 168:.\main.c      **** 							// This powers the Reed Switch
 169:.\main.c      **** 							Pin2_Write(1u);
 335              		.loc 1 169 0
 336 0190 0120     		movs	r0, #1
 337 0192 FFF7FEFF 		bl	Pin2_Write
 170:.\main.c      **** 							CyDelay(1000u);
 338              		.loc 1 170 0
 339 0196 4FF47A70 		mov	r0, #1000
 340 019a FFF7FEFF 		bl	CyDelay
 171:.\main.c      **** 							
 172:.\main.c      **** 							// Move the actuator out
 173:.\main.c      **** 							Pin17_Write(1u);
 341              		.loc 1 173 0
 342 019e 0120     		movs	r0, #1
 343 01a0 FFF7FEFF 		bl	Pin17_Write
 174:.\main.c      **** 							CyDelay(3000u);
 344              		.loc 1 174 0
 345 01a4 40F6B830 		movw	r0, #3000
 346 01a8 FFF7FEFF 		bl	CyDelay
 175:.\main.c      **** 							Pin17_Write(0u);
 347              		.loc 1 175 0
 348 01ac 0020     		movs	r0, #0
 349 01ae FFF7FEFF 		bl	Pin17_Write
 176:.\main.c      **** 							
 177:.\main.c      **** 							CyDelay(2000u);
 350              		.loc 1 177 0
 351 01b2 4FF4FA60 		mov	r0, #2000
 352 01b6 FFF7FEFF 		bl	CyDelay
 178:.\main.c      **** 							
 179:.\main.c      **** 							// Move the actuator in
 180:.\main.c      **** 							Pin18_Write(1u);
 353              		.loc 1 180 0
 354 01ba 0120     		movs	r0, #1
 355 01bc FFF7FEFF 		bl	Pin18_Write
 181:.\main.c      **** 							CyDelay(3000u);
 356              		.loc 1 181 0
 357 01c0 40F6B830 		movw	r0, #3000
 358 01c4 FFF7FEFF 		bl	CyDelay
 182:.\main.c      **** 							Pin18_Write(0u);
 359              		.loc 1 182 0
 360 01c8 0020     		movs	r0, #0
 361 01ca FFF7FEFF 		bl	Pin18_Write
 183:.\main.c      **** 							
 184:.\main.c      **** 							// Cut power to breakout board
 185:.\main.c      **** 							CyDelay(1000u);
 362              		.loc 1 185 0
 363 01ce 4FF47A70 		mov	r0, #1000
 364 01d2 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 11


 186:.\main.c      **** 							Pin2_Write(0u);
 365              		.loc 1 186 0
 366 01d6 0020     		movs	r0, #0
 367 01d8 FFF7FEFF 		bl	Pin2_Write
 368              	.L6:
 187:.\main.c      **** 						}
 188:.\main.c      **** 					}	
 189:.\main.c      **** 				}								
 190:.\main.c      **** 				
 191:.\main.c      **** 				/* 
 192:.\main.c      **** 				modem_power_off();
 193:.\main.c      **** 				modem_stop();
 194:.\main.c      **** 				*/
 195:.\main.c      **** 			}
 196:.\main.c      **** 			modem_shutdown();
 369              		.loc 1 196 0
 370 01dc FFF7FEFF 		bl	modem_shutdown
 197:.\main.c      **** 			
 198:.\main.c      **** 			loops += 10;
 371              		.loc 1 198 0
 372 01e0 194B     		ldr	r3, .L13+16
 373 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 01e4 0A33     		adds	r3, r3, #10
 375 01e6 DAB2     		uxtb	r2, r3
 376 01e8 174B     		ldr	r3, .L13+16
 377 01ea 1A70     		strb	r2, [r3]
 199:.\main.c      **** 			ready = 0u;
 378              		.loc 1 199 0
 379 01ec 154B     		ldr	r3, .L13+12
 380 01ee 0022     		movs	r2, #0
 381 01f0 1A70     		strb	r2, [r3]
 200:.\main.c      **** 		}
 201:.\main.c      **** 		/* If not ready, update the counter for the sleep timer */
 202:.\main.c      **** 		else {
 203:.\main.c      **** 			/* Blink the LED to indicate sleeping */
 204:.\main.c      **** 			blink_LED(5u);
 205:.\main.c      **** 			
 206:.\main.c      **** 			/* Prepares system clocks for the Sleep mode */
 207:.\main.c      **** 	        CyPmSaveClocks();
 208:.\main.c      **** 
 209:.\main.c      **** 	        do
 210:.\main.c      **** 	        {
 211:.\main.c      **** 	            /*******************************************************************
 212:.\main.c      **** 	            * Switch to the Sleep Mode for the other devices:
 213:.\main.c      **** 	            *  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 214:.\main.c      **** 	            *  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 215:.\main.c      **** 	            *******************************************************************/
 216:.\main.c      **** 	            CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 217:.\main.c      **** 
 218:.\main.c      **** 
 219:.\main.c      **** 	            /***********************************************************************
 220:.\main.c      **** 	            * After the device is woken up the Sleep Timer's ISR is executed.
 221:.\main.c      **** 	            * Afterwards the CyPmSleep() execution is finished the clock
 222:.\main.c      **** 	            * configuration is restored.
 223:.\main.c      **** 	            ***********************************************************************/
 224:.\main.c      **** 	            if(SLEEPTIMER_INTERVAL_COUNTER == wakeup_interval_counter)
 225:.\main.c      **** 	            {
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 12


 226:.\main.c      **** 	                /* Blink with LED */
 227:.\main.c      **** 	                //(0u == LED_P1_2_Read()) ? LED_P1_2_Write(1u) : LED_P1_2_Write(0u);
 228:.\main.c      **** 	                wakeup_interval_counter = 0u;
 229:.\main.c      **** 					ready = 1u;
 230:.\main.c      **** 	            }
 231:.\main.c      **** 	            else
 232:.\main.c      **** 	            {
 233:.\main.c      **** 	                wakeup_interval_counter++;
 234:.\main.c      **** 	            }
 235:.\main.c      **** 	                
 236:.\main.c      **** 	        } while (wakeup_interval_counter != 0u);
 237:.\main.c      **** 	        
 238:.\main.c      **** 
 239:.\main.c      **** 	        /* Restore clock configuration */
 240:.\main.c      **** 	        CyPmRestoreClocks();
 241:.\main.c      **** 		}
 242:.\main.c      **** 		
 243:.\main.c      **** 		/*
 244:.\main.c      ****         // Place your application code here.
 245:.\main.c      ****         Pin37_Write(!Pin37_Read());
 246:.\main.c      ****         
 247:.\main.c      ****         clear_packet(data_packet);
 248:.\main.c      ****         sprintf(data_packet,"%s, %u\r\n", "tmp", iter);
 249:.\main.c      ****         
 250:.\main.c      ****         modem_connect();
 251:.\main.c      ****         LED_Write(!LED_Read());
 252:.\main.c      ****         
 253:.\main.c      ****         // modem_state should now be IDLE or READY
 254:.\main.c      ****         //modem_send_packet(data_packet);        
 255:.\main.c      ****         modem_get_google(); //Can't get to work
 256:.\main.c      ****                
 257:.\main.c      ****         if (tmp > 10) {
 258:.\main.c      ****             sign = -1;
 259:.\main.c      ****         } else if (tmp < -10) {
 260:.\main.c      ****             sign = 1;
 261:.\main.c      ****         }
 262:.\main.c      ****         tmp = tmp + sign;        
 263:.\main.c      ****         
 264:.\main.c      ****         
 265:.\main.c      ****         Pin37_Write(!Pin37_Read());
 266:.\main.c      ****         LED_Write(!LED_Read());
 267:.\main.c      ****         CyDelay(100u);  
 268:.\main.c      ****         
 269:.\main.c      ****         modem_get_time();
 270:.\main.c      ****         Pin38_Write(!Pin38_Read());
 271:.\main.c      ****         LED_Write(!LED_Read());
 272:.\main.c      ****         CyDelay(100u);      
 273:.\main.c      ****         
 274:.\main.c      ****         modem_get_signal_quality();
 275:.\main.c      ****         Pin39_Write(!Pin39_Read());
 276:.\main.c      ****         LED_Write(!LED_Read());
 277:.\main.c      ****         CyDelay(100u);  
 278:.\main.c      ****         
 279:.\main.c      ****         modem_check_network();
 280:.\main.c      ****         //Pin34_Write(!Pin34_Read());
 281:.\main.c      ****         LED_Write(!LED_Read());
 282:.\main.c      ****         CyDelay(100u);  
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 13


 283:.\main.c      ****         
 284:.\main.c      ****         modem_get_serial_number();
 285:.\main.c      ****         //modem_disconnect();
 286:.\main.c      ****         //Pin35_Write(!Pin35_Read());
 287:.\main.c      ****         LED_Write(!LED_Read());
 288:.\main.c      ****         CyDelay(100u);   
 289:.\main.c      ****         
 290:.\main.c      ****         ADC_SAR_1_StartConvert();
 291:.\main.c      ****         ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 292:.\main.c      ****         v_out = ADC_SAR_1_CountsTo_Volts(ADC_SAR_1_GetResult16());        
 293:.\main.c      ****         //v_out = Pin30_Read();
 294:.\main.c      ****         Pin25_Write(v_out);
 295:.\main.c      **** 		*/
 296:.\main.c      ****     }
 382              		.loc 1 296 0
 383 01f2 48E7     		b	.L12
 384              	.L3:
 204:.\main.c      **** 			blink_LED(5u);
 385              		.loc 1 204 0
 386 01f4 0520     		movs	r0, #5
 387 01f6 FFF7FEFF 		bl	blink_LED
 207:.\main.c      **** 	        CyPmSaveClocks();
 388              		.loc 1 207 0
 389 01fa FFF7FEFF 		bl	CyPmSaveClocks
 390              	.L11:
 216:.\main.c      **** 	            CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 391              		.loc 1 216 0
 392 01fe 0020     		movs	r0, #0
 393 0200 4FF40061 		mov	r1, #2048
 394 0204 FFF7FEFF 		bl	CyPmSleep
 224:.\main.c      **** 	            if(SLEEPTIMER_INTERVAL_COUNTER == wakeup_interval_counter)
 395              		.loc 1 224 0
 396 0208 154B     		ldr	r3, .L13+40
 397 020a 1B68     		ldr	r3, [r3]
 398 020c B3F5EB7F 		cmp	r3, #470
 399 0210 06D1     		bne	.L9
 228:.\main.c      **** 	                wakeup_interval_counter = 0u;
 400              		.loc 1 228 0
 401 0212 134B     		ldr	r3, .L13+40
 402 0214 0022     		movs	r2, #0
 403 0216 1A60     		str	r2, [r3]
 229:.\main.c      **** 					ready = 1u;
 404              		.loc 1 229 0
 405 0218 0A4B     		ldr	r3, .L13+12
 406 021a 0122     		movs	r2, #1
 407 021c 1A70     		strb	r2, [r3]
 408 021e 04E0     		b	.L10
 409              	.L9:
 233:.\main.c      **** 	                wakeup_interval_counter++;
 410              		.loc 1 233 0
 411 0220 0F4B     		ldr	r3, .L13+40
 412 0222 1B68     		ldr	r3, [r3]
 413 0224 5A1C     		adds	r2, r3, #1
 414 0226 0E4B     		ldr	r3, .L13+40
 415 0228 1A60     		str	r2, [r3]
 416              	.L10:
 236:.\main.c      **** 	        } while (wakeup_interval_counter != 0u);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 14


 417              		.loc 1 236 0
 418 022a 0D4B     		ldr	r3, .L13+40
 419 022c 1B68     		ldr	r3, [r3]
 420 022e 002B     		cmp	r3, #0
 421 0230 E5D1     		bne	.L11
 240:.\main.c      **** 	        CyPmRestoreClocks();
 422              		.loc 1 240 0
 423 0232 FFF7FEFF 		bl	CyPmRestoreClocks
 424              		.loc 1 296 0
 425 0236 26E7     		b	.L12
 426              	.L14:
 427              		.align	2
 428              	.L13:
 429 0238 00000000 		.word	Wakeup_ISR
 430 023c 00000000 		.word	API_KEY
 431 0240 50369D67 		.word	1738356304
 432 0244 00000000 		.word	ready
 433 0248 00000000 		.word	loops
 434 024c 00000000 		.word	lock
 435 0250 00000000 		.word	packet_ready
 436 0254 00000000 		.word	iter
 437 0258 00000000 		.word	sign
 438 025c 00000000 		.word	packet_len
 439 0260 00000000 		.word	wakeup_interval_counter
 440 0264 00000000 		.word	v_out
 441 0268 00000000 		.word	data_packet
 442 026c 00000000 		.word	ultrasonic_reading
 443 0270 34000000 		.word	.LC1
 444 0274 3C000000 		.word	.LC2
 445 0278 48000000 		.word	.LC3
 446 027c 4C000000 		.word	.LC4
 447 0280 58000000 		.word	.LC5
 448              		.cfi_endproc
 449              	.LFE57:
 450              		.size	main, .-main
 451              		.section	.text.blink_LED,"ax",%progbits
 452              		.align	2
 453              		.global	blink_LED
 454              		.thumb
 455              		.thumb_func
 456              		.type	blink_LED, %function
 457              	blink_LED:
 458              	.LFB58:
 297:.\main.c      **** 	
 298:.\main.c      **** 	/*
 299:.\main.c      **** 	modem_power_off();  
 300:.\main.c      **** 	modem_stop();
 301:.\main.c      **** 	
 302:.\main.c      **** 	blink_LED(3u);		
 303:.\main.c      **** 	CyPmSaveClocks();
 304:.\main.c      **** 	CyPmHibernate();
 305:.\main.c      **** 	*/
 306:.\main.c      **** }
 307:.\main.c      **** 
 308:.\main.c      **** uint8 blink_LED(uint8 n_blinks) {
 459              		.loc 1 308 0
 460              		.cfi_startproc
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 15


 461              		@ args = 0, pretend = 0, frame = 16
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 84B0     		sub	sp, sp, #16
 468              		.cfi_def_cfa_offset 24
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 0346     		mov	r3, r0
 472 0008 FB71     		strb	r3, [r7, #7]
 309:.\main.c      **** 	uint8 k;
 310:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 473              		.loc 1 310 0
 474 000a 0023     		movs	r3, #0
 475 000c FB73     		strb	r3, [r7, #15]
 476 000e 0EE0     		b	.L16
 477              	.L17:
 311:.\main.c      **** 		LED_Write(1u);
 478              		.loc 1 311 0 discriminator 2
 479 0010 0120     		movs	r0, #1
 480 0012 FFF7FEFF 		bl	LED_Write
 312:.\main.c      **** 		CyDelay(200u);
 481              		.loc 1 312 0 discriminator 2
 482 0016 C820     		movs	r0, #200
 483 0018 FFF7FEFF 		bl	CyDelay
 313:.\main.c      **** 		LED_Write(0u);
 484              		.loc 1 313 0 discriminator 2
 485 001c 0020     		movs	r0, #0
 486 001e FFF7FEFF 		bl	LED_Write
 314:.\main.c      **** 		CyDelay(200u);
 487              		.loc 1 314 0 discriminator 2
 488 0022 C820     		movs	r0, #200
 489 0024 FFF7FEFF 		bl	CyDelay
 310:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 490              		.loc 1 310 0 discriminator 2
 491 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 492 002a 0133     		adds	r3, r3, #1
 493 002c FB73     		strb	r3, [r7, #15]
 494              	.L16:
 310:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 495              		.loc 1 310 0 is_stmt 0 discriminator 1
 496 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 497 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 498 0032 9A42     		cmp	r2, r3
 499 0034 ECD3     		bcc	.L17
 315:.\main.c      **** 	}	
 316:.\main.c      **** }
 500              		.loc 1 316 0 is_stmt 1
 501 0036 1846     		mov	r0, r3
 502 0038 1037     		adds	r7, r7, #16
 503 003a BD46     		mov	sp, r7
 504              		@ sp needed
 505 003c 80BD     		pop	{r7, pc}
 506              		.cfi_endproc
 507              	.LFE58:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 16


 508              		.size	blink_LED, .-blink_LED
 509 003e 00BF     		.text
 510              	.Letext0:
 511              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 512              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 513              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 514              		.file 5 ".\\ultrasonic.h"
 515              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 516              		.section	.debug_info,"",%progbits
 517              	.Ldebug_info0:
 518 0000 66020000 		.4byte	0x266
 519 0004 0400     		.2byte	0x4
 520 0006 00000000 		.4byte	.Ldebug_abbrev0
 521 000a 04       		.byte	0x4
 522 000b 01       		.uleb128 0x1
 523 000c 4C010000 		.4byte	.LASF36
 524 0010 01       		.byte	0x1
 525 0011 AF000000 		.4byte	.LASF37
 526 0015 55000000 		.4byte	.LASF38
 527 0019 00000000 		.4byte	.Ldebug_ranges0+0
 528 001d 00000000 		.4byte	0
 529 0021 00000000 		.4byte	.Ldebug_line0
 530 0025 02       		.uleb128 0x2
 531 0026 01       		.byte	0x1
 532 0027 06       		.byte	0x6
 533 0028 22020000 		.4byte	.LASF0
 534 002c 02       		.uleb128 0x2
 535 002d 01       		.byte	0x1
 536 002e 08       		.byte	0x8
 537 002f A1000000 		.4byte	.LASF1
 538 0033 02       		.uleb128 0x2
 539 0034 02       		.byte	0x2
 540 0035 05       		.byte	0x5
 541 0036 03020000 		.4byte	.LASF2
 542 003a 02       		.uleb128 0x2
 543 003b 02       		.byte	0x2
 544 003c 07       		.byte	0x7
 545 003d 27000000 		.4byte	.LASF3
 546 0041 03       		.uleb128 0x3
 547 0042 18000000 		.4byte	.LASF9
 548 0046 02       		.byte	0x2
 549 0047 37       		.byte	0x37
 550 0048 4C000000 		.4byte	0x4c
 551 004c 02       		.uleb128 0x2
 552 004d 04       		.byte	0x4
 553 004e 05       		.byte	0x5
 554 004f 19020000 		.4byte	.LASF4
 555 0053 02       		.uleb128 0x2
 556 0054 04       		.byte	0x4
 557 0055 07       		.byte	0x7
 558 0056 EB000000 		.4byte	.LASF5
 559 005a 02       		.uleb128 0x2
 560 005b 08       		.byte	0x8
 561 005c 05       		.byte	0x5
 562 005d D9010000 		.4byte	.LASF6
 563 0061 02       		.uleb128 0x2
 564 0062 08       		.byte	0x8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 17


 565 0063 07       		.byte	0x7
 566 0064 23010000 		.4byte	.LASF7
 567 0068 04       		.uleb128 0x4
 568 0069 04       		.byte	0x4
 569 006a 05       		.byte	0x5
 570 006b 696E7400 		.ascii	"int\000"
 571 006f 02       		.uleb128 0x2
 572 0070 04       		.byte	0x4
 573 0071 07       		.byte	0x7
 574 0072 10010000 		.4byte	.LASF8
 575 0076 03       		.uleb128 0x3
 576 0077 C8010000 		.4byte	.LASF10
 577 007b 03       		.byte	0x3
 578 007c 41       		.byte	0x41
 579 007d 41000000 		.4byte	0x41
 580 0081 03       		.uleb128 0x3
 581 0082 0D020000 		.4byte	.LASF11
 582 0086 04       		.byte	0x4
 583 0087 A1       		.byte	0xa1
 584 0088 2C000000 		.4byte	0x2c
 585 008c 03       		.uleb128 0x3
 586 008d 02010000 		.4byte	.LASF12
 587 0091 04       		.byte	0x4
 588 0092 A2       		.byte	0xa2
 589 0093 3A000000 		.4byte	0x3a
 590 0097 03       		.uleb128 0x3
 591 0098 09010000 		.4byte	.LASF13
 592 009c 04       		.byte	0x4
 593 009d A3       		.byte	0xa3
 594 009e 53000000 		.4byte	0x53
 595 00a2 02       		.uleb128 0x2
 596 00a3 04       		.byte	0x4
 597 00a4 04       		.byte	0x4
 598 00a5 92000000 		.4byte	.LASF14
 599 00a9 02       		.uleb128 0x2
 600 00aa 08       		.byte	0x8
 601 00ab 04       		.byte	0x4
 602 00ac 45000000 		.4byte	.LASF15
 603 00b0 02       		.uleb128 0x2
 604 00b1 01       		.byte	0x1
 605 00b2 08       		.byte	0x8
 606 00b3 ED010000 		.4byte	.LASF16
 607 00b7 02       		.uleb128 0x2
 608 00b8 04       		.byte	0x4
 609 00b9 07       		.byte	0x7
 610 00ba D0010000 		.4byte	.LASF17
 611 00be 05       		.uleb128 0x5
 612 00bf 04       		.byte	0x4
 613 00c0 C4000000 		.4byte	0xc4
 614 00c4 06       		.uleb128 0x6
 615 00c5 B0000000 		.4byte	0xb0
 616 00c9 07       		.uleb128 0x7
 617 00ca 0C       		.byte	0xc
 618 00cb 05       		.byte	0x5
 619 00cc 15       		.byte	0x15
 620 00cd F6000000 		.4byte	0xf6
 621 00d1 08       		.uleb128 0x8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 18


 622 00d2 00000000 		.4byte	.LASF18
 623 00d6 05       		.byte	0x5
 624 00d7 16       		.byte	0x16
 625 00d8 A2000000 		.4byte	0xa2
 626 00dc 00       		.byte	0
 627 00dd 08       		.uleb128 0x8
 628 00de E7010000 		.4byte	.LASF19
 629 00e2 05       		.byte	0x5
 630 00e3 17       		.byte	0x17
 631 00e4 A2000000 		.4byte	0xa2
 632 00e8 04       		.byte	0x4
 633 00e9 08       		.uleb128 0x8
 634 00ea F2010000 		.4byte	.LASF20
 635 00ee 05       		.byte	0x5
 636 00ef 18       		.byte	0x18
 637 00f0 81000000 		.4byte	0x81
 638 00f4 08       		.byte	0x8
 639 00f5 00       		.byte	0
 640 00f6 03       		.uleb128 0x3
 641 00f7 3A010000 		.4byte	.LASF21
 642 00fb 05       		.byte	0x5
 643 00fc 19       		.byte	0x19
 644 00fd C9000000 		.4byte	0xc9
 645 0101 09       		.uleb128 0x9
 646 0102 F8010000 		.4byte	.LASF39
 647 0106 01       		.byte	0x1
 648 0107 36       		.byte	0x36
 649 0108 00000000 		.4byte	.LFB56
 650 010c 0A000000 		.4byte	.LFE56-.LFB56
 651 0110 01       		.uleb128 0x1
 652 0111 9C       		.byte	0x9c
 653 0112 0A       		.uleb128 0xa
 654 0113 FD000000 		.4byte	.LASF40
 655 0117 01       		.byte	0x1
 656 0118 41       		.byte	0x41
 657 0119 00000000 		.4byte	.LFB57
 658 011d 84020000 		.4byte	.LFE57-.LFB57
 659 0121 01       		.uleb128 0x1
 660 0122 9C       		.byte	0x9c
 661 0123 0B       		.uleb128 0xb
 662 0124 33020000 		.4byte	.LASF41
 663 0128 01       		.byte	0x1
 664 0129 3401     		.2byte	0x134
 665 012b 81000000 		.4byte	0x81
 666 012f 00000000 		.4byte	.LFB58
 667 0133 3E000000 		.4byte	.LFE58-.LFB58
 668 0137 01       		.uleb128 0x1
 669 0138 9C       		.byte	0x9c
 670 0139 5A010000 		.4byte	0x15a
 671 013d 0C       		.uleb128 0xc
 672 013e 98000000 		.4byte	.LASF42
 673 0142 01       		.byte	0x1
 674 0143 3401     		.2byte	0x134
 675 0145 81000000 		.4byte	0x81
 676 0149 02       		.uleb128 0x2
 677 014a 91       		.byte	0x91
 678 014b 6F       		.sleb128 -17
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 19


 679 014c 0D       		.uleb128 0xd
 680 014d 6B00     		.ascii	"k\000"
 681 014f 01       		.byte	0x1
 682 0150 3501     		.2byte	0x135
 683 0152 81000000 		.4byte	0x81
 684 0156 02       		.uleb128 0x2
 685 0157 91       		.byte	0x91
 686 0158 77       		.sleb128 -9
 687 0159 00       		.byte	0
 688 015a 0E       		.uleb128 0xe
 689 015b DE000000 		.4byte	.LASF22
 690 015f 06       		.byte	0x6
 691 0160 1606     		.2byte	0x616
 692 0162 66010000 		.4byte	0x166
 693 0166 0F       		.uleb128 0xf
 694 0167 76000000 		.4byte	0x76
 695 016b 10       		.uleb128 0x10
 696 016c D6000000 		.4byte	.LASF23
 697 0170 01       		.byte	0x1
 698 0171 17       		.byte	0x17
 699 0172 BE000000 		.4byte	0xbe
 700 0176 05       		.uleb128 0x5
 701 0177 03       		.byte	0x3
 702 0178 00000000 		.4byte	API_KEY
 703 017c 11       		.uleb128 0x11
 704 017d B0000000 		.4byte	0xb0
 705 0181 8D010000 		.4byte	0x18d
 706 0185 12       		.uleb128 0x12
 707 0186 B7000000 		.4byte	0xb7
 708 018a E703     		.2byte	0x3e7
 709 018c 00       		.byte	0
 710 018d 10       		.uleb128 0x10
 711 018e BD000000 		.4byte	.LASF24
 712 0192 01       		.byte	0x1
 713 0193 18       		.byte	0x18
 714 0194 7C010000 		.4byte	0x17c
 715 0198 05       		.uleb128 0x5
 716 0199 03       		.byte	0x3
 717 019a 00000000 		.4byte	data_packet
 718 019e 11       		.uleb128 0x11
 719 019f B0000000 		.4byte	0xb0
 720 01a3 AE010000 		.4byte	0x1ae
 721 01a7 13       		.uleb128 0x13
 722 01a8 B7000000 		.4byte	0xb7
 723 01ac 63       		.byte	0x63
 724 01ad 00       		.byte	0
 725 01ae 10       		.uleb128 0x10
 726 01af 4C000000 		.4byte	.LASF25
 727 01b3 01       		.byte	0x1
 728 01b4 18       		.byte	0x18
 729 01b5 9E010000 		.4byte	0x19e
 730 01b9 05       		.uleb128 0x5
 731 01ba 03       		.byte	0x3
 732 01bb 00000000 		.4byte	test_csv
 733 01bf 10       		.uleb128 0x10
 734 01c0 22000000 		.4byte	.LASF26
 735 01c4 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 20


 736 01c5 19       		.byte	0x19
 737 01c6 68000000 		.4byte	0x68
 738 01ca 05       		.uleb128 0x5
 739 01cb 03       		.byte	0x3
 740 01cc 00000000 		.4byte	iter
 741 01d0 10       		.uleb128 0x10
 742 01d1 B8000000 		.4byte	.LASF27
 743 01d5 01       		.byte	0x1
 744 01d6 19       		.byte	0x19
 745 01d7 68000000 		.4byte	0x68
 746 01db 05       		.uleb128 0x5
 747 01dc 03       		.byte	0x3
 748 01dd 00000000 		.4byte	sign
 749 01e1 10       		.uleb128 0x10
 750 01e2 1D010000 		.4byte	.LASF28
 751 01e6 01       		.byte	0x1
 752 01e7 1A       		.byte	0x1a
 753 01e8 81000000 		.4byte	0x81
 754 01ec 05       		.uleb128 0x5
 755 01ed 03       		.byte	0x3
 756 01ee 00000000 		.4byte	ready
 757 01f2 10       		.uleb128 0x10
 758 01f3 8C000000 		.4byte	.LASF29
 759 01f7 01       		.byte	0x1
 760 01f8 1A       		.byte	0x1a
 761 01f9 81000000 		.4byte	0x81
 762 01fd 05       		.uleb128 0x5
 763 01fe 03       		.byte	0x3
 764 01ff 00000000 		.4byte	loops
 765 0203 10       		.uleb128 0x10
 766 0204 2E020000 		.4byte	.LASF30
 767 0208 01       		.byte	0x1
 768 0209 1A       		.byte	0x1a
 769 020a 81000000 		.4byte	0x81
 770 020e 05       		.uleb128 0x5
 771 020f 03       		.byte	0x3
 772 0210 00000000 		.4byte	lock
 773 0214 10       		.uleb128 0x10
 774 0215 C9000000 		.4byte	.LASF31
 775 0219 01       		.byte	0x1
 776 021a 1A       		.byte	0x1a
 777 021b 81000000 		.4byte	0x81
 778 021f 05       		.uleb128 0x5
 779 0220 03       		.byte	0x3
 780 0221 00000000 		.4byte	packet_ready
 781 0225 10       		.uleb128 0x10
 782 0226 3A000000 		.4byte	.LASF32
 783 022a 01       		.byte	0x1
 784 022b 1B       		.byte	0x1b
 785 022c 8C000000 		.4byte	0x8c
 786 0230 05       		.uleb128 0x5
 787 0231 03       		.byte	0x3
 788 0232 00000000 		.4byte	packet_len
 789 0236 10       		.uleb128 0x10
 790 0237 3D020000 		.4byte	.LASF33
 791 023b 01       		.byte	0x1
 792 023c 1C       		.byte	0x1c
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 21


 793 023d 97000000 		.4byte	0x97
 794 0241 05       		.uleb128 0x5
 795 0242 03       		.byte	0x3
 796 0243 00000000 		.4byte	wakeup_interval_counter
 797 0247 10       		.uleb128 0x10
 798 0248 05000000 		.4byte	.LASF34
 799 024c 01       		.byte	0x1
 800 024d 1D       		.byte	0x1d
 801 024e F6000000 		.4byte	0xf6
 802 0252 05       		.uleb128 0x5
 803 0253 03       		.byte	0x3
 804 0254 00000000 		.4byte	ultrasonic_reading
 805 0258 10       		.uleb128 0x10
 806 0259 13020000 		.4byte	.LASF35
 807 025d 01       		.byte	0x1
 808 025e 34       		.byte	0x34
 809 025f A2000000 		.4byte	0xa2
 810 0263 05       		.uleb128 0x5
 811 0264 03       		.byte	0x3
 812 0265 00000000 		.4byte	v_out
 813 0269 00       		.byte	0
 814              		.section	.debug_abbrev,"",%progbits
 815              	.Ldebug_abbrev0:
 816 0000 01       		.uleb128 0x1
 817 0001 11       		.uleb128 0x11
 818 0002 01       		.byte	0x1
 819 0003 25       		.uleb128 0x25
 820 0004 0E       		.uleb128 0xe
 821 0005 13       		.uleb128 0x13
 822 0006 0B       		.uleb128 0xb
 823 0007 03       		.uleb128 0x3
 824 0008 0E       		.uleb128 0xe
 825 0009 1B       		.uleb128 0x1b
 826 000a 0E       		.uleb128 0xe
 827 000b 55       		.uleb128 0x55
 828 000c 17       		.uleb128 0x17
 829 000d 11       		.uleb128 0x11
 830 000e 01       		.uleb128 0x1
 831 000f 10       		.uleb128 0x10
 832 0010 17       		.uleb128 0x17
 833 0011 00       		.byte	0
 834 0012 00       		.byte	0
 835 0013 02       		.uleb128 0x2
 836 0014 24       		.uleb128 0x24
 837 0015 00       		.byte	0
 838 0016 0B       		.uleb128 0xb
 839 0017 0B       		.uleb128 0xb
 840 0018 3E       		.uleb128 0x3e
 841 0019 0B       		.uleb128 0xb
 842 001a 03       		.uleb128 0x3
 843 001b 0E       		.uleb128 0xe
 844 001c 00       		.byte	0
 845 001d 00       		.byte	0
 846 001e 03       		.uleb128 0x3
 847 001f 16       		.uleb128 0x16
 848 0020 00       		.byte	0
 849 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 22


 850 0022 0E       		.uleb128 0xe
 851 0023 3A       		.uleb128 0x3a
 852 0024 0B       		.uleb128 0xb
 853 0025 3B       		.uleb128 0x3b
 854 0026 0B       		.uleb128 0xb
 855 0027 49       		.uleb128 0x49
 856 0028 13       		.uleb128 0x13
 857 0029 00       		.byte	0
 858 002a 00       		.byte	0
 859 002b 04       		.uleb128 0x4
 860 002c 24       		.uleb128 0x24
 861 002d 00       		.byte	0
 862 002e 0B       		.uleb128 0xb
 863 002f 0B       		.uleb128 0xb
 864 0030 3E       		.uleb128 0x3e
 865 0031 0B       		.uleb128 0xb
 866 0032 03       		.uleb128 0x3
 867 0033 08       		.uleb128 0x8
 868 0034 00       		.byte	0
 869 0035 00       		.byte	0
 870 0036 05       		.uleb128 0x5
 871 0037 0F       		.uleb128 0xf
 872 0038 00       		.byte	0
 873 0039 0B       		.uleb128 0xb
 874 003a 0B       		.uleb128 0xb
 875 003b 49       		.uleb128 0x49
 876 003c 13       		.uleb128 0x13
 877 003d 00       		.byte	0
 878 003e 00       		.byte	0
 879 003f 06       		.uleb128 0x6
 880 0040 26       		.uleb128 0x26
 881 0041 00       		.byte	0
 882 0042 49       		.uleb128 0x49
 883 0043 13       		.uleb128 0x13
 884 0044 00       		.byte	0
 885 0045 00       		.byte	0
 886 0046 07       		.uleb128 0x7
 887 0047 13       		.uleb128 0x13
 888 0048 01       		.byte	0x1
 889 0049 0B       		.uleb128 0xb
 890 004a 0B       		.uleb128 0xb
 891 004b 3A       		.uleb128 0x3a
 892 004c 0B       		.uleb128 0xb
 893 004d 3B       		.uleb128 0x3b
 894 004e 0B       		.uleb128 0xb
 895 004f 01       		.uleb128 0x1
 896 0050 13       		.uleb128 0x13
 897 0051 00       		.byte	0
 898 0052 00       		.byte	0
 899 0053 08       		.uleb128 0x8
 900 0054 0D       		.uleb128 0xd
 901 0055 00       		.byte	0
 902 0056 03       		.uleb128 0x3
 903 0057 0E       		.uleb128 0xe
 904 0058 3A       		.uleb128 0x3a
 905 0059 0B       		.uleb128 0xb
 906 005a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 23


 907 005b 0B       		.uleb128 0xb
 908 005c 49       		.uleb128 0x49
 909 005d 13       		.uleb128 0x13
 910 005e 38       		.uleb128 0x38
 911 005f 0B       		.uleb128 0xb
 912 0060 00       		.byte	0
 913 0061 00       		.byte	0
 914 0062 09       		.uleb128 0x9
 915 0063 2E       		.uleb128 0x2e
 916 0064 00       		.byte	0
 917 0065 3F       		.uleb128 0x3f
 918 0066 19       		.uleb128 0x19
 919 0067 03       		.uleb128 0x3
 920 0068 0E       		.uleb128 0xe
 921 0069 3A       		.uleb128 0x3a
 922 006a 0B       		.uleb128 0xb
 923 006b 3B       		.uleb128 0x3b
 924 006c 0B       		.uleb128 0xb
 925 006d 27       		.uleb128 0x27
 926 006e 19       		.uleb128 0x19
 927 006f 11       		.uleb128 0x11
 928 0070 01       		.uleb128 0x1
 929 0071 12       		.uleb128 0x12
 930 0072 06       		.uleb128 0x6
 931 0073 40       		.uleb128 0x40
 932 0074 18       		.uleb128 0x18
 933 0075 9642     		.uleb128 0x2116
 934 0077 19       		.uleb128 0x19
 935 0078 00       		.byte	0
 936 0079 00       		.byte	0
 937 007a 0A       		.uleb128 0xa
 938 007b 2E       		.uleb128 0x2e
 939 007c 00       		.byte	0
 940 007d 3F       		.uleb128 0x3f
 941 007e 19       		.uleb128 0x19
 942 007f 03       		.uleb128 0x3
 943 0080 0E       		.uleb128 0xe
 944 0081 3A       		.uleb128 0x3a
 945 0082 0B       		.uleb128 0xb
 946 0083 3B       		.uleb128 0x3b
 947 0084 0B       		.uleb128 0xb
 948 0085 11       		.uleb128 0x11
 949 0086 01       		.uleb128 0x1
 950 0087 12       		.uleb128 0x12
 951 0088 06       		.uleb128 0x6
 952 0089 40       		.uleb128 0x40
 953 008a 18       		.uleb128 0x18
 954 008b 9642     		.uleb128 0x2116
 955 008d 19       		.uleb128 0x19
 956 008e 00       		.byte	0
 957 008f 00       		.byte	0
 958 0090 0B       		.uleb128 0xb
 959 0091 2E       		.uleb128 0x2e
 960 0092 01       		.byte	0x1
 961 0093 3F       		.uleb128 0x3f
 962 0094 19       		.uleb128 0x19
 963 0095 03       		.uleb128 0x3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 24


 964 0096 0E       		.uleb128 0xe
 965 0097 3A       		.uleb128 0x3a
 966 0098 0B       		.uleb128 0xb
 967 0099 3B       		.uleb128 0x3b
 968 009a 05       		.uleb128 0x5
 969 009b 27       		.uleb128 0x27
 970 009c 19       		.uleb128 0x19
 971 009d 49       		.uleb128 0x49
 972 009e 13       		.uleb128 0x13
 973 009f 11       		.uleb128 0x11
 974 00a0 01       		.uleb128 0x1
 975 00a1 12       		.uleb128 0x12
 976 00a2 06       		.uleb128 0x6
 977 00a3 40       		.uleb128 0x40
 978 00a4 18       		.uleb128 0x18
 979 00a5 9642     		.uleb128 0x2116
 980 00a7 19       		.uleb128 0x19
 981 00a8 01       		.uleb128 0x1
 982 00a9 13       		.uleb128 0x13
 983 00aa 00       		.byte	0
 984 00ab 00       		.byte	0
 985 00ac 0C       		.uleb128 0xc
 986 00ad 05       		.uleb128 0x5
 987 00ae 00       		.byte	0
 988 00af 03       		.uleb128 0x3
 989 00b0 0E       		.uleb128 0xe
 990 00b1 3A       		.uleb128 0x3a
 991 00b2 0B       		.uleb128 0xb
 992 00b3 3B       		.uleb128 0x3b
 993 00b4 05       		.uleb128 0x5
 994 00b5 49       		.uleb128 0x49
 995 00b6 13       		.uleb128 0x13
 996 00b7 02       		.uleb128 0x2
 997 00b8 18       		.uleb128 0x18
 998 00b9 00       		.byte	0
 999 00ba 00       		.byte	0
 1000 00bb 0D       		.uleb128 0xd
 1001 00bc 34       		.uleb128 0x34
 1002 00bd 00       		.byte	0
 1003 00be 03       		.uleb128 0x3
 1004 00bf 08       		.uleb128 0x8
 1005 00c0 3A       		.uleb128 0x3a
 1006 00c1 0B       		.uleb128 0xb
 1007 00c2 3B       		.uleb128 0x3b
 1008 00c3 05       		.uleb128 0x5
 1009 00c4 49       		.uleb128 0x49
 1010 00c5 13       		.uleb128 0x13
 1011 00c6 02       		.uleb128 0x2
 1012 00c7 18       		.uleb128 0x18
 1013 00c8 00       		.byte	0
 1014 00c9 00       		.byte	0
 1015 00ca 0E       		.uleb128 0xe
 1016 00cb 34       		.uleb128 0x34
 1017 00cc 00       		.byte	0
 1018 00cd 03       		.uleb128 0x3
 1019 00ce 0E       		.uleb128 0xe
 1020 00cf 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 25


 1021 00d0 0B       		.uleb128 0xb
 1022 00d1 3B       		.uleb128 0x3b
 1023 00d2 05       		.uleb128 0x5
 1024 00d3 49       		.uleb128 0x49
 1025 00d4 13       		.uleb128 0x13
 1026 00d5 3F       		.uleb128 0x3f
 1027 00d6 19       		.uleb128 0x19
 1028 00d7 3C       		.uleb128 0x3c
 1029 00d8 19       		.uleb128 0x19
 1030 00d9 00       		.byte	0
 1031 00da 00       		.byte	0
 1032 00db 0F       		.uleb128 0xf
 1033 00dc 35       		.uleb128 0x35
 1034 00dd 00       		.byte	0
 1035 00de 49       		.uleb128 0x49
 1036 00df 13       		.uleb128 0x13
 1037 00e0 00       		.byte	0
 1038 00e1 00       		.byte	0
 1039 00e2 10       		.uleb128 0x10
 1040 00e3 34       		.uleb128 0x34
 1041 00e4 00       		.byte	0
 1042 00e5 03       		.uleb128 0x3
 1043 00e6 0E       		.uleb128 0xe
 1044 00e7 3A       		.uleb128 0x3a
 1045 00e8 0B       		.uleb128 0xb
 1046 00e9 3B       		.uleb128 0x3b
 1047 00ea 0B       		.uleb128 0xb
 1048 00eb 49       		.uleb128 0x49
 1049 00ec 13       		.uleb128 0x13
 1050 00ed 3F       		.uleb128 0x3f
 1051 00ee 19       		.uleb128 0x19
 1052 00ef 02       		.uleb128 0x2
 1053 00f0 18       		.uleb128 0x18
 1054 00f1 00       		.byte	0
 1055 00f2 00       		.byte	0
 1056 00f3 11       		.uleb128 0x11
 1057 00f4 01       		.uleb128 0x1
 1058 00f5 01       		.byte	0x1
 1059 00f6 49       		.uleb128 0x49
 1060 00f7 13       		.uleb128 0x13
 1061 00f8 01       		.uleb128 0x1
 1062 00f9 13       		.uleb128 0x13
 1063 00fa 00       		.byte	0
 1064 00fb 00       		.byte	0
 1065 00fc 12       		.uleb128 0x12
 1066 00fd 21       		.uleb128 0x21
 1067 00fe 00       		.byte	0
 1068 00ff 49       		.uleb128 0x49
 1069 0100 13       		.uleb128 0x13
 1070 0101 2F       		.uleb128 0x2f
 1071 0102 05       		.uleb128 0x5
 1072 0103 00       		.byte	0
 1073 0104 00       		.byte	0
 1074 0105 13       		.uleb128 0x13
 1075 0106 21       		.uleb128 0x21
 1076 0107 00       		.byte	0
 1077 0108 49       		.uleb128 0x49
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 26


 1078 0109 13       		.uleb128 0x13
 1079 010a 2F       		.uleb128 0x2f
 1080 010b 0B       		.uleb128 0xb
 1081 010c 00       		.byte	0
 1082 010d 00       		.byte	0
 1083 010e 00       		.byte	0
 1084              		.section	.debug_aranges,"",%progbits
 1085 0000 2C000000 		.4byte	0x2c
 1086 0004 0200     		.2byte	0x2
 1087 0006 00000000 		.4byte	.Ldebug_info0
 1088 000a 04       		.byte	0x4
 1089 000b 00       		.byte	0
 1090 000c 0000     		.2byte	0
 1091 000e 0000     		.2byte	0
 1092 0010 00000000 		.4byte	.LFB56
 1093 0014 0A000000 		.4byte	.LFE56-.LFB56
 1094 0018 00000000 		.4byte	.LFB57
 1095 001c 84020000 		.4byte	.LFE57-.LFB57
 1096 0020 00000000 		.4byte	.LFB58
 1097 0024 3E000000 		.4byte	.LFE58-.LFB58
 1098 0028 00000000 		.4byte	0
 1099 002c 00000000 		.4byte	0
 1100              		.section	.debug_ranges,"",%progbits
 1101              	.Ldebug_ranges0:
 1102 0000 00000000 		.4byte	.LFB56
 1103 0004 0A000000 		.4byte	.LFE56
 1104 0008 00000000 		.4byte	.LFB57
 1105 000c 84020000 		.4byte	.LFE57
 1106 0010 00000000 		.4byte	.LFB58
 1107 0014 3E000000 		.4byte	.LFE58
 1108 0018 00000000 		.4byte	0
 1109 001c 00000000 		.4byte	0
 1110              		.section	.debug_line,"",%progbits
 1111              	.Ldebug_line0:
 1112 0000 09020000 		.section	.debug_str,"MS",%progbits,1
 1112      02005B01 
 1112      00000201 
 1112      FB0E0D00 
 1112      01010101 
 1113              	.LASF18:
 1114 0000 74656D70 		.ascii	"temp\000"
 1114      00
 1115              	.LASF34:
 1116 0005 756C7472 		.ascii	"ultrasonic_reading\000"
 1116      61736F6E 
 1116      69635F72 
 1116      65616469 
 1116      6E6700
 1117              	.LASF9:
 1118 0018 5F5F696E 		.ascii	"__int32_t\000"
 1118      7433325F 
 1118      7400
 1119              	.LASF26:
 1120 0022 69746572 		.ascii	"iter\000"
 1120      00
 1121              	.LASF3:
 1122 0027 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 27


 1122      7420756E 
 1122      7369676E 
 1122      65642069 
 1122      6E7400
 1123              	.LASF32:
 1124 003a 7061636B 		.ascii	"packet_len\000"
 1124      65745F6C 
 1124      656E00
 1125              	.LASF15:
 1126 0045 646F7562 		.ascii	"double\000"
 1126      6C6500
 1127              	.LASF25:
 1128 004c 74657374 		.ascii	"test_csv\000"
 1128      5F637376 
 1128      00
 1129              	.LASF38:
 1130 0055 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 1130      73657273 
 1130      5C4D6174 
 1130      74686577 
 1130      5C676974 
 1131 0082 6172642E 		.ascii	"ard.cydsn\000"
 1131      63796473 
 1131      6E00
 1132              	.LASF29:
 1133 008c 6C6F6F70 		.ascii	"loops\000"
 1133      7300
 1134              	.LASF14:
 1135 0092 666C6F61 		.ascii	"float\000"
 1135      7400
 1136              	.LASF42:
 1137 0098 6E5F626C 		.ascii	"n_blinks\000"
 1137      696E6B73 
 1137      00
 1138              	.LASF1:
 1139 00a1 756E7369 		.ascii	"unsigned char\000"
 1139      676E6564 
 1139      20636861 
 1139      7200
 1140              	.LASF37:
 1141 00af 2E5C6D61 		.ascii	".\\main.c\000"
 1141      696E2E63 
 1141      00
 1142              	.LASF27:
 1143 00b8 7369676E 		.ascii	"sign\000"
 1143      00
 1144              	.LASF24:
 1145 00bd 64617461 		.ascii	"data_packet\000"
 1145      5F706163 
 1145      6B657400 
 1146              	.LASF31:
 1147 00c9 7061636B 		.ascii	"packet_ready\000"
 1147      65745F72 
 1147      65616479 
 1147      00
 1148              	.LASF23:
 1149 00d6 4150495F 		.ascii	"API_KEY\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 28


 1149      4B455900 
 1150              	.LASF22:
 1151 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1151      52784275 
 1151      66666572 
 1151      00
 1152              	.LASF5:
 1153 00eb 6C6F6E67 		.ascii	"long unsigned int\000"
 1153      20756E73 
 1153      69676E65 
 1153      6420696E 
 1153      7400
 1154              	.LASF40:
 1155 00fd 6D61696E 		.ascii	"main\000"
 1155      00
 1156              	.LASF12:
 1157 0102 75696E74 		.ascii	"uint16\000"
 1157      313600
 1158              	.LASF13:
 1159 0109 75696E74 		.ascii	"uint32\000"
 1159      333200
 1160              	.LASF8:
 1161 0110 756E7369 		.ascii	"unsigned int\000"
 1161      676E6564 
 1161      20696E74 
 1161      00
 1162              	.LASF28:
 1163 011d 72656164 		.ascii	"ready\000"
 1163      7900
 1164              	.LASF7:
 1165 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 1165      206C6F6E 
 1165      6720756E 
 1165      7369676E 
 1165      65642069 
 1166              	.LASF21:
 1167 013a 556C7472 		.ascii	"UltrasonicReading\000"
 1167      61736F6E 
 1167      69635265 
 1167      6164696E 
 1167      6700
 1168              	.LASF36:
 1169 014c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1169      4320342E 
 1169      382E3420 
 1169      32303134 
 1169      30353236 
 1170 017f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1170      20726576 
 1170      6973696F 
 1170      6E203231 
 1170      31333538 
 1171 01b2 30202D66 		.ascii	"0 -ffunction-sections\000"
 1171      66756E63 
 1171      74696F6E 
 1171      2D736563 
 1171      74696F6E 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 29


 1172              	.LASF10:
 1173 01c8 696E7433 		.ascii	"int32_t\000"
 1173      325F7400 
 1174              	.LASF17:
 1175 01d0 73697A65 		.ascii	"sizetype\000"
 1175      74797065 
 1175      00
 1176              	.LASF6:
 1177 01d9 6C6F6E67 		.ascii	"long long int\000"
 1177      206C6F6E 
 1177      6720696E 
 1177      7400
 1178              	.LASF19:
 1179 01e7 64657074 		.ascii	"depth\000"
 1179      6800
 1180              	.LASF16:
 1181 01ed 63686172 		.ascii	"char\000"
 1181      00
 1182              	.LASF20:
 1183 01f2 76616C69 		.ascii	"valid\000"
 1183      6400
 1184              	.LASF39:
 1185 01f8 57616B65 		.ascii	"Wakeup_ISR\000"
 1185      75705F49 
 1185      535200
 1186              	.LASF2:
 1187 0203 73686F72 		.ascii	"short int\000"
 1187      7420696E 
 1187      7400
 1188              	.LASF11:
 1189 020d 75696E74 		.ascii	"uint8\000"
 1189      3800
 1190              	.LASF35:
 1191 0213 765F6F75 		.ascii	"v_out\000"
 1191      7400
 1192              	.LASF4:
 1193 0219 6C6F6E67 		.ascii	"long int\000"
 1193      20696E74 
 1193      00
 1194              	.LASF0:
 1195 0222 7369676E 		.ascii	"signed char\000"
 1195      65642063 
 1195      68617200 
 1196              	.LASF30:
 1197 022e 6C6F636B 		.ascii	"lock\000"
 1197      00
 1198              	.LASF41:
 1199 0233 626C696E 		.ascii	"blink_LED\000"
 1199      6B5F4C45 
 1199      4400
 1200              	.LASF33:
 1201 023d 77616B65 		.ascii	"wakeup_interval_counter\000"
 1201      75705F69 
 1201      6E746572 
 1201      76616C5F 
 1201      636F756E 
 1202              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccBTWYej.s 			page 30


