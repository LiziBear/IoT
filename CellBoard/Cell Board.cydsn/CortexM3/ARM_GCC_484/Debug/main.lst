ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	API_KEY
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 34515435 		.ascii	"4QT5GSDADNCZKVDA\000"
  22      47534441 
  22      444E435A 
  22      4B564441 
  22      00
  23              		.data
  24              		.align	2
  25              		.type	API_KEY, %object
  26              		.size	API_KEY, 4
  27              	API_KEY:
  28 0000 00000000 		.word	.LC0
  29              		.global	data_packet
  30              		.bss
  31              		.align	2
  32              		.type	data_packet, %object
  33              		.size	data_packet, 1000
  34              	data_packet:
  35 0000 00000000 		.space	1000
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	test_csv
  37              		.align	2
  38              		.type	test_csv, %object
  39              		.size	test_csv, 100
  40              	test_csv:
  41 03e8 00000000 		.space	100
  41      00000000 
  41      00000000 
  41      00000000 
  41      00000000 
  42              		.comm	iter,4,4
  43              		.comm	sign,4,4
  44              		.comm	ready,1,1
  45              		.comm	loops,1,1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 2


  46              		.comm	lock,1,1
  47              		.comm	packet_ready,1,1
  48              		.comm	packet_len,2,2
  49              		.comm	wakeup_interval_counter,4,4
  50              		.global	ultrasonic_reading
  51              		.align	2
  52              		.type	ultrasonic_reading, %object
  53              		.size	ultrasonic_reading, 12
  54              	ultrasonic_reading:
  55 044c 00000000 		.space	12
  55      00000000 
  55      00000000 
  56              		.comm	v_out,4,4
  57              		.section	.text.Wakeup_ISR,"ax",%progbits
  58              		.align	2
  59              		.global	Wakeup_ISR
  60              		.thumb
  61              		.thumb_func
  62              		.type	Wakeup_ISR, %function
  63              	Wakeup_ISR:
  64              	.LFB56:
  65              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <device.h>
  13:.\main.c      **** #include <project.h>
  14:.\main.c      **** #include "modem.h"
  15:.\main.c      **** #include "packet.h"
  16:.\main.c      **** #include "ultrasonic.h"
  17:.\main.c      **** 
  18:.\main.c      **** // define global variables
  19:.\main.c      **** #define SLEEPTIMER_INTERVAL_COUNTER (470u) // Number of wakeups before turn LED on 470 @ 256ms ~2 m
  20:.\main.c      **** #define WRITE_DEBUG 1
  21:.\main.c      **** #define FEED_ID 1738356304
  22:.\main.c      **** 
  23:.\main.c      **** const char *API_KEY = "4QT5GSDADNCZKVDA";
  24:.\main.c      **** char   data_packet[MAX_PACKET_LENGTH] = {0}, test_csv[100] = {0};
  25:.\main.c      **** int    iter, sign;
  26:.\main.c      **** uint8  ready, loops, lock, packet_ready;
  27:.\main.c      **** uint16 packet_len;
  28:.\main.c      **** uint32 wakeup_interval_counter;
  29:.\main.c      **** UltrasonicReading ultrasonic_reading    = {.valid = 0};     // Initialize UltrasonicReading.valid t
  30:.\main.c      **** 
  31:.\main.c      **** /* autosampler variables
  32:.\main.c      **** uint8 t_sample, trigger_sampler, bottle_count, tmp;
  33:.\main.c      **** */
  34:.\main.c      **** CY_ISR_PROTO(Wakeup_ISR);
  35:.\main.c      **** uint8   blink_LED(uint8 n_blinks);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 3


  36:.\main.c      **** uint8	modem_setup();
  37:.\main.c      **** uint8   modem_get_time();
  38:.\main.c      **** uint8   modem_check_network();
  39:.\main.c      **** uint8   modem_get_signal_quality();
  40:.\main.c      **** uint8   modem_get_serial_number();
  41:.\main.c      **** uint8   modem_get_google();
  42:.\main.c      **** uint8   modem_get_profile();
  43:.\main.c      **** uint8   modem_set_flow_control(uint8 param);
  44:.\main.c      **** uint8 	modem_set_error_reports(uint8 param);
  45:.\main.c      **** uint8   modem_get_sw_version();
  46:.\main.c      **** uint8 	modem_enable_CDMA_data(uint8 param);
  47:.\main.c      **** uint8	modem_test_CDMA_data();
  48:.\main.c      **** uint8	modem_set_user(char* user);
  49:.\main.c      **** uint8	modem_set_password(char* pass);
  50:.\main.c      **** uint8 	at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout);
  51:.\main.c      **** 
  52:.\main.c      **** float   v_out;
  53:.\main.c      **** 
  54:.\main.c      **** CY_ISR(Wakeup_ISR)
  55:.\main.c      **** {
  66              		.loc 1 55 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  56:.\main.c      ****     /***************************************************************************
  57:.\main.c      ****     * This function must always be called (when the Sleep Timer's interrupt
  58:.\main.c      ****     * is disabled or enabled) after wake up to clear the ctw_int status bit.
  59:.\main.c      ****     * It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  60:.\main.c      ****     * of the ILO) after CTW event occurred.
  61:.\main.c      ****     ***************************************************************************/
  62:.\main.c      ****     SleepTimer_GetStatus();
  76              		.loc 1 62 0
  77 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  63:.\main.c      **** }
  78              		.loc 1 63 0
  79 0008 80BD     		pop	{r7, pc}
  80              		.cfi_endproc
  81              	.LFE56:
  82              		.size	Wakeup_ISR, .-Wakeup_ISR
  83              		.global	__aeabi_f2uiz
  84 000a 00BF     		.section	.rodata
  85 0011 000000   		.align	2
  86              	.LC1:
  87 0014 25732573 		.ascii	"%s%s%d\000"
  87      256400
  88 001b 00       		.align	2
  89              	.LC2:
  90 001c 6669656C 		.ascii	"field1=\000"
  90      64313D00 
  91              		.align	2
  92              	.LC3:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 4


  93 0024 6C6F636B 		.ascii	"lock,tmp\000"
  93      2C746D70 
  93      00
  94 002d 000000   		.align	2
  95              	.LC4:
  96 0030 6C6F636B 		.ascii	"lock\000"
  96      00
  97 0035 000000   		.section	.text.main,"ax",%progbits
  98              		.align	2
  99              		.global	main
 100              		.thumb
 101              		.thumb_func
 102              		.type	main, %function
 103              	main:
 104              	.LFB57:
  64:.\main.c      **** 
  65:.\main.c      **** void main()
  66:.\main.c      **** {
 105              		.loc 1 66 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 82B0     		sub	sp, sp, #8
 114              		.cfi_def_cfa_offset 16
 115 0004 02AF     		add	r7, sp, #8
 116              		.cfi_def_cfa 7, 8
  67:.\main.c      ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  68:.\main.c      ****     CyGlobalIntEnable; /* Uncomment this line to enable global interrupts. */
 117              		.loc 1 68 0
 118              	@ 68 ".\main.c" 1
 119 0006 62B6     		CPSIE   i
 120              	@ 0 "" 2
  69:.\main.c      **** 	
  70:.\main.c      **** 	CyDelay(5u);  // Short delay to make sure device is ready for low power entry
 121              		.loc 1 70 0
 122              		.thumb
 123 0008 0520     		movs	r0, #5
 124 000a FFF7FEFF 		bl	CyDelay
  71:.\main.c      **** 	
  72:.\main.c      **** 	sleep_isr_StartEx(Wakeup_ISR); // Start Sleep ISR
 125              		.loc 1 72 0
 126 000e 8748     		ldr	r0, .L13
 127 0010 FFF7FEFF 		bl	sleep_isr_StartEx
  73:.\main.c      **** 	SleepTimer_Start();			   // Start SleepTimer Compnent	
 128              		.loc 1 73 0
 129 0014 FFF7FEFF 		bl	SleepTimer_Start
  74:.\main.c      ****     
  75:.\main.c      ****     modem_set_api_feed(FEED_ID, API_KEY);
 130              		.loc 1 75 0
 131 0018 854B     		ldr	r3, .L13+4
 132 001a 1B68     		ldr	r3, [r3]
 133 001c 8548     		ldr	r0, .L13+8
 134 001e 1946     		mov	r1, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 5


 135 0020 FFF7FEFF 		bl	modem_set_api_feed
  76:.\main.c      ****     
  77:.\main.c      ****     //ADC_SAR_1_Start();
  78:.\main.c      ****     //modem_start();
  79:.\main.c      ****     //modem_power_on();    
  80:.\main.c      ****     //modem_get_serial_number();
  81:.\main.c      ****     
  82:.\main.c      ****     // Check/set flow control: Change from 3 (default - bidirectional) to 0 (no flow control) --> D
  83:.\main.c      ****     /*
  84:.\main.c      **** 	modem_set_flow_control(0u); 
  85:.\main.c      ****     modem_get_profile(); //
  86:.\main.c      ****     modem_get_sw_version();
  87:.\main.c      **** 	modem_set_error_reports(2u);
  88:.\main.c      **** 	*/
  89:.\main.c      **** 	
  90:.\main.c      **** 	// Init and enable CDMA
  91:.\main.c      **** 	/*
  92:.\main.c      **** 	modem_set_user("");
  93:.\main.c      **** 	modem_set_password("");	
  94:.\main.c      **** 	modem_test_CDMA_data();
  95:.\main.c      **** 	modem_enable_CDMA_data(1u);
  96:.\main.c      **** 	modem_test_CDMA_data();
  97:.\main.c      **** 	*/
  98:.\main.c      **** 
  99:.\main.c      ****     // Initialize variables
 100:.\main.c      ****     ready			= 1u;
 136              		.loc 1 100 0
 137 0024 844B     		ldr	r3, .L13+12
 138 0026 0122     		movs	r2, #1
 139 0028 1A70     		strb	r2, [r3]
 101:.\main.c      **** 	loops			= 0u;
 140              		.loc 1 101 0
 141 002a 844B     		ldr	r3, .L13+16
 142 002c 0022     		movs	r2, #0
 143 002e 1A70     		strb	r2, [r3]
 102:.\main.c      **** 	lock			= 0u;
 144              		.loc 1 102 0
 145 0030 834B     		ldr	r3, .L13+20
 146 0032 0022     		movs	r2, #0
 147 0034 1A70     		strb	r2, [r3]
 103:.\main.c      **** 	packet_ready	= 0u;
 148              		.loc 1 103 0
 149 0036 834B     		ldr	r3, .L13+24
 150 0038 0022     		movs	r2, #0
 151 003a 1A70     		strb	r2, [r3]
 104:.\main.c      **** 	iter            = 0;
 152              		.loc 1 104 0
 153 003c 824B     		ldr	r3, .L13+28
 154 003e 0022     		movs	r2, #0
 155 0040 1A60     		str	r2, [r3]
 105:.\main.c      ****     sign            = 1;
 156              		.loc 1 105 0
 157 0042 824B     		ldr	r3, .L13+32
 158 0044 0122     		movs	r2, #1
 159 0046 1A60     		str	r2, [r3]
 106:.\main.c      ****     packet_len      = 0u;
 160              		.loc 1 106 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 6


 161 0048 814B     		ldr	r3, .L13+36
 162 004a 0022     		movs	r2, #0
 163 004c 1A80     		strh	r2, [r3]	@ movhi
 107:.\main.c      **** 	wakeup_interval_counter = 0u;	
 164              		.loc 1 107 0
 165 004e 814B     		ldr	r3, .L13+40
 166 0050 0022     		movs	r2, #0
 167 0052 1A60     		str	r2, [r3]
 108:.\main.c      ****     v_out           = 0.0;
 168              		.loc 1 108 0
 169 0054 804B     		ldr	r3, .L13+44
 170 0056 4FF00002 		mov	r2, #0
 171 005a 1A60     		str	r2, [r3]	@ float
 109:.\main.c      **** 
 110:.\main.c      ****     
 111:.\main.c      ****     VBAT_READ_EN_Write(0u);
 172              		.loc 1 111 0
 173 005c 0020     		movs	r0, #0
 174 005e FFF7FEFF 		bl	VBAT_READ_EN_Write
 112:.\main.c      **** 	Pin2_Write(0u);
 175              		.loc 1 112 0
 176 0062 0020     		movs	r0, #0
 177 0064 FFF7FEFF 		bl	Pin2_Write
 113:.\main.c      **** 	Pin17_Write(0u);
 178              		.loc 1 113 0
 179 0068 0020     		movs	r0, #0
 180 006a FFF7FEFF 		bl	Pin17_Write
 114:.\main.c      **** 	Pin18_Write(0u);
 181              		.loc 1 114 0
 182 006e 0020     		movs	r0, #0
 183 0070 FFF7FEFF 		bl	Pin18_Write
 115:.\main.c      ****     Pin37_Write(0u);
 184              		.loc 1 115 0
 185 0074 0020     		movs	r0, #0
 186 0076 FFF7FEFF 		bl	Pin37_Write
 116:.\main.c      ****     Pin38_Write(0u);
 187              		.loc 1 116 0
 188 007a 0020     		movs	r0, #0
 189 007c FFF7FEFF 		bl	Pin38_Write
 117:.\main.c      ****     Pin39_Write(0u);
 190              		.loc 1 117 0
 191 0080 0020     		movs	r0, #0
 192 0082 FFF7FEFF 		bl	Pin39_Write
 193              	.L12:
 118:.\main.c      ****     //Pin34_Write(0u);
 119:.\main.c      ****     //Pin35_Write(0u);
 120:.\main.c      ****     
 121:.\main.c      **** //    WaveDAC8_1_Start(); /* Start WaveDAC8  */
 122:.\main.c      **** 
 123:.\main.c      **** 
 124:.\main.c      ****     for(;;)
 125:.\main.c      **** 	{
 126:.\main.c      **** 		if ( ready == 1u ){
 194              		.loc 1 126 0
 195 0086 6C4B     		ldr	r3, .L13+12
 196 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 008a 012B     		cmp	r3, #1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 7


 198 008c 40F0AB80 		bne	.L3
 127:.\main.c      **** 			iter = 0;
 199              		.loc 1 127 0
 200 0090 6D4B     		ldr	r3, .L13+28
 201 0092 0022     		movs	r2, #0
 202 0094 1A60     		str	r2, [r3]
 128:.\main.c      **** 			if (clear_packet(data_packet)) {
 203              		.loc 1 128 0
 204 0096 7148     		ldr	r0, .L13+48
 205 0098 FFF7FEFF 		bl	clear_packet
 206 009c 0346     		mov	r3, r0
 207 009e 002B     		cmp	r3, #0
 208 00a0 05D0     		beq	.L4
 129:.\main.c      ****                 packet_len = 0u;
 209              		.loc 1 129 0
 210 00a2 6B4B     		ldr	r3, .L13+36
 211 00a4 0022     		movs	r2, #0
 212 00a6 1A80     		strh	r2, [r3]	@ movhi
 130:.\main.c      ****                 packet_ready = 0u;
 213              		.loc 1 130 0
 214 00a8 664B     		ldr	r3, .L13+24
 215 00aa 0022     		movs	r2, #0
 216 00ac 1A70     		strb	r2, [r3]
 217              	.L4:
 131:.\main.c      ****             }
 132:.\main.c      **** 			
 133:.\main.c      **** 			blink_LED(3u);
 218              		.loc 1 133 0
 219 00ae 0320     		movs	r0, #3
 220 00b0 FFF7FEFF 		bl	blink_LED
 134:.\main.c      **** 			
 135:.\main.c      ****             if (ultrasonic_get_reading(&ultrasonic_reading)){
 221              		.loc 1 135 0
 222 00b4 6A48     		ldr	r0, .L13+52
 223 00b6 FFF7FEFF 		bl	ultrasonic_get_reading
 224 00ba 0346     		mov	r3, r0
 225 00bc 002B     		cmp	r3, #0
 226 00be 0DD0     		beq	.L5
 136:.\main.c      ****                 sprintf(data_packet,"%s%s%d", data_packet,
 137:.\main.c      ****                     "field1=", (uint16) (ultrasonic_reading.depth));              
 227              		.loc 1 137 0
 228 00c0 674B     		ldr	r3, .L13+52
 229 00c2 5B68     		ldr	r3, [r3, #4]	@ float
 230 00c4 1846     		mov	r0, r3
 231 00c6 FFF7FEFF 		bl	__aeabi_f2uiz
 232 00ca 0346     		mov	r3, r0
 233 00cc 9BB2     		uxth	r3, r3
 136:.\main.c      ****                 sprintf(data_packet,"%s%s%d", data_packet,
 234              		.loc 1 136 0
 235 00ce 0093     		str	r3, [sp]
 236 00d0 6248     		ldr	r0, .L13+48
 237 00d2 6449     		ldr	r1, .L13+56
 238 00d4 614A     		ldr	r2, .L13+48
 239 00d6 644B     		ldr	r3, .L13+60
 240 00d8 FFF7FEFF 		bl	sprintf
 241              	.L5:
 138:.\main.c      ****             }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 8


 139:.\main.c      **** 			
 140:.\main.c      **** 			blink_LED(3u);
 242              		.loc 1 140 0
 243 00dc 0320     		movs	r0, #3
 244 00de FFF7FEFF 		bl	blink_LED
 141:.\main.c      **** 			
 142:.\main.c      **** 			// Set up the modem and connect to network					
 143:.\main.c      **** 			LED_Write(!LED_Read());
 245              		.loc 1 143 0
 246 00e2 FFF7FEFF 		bl	LED_Read
 247 00e6 0346     		mov	r3, r0
 248 00e8 002B     		cmp	r3, #0
 249 00ea 14BF     		ite	ne
 250 00ec 0023     		movne	r3, #0
 251 00ee 0123     		moveq	r3, #1
 252 00f0 DBB2     		uxtb	r3, r3
 253 00f2 1846     		mov	r0, r3
 254 00f4 FFF7FEFF 		bl	LED_Write
 144:.\main.c      **** 			if (modem_startup()) {
 255              		.loc 1 144 0
 256 00f8 FFF7FEFF 		bl	modem_startup
 257 00fc 0346     		mov	r3, r0
 258 00fe 002B     		cmp	r3, #0
 259 0100 65D0     		beq	.L6
 145:.\main.c      **** 				//modem_get_serial_number();
 146:.\main.c      **** 
 147:.\main.c      **** 				
 148:.\main.c      **** 				// Send a packet
 149:.\main.c      **** 				LED_Write(!LED_Read());	
 260              		.loc 1 149 0
 261 0102 FFF7FEFF 		bl	LED_Read
 262 0106 0346     		mov	r3, r0
 263 0108 002B     		cmp	r3, #0
 264 010a 14BF     		ite	ne
 265 010c 0023     		movne	r3, #0
 266 010e 0123     		moveq	r3, #1
 267 0110 DBB2     		uxtb	r3, r3
 268 0112 1846     		mov	r0, r3
 269 0114 FFF7FEFF 		bl	LED_Write
 150:.\main.c      **** //				sprintf(data_packet,"%s%s, %u\r\n", data_packet,
 151:.\main.c      **** //	        		"tmp", loops);                                    DON'T NEED TMP  
 152:.\main.c      **** 				ready = modem_send_packet(data_packet);
 270              		.loc 1 152 0
 271 0118 5048     		ldr	r0, .L13+48
 272 011a FFF7FEFF 		bl	modem_send_packet
 273 011e 0346     		mov	r3, r0
 274 0120 1A46     		mov	r2, r3
 275 0122 454B     		ldr	r3, .L13+12
 276 0124 1A70     		strb	r2, [r3]
 153:.\main.c      **** 				CyDelay(5000u);
 277              		.loc 1 153 0
 278 0126 41F28830 		movw	r0, #5000
 279 012a FFF7FEFF 		bl	CyDelay
 154:.\main.c      **** 				
 155:.\main.c      **** 				if (clear_packet(data_packet)) {
 280              		.loc 1 155 0
 281 012e 4B48     		ldr	r0, .L13+48
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 9


 282 0130 FFF7FEFF 		bl	clear_packet
 283 0134 0346     		mov	r3, r0
 284 0136 002B     		cmp	r3, #0
 285 0138 05D0     		beq	.L7
 156:.\main.c      **** 	                packet_len = 0u;
 286              		.loc 1 156 0
 287 013a 454B     		ldr	r3, .L13+36
 288 013c 0022     		movs	r2, #0
 289 013e 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      **** 	                packet_ready = 0u;
 290              		.loc 1 157 0
 291 0140 404B     		ldr	r3, .L13+24
 292 0142 0022     		movs	r2, #0
 293 0144 1A70     		strb	r2, [r3]
 294              	.L7:
 158:.\main.c      **** 	            }
 159:.\main.c      **** 				
 160:.\main.c      **** 				// Request a packet
 161:.\main.c      **** 				LED_Write(!LED_Read());	
 295              		.loc 1 161 0
 296 0146 FFF7FEFF 		bl	LED_Read
 297 014a 0346     		mov	r3, r0
 298 014c 002B     		cmp	r3, #0
 299 014e 14BF     		ite	ne
 300 0150 0023     		movne	r3, #0
 301 0152 0123     		moveq	r3, #1
 302 0154 DBB2     		uxtb	r3, r3
 303 0156 1846     		mov	r0, r3
 304 0158 FFF7FEFF 		bl	LED_Write
 162:.\main.c      **** 				if( modem_get_packet(data_packet,"lock,tmp") ){
 305              		.loc 1 162 0
 306 015c 3F48     		ldr	r0, .L13+48
 307 015e 4349     		ldr	r1, .L13+64
 308 0160 FFF7FEFF 		bl	modem_get_packet
 309 0164 0346     		mov	r3, r0
 310 0166 002B     		cmp	r3, #0
 311 0168 31D0     		beq	.L6
 163:.\main.c      **** 				
 164:.\main.c      **** 					// Code to test moving the actuator 					
 165:.\main.c      **** 					if(packet_get_uint8(data_packet,"lock",&lock)){
 312              		.loc 1 165 0
 313 016a 3C48     		ldr	r0, .L13+48
 314 016c 4049     		ldr	r1, .L13+68
 315 016e 344A     		ldr	r2, .L13+20
 316 0170 FFF7FEFF 		bl	packet_get_uint8
 317 0174 0346     		mov	r3, r0
 318 0176 002B     		cmp	r3, #0
 319 0178 29D0     		beq	.L6
 166:.\main.c      **** 						if(lock == 1u){	
 320              		.loc 1 166 0
 321 017a 314B     		ldr	r3, .L13+20
 322 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 323 017e 012B     		cmp	r3, #1
 324 0180 25D1     		bne	.L6
 167:.\main.c      **** 							// Supply power to breakout board
 168:.\main.c      **** 							// This powers the Reed Switch
 169:.\main.c      **** 							Pin2_Write(1u);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 10


 325              		.loc 1 169 0
 326 0182 0120     		movs	r0, #1
 327 0184 FFF7FEFF 		bl	Pin2_Write
 170:.\main.c      **** 							CyDelay(1000u);
 328              		.loc 1 170 0
 329 0188 4FF47A70 		mov	r0, #1000
 330 018c FFF7FEFF 		bl	CyDelay
 171:.\main.c      **** 							
 172:.\main.c      **** 							// Move the actuator out
 173:.\main.c      **** 							Pin17_Write(1u);
 331              		.loc 1 173 0
 332 0190 0120     		movs	r0, #1
 333 0192 FFF7FEFF 		bl	Pin17_Write
 174:.\main.c      **** 							CyDelay(3000u);
 334              		.loc 1 174 0
 335 0196 40F6B830 		movw	r0, #3000
 336 019a FFF7FEFF 		bl	CyDelay
 175:.\main.c      **** 							Pin17_Write(0u);
 337              		.loc 1 175 0
 338 019e 0020     		movs	r0, #0
 339 01a0 FFF7FEFF 		bl	Pin17_Write
 176:.\main.c      **** 							
 177:.\main.c      **** 							CyDelay(2000u);
 340              		.loc 1 177 0
 341 01a4 4FF4FA60 		mov	r0, #2000
 342 01a8 FFF7FEFF 		bl	CyDelay
 178:.\main.c      **** 							
 179:.\main.c      **** 							// Move the actuator in
 180:.\main.c      **** 							Pin18_Write(1u);
 343              		.loc 1 180 0
 344 01ac 0120     		movs	r0, #1
 345 01ae FFF7FEFF 		bl	Pin18_Write
 181:.\main.c      **** 							CyDelay(3000u);
 346              		.loc 1 181 0
 347 01b2 40F6B830 		movw	r0, #3000
 348 01b6 FFF7FEFF 		bl	CyDelay
 182:.\main.c      **** 							Pin18_Write(0u);
 349              		.loc 1 182 0
 350 01ba 0020     		movs	r0, #0
 351 01bc FFF7FEFF 		bl	Pin18_Write
 183:.\main.c      **** 							
 184:.\main.c      **** 							// Cut power to breakout board
 185:.\main.c      **** 							CyDelay(1000u);
 352              		.loc 1 185 0
 353 01c0 4FF47A70 		mov	r0, #1000
 354 01c4 FFF7FEFF 		bl	CyDelay
 186:.\main.c      **** 							Pin2_Write(0u);
 355              		.loc 1 186 0
 356 01c8 0020     		movs	r0, #0
 357 01ca FFF7FEFF 		bl	Pin2_Write
 358              	.L6:
 187:.\main.c      **** 						}
 188:.\main.c      **** 					}	
 189:.\main.c      **** 				}								
 190:.\main.c      **** 				
 191:.\main.c      **** 				/* 
 192:.\main.c      **** 				modem_power_off();
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 11


 193:.\main.c      **** 				modem_stop();
 194:.\main.c      **** 				*/
 195:.\main.c      **** 			}
 196:.\main.c      **** 			modem_shutdown();
 359              		.loc 1 196 0
 360 01ce FFF7FEFF 		bl	modem_shutdown
 197:.\main.c      **** 			
 198:.\main.c      **** 			loops += 10;
 361              		.loc 1 198 0
 362 01d2 1A4B     		ldr	r3, .L13+16
 363 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 364 01d6 0A33     		adds	r3, r3, #10
 365 01d8 DAB2     		uxtb	r2, r3
 366 01da 184B     		ldr	r3, .L13+16
 367 01dc 1A70     		strb	r2, [r3]
 199:.\main.c      **** 			ready = 0u;
 368              		.loc 1 199 0
 369 01de 164B     		ldr	r3, .L13+12
 370 01e0 0022     		movs	r2, #0
 371 01e2 1A70     		strb	r2, [r3]
 200:.\main.c      **** 		}
 201:.\main.c      **** 		/* If not ready, update the counter for the sleep timer */
 202:.\main.c      **** 		else {
 203:.\main.c      **** 			/* Blink the LED to indicate sleeping */
 204:.\main.c      **** 			blink_LED(5u);
 205:.\main.c      **** 			
 206:.\main.c      **** 			/* Prepares system clocks for the Sleep mode */
 207:.\main.c      **** 	        CyPmSaveClocks();
 208:.\main.c      **** 
 209:.\main.c      **** 	        do
 210:.\main.c      **** 	        {
 211:.\main.c      **** 	            /*******************************************************************
 212:.\main.c      **** 	            * Switch to the Sleep Mode for the other devices:
 213:.\main.c      **** 	            *  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 214:.\main.c      **** 	            *  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 215:.\main.c      **** 	            *******************************************************************/
 216:.\main.c      **** 	            CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 217:.\main.c      **** 
 218:.\main.c      **** 
 219:.\main.c      **** 	            /***********************************************************************
 220:.\main.c      **** 	            * After the device is woken up the Sleep Timer's ISR is executed.
 221:.\main.c      **** 	            * Afterwards the CyPmSleep() execution is finished the clock
 222:.\main.c      **** 	            * configuration is restored.
 223:.\main.c      **** 	            ***********************************************************************/
 224:.\main.c      **** 	            if(SLEEPTIMER_INTERVAL_COUNTER == wakeup_interval_counter)
 225:.\main.c      **** 	            {
 226:.\main.c      **** 	                /* Blink with LED */
 227:.\main.c      **** 	                //(0u == LED_P1_2_Read()) ? LED_P1_2_Write(1u) : LED_P1_2_Write(0u);
 228:.\main.c      **** 	                wakeup_interval_counter = 0u;
 229:.\main.c      **** 					ready = 1u;
 230:.\main.c      **** 	            }
 231:.\main.c      **** 	            else
 232:.\main.c      **** 	            {
 233:.\main.c      **** 	                wakeup_interval_counter++;
 234:.\main.c      **** 	            }
 235:.\main.c      **** 	                
 236:.\main.c      **** 	        } while (wakeup_interval_counter != 0u);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 12


 237:.\main.c      **** 	        
 238:.\main.c      **** 
 239:.\main.c      **** 	        /* Restore clock configuration */
 240:.\main.c      **** 	        CyPmRestoreClocks();
 241:.\main.c      **** 		}
 242:.\main.c      **** 		
 243:.\main.c      **** 		/*
 244:.\main.c      ****         // Place your application code here.
 245:.\main.c      ****         Pin37_Write(!Pin37_Read());
 246:.\main.c      ****         
 247:.\main.c      ****         clear_packet(data_packet);
 248:.\main.c      ****         sprintf(data_packet,"%s, %u\r\n", "tmp", iter);
 249:.\main.c      ****         
 250:.\main.c      ****         modem_connect();
 251:.\main.c      ****         LED_Write(!LED_Read());
 252:.\main.c      ****         
 253:.\main.c      ****         // modem_state should now be IDLE or READY
 254:.\main.c      ****         //modem_send_packet(data_packet);        
 255:.\main.c      ****         modem_get_google(); //Can't get to work
 256:.\main.c      ****                
 257:.\main.c      ****         if (tmp > 10) {
 258:.\main.c      ****             sign = -1;
 259:.\main.c      ****         } else if (tmp < -10) {
 260:.\main.c      ****             sign = 1;
 261:.\main.c      ****         }
 262:.\main.c      ****         tmp = tmp + sign;        
 263:.\main.c      ****         
 264:.\main.c      ****         
 265:.\main.c      ****         Pin37_Write(!Pin37_Read());
 266:.\main.c      ****         LED_Write(!LED_Read());
 267:.\main.c      ****         CyDelay(100u);  
 268:.\main.c      ****         
 269:.\main.c      ****         modem_get_time();
 270:.\main.c      ****         Pin38_Write(!Pin38_Read());
 271:.\main.c      ****         LED_Write(!LED_Read());
 272:.\main.c      ****         CyDelay(100u);      
 273:.\main.c      ****         
 274:.\main.c      ****         modem_get_signal_quality();
 275:.\main.c      ****         Pin39_Write(!Pin39_Read());
 276:.\main.c      ****         LED_Write(!LED_Read());
 277:.\main.c      ****         CyDelay(100u);  
 278:.\main.c      ****         
 279:.\main.c      ****         modem_check_network();
 280:.\main.c      ****         //Pin34_Write(!Pin34_Read());
 281:.\main.c      ****         LED_Write(!LED_Read());
 282:.\main.c      ****         CyDelay(100u);  
 283:.\main.c      ****         
 284:.\main.c      ****         modem_get_serial_number();
 285:.\main.c      ****         //modem_disconnect();
 286:.\main.c      ****         //Pin35_Write(!Pin35_Read());
 287:.\main.c      ****         LED_Write(!LED_Read());
 288:.\main.c      ****         CyDelay(100u);   
 289:.\main.c      ****         
 290:.\main.c      ****         ADC_SAR_1_StartConvert();
 291:.\main.c      ****         ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 292:.\main.c      ****         v_out = ADC_SAR_1_CountsTo_Volts(ADC_SAR_1_GetResult16());        
 293:.\main.c      ****         //v_out = Pin30_Read();
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 13


 294:.\main.c      ****         Pin25_Write(v_out);
 295:.\main.c      **** 		*/
 296:.\main.c      ****     }
 372              		.loc 1 296 0
 373 01e4 4FE7     		b	.L12
 374              	.L3:
 204:.\main.c      **** 			blink_LED(5u);
 375              		.loc 1 204 0
 376 01e6 0520     		movs	r0, #5
 377 01e8 FFF7FEFF 		bl	blink_LED
 207:.\main.c      **** 	        CyPmSaveClocks();
 378              		.loc 1 207 0
 379 01ec FFF7FEFF 		bl	CyPmSaveClocks
 380              	.L11:
 216:.\main.c      **** 	            CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 381              		.loc 1 216 0
 382 01f0 0020     		movs	r0, #0
 383 01f2 4FF40061 		mov	r1, #2048
 384 01f6 FFF7FEFF 		bl	CyPmSleep
 224:.\main.c      **** 	            if(SLEEPTIMER_INTERVAL_COUNTER == wakeup_interval_counter)
 385              		.loc 1 224 0
 386 01fa 164B     		ldr	r3, .L13+40
 387 01fc 1B68     		ldr	r3, [r3]
 388 01fe B3F5EB7F 		cmp	r3, #470
 389 0202 06D1     		bne	.L9
 228:.\main.c      **** 	                wakeup_interval_counter = 0u;
 390              		.loc 1 228 0
 391 0204 134B     		ldr	r3, .L13+40
 392 0206 0022     		movs	r2, #0
 393 0208 1A60     		str	r2, [r3]
 229:.\main.c      **** 					ready = 1u;
 394              		.loc 1 229 0
 395 020a 0B4B     		ldr	r3, .L13+12
 396 020c 0122     		movs	r2, #1
 397 020e 1A70     		strb	r2, [r3]
 398 0210 04E0     		b	.L10
 399              	.L9:
 233:.\main.c      **** 	                wakeup_interval_counter++;
 400              		.loc 1 233 0
 401 0212 104B     		ldr	r3, .L13+40
 402 0214 1B68     		ldr	r3, [r3]
 403 0216 5A1C     		adds	r2, r3, #1
 404 0218 0E4B     		ldr	r3, .L13+40
 405 021a 1A60     		str	r2, [r3]
 406              	.L10:
 236:.\main.c      **** 	        } while (wakeup_interval_counter != 0u);
 407              		.loc 1 236 0
 408 021c 0D4B     		ldr	r3, .L13+40
 409 021e 1B68     		ldr	r3, [r3]
 410 0220 002B     		cmp	r3, #0
 411 0222 E5D1     		bne	.L11
 240:.\main.c      **** 	        CyPmRestoreClocks();
 412              		.loc 1 240 0
 413 0224 FFF7FEFF 		bl	CyPmRestoreClocks
 414              		.loc 1 296 0
 415 0228 2DE7     		b	.L12
 416              	.L14:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 14


 417 022a 00BF     		.align	2
 418              	.L13:
 419 022c 00000000 		.word	Wakeup_ISR
 420 0230 00000000 		.word	API_KEY
 421 0234 50369D67 		.word	1738356304
 422 0238 00000000 		.word	ready
 423 023c 00000000 		.word	loops
 424 0240 00000000 		.word	lock
 425 0244 00000000 		.word	packet_ready
 426 0248 00000000 		.word	iter
 427 024c 00000000 		.word	sign
 428 0250 00000000 		.word	packet_len
 429 0254 00000000 		.word	wakeup_interval_counter
 430 0258 00000000 		.word	v_out
 431 025c 00000000 		.word	data_packet
 432 0260 00000000 		.word	ultrasonic_reading
 433 0264 14000000 		.word	.LC1
 434 0268 1C000000 		.word	.LC2
 435 026c 24000000 		.word	.LC3
 436 0270 30000000 		.word	.LC4
 437              		.cfi_endproc
 438              	.LFE57:
 439              		.size	main, .-main
 440              		.section	.text.blink_LED,"ax",%progbits
 441              		.align	2
 442              		.global	blink_LED
 443              		.thumb
 444              		.thumb_func
 445              		.type	blink_LED, %function
 446              	blink_LED:
 447              	.LFB58:
 297:.\main.c      **** 	
 298:.\main.c      **** 	/*
 299:.\main.c      **** 	modem_power_off();  
 300:.\main.c      **** 	modem_stop();
 301:.\main.c      **** 	
 302:.\main.c      **** 	blink_LED(3u);		
 303:.\main.c      **** 	CyPmSaveClocks();
 304:.\main.c      **** 	CyPmHibernate();
 305:.\main.c      **** 	*/
 306:.\main.c      **** }
 307:.\main.c      **** 
 308:.\main.c      **** uint8 blink_LED(uint8 n_blinks) {
 448              		.loc 1 308 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 84B0     		sub	sp, sp, #16
 457              		.cfi_def_cfa_offset 24
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 0346     		mov	r3, r0
 461 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 15


 309:.\main.c      **** 	uint8 k;
 310:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 462              		.loc 1 310 0
 463 000a 0023     		movs	r3, #0
 464 000c FB73     		strb	r3, [r7, #15]
 465 000e 0EE0     		b	.L16
 466              	.L17:
 311:.\main.c      **** 		LED_Write(1u);
 467              		.loc 1 311 0 discriminator 2
 468 0010 0120     		movs	r0, #1
 469 0012 FFF7FEFF 		bl	LED_Write
 312:.\main.c      **** 		CyDelay(200u);
 470              		.loc 1 312 0 discriminator 2
 471 0016 C820     		movs	r0, #200
 472 0018 FFF7FEFF 		bl	CyDelay
 313:.\main.c      **** 		LED_Write(0u);
 473              		.loc 1 313 0 discriminator 2
 474 001c 0020     		movs	r0, #0
 475 001e FFF7FEFF 		bl	LED_Write
 314:.\main.c      **** 		CyDelay(200u);
 476              		.loc 1 314 0 discriminator 2
 477 0022 C820     		movs	r0, #200
 478 0024 FFF7FEFF 		bl	CyDelay
 310:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 479              		.loc 1 310 0 discriminator 2
 480 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 481 002a 0133     		adds	r3, r3, #1
 482 002c FB73     		strb	r3, [r7, #15]
 483              	.L16:
 310:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 484              		.loc 1 310 0 is_stmt 0 discriminator 1
 485 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 486 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487 0032 9A42     		cmp	r2, r3
 488 0034 ECD3     		bcc	.L17
 315:.\main.c      **** 	}	
 316:.\main.c      **** }
 489              		.loc 1 316 0 is_stmt 1
 490 0036 1846     		mov	r0, r3
 491 0038 1037     		adds	r7, r7, #16
 492 003a BD46     		mov	sp, r7
 493              		@ sp needed
 494 003c 80BD     		pop	{r7, pc}
 495              		.cfi_endproc
 496              	.LFE58:
 497              		.size	blink_LED, .-blink_LED
 498 003e 00BF     		.text
 499              	.Letext0:
 500              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 501              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 502              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 503              		.file 5 ".\\ultrasonic.h"
 504              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 505              		.section	.debug_info,"",%progbits
 506              	.Ldebug_info0:
 507 0000 66020000 		.4byte	0x266
 508 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 16


 509 0006 00000000 		.4byte	.Ldebug_abbrev0
 510 000a 04       		.byte	0x4
 511 000b 01       		.uleb128 0x1
 512 000c 4C010000 		.4byte	.LASF36
 513 0010 01       		.byte	0x1
 514 0011 AF000000 		.4byte	.LASF37
 515 0015 55000000 		.4byte	.LASF38
 516 0019 00000000 		.4byte	.Ldebug_ranges0+0
 517 001d 00000000 		.4byte	0
 518 0021 00000000 		.4byte	.Ldebug_line0
 519 0025 02       		.uleb128 0x2
 520 0026 01       		.byte	0x1
 521 0027 06       		.byte	0x6
 522 0028 22020000 		.4byte	.LASF0
 523 002c 02       		.uleb128 0x2
 524 002d 01       		.byte	0x1
 525 002e 08       		.byte	0x8
 526 002f A1000000 		.4byte	.LASF1
 527 0033 02       		.uleb128 0x2
 528 0034 02       		.byte	0x2
 529 0035 05       		.byte	0x5
 530 0036 03020000 		.4byte	.LASF2
 531 003a 02       		.uleb128 0x2
 532 003b 02       		.byte	0x2
 533 003c 07       		.byte	0x7
 534 003d 27000000 		.4byte	.LASF3
 535 0041 03       		.uleb128 0x3
 536 0042 18000000 		.4byte	.LASF9
 537 0046 02       		.byte	0x2
 538 0047 37       		.byte	0x37
 539 0048 4C000000 		.4byte	0x4c
 540 004c 02       		.uleb128 0x2
 541 004d 04       		.byte	0x4
 542 004e 05       		.byte	0x5
 543 004f 19020000 		.4byte	.LASF4
 544 0053 02       		.uleb128 0x2
 545 0054 04       		.byte	0x4
 546 0055 07       		.byte	0x7
 547 0056 EB000000 		.4byte	.LASF5
 548 005a 02       		.uleb128 0x2
 549 005b 08       		.byte	0x8
 550 005c 05       		.byte	0x5
 551 005d D9010000 		.4byte	.LASF6
 552 0061 02       		.uleb128 0x2
 553 0062 08       		.byte	0x8
 554 0063 07       		.byte	0x7
 555 0064 23010000 		.4byte	.LASF7
 556 0068 04       		.uleb128 0x4
 557 0069 04       		.byte	0x4
 558 006a 05       		.byte	0x5
 559 006b 696E7400 		.ascii	"int\000"
 560 006f 02       		.uleb128 0x2
 561 0070 04       		.byte	0x4
 562 0071 07       		.byte	0x7
 563 0072 10010000 		.4byte	.LASF8
 564 0076 03       		.uleb128 0x3
 565 0077 C8010000 		.4byte	.LASF10
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 17


 566 007b 03       		.byte	0x3
 567 007c 41       		.byte	0x41
 568 007d 41000000 		.4byte	0x41
 569 0081 03       		.uleb128 0x3
 570 0082 0D020000 		.4byte	.LASF11
 571 0086 04       		.byte	0x4
 572 0087 A1       		.byte	0xa1
 573 0088 2C000000 		.4byte	0x2c
 574 008c 03       		.uleb128 0x3
 575 008d 02010000 		.4byte	.LASF12
 576 0091 04       		.byte	0x4
 577 0092 A2       		.byte	0xa2
 578 0093 3A000000 		.4byte	0x3a
 579 0097 03       		.uleb128 0x3
 580 0098 09010000 		.4byte	.LASF13
 581 009c 04       		.byte	0x4
 582 009d A3       		.byte	0xa3
 583 009e 53000000 		.4byte	0x53
 584 00a2 02       		.uleb128 0x2
 585 00a3 04       		.byte	0x4
 586 00a4 04       		.byte	0x4
 587 00a5 92000000 		.4byte	.LASF14
 588 00a9 02       		.uleb128 0x2
 589 00aa 08       		.byte	0x8
 590 00ab 04       		.byte	0x4
 591 00ac 45000000 		.4byte	.LASF15
 592 00b0 02       		.uleb128 0x2
 593 00b1 01       		.byte	0x1
 594 00b2 08       		.byte	0x8
 595 00b3 ED010000 		.4byte	.LASF16
 596 00b7 02       		.uleb128 0x2
 597 00b8 04       		.byte	0x4
 598 00b9 07       		.byte	0x7
 599 00ba D0010000 		.4byte	.LASF17
 600 00be 05       		.uleb128 0x5
 601 00bf 04       		.byte	0x4
 602 00c0 C4000000 		.4byte	0xc4
 603 00c4 06       		.uleb128 0x6
 604 00c5 B0000000 		.4byte	0xb0
 605 00c9 07       		.uleb128 0x7
 606 00ca 0C       		.byte	0xc
 607 00cb 05       		.byte	0x5
 608 00cc 15       		.byte	0x15
 609 00cd F6000000 		.4byte	0xf6
 610 00d1 08       		.uleb128 0x8
 611 00d2 00000000 		.4byte	.LASF18
 612 00d6 05       		.byte	0x5
 613 00d7 16       		.byte	0x16
 614 00d8 A2000000 		.4byte	0xa2
 615 00dc 00       		.byte	0
 616 00dd 08       		.uleb128 0x8
 617 00de E7010000 		.4byte	.LASF19
 618 00e2 05       		.byte	0x5
 619 00e3 17       		.byte	0x17
 620 00e4 A2000000 		.4byte	0xa2
 621 00e8 04       		.byte	0x4
 622 00e9 08       		.uleb128 0x8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 18


 623 00ea F2010000 		.4byte	.LASF20
 624 00ee 05       		.byte	0x5
 625 00ef 18       		.byte	0x18
 626 00f0 81000000 		.4byte	0x81
 627 00f4 08       		.byte	0x8
 628 00f5 00       		.byte	0
 629 00f6 03       		.uleb128 0x3
 630 00f7 3A010000 		.4byte	.LASF21
 631 00fb 05       		.byte	0x5
 632 00fc 19       		.byte	0x19
 633 00fd C9000000 		.4byte	0xc9
 634 0101 09       		.uleb128 0x9
 635 0102 F8010000 		.4byte	.LASF39
 636 0106 01       		.byte	0x1
 637 0107 36       		.byte	0x36
 638 0108 00000000 		.4byte	.LFB56
 639 010c 0A000000 		.4byte	.LFE56-.LFB56
 640 0110 01       		.uleb128 0x1
 641 0111 9C       		.byte	0x9c
 642 0112 0A       		.uleb128 0xa
 643 0113 FD000000 		.4byte	.LASF40
 644 0117 01       		.byte	0x1
 645 0118 41       		.byte	0x41
 646 0119 00000000 		.4byte	.LFB57
 647 011d 74020000 		.4byte	.LFE57-.LFB57
 648 0121 01       		.uleb128 0x1
 649 0122 9C       		.byte	0x9c
 650 0123 0B       		.uleb128 0xb
 651 0124 33020000 		.4byte	.LASF41
 652 0128 01       		.byte	0x1
 653 0129 3401     		.2byte	0x134
 654 012b 81000000 		.4byte	0x81
 655 012f 00000000 		.4byte	.LFB58
 656 0133 3E000000 		.4byte	.LFE58-.LFB58
 657 0137 01       		.uleb128 0x1
 658 0138 9C       		.byte	0x9c
 659 0139 5A010000 		.4byte	0x15a
 660 013d 0C       		.uleb128 0xc
 661 013e 98000000 		.4byte	.LASF42
 662 0142 01       		.byte	0x1
 663 0143 3401     		.2byte	0x134
 664 0145 81000000 		.4byte	0x81
 665 0149 02       		.uleb128 0x2
 666 014a 91       		.byte	0x91
 667 014b 6F       		.sleb128 -17
 668 014c 0D       		.uleb128 0xd
 669 014d 6B00     		.ascii	"k\000"
 670 014f 01       		.byte	0x1
 671 0150 3501     		.2byte	0x135
 672 0152 81000000 		.4byte	0x81
 673 0156 02       		.uleb128 0x2
 674 0157 91       		.byte	0x91
 675 0158 77       		.sleb128 -9
 676 0159 00       		.byte	0
 677 015a 0E       		.uleb128 0xe
 678 015b DE000000 		.4byte	.LASF22
 679 015f 06       		.byte	0x6
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 19


 680 0160 1606     		.2byte	0x616
 681 0162 66010000 		.4byte	0x166
 682 0166 0F       		.uleb128 0xf
 683 0167 76000000 		.4byte	0x76
 684 016b 10       		.uleb128 0x10
 685 016c D6000000 		.4byte	.LASF23
 686 0170 01       		.byte	0x1
 687 0171 17       		.byte	0x17
 688 0172 BE000000 		.4byte	0xbe
 689 0176 05       		.uleb128 0x5
 690 0177 03       		.byte	0x3
 691 0178 00000000 		.4byte	API_KEY
 692 017c 11       		.uleb128 0x11
 693 017d B0000000 		.4byte	0xb0
 694 0181 8D010000 		.4byte	0x18d
 695 0185 12       		.uleb128 0x12
 696 0186 B7000000 		.4byte	0xb7
 697 018a E703     		.2byte	0x3e7
 698 018c 00       		.byte	0
 699 018d 10       		.uleb128 0x10
 700 018e BD000000 		.4byte	.LASF24
 701 0192 01       		.byte	0x1
 702 0193 18       		.byte	0x18
 703 0194 7C010000 		.4byte	0x17c
 704 0198 05       		.uleb128 0x5
 705 0199 03       		.byte	0x3
 706 019a 00000000 		.4byte	data_packet
 707 019e 11       		.uleb128 0x11
 708 019f B0000000 		.4byte	0xb0
 709 01a3 AE010000 		.4byte	0x1ae
 710 01a7 13       		.uleb128 0x13
 711 01a8 B7000000 		.4byte	0xb7
 712 01ac 63       		.byte	0x63
 713 01ad 00       		.byte	0
 714 01ae 10       		.uleb128 0x10
 715 01af 4C000000 		.4byte	.LASF25
 716 01b3 01       		.byte	0x1
 717 01b4 18       		.byte	0x18
 718 01b5 9E010000 		.4byte	0x19e
 719 01b9 05       		.uleb128 0x5
 720 01ba 03       		.byte	0x3
 721 01bb 00000000 		.4byte	test_csv
 722 01bf 10       		.uleb128 0x10
 723 01c0 22000000 		.4byte	.LASF26
 724 01c4 01       		.byte	0x1
 725 01c5 19       		.byte	0x19
 726 01c6 68000000 		.4byte	0x68
 727 01ca 05       		.uleb128 0x5
 728 01cb 03       		.byte	0x3
 729 01cc 00000000 		.4byte	iter
 730 01d0 10       		.uleb128 0x10
 731 01d1 B8000000 		.4byte	.LASF27
 732 01d5 01       		.byte	0x1
 733 01d6 19       		.byte	0x19
 734 01d7 68000000 		.4byte	0x68
 735 01db 05       		.uleb128 0x5
 736 01dc 03       		.byte	0x3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 20


 737 01dd 00000000 		.4byte	sign
 738 01e1 10       		.uleb128 0x10
 739 01e2 1D010000 		.4byte	.LASF28
 740 01e6 01       		.byte	0x1
 741 01e7 1A       		.byte	0x1a
 742 01e8 81000000 		.4byte	0x81
 743 01ec 05       		.uleb128 0x5
 744 01ed 03       		.byte	0x3
 745 01ee 00000000 		.4byte	ready
 746 01f2 10       		.uleb128 0x10
 747 01f3 8C000000 		.4byte	.LASF29
 748 01f7 01       		.byte	0x1
 749 01f8 1A       		.byte	0x1a
 750 01f9 81000000 		.4byte	0x81
 751 01fd 05       		.uleb128 0x5
 752 01fe 03       		.byte	0x3
 753 01ff 00000000 		.4byte	loops
 754 0203 10       		.uleb128 0x10
 755 0204 2E020000 		.4byte	.LASF30
 756 0208 01       		.byte	0x1
 757 0209 1A       		.byte	0x1a
 758 020a 81000000 		.4byte	0x81
 759 020e 05       		.uleb128 0x5
 760 020f 03       		.byte	0x3
 761 0210 00000000 		.4byte	lock
 762 0214 10       		.uleb128 0x10
 763 0215 C9000000 		.4byte	.LASF31
 764 0219 01       		.byte	0x1
 765 021a 1A       		.byte	0x1a
 766 021b 81000000 		.4byte	0x81
 767 021f 05       		.uleb128 0x5
 768 0220 03       		.byte	0x3
 769 0221 00000000 		.4byte	packet_ready
 770 0225 10       		.uleb128 0x10
 771 0226 3A000000 		.4byte	.LASF32
 772 022a 01       		.byte	0x1
 773 022b 1B       		.byte	0x1b
 774 022c 8C000000 		.4byte	0x8c
 775 0230 05       		.uleb128 0x5
 776 0231 03       		.byte	0x3
 777 0232 00000000 		.4byte	packet_len
 778 0236 10       		.uleb128 0x10
 779 0237 3D020000 		.4byte	.LASF33
 780 023b 01       		.byte	0x1
 781 023c 1C       		.byte	0x1c
 782 023d 97000000 		.4byte	0x97
 783 0241 05       		.uleb128 0x5
 784 0242 03       		.byte	0x3
 785 0243 00000000 		.4byte	wakeup_interval_counter
 786 0247 10       		.uleb128 0x10
 787 0248 05000000 		.4byte	.LASF34
 788 024c 01       		.byte	0x1
 789 024d 1D       		.byte	0x1d
 790 024e F6000000 		.4byte	0xf6
 791 0252 05       		.uleb128 0x5
 792 0253 03       		.byte	0x3
 793 0254 00000000 		.4byte	ultrasonic_reading
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 21


 794 0258 10       		.uleb128 0x10
 795 0259 13020000 		.4byte	.LASF35
 796 025d 01       		.byte	0x1
 797 025e 34       		.byte	0x34
 798 025f A2000000 		.4byte	0xa2
 799 0263 05       		.uleb128 0x5
 800 0264 03       		.byte	0x3
 801 0265 00000000 		.4byte	v_out
 802 0269 00       		.byte	0
 803              		.section	.debug_abbrev,"",%progbits
 804              	.Ldebug_abbrev0:
 805 0000 01       		.uleb128 0x1
 806 0001 11       		.uleb128 0x11
 807 0002 01       		.byte	0x1
 808 0003 25       		.uleb128 0x25
 809 0004 0E       		.uleb128 0xe
 810 0005 13       		.uleb128 0x13
 811 0006 0B       		.uleb128 0xb
 812 0007 03       		.uleb128 0x3
 813 0008 0E       		.uleb128 0xe
 814 0009 1B       		.uleb128 0x1b
 815 000a 0E       		.uleb128 0xe
 816 000b 55       		.uleb128 0x55
 817 000c 17       		.uleb128 0x17
 818 000d 11       		.uleb128 0x11
 819 000e 01       		.uleb128 0x1
 820 000f 10       		.uleb128 0x10
 821 0010 17       		.uleb128 0x17
 822 0011 00       		.byte	0
 823 0012 00       		.byte	0
 824 0013 02       		.uleb128 0x2
 825 0014 24       		.uleb128 0x24
 826 0015 00       		.byte	0
 827 0016 0B       		.uleb128 0xb
 828 0017 0B       		.uleb128 0xb
 829 0018 3E       		.uleb128 0x3e
 830 0019 0B       		.uleb128 0xb
 831 001a 03       		.uleb128 0x3
 832 001b 0E       		.uleb128 0xe
 833 001c 00       		.byte	0
 834 001d 00       		.byte	0
 835 001e 03       		.uleb128 0x3
 836 001f 16       		.uleb128 0x16
 837 0020 00       		.byte	0
 838 0021 03       		.uleb128 0x3
 839 0022 0E       		.uleb128 0xe
 840 0023 3A       		.uleb128 0x3a
 841 0024 0B       		.uleb128 0xb
 842 0025 3B       		.uleb128 0x3b
 843 0026 0B       		.uleb128 0xb
 844 0027 49       		.uleb128 0x49
 845 0028 13       		.uleb128 0x13
 846 0029 00       		.byte	0
 847 002a 00       		.byte	0
 848 002b 04       		.uleb128 0x4
 849 002c 24       		.uleb128 0x24
 850 002d 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 22


 851 002e 0B       		.uleb128 0xb
 852 002f 0B       		.uleb128 0xb
 853 0030 3E       		.uleb128 0x3e
 854 0031 0B       		.uleb128 0xb
 855 0032 03       		.uleb128 0x3
 856 0033 08       		.uleb128 0x8
 857 0034 00       		.byte	0
 858 0035 00       		.byte	0
 859 0036 05       		.uleb128 0x5
 860 0037 0F       		.uleb128 0xf
 861 0038 00       		.byte	0
 862 0039 0B       		.uleb128 0xb
 863 003a 0B       		.uleb128 0xb
 864 003b 49       		.uleb128 0x49
 865 003c 13       		.uleb128 0x13
 866 003d 00       		.byte	0
 867 003e 00       		.byte	0
 868 003f 06       		.uleb128 0x6
 869 0040 26       		.uleb128 0x26
 870 0041 00       		.byte	0
 871 0042 49       		.uleb128 0x49
 872 0043 13       		.uleb128 0x13
 873 0044 00       		.byte	0
 874 0045 00       		.byte	0
 875 0046 07       		.uleb128 0x7
 876 0047 13       		.uleb128 0x13
 877 0048 01       		.byte	0x1
 878 0049 0B       		.uleb128 0xb
 879 004a 0B       		.uleb128 0xb
 880 004b 3A       		.uleb128 0x3a
 881 004c 0B       		.uleb128 0xb
 882 004d 3B       		.uleb128 0x3b
 883 004e 0B       		.uleb128 0xb
 884 004f 01       		.uleb128 0x1
 885 0050 13       		.uleb128 0x13
 886 0051 00       		.byte	0
 887 0052 00       		.byte	0
 888 0053 08       		.uleb128 0x8
 889 0054 0D       		.uleb128 0xd
 890 0055 00       		.byte	0
 891 0056 03       		.uleb128 0x3
 892 0057 0E       		.uleb128 0xe
 893 0058 3A       		.uleb128 0x3a
 894 0059 0B       		.uleb128 0xb
 895 005a 3B       		.uleb128 0x3b
 896 005b 0B       		.uleb128 0xb
 897 005c 49       		.uleb128 0x49
 898 005d 13       		.uleb128 0x13
 899 005e 38       		.uleb128 0x38
 900 005f 0B       		.uleb128 0xb
 901 0060 00       		.byte	0
 902 0061 00       		.byte	0
 903 0062 09       		.uleb128 0x9
 904 0063 2E       		.uleb128 0x2e
 905 0064 00       		.byte	0
 906 0065 3F       		.uleb128 0x3f
 907 0066 19       		.uleb128 0x19
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 23


 908 0067 03       		.uleb128 0x3
 909 0068 0E       		.uleb128 0xe
 910 0069 3A       		.uleb128 0x3a
 911 006a 0B       		.uleb128 0xb
 912 006b 3B       		.uleb128 0x3b
 913 006c 0B       		.uleb128 0xb
 914 006d 27       		.uleb128 0x27
 915 006e 19       		.uleb128 0x19
 916 006f 11       		.uleb128 0x11
 917 0070 01       		.uleb128 0x1
 918 0071 12       		.uleb128 0x12
 919 0072 06       		.uleb128 0x6
 920 0073 40       		.uleb128 0x40
 921 0074 18       		.uleb128 0x18
 922 0075 9642     		.uleb128 0x2116
 923 0077 19       		.uleb128 0x19
 924 0078 00       		.byte	0
 925 0079 00       		.byte	0
 926 007a 0A       		.uleb128 0xa
 927 007b 2E       		.uleb128 0x2e
 928 007c 00       		.byte	0
 929 007d 3F       		.uleb128 0x3f
 930 007e 19       		.uleb128 0x19
 931 007f 03       		.uleb128 0x3
 932 0080 0E       		.uleb128 0xe
 933 0081 3A       		.uleb128 0x3a
 934 0082 0B       		.uleb128 0xb
 935 0083 3B       		.uleb128 0x3b
 936 0084 0B       		.uleb128 0xb
 937 0085 11       		.uleb128 0x11
 938 0086 01       		.uleb128 0x1
 939 0087 12       		.uleb128 0x12
 940 0088 06       		.uleb128 0x6
 941 0089 40       		.uleb128 0x40
 942 008a 18       		.uleb128 0x18
 943 008b 9642     		.uleb128 0x2116
 944 008d 19       		.uleb128 0x19
 945 008e 00       		.byte	0
 946 008f 00       		.byte	0
 947 0090 0B       		.uleb128 0xb
 948 0091 2E       		.uleb128 0x2e
 949 0092 01       		.byte	0x1
 950 0093 3F       		.uleb128 0x3f
 951 0094 19       		.uleb128 0x19
 952 0095 03       		.uleb128 0x3
 953 0096 0E       		.uleb128 0xe
 954 0097 3A       		.uleb128 0x3a
 955 0098 0B       		.uleb128 0xb
 956 0099 3B       		.uleb128 0x3b
 957 009a 05       		.uleb128 0x5
 958 009b 27       		.uleb128 0x27
 959 009c 19       		.uleb128 0x19
 960 009d 49       		.uleb128 0x49
 961 009e 13       		.uleb128 0x13
 962 009f 11       		.uleb128 0x11
 963 00a0 01       		.uleb128 0x1
 964 00a1 12       		.uleb128 0x12
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 24


 965 00a2 06       		.uleb128 0x6
 966 00a3 40       		.uleb128 0x40
 967 00a4 18       		.uleb128 0x18
 968 00a5 9642     		.uleb128 0x2116
 969 00a7 19       		.uleb128 0x19
 970 00a8 01       		.uleb128 0x1
 971 00a9 13       		.uleb128 0x13
 972 00aa 00       		.byte	0
 973 00ab 00       		.byte	0
 974 00ac 0C       		.uleb128 0xc
 975 00ad 05       		.uleb128 0x5
 976 00ae 00       		.byte	0
 977 00af 03       		.uleb128 0x3
 978 00b0 0E       		.uleb128 0xe
 979 00b1 3A       		.uleb128 0x3a
 980 00b2 0B       		.uleb128 0xb
 981 00b3 3B       		.uleb128 0x3b
 982 00b4 05       		.uleb128 0x5
 983 00b5 49       		.uleb128 0x49
 984 00b6 13       		.uleb128 0x13
 985 00b7 02       		.uleb128 0x2
 986 00b8 18       		.uleb128 0x18
 987 00b9 00       		.byte	0
 988 00ba 00       		.byte	0
 989 00bb 0D       		.uleb128 0xd
 990 00bc 34       		.uleb128 0x34
 991 00bd 00       		.byte	0
 992 00be 03       		.uleb128 0x3
 993 00bf 08       		.uleb128 0x8
 994 00c0 3A       		.uleb128 0x3a
 995 00c1 0B       		.uleb128 0xb
 996 00c2 3B       		.uleb128 0x3b
 997 00c3 05       		.uleb128 0x5
 998 00c4 49       		.uleb128 0x49
 999 00c5 13       		.uleb128 0x13
 1000 00c6 02       		.uleb128 0x2
 1001 00c7 18       		.uleb128 0x18
 1002 00c8 00       		.byte	0
 1003 00c9 00       		.byte	0
 1004 00ca 0E       		.uleb128 0xe
 1005 00cb 34       		.uleb128 0x34
 1006 00cc 00       		.byte	0
 1007 00cd 03       		.uleb128 0x3
 1008 00ce 0E       		.uleb128 0xe
 1009 00cf 3A       		.uleb128 0x3a
 1010 00d0 0B       		.uleb128 0xb
 1011 00d1 3B       		.uleb128 0x3b
 1012 00d2 05       		.uleb128 0x5
 1013 00d3 49       		.uleb128 0x49
 1014 00d4 13       		.uleb128 0x13
 1015 00d5 3F       		.uleb128 0x3f
 1016 00d6 19       		.uleb128 0x19
 1017 00d7 3C       		.uleb128 0x3c
 1018 00d8 19       		.uleb128 0x19
 1019 00d9 00       		.byte	0
 1020 00da 00       		.byte	0
 1021 00db 0F       		.uleb128 0xf
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 25


 1022 00dc 35       		.uleb128 0x35
 1023 00dd 00       		.byte	0
 1024 00de 49       		.uleb128 0x49
 1025 00df 13       		.uleb128 0x13
 1026 00e0 00       		.byte	0
 1027 00e1 00       		.byte	0
 1028 00e2 10       		.uleb128 0x10
 1029 00e3 34       		.uleb128 0x34
 1030 00e4 00       		.byte	0
 1031 00e5 03       		.uleb128 0x3
 1032 00e6 0E       		.uleb128 0xe
 1033 00e7 3A       		.uleb128 0x3a
 1034 00e8 0B       		.uleb128 0xb
 1035 00e9 3B       		.uleb128 0x3b
 1036 00ea 0B       		.uleb128 0xb
 1037 00eb 49       		.uleb128 0x49
 1038 00ec 13       		.uleb128 0x13
 1039 00ed 3F       		.uleb128 0x3f
 1040 00ee 19       		.uleb128 0x19
 1041 00ef 02       		.uleb128 0x2
 1042 00f0 18       		.uleb128 0x18
 1043 00f1 00       		.byte	0
 1044 00f2 00       		.byte	0
 1045 00f3 11       		.uleb128 0x11
 1046 00f4 01       		.uleb128 0x1
 1047 00f5 01       		.byte	0x1
 1048 00f6 49       		.uleb128 0x49
 1049 00f7 13       		.uleb128 0x13
 1050 00f8 01       		.uleb128 0x1
 1051 00f9 13       		.uleb128 0x13
 1052 00fa 00       		.byte	0
 1053 00fb 00       		.byte	0
 1054 00fc 12       		.uleb128 0x12
 1055 00fd 21       		.uleb128 0x21
 1056 00fe 00       		.byte	0
 1057 00ff 49       		.uleb128 0x49
 1058 0100 13       		.uleb128 0x13
 1059 0101 2F       		.uleb128 0x2f
 1060 0102 05       		.uleb128 0x5
 1061 0103 00       		.byte	0
 1062 0104 00       		.byte	0
 1063 0105 13       		.uleb128 0x13
 1064 0106 21       		.uleb128 0x21
 1065 0107 00       		.byte	0
 1066 0108 49       		.uleb128 0x49
 1067 0109 13       		.uleb128 0x13
 1068 010a 2F       		.uleb128 0x2f
 1069 010b 0B       		.uleb128 0xb
 1070 010c 00       		.byte	0
 1071 010d 00       		.byte	0
 1072 010e 00       		.byte	0
 1073              		.section	.debug_aranges,"",%progbits
 1074 0000 2C000000 		.4byte	0x2c
 1075 0004 0200     		.2byte	0x2
 1076 0006 00000000 		.4byte	.Ldebug_info0
 1077 000a 04       		.byte	0x4
 1078 000b 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 26


 1079 000c 0000     		.2byte	0
 1080 000e 0000     		.2byte	0
 1081 0010 00000000 		.4byte	.LFB56
 1082 0014 0A000000 		.4byte	.LFE56-.LFB56
 1083 0018 00000000 		.4byte	.LFB57
 1084 001c 74020000 		.4byte	.LFE57-.LFB57
 1085 0020 00000000 		.4byte	.LFB58
 1086 0024 3E000000 		.4byte	.LFE58-.LFB58
 1087 0028 00000000 		.4byte	0
 1088 002c 00000000 		.4byte	0
 1089              		.section	.debug_ranges,"",%progbits
 1090              	.Ldebug_ranges0:
 1091 0000 00000000 		.4byte	.LFB56
 1092 0004 0A000000 		.4byte	.LFE56
 1093 0008 00000000 		.4byte	.LFB57
 1094 000c 74020000 		.4byte	.LFE57
 1095 0010 00000000 		.4byte	.LFB58
 1096 0014 3E000000 		.4byte	.LFE58
 1097 0018 00000000 		.4byte	0
 1098 001c 00000000 		.4byte	0
 1099              		.section	.debug_line,"",%progbits
 1100              	.Ldebug_line0:
 1101 0000 08020000 		.section	.debug_str,"MS",%progbits,1
 1101      02005B01 
 1101      00000201 
 1101      FB0E0D00 
 1101      01010101 
 1102              	.LASF18:
 1103 0000 74656D70 		.ascii	"temp\000"
 1103      00
 1104              	.LASF34:
 1105 0005 756C7472 		.ascii	"ultrasonic_reading\000"
 1105      61736F6E 
 1105      69635F72 
 1105      65616469 
 1105      6E6700
 1106              	.LASF9:
 1107 0018 5F5F696E 		.ascii	"__int32_t\000"
 1107      7433325F 
 1107      7400
 1108              	.LASF26:
 1109 0022 69746572 		.ascii	"iter\000"
 1109      00
 1110              	.LASF3:
 1111 0027 73686F72 		.ascii	"short unsigned int\000"
 1111      7420756E 
 1111      7369676E 
 1111      65642069 
 1111      6E7400
 1112              	.LASF32:
 1113 003a 7061636B 		.ascii	"packet_len\000"
 1113      65745F6C 
 1113      656E00
 1114              	.LASF15:
 1115 0045 646F7562 		.ascii	"double\000"
 1115      6C6500
 1116              	.LASF25:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 27


 1117 004c 74657374 		.ascii	"test_csv\000"
 1117      5F637376 
 1117      00
 1118              	.LASF38:
 1119 0055 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 1119      73657273 
 1119      5C4D6174 
 1119      74686577 
 1119      5C676974 
 1120 0082 6172642E 		.ascii	"ard.cydsn\000"
 1120      63796473 
 1120      6E00
 1121              	.LASF29:
 1122 008c 6C6F6F70 		.ascii	"loops\000"
 1122      7300
 1123              	.LASF14:
 1124 0092 666C6F61 		.ascii	"float\000"
 1124      7400
 1125              	.LASF42:
 1126 0098 6E5F626C 		.ascii	"n_blinks\000"
 1126      696E6B73 
 1126      00
 1127              	.LASF1:
 1128 00a1 756E7369 		.ascii	"unsigned char\000"
 1128      676E6564 
 1128      20636861 
 1128      7200
 1129              	.LASF37:
 1130 00af 2E5C6D61 		.ascii	".\\main.c\000"
 1130      696E2E63 
 1130      00
 1131              	.LASF27:
 1132 00b8 7369676E 		.ascii	"sign\000"
 1132      00
 1133              	.LASF24:
 1134 00bd 64617461 		.ascii	"data_packet\000"
 1134      5F706163 
 1134      6B657400 
 1135              	.LASF31:
 1136 00c9 7061636B 		.ascii	"packet_ready\000"
 1136      65745F72 
 1136      65616479 
 1136      00
 1137              	.LASF23:
 1138 00d6 4150495F 		.ascii	"API_KEY\000"
 1138      4B455900 
 1139              	.LASF22:
 1140 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1140      52784275 
 1140      66666572 
 1140      00
 1141              	.LASF5:
 1142 00eb 6C6F6E67 		.ascii	"long unsigned int\000"
 1142      20756E73 
 1142      69676E65 
 1142      6420696E 
 1142      7400
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 28


 1143              	.LASF40:
 1144 00fd 6D61696E 		.ascii	"main\000"
 1144      00
 1145              	.LASF12:
 1146 0102 75696E74 		.ascii	"uint16\000"
 1146      313600
 1147              	.LASF13:
 1148 0109 75696E74 		.ascii	"uint32\000"
 1148      333200
 1149              	.LASF8:
 1150 0110 756E7369 		.ascii	"unsigned int\000"
 1150      676E6564 
 1150      20696E74 
 1150      00
 1151              	.LASF28:
 1152 011d 72656164 		.ascii	"ready\000"
 1152      7900
 1153              	.LASF7:
 1154 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 1154      206C6F6E 
 1154      6720756E 
 1154      7369676E 
 1154      65642069 
 1155              	.LASF21:
 1156 013a 556C7472 		.ascii	"UltrasonicReading\000"
 1156      61736F6E 
 1156      69635265 
 1156      6164696E 
 1156      6700
 1157              	.LASF36:
 1158 014c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1158      4320342E 
 1158      382E3420 
 1158      32303134 
 1158      30353236 
 1159 017f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1159      20726576 
 1159      6973696F 
 1159      6E203231 
 1159      31333538 
 1160 01b2 30202D66 		.ascii	"0 -ffunction-sections\000"
 1160      66756E63 
 1160      74696F6E 
 1160      2D736563 
 1160      74696F6E 
 1161              	.LASF10:
 1162 01c8 696E7433 		.ascii	"int32_t\000"
 1162      325F7400 
 1163              	.LASF17:
 1164 01d0 73697A65 		.ascii	"sizetype\000"
 1164      74797065 
 1164      00
 1165              	.LASF6:
 1166 01d9 6C6F6E67 		.ascii	"long long int\000"
 1166      206C6F6E 
 1166      6720696E 
 1166      7400
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccpJjQtT.s 			page 29


 1167              	.LASF19:
 1168 01e7 64657074 		.ascii	"depth\000"
 1168      6800
 1169              	.LASF16:
 1170 01ed 63686172 		.ascii	"char\000"
 1170      00
 1171              	.LASF20:
 1172 01f2 76616C69 		.ascii	"valid\000"
 1172      6400
 1173              	.LASF39:
 1174 01f8 57616B65 		.ascii	"Wakeup_ISR\000"
 1174      75705F49 
 1174      535200
 1175              	.LASF2:
 1176 0203 73686F72 		.ascii	"short int\000"
 1176      7420696E 
 1176      7400
 1177              	.LASF11:
 1178 020d 75696E74 		.ascii	"uint8\000"
 1178      3800
 1179              	.LASF35:
 1180 0213 765F6F75 		.ascii	"v_out\000"
 1180      7400
 1181              	.LASF4:
 1182 0219 6C6F6E67 		.ascii	"long int\000"
 1182      20696E74 
 1182      00
 1183              	.LASF0:
 1184 0222 7369676E 		.ascii	"signed char\000"
 1184      65642063 
 1184      68617200 
 1185              	.LASF30:
 1186 022e 6C6F636B 		.ascii	"lock\000"
 1186      00
 1187              	.LASF41:
 1188 0233 626C696E 		.ascii	"blink_LED\000"
 1188      6B5F4C45 
 1188      4400
 1189              	.LASF33:
 1190 023d 77616B65 		.ascii	"wakeup_interval_counter\000"
 1190      75705F69 
 1190      6E746572 
 1190      76616C5F 
 1190      636F756E 
 1191              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
