ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SITE_NAME
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 44465700 		.ascii	"DFW\000"
  23              		.data
  24              		.align	2
  25              		.type	SITE_NAME, %object
  26              		.size	SITE_NAME, 4
  27              	SITE_NAME:
  28 0000 00000000 		.word	.LC0
  29              		.global	API_KEY
  30              		.section	.rodata
  31              		.align	2
  32              	.LC1:
  33 0004 33766F75 		.ascii	"3vouwxRpF9JQfVNwHMMvi08V4JbFbrfdD6FuUcXeAmiOU4hO\000"
  33      77785270 
  33      46394A51 
  33      66564E77 
  33      484D4D76 
  34              		.data
  35              		.align	2
  36              		.type	API_KEY, %object
  37              		.size	API_KEY, 4
  38              	API_KEY:
  39 0004 04000000 		.word	.LC1
  40              		.global	data_packet
  41              		.bss
  42              		.align	2
  43              		.type	data_packet, %object
  44              		.size	data_packet, 1000
  45              	data_packet:
  46 0000 00000000 		.space	1000
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	test_csv
  48              		.align	2
  49              		.type	test_csv, %object
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 2


  50              		.size	test_csv, 100
  51              	test_csv:
  52 03e8 00000000 		.space	100
  52      00000000 
  52      00000000 
  52      00000000 
  52      00000000 
  53              		.comm	iter,4,4
  54              		.comm	sign,4,4
  55              		.comm	ready,1,1
  56              		.comm	loops,1,1
  57              		.comm	lock,1,1
  58              		.comm	packet_ready,1,1
  59              		.comm	packet_len,2,2
  60              		.comm	wakeup_interval_counter,4,4
  61              		.global	ultrasonic_reading
  62              		.align	2
  63              		.type	ultrasonic_reading, %object
  64              		.size	ultrasonic_reading, 12
  65              	ultrasonic_reading:
  66 044c 00000000 		.space	12
  66      00000000 
  66      00000000 
  67              		.comm	v_out,4,4
  68              		.section	.text.Wakeup_ISR,"ax",%progbits
  69              		.align	2
  70              		.global	Wakeup_ISR
  71              		.thumb
  72              		.thumb_func
  73              		.type	Wakeup_ISR, %function
  74              	Wakeup_ISR:
  75              	.LFB56:
  76              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <device.h>
  13:.\main.c      **** #include <project.h>
  14:.\main.c      **** #include "modem.h"
  15:.\main.c      **** #include "packet.h"
  16:.\main.c      **** #include "ultrasonic.h"
  17:.\main.c      **** 
  18:.\main.c      **** // define global variables
  19:.\main.c      **** #define SLEEPTIMER_INTERVAL_COUNTER (470u) // Number of wakeups before turn LED on 470 @ 256ms ~2 m
  20:.\main.c      **** #define WRITE_DEBUG 1
  21:.\main.c      **** #define FEED_ID 1738356304
  22:.\main.c      **** 
  23:.\main.c      **** #define NODE_ID 1
  24:.\main.c      **** const char *SITE_NAME = "DFW";
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 3


  25:.\main.c      **** 
  26:.\main.c      **** const char *API_KEY = "3vouwxRpF9JQfVNwHMMvi08V4JbFbrfdD6FuUcXeAmiOU4hO";
  27:.\main.c      **** char   data_packet[MAX_PACKET_LENGTH] = {0}, test_csv[100] = {0};
  28:.\main.c      **** int    iter, sign;
  29:.\main.c      **** uint8  ready, loops, lock, packet_ready;
  30:.\main.c      **** uint16 packet_len;
  31:.\main.c      **** uint32 wakeup_interval_counter;
  32:.\main.c      **** UltrasonicReading ultrasonic_reading    = {.valid = 0};     // Initialize UltrasonicReading.valid t
  33:.\main.c      **** 
  34:.\main.c      **** /* autosampler variables
  35:.\main.c      **** uint8 t_sample, trigger_sampler, bottle_count, tmp;
  36:.\main.c      **** */
  37:.\main.c      **** CY_ISR_PROTO(Wakeup_ISR);
  38:.\main.c      **** uint8   blink_LED(uint8 n_blinks);
  39:.\main.c      **** uint8	modem_setup();
  40:.\main.c      **** uint8   modem_get_time();
  41:.\main.c      **** uint8   modem_check_network();
  42:.\main.c      **** uint8   modem_get_signal_quality();
  43:.\main.c      **** uint8   modem_get_serial_number();
  44:.\main.c      **** uint8   modem_get_google();
  45:.\main.c      **** uint8   modem_get_profile();
  46:.\main.c      **** uint8   modem_set_flow_control(uint8 param);
  47:.\main.c      **** uint8 	modem_set_error_reports(uint8 param);
  48:.\main.c      **** uint8   modem_get_sw_version();
  49:.\main.c      **** uint8 	modem_enable_CDMA_data(uint8 param);
  50:.\main.c      **** uint8	modem_test_CDMA_data();
  51:.\main.c      **** uint8	modem_set_user(char* user);
  52:.\main.c      **** uint8	modem_set_password(char* pass);
  53:.\main.c      **** uint8 	at_write_command(char* uart_string, char* expected_response, uint32 uart_timeout);
  54:.\main.c      **** 
  55:.\main.c      **** float   v_out;
  56:.\main.c      **** 
  57:.\main.c      **** CY_ISR(Wakeup_ISR)
  58:.\main.c      **** {
  77              		.loc 1 58 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 80B5     		push	{r7, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 00AF     		add	r7, sp, #0
  86              		.cfi_def_cfa_register 7
  59:.\main.c      ****     /***************************************************************************
  60:.\main.c      ****     * This function must always be called (when the Sleep Timer's interrupt
  61:.\main.c      ****     * is disabled or enabled) after wake up to clear the ctw_int status bit.
  62:.\main.c      ****     * It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  63:.\main.c      ****     * of the ILO) after CTW event occurred.
  64:.\main.c      ****     ***************************************************************************/
  65:.\main.c      ****     SleepTimer_GetStatus();
  87              		.loc 1 65 0
  88 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  66:.\main.c      **** }
  89              		.loc 1 66 0
  90 0008 80BD     		pop	{r7, pc}
  91              		.cfi_endproc
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 4


  92              	.LFE56:
  93              		.size	Wakeup_ISR, .-Wakeup_ISR
  94              		.global	__aeabi_f2uiz
  95 000a 00BF     		.section	.rodata
  96 0035 000000   		.align	2
  97              	.LC2:
  98 0038 25732573 		.ascii	"%s%s%s%d%s%s%s%d\000"
  98      25732564 
  98      25732573 
  98      25732564 
  98      00
  99 0049 000000   		.align	2
 100              	.LC3:
 101 004c 64657074 		.ascii	"depth_sonic\000"
 101      685F736F 
 101      6E696300 
 102              		.align	2
 103              	.LC4:
 104 0058 2C6E6F64 		.ascii	",node_id=\000"
 104      655F6964 
 104      3D00
 105 0062 0000     		.align	2
 106              	.LC5:
 107 0064 2C736974 		.ascii	",site=\000"
 107      653D00
 108 006b 00       		.align	2
 109              	.LC6:
 110 006c 2076616C 		.ascii	" value=\000"
 110      75653D00 
 111              		.align	2
 112              	.LC7:
 113 0074 6C6F636B 		.ascii	"lock,tmp\000"
 113      2C746D70 
 113      00
 114 007d 000000   		.align	2
 115              	.LC8:
 116 0080 6C6F636B 		.ascii	"lock\000"
 116      00
 117 0085 000000   		.section	.text.main,"ax",%progbits
 118              		.align	2
 119              		.global	main
 120              		.thumb
 121              		.thumb_func
 122              		.type	main, %function
 123              	main:
 124              	.LFB57:
  67:.\main.c      **** 
  68:.\main.c      **** void main()
  69:.\main.c      **** {
 125              		.loc 1 69 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129 0000 90B5     		push	{r4, r7, lr}
 130              		.cfi_def_cfa_offset 12
 131              		.cfi_offset 4, -12
 132              		.cfi_offset 7, -8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 5


 133              		.cfi_offset 14, -4
 134 0002 87B0     		sub	sp, sp, #28
 135              		.cfi_def_cfa_offset 40
 136 0004 06AF     		add	r7, sp, #24
 137              		.cfi_def_cfa 7, 16
  70:.\main.c      ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  71:.\main.c      ****     CyGlobalIntEnable; /* Uncomment this line to enable global interrupts. */
 138              		.loc 1 71 0
 139              	@ 71 ".\main.c" 1
 140 0006 62B6     		CPSIE   i
 141              	@ 0 "" 2
  72:.\main.c      **** 	
  73:.\main.c      **** 	CyDelay(5u);  // Short delay to make sure device is ready for low power entry
 142              		.loc 1 73 0
 143              		.thumb
 144 0008 0520     		movs	r0, #5
 145 000a FFF7FEFF 		bl	CyDelay
  74:.\main.c      **** 	
  75:.\main.c      **** 	sleep_isr_StartEx(Wakeup_ISR); // Start Sleep ISR
 146              		.loc 1 75 0
 147 000e 8C48     		ldr	r0, .L13
 148 0010 FFF7FEFF 		bl	sleep_isr_StartEx
  76:.\main.c      **** 	SleepTimer_Start();			   // Start SleepTimer Compnent	
 149              		.loc 1 76 0
 150 0014 FFF7FEFF 		bl	SleepTimer_Start
  77:.\main.c      ****     
  78:.\main.c      ****     modem_set_api_feed(FEED_ID, API_KEY);
 151              		.loc 1 78 0
 152 0018 8A4B     		ldr	r3, .L13+4
 153 001a 1B68     		ldr	r3, [r3]
 154 001c 8A48     		ldr	r0, .L13+8
 155 001e 1946     		mov	r1, r3
 156 0020 FFF7FEFF 		bl	modem_set_api_feed
  79:.\main.c      ****     
  80:.\main.c      ****     //ADC_SAR_1_Start();
  81:.\main.c      ****     //modem_start();
  82:.\main.c      ****     //modem_power_on();    
  83:.\main.c      ****     //modem_get_serial_number();
  84:.\main.c      ****     
  85:.\main.c      ****     // Check/set flow control: Change from 3 (default - bidirectional) to 0 (no flow control) --> D
  86:.\main.c      ****     /*
  87:.\main.c      **** 	modem_set_flow_control(0u); 
  88:.\main.c      ****     modem_get_profile(); //
  89:.\main.c      ****     modem_get_sw_version();
  90:.\main.c      **** 	modem_set_error_reports(2u);
  91:.\main.c      **** 	*/
  92:.\main.c      **** 	
  93:.\main.c      **** 	// Init and enable CDMA
  94:.\main.c      **** 	/*
  95:.\main.c      **** 	modem_set_user("");
  96:.\main.c      **** 	modem_set_password("");	
  97:.\main.c      **** 	modem_test_CDMA_data();
  98:.\main.c      **** 	modem_enable_CDMA_data(1u);
  99:.\main.c      **** 	modem_test_CDMA_data();
 100:.\main.c      **** 	*/
 101:.\main.c      **** 
 102:.\main.c      ****     // Initialize variables
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 6


 103:.\main.c      ****     ready			= 1u;
 157              		.loc 1 103 0
 158 0024 894B     		ldr	r3, .L13+12
 159 0026 0122     		movs	r2, #1
 160 0028 1A70     		strb	r2, [r3]
 104:.\main.c      **** 	loops			= 0u;
 161              		.loc 1 104 0
 162 002a 894B     		ldr	r3, .L13+16
 163 002c 0022     		movs	r2, #0
 164 002e 1A70     		strb	r2, [r3]
 105:.\main.c      **** 	lock			= 0u;
 165              		.loc 1 105 0
 166 0030 884B     		ldr	r3, .L13+20
 167 0032 0022     		movs	r2, #0
 168 0034 1A70     		strb	r2, [r3]
 106:.\main.c      **** 	packet_ready	= 0u;
 169              		.loc 1 106 0
 170 0036 884B     		ldr	r3, .L13+24
 171 0038 0022     		movs	r2, #0
 172 003a 1A70     		strb	r2, [r3]
 107:.\main.c      **** 	iter            = 0;
 173              		.loc 1 107 0
 174 003c 874B     		ldr	r3, .L13+28
 175 003e 0022     		movs	r2, #0
 176 0040 1A60     		str	r2, [r3]
 108:.\main.c      ****     sign            = 1;
 177              		.loc 1 108 0
 178 0042 874B     		ldr	r3, .L13+32
 179 0044 0122     		movs	r2, #1
 180 0046 1A60     		str	r2, [r3]
 109:.\main.c      ****     packet_len      = 0u;
 181              		.loc 1 109 0
 182 0048 864B     		ldr	r3, .L13+36
 183 004a 0022     		movs	r2, #0
 184 004c 1A80     		strh	r2, [r3]	@ movhi
 110:.\main.c      **** 	wakeup_interval_counter = 0u;	
 185              		.loc 1 110 0
 186 004e 864B     		ldr	r3, .L13+40
 187 0050 0022     		movs	r2, #0
 188 0052 1A60     		str	r2, [r3]
 111:.\main.c      ****     v_out           = 0.0;
 189              		.loc 1 111 0
 190 0054 854B     		ldr	r3, .L13+44
 191 0056 4FF00002 		mov	r2, #0
 192 005a 1A60     		str	r2, [r3]	@ float
 112:.\main.c      **** 
 113:.\main.c      ****     
 114:.\main.c      ****     VBAT_READ_EN_Write(0u);
 193              		.loc 1 114 0
 194 005c 0020     		movs	r0, #0
 195 005e FFF7FEFF 		bl	VBAT_READ_EN_Write
 115:.\main.c      **** 	Pin2_Write(0u);
 196              		.loc 1 115 0
 197 0062 0020     		movs	r0, #0
 198 0064 FFF7FEFF 		bl	Pin2_Write
 116:.\main.c      **** 	Pin17_Write(0u);
 199              		.loc 1 116 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 7


 200 0068 0020     		movs	r0, #0
 201 006a FFF7FEFF 		bl	Pin17_Write
 117:.\main.c      **** 	Pin18_Write(0u);
 202              		.loc 1 117 0
 203 006e 0020     		movs	r0, #0
 204 0070 FFF7FEFF 		bl	Pin18_Write
 118:.\main.c      ****     Pin37_Write(0u);
 205              		.loc 1 118 0
 206 0074 0020     		movs	r0, #0
 207 0076 FFF7FEFF 		bl	Pin37_Write
 119:.\main.c      ****     Pin38_Write(0u);
 208              		.loc 1 119 0
 209 007a 0020     		movs	r0, #0
 210 007c FFF7FEFF 		bl	Pin38_Write
 120:.\main.c      ****     Pin39_Write(0u);
 211              		.loc 1 120 0
 212 0080 0020     		movs	r0, #0
 213 0082 FFF7FEFF 		bl	Pin39_Write
 214              	.L12:
 121:.\main.c      ****     //Pin34_Write(0u);
 122:.\main.c      ****     //Pin35_Write(0u);
 123:.\main.c      ****     
 124:.\main.c      **** //    WaveDAC8_1_Start(); /* Start WaveDAC8  */
 125:.\main.c      **** 
 126:.\main.c      **** 
 127:.\main.c      ****     for(;;)
 128:.\main.c      **** 	{
 129:.\main.c      **** 		if ( ready == 1u ){
 215              		.loc 1 129 0
 216 0086 714B     		ldr	r3, .L13+12
 217 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 008a 012B     		cmp	r3, #1
 219 008c 40F0B680 		bne	.L3
 130:.\main.c      **** 			iter = 0;
 220              		.loc 1 130 0
 221 0090 724B     		ldr	r3, .L13+28
 222 0092 0022     		movs	r2, #0
 223 0094 1A60     		str	r2, [r3]
 131:.\main.c      **** 			if (clear_packet(data_packet)) {
 224              		.loc 1 131 0
 225 0096 7648     		ldr	r0, .L13+48
 226 0098 FFF7FEFF 		bl	clear_packet
 227 009c 0346     		mov	r3, r0
 228 009e 002B     		cmp	r3, #0
 229 00a0 05D0     		beq	.L4
 132:.\main.c      ****                 packet_len = 0u;
 230              		.loc 1 132 0
 231 00a2 704B     		ldr	r3, .L13+36
 232 00a4 0022     		movs	r2, #0
 233 00a6 1A80     		strh	r2, [r3]	@ movhi
 133:.\main.c      ****                 packet_ready = 0u;
 234              		.loc 1 133 0
 235 00a8 6B4B     		ldr	r3, .L13+24
 236 00aa 0022     		movs	r2, #0
 237 00ac 1A70     		strb	r2, [r3]
 238              	.L4:
 134:.\main.c      ****             }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 8


 135:.\main.c      **** 			
 136:.\main.c      **** 			blink_LED(3u);
 239              		.loc 1 136 0
 240 00ae 0320     		movs	r0, #3
 241 00b0 FFF7FEFF 		bl	blink_LED
 137:.\main.c      **** 			
 138:.\main.c      ****             if (ultrasonic_get_reading(&ultrasonic_reading)){
 242              		.loc 1 138 0
 243 00b4 6F48     		ldr	r0, .L13+52
 244 00b6 FFF7FEFF 		bl	ultrasonic_get_reading
 245 00ba 0346     		mov	r3, r0
 246 00bc 002B     		cmp	r3, #0
 247 00be 18D0     		beq	.L5
 139:.\main.c      ****                 sprintf(data_packet,"%s%s%s%d%s%s%s%d", data_packet,
 248              		.loc 1 139 0
 249 00c0 6D4B     		ldr	r3, .L13+56
 250 00c2 1C68     		ldr	r4, [r3]
 140:.\main.c      ****                     "depth_sonic",
 141:.\main.c      ****                     ",node_id=", NODE_ID,
 142:.\main.c      ****                     ",site=", SITE_NAME,
 143:.\main.c      ****                     " value=", (uint16) (ultrasonic_reading.depth));              
 251              		.loc 1 143 0
 252 00c4 6B4B     		ldr	r3, .L13+52
 253 00c6 5B68     		ldr	r3, [r3, #4]	@ float
 254 00c8 1846     		mov	r0, r3
 255 00ca FFF7FEFF 		bl	__aeabi_f2uiz
 256 00ce 0346     		mov	r3, r0
 257 00d0 9BB2     		uxth	r3, r3
 139:.\main.c      ****                 sprintf(data_packet,"%s%s%s%d%s%s%s%d", data_packet,
 258              		.loc 1 139 0
 259 00d2 6A4A     		ldr	r2, .L13+60
 260 00d4 0092     		str	r2, [sp]
 261 00d6 0122     		movs	r2, #1
 262 00d8 0192     		str	r2, [sp, #4]
 263 00da 694A     		ldr	r2, .L13+64
 264 00dc 0292     		str	r2, [sp, #8]
 265 00de 0394     		str	r4, [sp, #12]
 266 00e0 684A     		ldr	r2, .L13+68
 267 00e2 0492     		str	r2, [sp, #16]
 268 00e4 0593     		str	r3, [sp, #20]
 269 00e6 6248     		ldr	r0, .L13+48
 270 00e8 6749     		ldr	r1, .L13+72
 271 00ea 614A     		ldr	r2, .L13+48
 272 00ec 674B     		ldr	r3, .L13+76
 273 00ee FFF7FEFF 		bl	sprintf
 274              	.L5:
 144:.\main.c      ****             }
 145:.\main.c      **** 			
 146:.\main.c      **** 			blink_LED(3u);
 275              		.loc 1 146 0
 276 00f2 0320     		movs	r0, #3
 277 00f4 FFF7FEFF 		bl	blink_LED
 147:.\main.c      **** 			
 148:.\main.c      **** 			// Set up the modem and connect to network					
 149:.\main.c      **** 			LED_Write(!LED_Read());
 278              		.loc 1 149 0
 279 00f8 FFF7FEFF 		bl	LED_Read
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 9


 280 00fc 0346     		mov	r3, r0
 281 00fe 002B     		cmp	r3, #0
 282 0100 14BF     		ite	ne
 283 0102 0023     		movne	r3, #0
 284 0104 0123     		moveq	r3, #1
 285 0106 DBB2     		uxtb	r3, r3
 286 0108 1846     		mov	r0, r3
 287 010a FFF7FEFF 		bl	LED_Write
 150:.\main.c      **** 			if (modem_startup()) {
 288              		.loc 1 150 0
 289 010e FFF7FEFF 		bl	modem_startup
 290 0112 0346     		mov	r3, r0
 291 0114 002B     		cmp	r3, #0
 292 0116 65D0     		beq	.L6
 151:.\main.c      **** 				//modem_get_serial_number();
 152:.\main.c      **** 
 153:.\main.c      **** 				
 154:.\main.c      **** 				// Send a packet
 155:.\main.c      **** 				LED_Write(!LED_Read());	
 293              		.loc 1 155 0
 294 0118 FFF7FEFF 		bl	LED_Read
 295 011c 0346     		mov	r3, r0
 296 011e 002B     		cmp	r3, #0
 297 0120 14BF     		ite	ne
 298 0122 0023     		movne	r3, #0
 299 0124 0123     		moveq	r3, #1
 300 0126 DBB2     		uxtb	r3, r3
 301 0128 1846     		mov	r0, r3
 302 012a FFF7FEFF 		bl	LED_Write
 156:.\main.c      **** //				sprintf(data_packet,"%s%s, %u\r\n", data_packet,
 157:.\main.c      **** //	        		"tmp", loops);                                    DON'T NEED TMP  
 158:.\main.c      **** 				ready = modem_send_packet(data_packet);
 303              		.loc 1 158 0
 304 012e 5048     		ldr	r0, .L13+48
 305 0130 FFF7FEFF 		bl	modem_send_packet
 306 0134 0346     		mov	r3, r0
 307 0136 1A46     		mov	r2, r3
 308 0138 444B     		ldr	r3, .L13+12
 309 013a 1A70     		strb	r2, [r3]
 159:.\main.c      **** 				CyDelay(5000u);
 310              		.loc 1 159 0
 311 013c 41F28830 		movw	r0, #5000
 312 0140 FFF7FEFF 		bl	CyDelay
 160:.\main.c      **** 				
 161:.\main.c      **** 				if (clear_packet(data_packet)) {
 313              		.loc 1 161 0
 314 0144 4A48     		ldr	r0, .L13+48
 315 0146 FFF7FEFF 		bl	clear_packet
 316 014a 0346     		mov	r3, r0
 317 014c 002B     		cmp	r3, #0
 318 014e 05D0     		beq	.L7
 162:.\main.c      **** 	                packet_len = 0u;
 319              		.loc 1 162 0
 320 0150 444B     		ldr	r3, .L13+36
 321 0152 0022     		movs	r2, #0
 322 0154 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      **** 	                packet_ready = 0u;
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 10


 323              		.loc 1 163 0
 324 0156 404B     		ldr	r3, .L13+24
 325 0158 0022     		movs	r2, #0
 326 015a 1A70     		strb	r2, [r3]
 327              	.L7:
 164:.\main.c      **** 	            }
 165:.\main.c      **** 				
 166:.\main.c      **** 				// Request a packet
 167:.\main.c      **** 				LED_Write(!LED_Read());	
 328              		.loc 1 167 0
 329 015c FFF7FEFF 		bl	LED_Read
 330 0160 0346     		mov	r3, r0
 331 0162 002B     		cmp	r3, #0
 332 0164 14BF     		ite	ne
 333 0166 0023     		movne	r3, #0
 334 0168 0123     		moveq	r3, #1
 335 016a DBB2     		uxtb	r3, r3
 336 016c 1846     		mov	r0, r3
 337 016e FFF7FEFF 		bl	LED_Write
 168:.\main.c      **** 				if( modem_get_packet(data_packet,"lock,tmp") ){
 338              		.loc 1 168 0
 339 0172 3F48     		ldr	r0, .L13+48
 340 0174 4649     		ldr	r1, .L13+80
 341 0176 FFF7FEFF 		bl	modem_get_packet
 342 017a 0346     		mov	r3, r0
 343 017c 002B     		cmp	r3, #0
 344 017e 31D0     		beq	.L6
 169:.\main.c      **** 				
 170:.\main.c      **** 					// Code to test moving the actuator 					
 171:.\main.c      **** 					if(packet_get_uint8(data_packet,"lock",&lock)){
 345              		.loc 1 171 0
 346 0180 3B48     		ldr	r0, .L13+48
 347 0182 4449     		ldr	r1, .L13+84
 348 0184 334A     		ldr	r2, .L13+20
 349 0186 FFF7FEFF 		bl	packet_get_uint8
 350 018a 0346     		mov	r3, r0
 351 018c 002B     		cmp	r3, #0
 352 018e 29D0     		beq	.L6
 172:.\main.c      **** 						if(lock == 1u){	
 353              		.loc 1 172 0
 354 0190 304B     		ldr	r3, .L13+20
 355 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 0194 012B     		cmp	r3, #1
 357 0196 25D1     		bne	.L6
 173:.\main.c      **** 							// Supply power to breakout board
 174:.\main.c      **** 							// This powers the Reed Switch
 175:.\main.c      **** 							Pin2_Write(1u);
 358              		.loc 1 175 0
 359 0198 0120     		movs	r0, #1
 360 019a FFF7FEFF 		bl	Pin2_Write
 176:.\main.c      **** 							CyDelay(1000u);
 361              		.loc 1 176 0
 362 019e 4FF47A70 		mov	r0, #1000
 363 01a2 FFF7FEFF 		bl	CyDelay
 177:.\main.c      **** 							
 178:.\main.c      **** 							// Move the actuator out
 179:.\main.c      **** 							Pin17_Write(1u);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 11


 364              		.loc 1 179 0
 365 01a6 0120     		movs	r0, #1
 366 01a8 FFF7FEFF 		bl	Pin17_Write
 180:.\main.c      **** 							CyDelay(3000u);
 367              		.loc 1 180 0
 368 01ac 40F6B830 		movw	r0, #3000
 369 01b0 FFF7FEFF 		bl	CyDelay
 181:.\main.c      **** 							Pin17_Write(0u);
 370              		.loc 1 181 0
 371 01b4 0020     		movs	r0, #0
 372 01b6 FFF7FEFF 		bl	Pin17_Write
 182:.\main.c      **** 							
 183:.\main.c      **** 							CyDelay(2000u);
 373              		.loc 1 183 0
 374 01ba 4FF4FA60 		mov	r0, #2000
 375 01be FFF7FEFF 		bl	CyDelay
 184:.\main.c      **** 							
 185:.\main.c      **** 							// Move the actuator in
 186:.\main.c      **** 							Pin18_Write(1u);
 376              		.loc 1 186 0
 377 01c2 0120     		movs	r0, #1
 378 01c4 FFF7FEFF 		bl	Pin18_Write
 187:.\main.c      **** 							CyDelay(3000u);
 379              		.loc 1 187 0
 380 01c8 40F6B830 		movw	r0, #3000
 381 01cc FFF7FEFF 		bl	CyDelay
 188:.\main.c      **** 							Pin18_Write(0u);
 382              		.loc 1 188 0
 383 01d0 0020     		movs	r0, #0
 384 01d2 FFF7FEFF 		bl	Pin18_Write
 189:.\main.c      **** 							
 190:.\main.c      **** 							// Cut power to breakout board
 191:.\main.c      **** 							CyDelay(1000u);
 385              		.loc 1 191 0
 386 01d6 4FF47A70 		mov	r0, #1000
 387 01da FFF7FEFF 		bl	CyDelay
 192:.\main.c      **** 							Pin2_Write(0u);
 388              		.loc 1 192 0
 389 01de 0020     		movs	r0, #0
 390 01e0 FFF7FEFF 		bl	Pin2_Write
 391              	.L6:
 193:.\main.c      **** 						}
 194:.\main.c      **** 					}	
 195:.\main.c      **** 				}								
 196:.\main.c      **** 				
 197:.\main.c      **** 				/* 
 198:.\main.c      **** 				modem_power_off();
 199:.\main.c      **** 				modem_stop();
 200:.\main.c      **** 				*/
 201:.\main.c      **** 			}
 202:.\main.c      **** 			modem_shutdown();
 392              		.loc 1 202 0
 393 01e4 FFF7FEFF 		bl	modem_shutdown
 203:.\main.c      **** 			
 204:.\main.c      **** 			loops += 10;
 394              		.loc 1 204 0
 395 01e8 194B     		ldr	r3, .L13+16
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 12


 396 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397 01ec 0A33     		adds	r3, r3, #10
 398 01ee DAB2     		uxtb	r2, r3
 399 01f0 174B     		ldr	r3, .L13+16
 400 01f2 1A70     		strb	r2, [r3]
 205:.\main.c      **** 			ready = 0u;
 401              		.loc 1 205 0
 402 01f4 154B     		ldr	r3, .L13+12
 403 01f6 0022     		movs	r2, #0
 404 01f8 1A70     		strb	r2, [r3]
 206:.\main.c      **** 		}
 207:.\main.c      **** 		/* If not ready, update the counter for the sleep timer */
 208:.\main.c      **** 		else {
 209:.\main.c      **** 			/* Blink the LED to indicate sleeping */
 210:.\main.c      **** 			blink_LED(5u);
 211:.\main.c      **** 			
 212:.\main.c      **** 			/* Prepares system clocks for the Sleep mode */
 213:.\main.c      **** 	        CyPmSaveClocks();
 214:.\main.c      **** 
 215:.\main.c      **** 	        do
 216:.\main.c      **** 	        {
 217:.\main.c      **** 	            /*******************************************************************
 218:.\main.c      **** 	            * Switch to the Sleep Mode for the other devices:
 219:.\main.c      **** 	            *  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 220:.\main.c      **** 	            *  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 221:.\main.c      **** 	            *******************************************************************/
 222:.\main.c      **** 	            CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 223:.\main.c      **** 
 224:.\main.c      **** 
 225:.\main.c      **** 	            /***********************************************************************
 226:.\main.c      **** 	            * After the device is woken up the Sleep Timer's ISR is executed.
 227:.\main.c      **** 	            * Afterwards the CyPmSleep() execution is finished the clock
 228:.\main.c      **** 	            * configuration is restored.
 229:.\main.c      **** 	            ***********************************************************************/
 230:.\main.c      **** 	            if(SLEEPTIMER_INTERVAL_COUNTER == wakeup_interval_counter)
 231:.\main.c      **** 	            {
 232:.\main.c      **** 	                /* Blink with LED */
 233:.\main.c      **** 	                //(0u == LED_P1_2_Read()) ? LED_P1_2_Write(1u) : LED_P1_2_Write(0u);
 234:.\main.c      **** 	                wakeup_interval_counter = 0u;
 235:.\main.c      **** 					ready = 1u;
 236:.\main.c      **** 	            }
 237:.\main.c      **** 	            else
 238:.\main.c      **** 	            {
 239:.\main.c      **** 	                wakeup_interval_counter++;
 240:.\main.c      **** 	            }
 241:.\main.c      **** 	                
 242:.\main.c      **** 	        } while (wakeup_interval_counter != 0u);
 243:.\main.c      **** 	        
 244:.\main.c      **** 
 245:.\main.c      **** 	        /* Restore clock configuration */
 246:.\main.c      **** 	        CyPmRestoreClocks();
 247:.\main.c      **** 		}
 248:.\main.c      **** 		
 249:.\main.c      **** 		/*
 250:.\main.c      ****         // Place your application code here.
 251:.\main.c      ****         Pin37_Write(!Pin37_Read());
 252:.\main.c      ****         
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 13


 253:.\main.c      ****         clear_packet(data_packet);
 254:.\main.c      ****         sprintf(data_packet,"%s, %u\r\n", "tmp", iter);
 255:.\main.c      ****         
 256:.\main.c      ****         modem_connect();
 257:.\main.c      ****         LED_Write(!LED_Read());
 258:.\main.c      ****         
 259:.\main.c      ****         // modem_state should now be IDLE or READY
 260:.\main.c      ****         //modem_send_packet(data_packet);        
 261:.\main.c      ****         modem_get_google(); //Can't get to work
 262:.\main.c      ****                
 263:.\main.c      ****         if (tmp > 10) {
 264:.\main.c      ****             sign = -1;
 265:.\main.c      ****         } else if (tmp < -10) {
 266:.\main.c      ****             sign = 1;
 267:.\main.c      ****         }
 268:.\main.c      ****         tmp = tmp + sign;        
 269:.\main.c      ****         
 270:.\main.c      ****         
 271:.\main.c      ****         Pin37_Write(!Pin37_Read());
 272:.\main.c      ****         LED_Write(!LED_Read());
 273:.\main.c      ****         CyDelay(100u);  
 274:.\main.c      ****         
 275:.\main.c      ****         modem_get_time();
 276:.\main.c      ****         Pin38_Write(!Pin38_Read());
 277:.\main.c      ****         LED_Write(!LED_Read());
 278:.\main.c      ****         CyDelay(100u);      
 279:.\main.c      ****         
 280:.\main.c      ****         modem_get_signal_quality();
 281:.\main.c      ****         Pin39_Write(!Pin39_Read());
 282:.\main.c      ****         LED_Write(!LED_Read());
 283:.\main.c      ****         CyDelay(100u);  
 284:.\main.c      ****         
 285:.\main.c      ****         modem_check_network();
 286:.\main.c      ****         //Pin34_Write(!Pin34_Read());
 287:.\main.c      ****         LED_Write(!LED_Read());
 288:.\main.c      ****         CyDelay(100u);  
 289:.\main.c      ****         
 290:.\main.c      ****         modem_get_serial_number();
 291:.\main.c      ****         //modem_disconnect();
 292:.\main.c      ****         //Pin35_Write(!Pin35_Read());
 293:.\main.c      ****         LED_Write(!LED_Read());
 294:.\main.c      ****         CyDelay(100u);   
 295:.\main.c      ****         
 296:.\main.c      ****         ADC_SAR_1_StartConvert();
 297:.\main.c      ****         ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 298:.\main.c      ****         v_out = ADC_SAR_1_CountsTo_Volts(ADC_SAR_1_GetResult16());        
 299:.\main.c      ****         //v_out = Pin30_Read();
 300:.\main.c      ****         Pin25_Write(v_out);
 301:.\main.c      **** 		*/
 302:.\main.c      ****     }
 405              		.loc 1 302 0
 406 01fa 44E7     		b	.L12
 407              	.L3:
 210:.\main.c      **** 			blink_LED(5u);
 408              		.loc 1 210 0
 409 01fc 0520     		movs	r0, #5
 410 01fe FFF7FEFF 		bl	blink_LED
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 14


 213:.\main.c      **** 	        CyPmSaveClocks();
 411              		.loc 1 213 0
 412 0202 FFF7FEFF 		bl	CyPmSaveClocks
 413              	.L11:
 222:.\main.c      **** 	            CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 414              		.loc 1 222 0
 415 0206 0020     		movs	r0, #0
 416 0208 4FF40061 		mov	r1, #2048
 417 020c FFF7FEFF 		bl	CyPmSleep
 230:.\main.c      **** 	            if(SLEEPTIMER_INTERVAL_COUNTER == wakeup_interval_counter)
 418              		.loc 1 230 0
 419 0210 154B     		ldr	r3, .L13+40
 420 0212 1B68     		ldr	r3, [r3]
 421 0214 B3F5EB7F 		cmp	r3, #470
 422 0218 06D1     		bne	.L9
 234:.\main.c      **** 	                wakeup_interval_counter = 0u;
 423              		.loc 1 234 0
 424 021a 134B     		ldr	r3, .L13+40
 425 021c 0022     		movs	r2, #0
 426 021e 1A60     		str	r2, [r3]
 235:.\main.c      **** 					ready = 1u;
 427              		.loc 1 235 0
 428 0220 0A4B     		ldr	r3, .L13+12
 429 0222 0122     		movs	r2, #1
 430 0224 1A70     		strb	r2, [r3]
 431 0226 04E0     		b	.L10
 432              	.L9:
 239:.\main.c      **** 	                wakeup_interval_counter++;
 433              		.loc 1 239 0
 434 0228 0F4B     		ldr	r3, .L13+40
 435 022a 1B68     		ldr	r3, [r3]
 436 022c 5A1C     		adds	r2, r3, #1
 437 022e 0E4B     		ldr	r3, .L13+40
 438 0230 1A60     		str	r2, [r3]
 439              	.L10:
 242:.\main.c      **** 	        } while (wakeup_interval_counter != 0u);
 440              		.loc 1 242 0
 441 0232 0D4B     		ldr	r3, .L13+40
 442 0234 1B68     		ldr	r3, [r3]
 443 0236 002B     		cmp	r3, #0
 444 0238 E5D1     		bne	.L11
 246:.\main.c      **** 	        CyPmRestoreClocks();
 445              		.loc 1 246 0
 446 023a FFF7FEFF 		bl	CyPmRestoreClocks
 447              		.loc 1 302 0
 448 023e 22E7     		b	.L12
 449              	.L14:
 450              		.align	2
 451              	.L13:
 452 0240 00000000 		.word	Wakeup_ISR
 453 0244 00000000 		.word	API_KEY
 454 0248 50369D67 		.word	1738356304
 455 024c 00000000 		.word	ready
 456 0250 00000000 		.word	loops
 457 0254 00000000 		.word	lock
 458 0258 00000000 		.word	packet_ready
 459 025c 00000000 		.word	iter
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 15


 460 0260 00000000 		.word	sign
 461 0264 00000000 		.word	packet_len
 462 0268 00000000 		.word	wakeup_interval_counter
 463 026c 00000000 		.word	v_out
 464 0270 00000000 		.word	data_packet
 465 0274 00000000 		.word	ultrasonic_reading
 466 0278 00000000 		.word	SITE_NAME
 467 027c 58000000 		.word	.LC4
 468 0280 64000000 		.word	.LC5
 469 0284 6C000000 		.word	.LC6
 470 0288 38000000 		.word	.LC2
 471 028c 4C000000 		.word	.LC3
 472 0290 74000000 		.word	.LC7
 473 0294 80000000 		.word	.LC8
 474              		.cfi_endproc
 475              	.LFE57:
 476              		.size	main, .-main
 477              		.section	.text.blink_LED,"ax",%progbits
 478              		.align	2
 479              		.global	blink_LED
 480              		.thumb
 481              		.thumb_func
 482              		.type	blink_LED, %function
 483              	blink_LED:
 484              	.LFB58:
 303:.\main.c      **** 	
 304:.\main.c      **** 	/*
 305:.\main.c      **** 	modem_power_off();  
 306:.\main.c      **** 	modem_stop();
 307:.\main.c      **** 	
 308:.\main.c      **** 	blink_LED(3u);		
 309:.\main.c      **** 	CyPmSaveClocks();
 310:.\main.c      **** 	CyPmHibernate();
 311:.\main.c      **** 	*/
 312:.\main.c      **** }
 313:.\main.c      **** 
 314:.\main.c      **** uint8 blink_LED(uint8 n_blinks) {
 485              		.loc 1 314 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 16
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 84B0     		sub	sp, sp, #16
 494              		.cfi_def_cfa_offset 24
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 0346     		mov	r3, r0
 498 0008 FB71     		strb	r3, [r7, #7]
 315:.\main.c      **** 	uint8 k;
 316:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 499              		.loc 1 316 0
 500 000a 0023     		movs	r3, #0
 501 000c FB73     		strb	r3, [r7, #15]
 502 000e 0EE0     		b	.L16
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 16


 503              	.L17:
 317:.\main.c      **** 		LED_Write(1u);
 504              		.loc 1 317 0 discriminator 2
 505 0010 0120     		movs	r0, #1
 506 0012 FFF7FEFF 		bl	LED_Write
 318:.\main.c      **** 		CyDelay(200u);
 507              		.loc 1 318 0 discriminator 2
 508 0016 C820     		movs	r0, #200
 509 0018 FFF7FEFF 		bl	CyDelay
 319:.\main.c      **** 		LED_Write(0u);
 510              		.loc 1 319 0 discriminator 2
 511 001c 0020     		movs	r0, #0
 512 001e FFF7FEFF 		bl	LED_Write
 320:.\main.c      **** 		CyDelay(200u);
 513              		.loc 1 320 0 discriminator 2
 514 0022 C820     		movs	r0, #200
 515 0024 FFF7FEFF 		bl	CyDelay
 316:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 516              		.loc 1 316 0 discriminator 2
 517 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 518 002a 0133     		adds	r3, r3, #1
 519 002c FB73     		strb	r3, [r7, #15]
 520              	.L16:
 316:.\main.c      **** 	for (k = 0; k < n_blinks; k++) {
 521              		.loc 1 316 0 is_stmt 0 discriminator 1
 522 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 523 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 524 0032 9A42     		cmp	r2, r3
 525 0034 ECD3     		bcc	.L17
 321:.\main.c      **** 	}	
 322:.\main.c      **** }
 526              		.loc 1 322 0 is_stmt 1
 527 0036 1846     		mov	r0, r3
 528 0038 1037     		adds	r7, r7, #16
 529 003a BD46     		mov	sp, r7
 530              		@ sp needed
 531 003c 80BD     		pop	{r7, pc}
 532              		.cfi_endproc
 533              	.LFE58:
 534              		.size	blink_LED, .-blink_LED
 535 003e 00BF     		.text
 536              	.Letext0:
 537              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 538              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 539              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 540              		.file 5 ".\\ultrasonic.h"
 541              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 542              		.section	.debug_info,"",%progbits
 543              	.Ldebug_info0:
 544 0000 77020000 		.4byte	0x277
 545 0004 0400     		.2byte	0x4
 546 0006 00000000 		.4byte	.Ldebug_abbrev0
 547 000a 04       		.byte	0x4
 548 000b 01       		.uleb128 0x1
 549 000c 4C010000 		.4byte	.LASF37
 550 0010 01       		.byte	0x1
 551 0011 AF000000 		.4byte	.LASF38
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 17


 552 0015 55000000 		.4byte	.LASF39
 553 0019 00000000 		.4byte	.Ldebug_ranges0+0
 554 001d 00000000 		.4byte	0
 555 0021 00000000 		.4byte	.Ldebug_line0
 556 0025 02       		.uleb128 0x2
 557 0026 01       		.byte	0x1
 558 0027 06       		.byte	0x6
 559 0028 2C020000 		.4byte	.LASF0
 560 002c 02       		.uleb128 0x2
 561 002d 01       		.byte	0x1
 562 002e 08       		.byte	0x8
 563 002f A1000000 		.4byte	.LASF1
 564 0033 02       		.uleb128 0x2
 565 0034 02       		.byte	0x2
 566 0035 05       		.byte	0x5
 567 0036 03020000 		.4byte	.LASF2
 568 003a 02       		.uleb128 0x2
 569 003b 02       		.byte	0x2
 570 003c 07       		.byte	0x7
 571 003d 27000000 		.4byte	.LASF3
 572 0041 03       		.uleb128 0x3
 573 0042 18000000 		.4byte	.LASF9
 574 0046 02       		.byte	0x2
 575 0047 37       		.byte	0x37
 576 0048 4C000000 		.4byte	0x4c
 577 004c 02       		.uleb128 0x2
 578 004d 04       		.byte	0x4
 579 004e 05       		.byte	0x5
 580 004f 23020000 		.4byte	.LASF4
 581 0053 02       		.uleb128 0x2
 582 0054 04       		.byte	0x4
 583 0055 07       		.byte	0x7
 584 0056 EB000000 		.4byte	.LASF5
 585 005a 02       		.uleb128 0x2
 586 005b 08       		.byte	0x8
 587 005c 05       		.byte	0x5
 588 005d D9010000 		.4byte	.LASF6
 589 0061 02       		.uleb128 0x2
 590 0062 08       		.byte	0x8
 591 0063 07       		.byte	0x7
 592 0064 23010000 		.4byte	.LASF7
 593 0068 04       		.uleb128 0x4
 594 0069 04       		.byte	0x4
 595 006a 05       		.byte	0x5
 596 006b 696E7400 		.ascii	"int\000"
 597 006f 02       		.uleb128 0x2
 598 0070 04       		.byte	0x4
 599 0071 07       		.byte	0x7
 600 0072 10010000 		.4byte	.LASF8
 601 0076 03       		.uleb128 0x3
 602 0077 C8010000 		.4byte	.LASF10
 603 007b 03       		.byte	0x3
 604 007c 41       		.byte	0x41
 605 007d 41000000 		.4byte	0x41
 606 0081 03       		.uleb128 0x3
 607 0082 0D020000 		.4byte	.LASF11
 608 0086 04       		.byte	0x4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 18


 609 0087 A1       		.byte	0xa1
 610 0088 2C000000 		.4byte	0x2c
 611 008c 03       		.uleb128 0x3
 612 008d 02010000 		.4byte	.LASF12
 613 0091 04       		.byte	0x4
 614 0092 A2       		.byte	0xa2
 615 0093 3A000000 		.4byte	0x3a
 616 0097 03       		.uleb128 0x3
 617 0098 09010000 		.4byte	.LASF13
 618 009c 04       		.byte	0x4
 619 009d A3       		.byte	0xa3
 620 009e 53000000 		.4byte	0x53
 621 00a2 02       		.uleb128 0x2
 622 00a3 04       		.byte	0x4
 623 00a4 04       		.byte	0x4
 624 00a5 92000000 		.4byte	.LASF14
 625 00a9 02       		.uleb128 0x2
 626 00aa 08       		.byte	0x8
 627 00ab 04       		.byte	0x4
 628 00ac 45000000 		.4byte	.LASF15
 629 00b0 02       		.uleb128 0x2
 630 00b1 01       		.byte	0x1
 631 00b2 08       		.byte	0x8
 632 00b3 ED010000 		.4byte	.LASF16
 633 00b7 02       		.uleb128 0x2
 634 00b8 04       		.byte	0x4
 635 00b9 07       		.byte	0x7
 636 00ba D0010000 		.4byte	.LASF17
 637 00be 05       		.uleb128 0x5
 638 00bf 04       		.byte	0x4
 639 00c0 C4000000 		.4byte	0xc4
 640 00c4 06       		.uleb128 0x6
 641 00c5 B0000000 		.4byte	0xb0
 642 00c9 07       		.uleb128 0x7
 643 00ca 0C       		.byte	0xc
 644 00cb 05       		.byte	0x5
 645 00cc 15       		.byte	0x15
 646 00cd F6000000 		.4byte	0xf6
 647 00d1 08       		.uleb128 0x8
 648 00d2 00000000 		.4byte	.LASF18
 649 00d6 05       		.byte	0x5
 650 00d7 16       		.byte	0x16
 651 00d8 A2000000 		.4byte	0xa2
 652 00dc 00       		.byte	0
 653 00dd 08       		.uleb128 0x8
 654 00de E7010000 		.4byte	.LASF19
 655 00e2 05       		.byte	0x5
 656 00e3 17       		.byte	0x17
 657 00e4 A2000000 		.4byte	0xa2
 658 00e8 04       		.byte	0x4
 659 00e9 08       		.uleb128 0x8
 660 00ea F2010000 		.4byte	.LASF20
 661 00ee 05       		.byte	0x5
 662 00ef 18       		.byte	0x18
 663 00f0 81000000 		.4byte	0x81
 664 00f4 08       		.byte	0x8
 665 00f5 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 19


 666 00f6 03       		.uleb128 0x3
 667 00f7 3A010000 		.4byte	.LASF21
 668 00fb 05       		.byte	0x5
 669 00fc 19       		.byte	0x19
 670 00fd C9000000 		.4byte	0xc9
 671 0101 09       		.uleb128 0x9
 672 0102 F8010000 		.4byte	.LASF40
 673 0106 01       		.byte	0x1
 674 0107 39       		.byte	0x39
 675 0108 00000000 		.4byte	.LFB56
 676 010c 0A000000 		.4byte	.LFE56-.LFB56
 677 0110 01       		.uleb128 0x1
 678 0111 9C       		.byte	0x9c
 679 0112 0A       		.uleb128 0xa
 680 0113 FD000000 		.4byte	.LASF41
 681 0117 01       		.byte	0x1
 682 0118 44       		.byte	0x44
 683 0119 00000000 		.4byte	.LFB57
 684 011d 98020000 		.4byte	.LFE57-.LFB57
 685 0121 01       		.uleb128 0x1
 686 0122 9C       		.byte	0x9c
 687 0123 0B       		.uleb128 0xb
 688 0124 3D020000 		.4byte	.LASF42
 689 0128 01       		.byte	0x1
 690 0129 3A01     		.2byte	0x13a
 691 012b 81000000 		.4byte	0x81
 692 012f 00000000 		.4byte	.LFB58
 693 0133 3E000000 		.4byte	.LFE58-.LFB58
 694 0137 01       		.uleb128 0x1
 695 0138 9C       		.byte	0x9c
 696 0139 5A010000 		.4byte	0x15a
 697 013d 0C       		.uleb128 0xc
 698 013e 98000000 		.4byte	.LASF43
 699 0142 01       		.byte	0x1
 700 0143 3A01     		.2byte	0x13a
 701 0145 81000000 		.4byte	0x81
 702 0149 02       		.uleb128 0x2
 703 014a 91       		.byte	0x91
 704 014b 6F       		.sleb128 -17
 705 014c 0D       		.uleb128 0xd
 706 014d 6B00     		.ascii	"k\000"
 707 014f 01       		.byte	0x1
 708 0150 3B01     		.2byte	0x13b
 709 0152 81000000 		.4byte	0x81
 710 0156 02       		.uleb128 0x2
 711 0157 91       		.byte	0x91
 712 0158 77       		.sleb128 -9
 713 0159 00       		.byte	0
 714 015a 0E       		.uleb128 0xe
 715 015b DE000000 		.4byte	.LASF22
 716 015f 06       		.byte	0x6
 717 0160 1606     		.2byte	0x616
 718 0162 66010000 		.4byte	0x166
 719 0166 0F       		.uleb128 0xf
 720 0167 76000000 		.4byte	0x76
 721 016b 10       		.uleb128 0x10
 722 016c 19020000 		.4byte	.LASF23
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 20


 723 0170 01       		.byte	0x1
 724 0171 18       		.byte	0x18
 725 0172 BE000000 		.4byte	0xbe
 726 0176 05       		.uleb128 0x5
 727 0177 03       		.byte	0x3
 728 0178 00000000 		.4byte	SITE_NAME
 729 017c 10       		.uleb128 0x10
 730 017d D6000000 		.4byte	.LASF24
 731 0181 01       		.byte	0x1
 732 0182 1A       		.byte	0x1a
 733 0183 BE000000 		.4byte	0xbe
 734 0187 05       		.uleb128 0x5
 735 0188 03       		.byte	0x3
 736 0189 00000000 		.4byte	API_KEY
 737 018d 11       		.uleb128 0x11
 738 018e B0000000 		.4byte	0xb0
 739 0192 9E010000 		.4byte	0x19e
 740 0196 12       		.uleb128 0x12
 741 0197 B7000000 		.4byte	0xb7
 742 019b E703     		.2byte	0x3e7
 743 019d 00       		.byte	0
 744 019e 10       		.uleb128 0x10
 745 019f BD000000 		.4byte	.LASF25
 746 01a3 01       		.byte	0x1
 747 01a4 1B       		.byte	0x1b
 748 01a5 8D010000 		.4byte	0x18d
 749 01a9 05       		.uleb128 0x5
 750 01aa 03       		.byte	0x3
 751 01ab 00000000 		.4byte	data_packet
 752 01af 11       		.uleb128 0x11
 753 01b0 B0000000 		.4byte	0xb0
 754 01b4 BF010000 		.4byte	0x1bf
 755 01b8 13       		.uleb128 0x13
 756 01b9 B7000000 		.4byte	0xb7
 757 01bd 63       		.byte	0x63
 758 01be 00       		.byte	0
 759 01bf 10       		.uleb128 0x10
 760 01c0 4C000000 		.4byte	.LASF26
 761 01c4 01       		.byte	0x1
 762 01c5 1B       		.byte	0x1b
 763 01c6 AF010000 		.4byte	0x1af
 764 01ca 05       		.uleb128 0x5
 765 01cb 03       		.byte	0x3
 766 01cc 00000000 		.4byte	test_csv
 767 01d0 10       		.uleb128 0x10
 768 01d1 22000000 		.4byte	.LASF27
 769 01d5 01       		.byte	0x1
 770 01d6 1C       		.byte	0x1c
 771 01d7 68000000 		.4byte	0x68
 772 01db 05       		.uleb128 0x5
 773 01dc 03       		.byte	0x3
 774 01dd 00000000 		.4byte	iter
 775 01e1 10       		.uleb128 0x10
 776 01e2 B8000000 		.4byte	.LASF28
 777 01e6 01       		.byte	0x1
 778 01e7 1C       		.byte	0x1c
 779 01e8 68000000 		.4byte	0x68
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 21


 780 01ec 05       		.uleb128 0x5
 781 01ed 03       		.byte	0x3
 782 01ee 00000000 		.4byte	sign
 783 01f2 10       		.uleb128 0x10
 784 01f3 1D010000 		.4byte	.LASF29
 785 01f7 01       		.byte	0x1
 786 01f8 1D       		.byte	0x1d
 787 01f9 81000000 		.4byte	0x81
 788 01fd 05       		.uleb128 0x5
 789 01fe 03       		.byte	0x3
 790 01ff 00000000 		.4byte	ready
 791 0203 10       		.uleb128 0x10
 792 0204 8C000000 		.4byte	.LASF30
 793 0208 01       		.byte	0x1
 794 0209 1D       		.byte	0x1d
 795 020a 81000000 		.4byte	0x81
 796 020e 05       		.uleb128 0x5
 797 020f 03       		.byte	0x3
 798 0210 00000000 		.4byte	loops
 799 0214 10       		.uleb128 0x10
 800 0215 38020000 		.4byte	.LASF31
 801 0219 01       		.byte	0x1
 802 021a 1D       		.byte	0x1d
 803 021b 81000000 		.4byte	0x81
 804 021f 05       		.uleb128 0x5
 805 0220 03       		.byte	0x3
 806 0221 00000000 		.4byte	lock
 807 0225 10       		.uleb128 0x10
 808 0226 C9000000 		.4byte	.LASF32
 809 022a 01       		.byte	0x1
 810 022b 1D       		.byte	0x1d
 811 022c 81000000 		.4byte	0x81
 812 0230 05       		.uleb128 0x5
 813 0231 03       		.byte	0x3
 814 0232 00000000 		.4byte	packet_ready
 815 0236 10       		.uleb128 0x10
 816 0237 3A000000 		.4byte	.LASF33
 817 023b 01       		.byte	0x1
 818 023c 1E       		.byte	0x1e
 819 023d 8C000000 		.4byte	0x8c
 820 0241 05       		.uleb128 0x5
 821 0242 03       		.byte	0x3
 822 0243 00000000 		.4byte	packet_len
 823 0247 10       		.uleb128 0x10
 824 0248 47020000 		.4byte	.LASF34
 825 024c 01       		.byte	0x1
 826 024d 1F       		.byte	0x1f
 827 024e 97000000 		.4byte	0x97
 828 0252 05       		.uleb128 0x5
 829 0253 03       		.byte	0x3
 830 0254 00000000 		.4byte	wakeup_interval_counter
 831 0258 10       		.uleb128 0x10
 832 0259 05000000 		.4byte	.LASF35
 833 025d 01       		.byte	0x1
 834 025e 20       		.byte	0x20
 835 025f F6000000 		.4byte	0xf6
 836 0263 05       		.uleb128 0x5
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 22


 837 0264 03       		.byte	0x3
 838 0265 00000000 		.4byte	ultrasonic_reading
 839 0269 10       		.uleb128 0x10
 840 026a 13020000 		.4byte	.LASF36
 841 026e 01       		.byte	0x1
 842 026f 37       		.byte	0x37
 843 0270 A2000000 		.4byte	0xa2
 844 0274 05       		.uleb128 0x5
 845 0275 03       		.byte	0x3
 846 0276 00000000 		.4byte	v_out
 847 027a 00       		.byte	0
 848              		.section	.debug_abbrev,"",%progbits
 849              	.Ldebug_abbrev0:
 850 0000 01       		.uleb128 0x1
 851 0001 11       		.uleb128 0x11
 852 0002 01       		.byte	0x1
 853 0003 25       		.uleb128 0x25
 854 0004 0E       		.uleb128 0xe
 855 0005 13       		.uleb128 0x13
 856 0006 0B       		.uleb128 0xb
 857 0007 03       		.uleb128 0x3
 858 0008 0E       		.uleb128 0xe
 859 0009 1B       		.uleb128 0x1b
 860 000a 0E       		.uleb128 0xe
 861 000b 55       		.uleb128 0x55
 862 000c 17       		.uleb128 0x17
 863 000d 11       		.uleb128 0x11
 864 000e 01       		.uleb128 0x1
 865 000f 10       		.uleb128 0x10
 866 0010 17       		.uleb128 0x17
 867 0011 00       		.byte	0
 868 0012 00       		.byte	0
 869 0013 02       		.uleb128 0x2
 870 0014 24       		.uleb128 0x24
 871 0015 00       		.byte	0
 872 0016 0B       		.uleb128 0xb
 873 0017 0B       		.uleb128 0xb
 874 0018 3E       		.uleb128 0x3e
 875 0019 0B       		.uleb128 0xb
 876 001a 03       		.uleb128 0x3
 877 001b 0E       		.uleb128 0xe
 878 001c 00       		.byte	0
 879 001d 00       		.byte	0
 880 001e 03       		.uleb128 0x3
 881 001f 16       		.uleb128 0x16
 882 0020 00       		.byte	0
 883 0021 03       		.uleb128 0x3
 884 0022 0E       		.uleb128 0xe
 885 0023 3A       		.uleb128 0x3a
 886 0024 0B       		.uleb128 0xb
 887 0025 3B       		.uleb128 0x3b
 888 0026 0B       		.uleb128 0xb
 889 0027 49       		.uleb128 0x49
 890 0028 13       		.uleb128 0x13
 891 0029 00       		.byte	0
 892 002a 00       		.byte	0
 893 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 23


 894 002c 24       		.uleb128 0x24
 895 002d 00       		.byte	0
 896 002e 0B       		.uleb128 0xb
 897 002f 0B       		.uleb128 0xb
 898 0030 3E       		.uleb128 0x3e
 899 0031 0B       		.uleb128 0xb
 900 0032 03       		.uleb128 0x3
 901 0033 08       		.uleb128 0x8
 902 0034 00       		.byte	0
 903 0035 00       		.byte	0
 904 0036 05       		.uleb128 0x5
 905 0037 0F       		.uleb128 0xf
 906 0038 00       		.byte	0
 907 0039 0B       		.uleb128 0xb
 908 003a 0B       		.uleb128 0xb
 909 003b 49       		.uleb128 0x49
 910 003c 13       		.uleb128 0x13
 911 003d 00       		.byte	0
 912 003e 00       		.byte	0
 913 003f 06       		.uleb128 0x6
 914 0040 26       		.uleb128 0x26
 915 0041 00       		.byte	0
 916 0042 49       		.uleb128 0x49
 917 0043 13       		.uleb128 0x13
 918 0044 00       		.byte	0
 919 0045 00       		.byte	0
 920 0046 07       		.uleb128 0x7
 921 0047 13       		.uleb128 0x13
 922 0048 01       		.byte	0x1
 923 0049 0B       		.uleb128 0xb
 924 004a 0B       		.uleb128 0xb
 925 004b 3A       		.uleb128 0x3a
 926 004c 0B       		.uleb128 0xb
 927 004d 3B       		.uleb128 0x3b
 928 004e 0B       		.uleb128 0xb
 929 004f 01       		.uleb128 0x1
 930 0050 13       		.uleb128 0x13
 931 0051 00       		.byte	0
 932 0052 00       		.byte	0
 933 0053 08       		.uleb128 0x8
 934 0054 0D       		.uleb128 0xd
 935 0055 00       		.byte	0
 936 0056 03       		.uleb128 0x3
 937 0057 0E       		.uleb128 0xe
 938 0058 3A       		.uleb128 0x3a
 939 0059 0B       		.uleb128 0xb
 940 005a 3B       		.uleb128 0x3b
 941 005b 0B       		.uleb128 0xb
 942 005c 49       		.uleb128 0x49
 943 005d 13       		.uleb128 0x13
 944 005e 38       		.uleb128 0x38
 945 005f 0B       		.uleb128 0xb
 946 0060 00       		.byte	0
 947 0061 00       		.byte	0
 948 0062 09       		.uleb128 0x9
 949 0063 2E       		.uleb128 0x2e
 950 0064 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 24


 951 0065 3F       		.uleb128 0x3f
 952 0066 19       		.uleb128 0x19
 953 0067 03       		.uleb128 0x3
 954 0068 0E       		.uleb128 0xe
 955 0069 3A       		.uleb128 0x3a
 956 006a 0B       		.uleb128 0xb
 957 006b 3B       		.uleb128 0x3b
 958 006c 0B       		.uleb128 0xb
 959 006d 27       		.uleb128 0x27
 960 006e 19       		.uleb128 0x19
 961 006f 11       		.uleb128 0x11
 962 0070 01       		.uleb128 0x1
 963 0071 12       		.uleb128 0x12
 964 0072 06       		.uleb128 0x6
 965 0073 40       		.uleb128 0x40
 966 0074 18       		.uleb128 0x18
 967 0075 9642     		.uleb128 0x2116
 968 0077 19       		.uleb128 0x19
 969 0078 00       		.byte	0
 970 0079 00       		.byte	0
 971 007a 0A       		.uleb128 0xa
 972 007b 2E       		.uleb128 0x2e
 973 007c 00       		.byte	0
 974 007d 3F       		.uleb128 0x3f
 975 007e 19       		.uleb128 0x19
 976 007f 03       		.uleb128 0x3
 977 0080 0E       		.uleb128 0xe
 978 0081 3A       		.uleb128 0x3a
 979 0082 0B       		.uleb128 0xb
 980 0083 3B       		.uleb128 0x3b
 981 0084 0B       		.uleb128 0xb
 982 0085 11       		.uleb128 0x11
 983 0086 01       		.uleb128 0x1
 984 0087 12       		.uleb128 0x12
 985 0088 06       		.uleb128 0x6
 986 0089 40       		.uleb128 0x40
 987 008a 18       		.uleb128 0x18
 988 008b 9642     		.uleb128 0x2116
 989 008d 19       		.uleb128 0x19
 990 008e 00       		.byte	0
 991 008f 00       		.byte	0
 992 0090 0B       		.uleb128 0xb
 993 0091 2E       		.uleb128 0x2e
 994 0092 01       		.byte	0x1
 995 0093 3F       		.uleb128 0x3f
 996 0094 19       		.uleb128 0x19
 997 0095 03       		.uleb128 0x3
 998 0096 0E       		.uleb128 0xe
 999 0097 3A       		.uleb128 0x3a
 1000 0098 0B       		.uleb128 0xb
 1001 0099 3B       		.uleb128 0x3b
 1002 009a 05       		.uleb128 0x5
 1003 009b 27       		.uleb128 0x27
 1004 009c 19       		.uleb128 0x19
 1005 009d 49       		.uleb128 0x49
 1006 009e 13       		.uleb128 0x13
 1007 009f 11       		.uleb128 0x11
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 25


 1008 00a0 01       		.uleb128 0x1
 1009 00a1 12       		.uleb128 0x12
 1010 00a2 06       		.uleb128 0x6
 1011 00a3 40       		.uleb128 0x40
 1012 00a4 18       		.uleb128 0x18
 1013 00a5 9642     		.uleb128 0x2116
 1014 00a7 19       		.uleb128 0x19
 1015 00a8 01       		.uleb128 0x1
 1016 00a9 13       		.uleb128 0x13
 1017 00aa 00       		.byte	0
 1018 00ab 00       		.byte	0
 1019 00ac 0C       		.uleb128 0xc
 1020 00ad 05       		.uleb128 0x5
 1021 00ae 00       		.byte	0
 1022 00af 03       		.uleb128 0x3
 1023 00b0 0E       		.uleb128 0xe
 1024 00b1 3A       		.uleb128 0x3a
 1025 00b2 0B       		.uleb128 0xb
 1026 00b3 3B       		.uleb128 0x3b
 1027 00b4 05       		.uleb128 0x5
 1028 00b5 49       		.uleb128 0x49
 1029 00b6 13       		.uleb128 0x13
 1030 00b7 02       		.uleb128 0x2
 1031 00b8 18       		.uleb128 0x18
 1032 00b9 00       		.byte	0
 1033 00ba 00       		.byte	0
 1034 00bb 0D       		.uleb128 0xd
 1035 00bc 34       		.uleb128 0x34
 1036 00bd 00       		.byte	0
 1037 00be 03       		.uleb128 0x3
 1038 00bf 08       		.uleb128 0x8
 1039 00c0 3A       		.uleb128 0x3a
 1040 00c1 0B       		.uleb128 0xb
 1041 00c2 3B       		.uleb128 0x3b
 1042 00c3 05       		.uleb128 0x5
 1043 00c4 49       		.uleb128 0x49
 1044 00c5 13       		.uleb128 0x13
 1045 00c6 02       		.uleb128 0x2
 1046 00c7 18       		.uleb128 0x18
 1047 00c8 00       		.byte	0
 1048 00c9 00       		.byte	0
 1049 00ca 0E       		.uleb128 0xe
 1050 00cb 34       		.uleb128 0x34
 1051 00cc 00       		.byte	0
 1052 00cd 03       		.uleb128 0x3
 1053 00ce 0E       		.uleb128 0xe
 1054 00cf 3A       		.uleb128 0x3a
 1055 00d0 0B       		.uleb128 0xb
 1056 00d1 3B       		.uleb128 0x3b
 1057 00d2 05       		.uleb128 0x5
 1058 00d3 49       		.uleb128 0x49
 1059 00d4 13       		.uleb128 0x13
 1060 00d5 3F       		.uleb128 0x3f
 1061 00d6 19       		.uleb128 0x19
 1062 00d7 3C       		.uleb128 0x3c
 1063 00d8 19       		.uleb128 0x19
 1064 00d9 00       		.byte	0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 26


 1065 00da 00       		.byte	0
 1066 00db 0F       		.uleb128 0xf
 1067 00dc 35       		.uleb128 0x35
 1068 00dd 00       		.byte	0
 1069 00de 49       		.uleb128 0x49
 1070 00df 13       		.uleb128 0x13
 1071 00e0 00       		.byte	0
 1072 00e1 00       		.byte	0
 1073 00e2 10       		.uleb128 0x10
 1074 00e3 34       		.uleb128 0x34
 1075 00e4 00       		.byte	0
 1076 00e5 03       		.uleb128 0x3
 1077 00e6 0E       		.uleb128 0xe
 1078 00e7 3A       		.uleb128 0x3a
 1079 00e8 0B       		.uleb128 0xb
 1080 00e9 3B       		.uleb128 0x3b
 1081 00ea 0B       		.uleb128 0xb
 1082 00eb 49       		.uleb128 0x49
 1083 00ec 13       		.uleb128 0x13
 1084 00ed 3F       		.uleb128 0x3f
 1085 00ee 19       		.uleb128 0x19
 1086 00ef 02       		.uleb128 0x2
 1087 00f0 18       		.uleb128 0x18
 1088 00f1 00       		.byte	0
 1089 00f2 00       		.byte	0
 1090 00f3 11       		.uleb128 0x11
 1091 00f4 01       		.uleb128 0x1
 1092 00f5 01       		.byte	0x1
 1093 00f6 49       		.uleb128 0x49
 1094 00f7 13       		.uleb128 0x13
 1095 00f8 01       		.uleb128 0x1
 1096 00f9 13       		.uleb128 0x13
 1097 00fa 00       		.byte	0
 1098 00fb 00       		.byte	0
 1099 00fc 12       		.uleb128 0x12
 1100 00fd 21       		.uleb128 0x21
 1101 00fe 00       		.byte	0
 1102 00ff 49       		.uleb128 0x49
 1103 0100 13       		.uleb128 0x13
 1104 0101 2F       		.uleb128 0x2f
 1105 0102 05       		.uleb128 0x5
 1106 0103 00       		.byte	0
 1107 0104 00       		.byte	0
 1108 0105 13       		.uleb128 0x13
 1109 0106 21       		.uleb128 0x21
 1110 0107 00       		.byte	0
 1111 0108 49       		.uleb128 0x49
 1112 0109 13       		.uleb128 0x13
 1113 010a 2F       		.uleb128 0x2f
 1114 010b 0B       		.uleb128 0xb
 1115 010c 00       		.byte	0
 1116 010d 00       		.byte	0
 1117 010e 00       		.byte	0
 1118              		.section	.debug_aranges,"",%progbits
 1119 0000 2C000000 		.4byte	0x2c
 1120 0004 0200     		.2byte	0x2
 1121 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 27


 1122 000a 04       		.byte	0x4
 1123 000b 00       		.byte	0
 1124 000c 0000     		.2byte	0
 1125 000e 0000     		.2byte	0
 1126 0010 00000000 		.4byte	.LFB56
 1127 0014 0A000000 		.4byte	.LFE56-.LFB56
 1128 0018 00000000 		.4byte	.LFB57
 1129 001c 98020000 		.4byte	.LFE57-.LFB57
 1130 0020 00000000 		.4byte	.LFB58
 1131 0024 3E000000 		.4byte	.LFE58-.LFB58
 1132 0028 00000000 		.4byte	0
 1133 002c 00000000 		.4byte	0
 1134              		.section	.debug_ranges,"",%progbits
 1135              	.Ldebug_ranges0:
 1136 0000 00000000 		.4byte	.LFB56
 1137 0004 0A000000 		.4byte	.LFE56
 1138 0008 00000000 		.4byte	.LFB57
 1139 000c 98020000 		.4byte	.LFE57
 1140 0010 00000000 		.4byte	.LFB58
 1141 0014 3E000000 		.4byte	.LFE58
 1142 0018 00000000 		.4byte	0
 1143 001c 00000000 		.4byte	0
 1144              		.section	.debug_line,"",%progbits
 1145              	.Ldebug_line0:
 1146 0000 09020000 		.section	.debug_str,"MS",%progbits,1
 1146      02005B01 
 1146      00000201 
 1146      FB0E0D00 
 1146      01010101 
 1147              	.LASF18:
 1148 0000 74656D70 		.ascii	"temp\000"
 1148      00
 1149              	.LASF35:
 1150 0005 756C7472 		.ascii	"ultrasonic_reading\000"
 1150      61736F6E 
 1150      69635F72 
 1150      65616469 
 1150      6E6700
 1151              	.LASF9:
 1152 0018 5F5F696E 		.ascii	"__int32_t\000"
 1152      7433325F 
 1152      7400
 1153              	.LASF27:
 1154 0022 69746572 		.ascii	"iter\000"
 1154      00
 1155              	.LASF3:
 1156 0027 73686F72 		.ascii	"short unsigned int\000"
 1156      7420756E 
 1156      7369676E 
 1156      65642069 
 1156      6E7400
 1157              	.LASF33:
 1158 003a 7061636B 		.ascii	"packet_len\000"
 1158      65745F6C 
 1158      656E00
 1159              	.LASF15:
 1160 0045 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 28


 1160      6C6500
 1161              	.LASF26:
 1162 004c 74657374 		.ascii	"test_csv\000"
 1162      5F637376 
 1162      00
 1163              	.LASF39:
 1164 0055 433A5C55 		.ascii	"C:\\Users\\Matthew\\github\\IoT\\CellBoard\\Cell Bo"
 1164      73657273 
 1164      5C4D6174 
 1164      74686577 
 1164      5C676974 
 1165 0082 6172642E 		.ascii	"ard.cydsn\000"
 1165      63796473 
 1165      6E00
 1166              	.LASF30:
 1167 008c 6C6F6F70 		.ascii	"loops\000"
 1167      7300
 1168              	.LASF14:
 1169 0092 666C6F61 		.ascii	"float\000"
 1169      7400
 1170              	.LASF43:
 1171 0098 6E5F626C 		.ascii	"n_blinks\000"
 1171      696E6B73 
 1171      00
 1172              	.LASF1:
 1173 00a1 756E7369 		.ascii	"unsigned char\000"
 1173      676E6564 
 1173      20636861 
 1173      7200
 1174              	.LASF38:
 1175 00af 2E5C6D61 		.ascii	".\\main.c\000"
 1175      696E2E63 
 1175      00
 1176              	.LASF28:
 1177 00b8 7369676E 		.ascii	"sign\000"
 1177      00
 1178              	.LASF25:
 1179 00bd 64617461 		.ascii	"data_packet\000"
 1179      5F706163 
 1179      6B657400 
 1180              	.LASF32:
 1181 00c9 7061636B 		.ascii	"packet_ready\000"
 1181      65745F72 
 1181      65616479 
 1181      00
 1182              	.LASF24:
 1183 00d6 4150495F 		.ascii	"API_KEY\000"
 1183      4B455900 
 1184              	.LASF22:
 1185 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1185      52784275 
 1185      66666572 
 1185      00
 1186              	.LASF5:
 1187 00eb 6C6F6E67 		.ascii	"long unsigned int\000"
 1187      20756E73 
 1187      69676E65 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 29


 1187      6420696E 
 1187      7400
 1188              	.LASF41:
 1189 00fd 6D61696E 		.ascii	"main\000"
 1189      00
 1190              	.LASF12:
 1191 0102 75696E74 		.ascii	"uint16\000"
 1191      313600
 1192              	.LASF13:
 1193 0109 75696E74 		.ascii	"uint32\000"
 1193      333200
 1194              	.LASF8:
 1195 0110 756E7369 		.ascii	"unsigned int\000"
 1195      676E6564 
 1195      20696E74 
 1195      00
 1196              	.LASF29:
 1197 011d 72656164 		.ascii	"ready\000"
 1197      7900
 1198              	.LASF7:
 1199 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 1199      206C6F6E 
 1199      6720756E 
 1199      7369676E 
 1199      65642069 
 1200              	.LASF21:
 1201 013a 556C7472 		.ascii	"UltrasonicReading\000"
 1201      61736F6E 
 1201      69635265 
 1201      6164696E 
 1201      6700
 1202              	.LASF37:
 1203 014c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1203      4320342E 
 1203      382E3420 
 1203      32303134 
 1203      30353236 
 1204 017f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1204      20726576 
 1204      6973696F 
 1204      6E203231 
 1204      31333538 
 1205 01b2 30202D66 		.ascii	"0 -ffunction-sections\000"
 1205      66756E63 
 1205      74696F6E 
 1205      2D736563 
 1205      74696F6E 
 1206              	.LASF10:
 1207 01c8 696E7433 		.ascii	"int32_t\000"
 1207      325F7400 
 1208              	.LASF17:
 1209 01d0 73697A65 		.ascii	"sizetype\000"
 1209      74797065 
 1209      00
 1210              	.LASF6:
 1211 01d9 6C6F6E67 		.ascii	"long long int\000"
 1211      206C6F6E 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccN4wGrI.s 			page 30


 1211      6720696E 
 1211      7400
 1212              	.LASF19:
 1213 01e7 64657074 		.ascii	"depth\000"
 1213      6800
 1214              	.LASF16:
 1215 01ed 63686172 		.ascii	"char\000"
 1215      00
 1216              	.LASF20:
 1217 01f2 76616C69 		.ascii	"valid\000"
 1217      6400
 1218              	.LASF40:
 1219 01f8 57616B65 		.ascii	"Wakeup_ISR\000"
 1219      75705F49 
 1219      535200
 1220              	.LASF2:
 1221 0203 73686F72 		.ascii	"short int\000"
 1221      7420696E 
 1221      7400
 1222              	.LASF11:
 1223 020d 75696E74 		.ascii	"uint8\000"
 1223      3800
 1224              	.LASF36:
 1225 0213 765F6F75 		.ascii	"v_out\000"
 1225      7400
 1226              	.LASF23:
 1227 0219 53495445 		.ascii	"SITE_NAME\000"
 1227      5F4E414D 
 1227      4500
 1228              	.LASF4:
 1229 0223 6C6F6E67 		.ascii	"long int\000"
 1229      20696E74 
 1229      00
 1230              	.LASF0:
 1231 022c 7369676E 		.ascii	"signed char\000"
 1231      65642063 
 1231      68617200 
 1232              	.LASF31:
 1233 0238 6C6F636B 		.ascii	"lock\000"
 1233      00
 1234              	.LASF42:
 1235 023d 626C696E 		.ascii	"blink_LED\000"
 1235      6B5F4C45 
 1235      4400
 1236              	.LASF34:
 1237 0247 77616B65 		.ascii	"wakeup_interval_counter\000"
 1237      75705F69 
 1237      6E746572 
 1237      76616C5F 
 1237      636F756E 
 1238              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
