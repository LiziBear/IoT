ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"PWM_1_PM.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 CD000000 		.text
  20      02006C00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.bss
  24              		.align	2
  25              	PWM_1_backup:
  26 0000 00000000 		.space	5
  26      00
  27 0005 000000   		.section	.text.PWM_1_SaveConfig,"ax",%progbits
  28              		.align	2
  29              		.global	PWM_1_SaveConfig
  30              		.thumb
  31              		.thumb_func
  32              		.type	PWM_1_SaveConfig, %function
  33              	PWM_1_SaveConfig:
  34              	.LFB0:
  35              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1_PM.c"
   1:.\Generated_Source\PSoC5/PWM_1_PM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1_PM.c **** * File Name: PWM_1_PM.c
   3:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
   5:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  This file provides the power management source code to API for the
   7:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  PWM.
   8:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
   9:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Note:
  10:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
  11:.\Generated_Source\PSoC5/PWM_1_PM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/PWM_1_PM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/PWM_1_PM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/PWM_1_PM.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/PWM_1_PM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/PWM_1_PM.c **** #include "cytypes.h"
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 2


  18:.\Generated_Source\PSoC5/PWM_1_PM.c **** #include "PWM_1.h"
  19:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
  20:.\Generated_Source\PSoC5/PWM_1_PM.c **** static PWM_1_backupStruct PWM_1_backup;
  21:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
  22:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
  23:.\Generated_Source\PSoC5/PWM_1_PM.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Function Name: PWM_1_SaveConfig
  25:.\Generated_Source\PSoC5/PWM_1_PM.c **** ********************************************************************************
  26:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
  27:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Summary:
  28:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  Saves the current user configuration of the component.
  29:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  
  30:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
  32:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
  33:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Return: 
  34:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
  35:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
  36:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Global variables:
  37:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  PWM_1_backup:  Variables of this global structure are modified to 
  38:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  store the values of non retention configuration registers when Sleep() API is 
  39:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  called.
  40:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
  41:.\Generated_Source\PSoC5/PWM_1_PM.c **** *******************************************************************************/
  42:.\Generated_Source\PSoC5/PWM_1_PM.c **** void PWM_1_SaveConfig(void) 
  43:.\Generated_Source\PSoC5/PWM_1_PM.c **** {
  36              		.loc 1 43 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_offset 14, -4
  45              		.cfi_offset 7, -8
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  44:.\Generated_Source\PSoC5/PWM_1_PM.c ****     
  45:.\Generated_Source\PSoC5/PWM_1_PM.c ****     #if(!PWM_1_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #if (CY_UDB_V0)
  47:.\Generated_Source\PSoC5/PWM_1_PM.c ****             PWM_1_backup.PWMUdb = PWM_1_ReadCounter();
  48:.\Generated_Source\PSoC5/PWM_1_PM.c ****             PWM_1_backup.PWMPeriod = PWM_1_ReadPeriod();
  49:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if (PWM_1_UseStatus)
  50:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.InterruptMaskValue = PWM_1_STATUS_MASK;
  51:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (PWM_1_UseStatus) */
  52:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
  53:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if(PWM_1_UseOneCompareMode)
  54:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMCompareValue = PWM_1_ReadCompare();
  55:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #else
  56:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMCompareValue1 = PWM_1_ReadCompare1();
  57:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMCompareValue2 = PWM_1_ReadCompare2();
  58:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (PWM_1_UseOneCompareMode) */
  59:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
  60:.\Generated_Source\PSoC5/PWM_1_PM.c ****            #if(PWM_1_DeadBandUsed)
  61:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMdeadBandValue = PWM_1_ReadDeadTime();
  62:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (PWM_1_DeadBandUsed) */
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 3


  63:.\Generated_Source\PSoC5/PWM_1_PM.c ****           
  64:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if ( PWM_1_KillModeMinTime)
  65:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMKillCounterPeriod = PWM_1_ReadKillTime();
  66:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* ( PWM_1_KillModeMinTime) */
  67:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #endif /* (CY_UDB_V0) */
  68:.\Generated_Source\PSoC5/PWM_1_PM.c ****         
  69:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #if (CY_UDB_V1)
  70:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if(!PWM_1_PWMModeIsCenterAligned)
  71:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMPeriod = PWM_1_ReadPeriod();
  48              		.loc 1 71 0
  49 0004 FFF7FEFF 		bl	PWM_1_ReadPeriod
  50 0008 0346     		mov	r3, r0
  51 000a 1A46     		mov	r2, r3
  52 000c 40F20003 		movw	r3, #:lower16:PWM_1_backup
  53 0010 C0F20003 		movt	r3, #:upper16:PWM_1_backup
  54 0014 9A70     		strb	r2, [r3, #2]
  72:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (!PWM_1_PWMModeIsCenterAligned) */
  73:.\Generated_Source\PSoC5/PWM_1_PM.c ****             PWM_1_backup.PWMUdb = PWM_1_ReadCounter();
  55              		.loc 1 73 0
  56 0016 FFF7FEFF 		bl	PWM_1_ReadCounter
  57 001a 0346     		mov	r3, r0
  58 001c 1A46     		mov	r2, r3
  59 001e 40F20003 		movw	r3, #:lower16:PWM_1_backup
  60 0022 C0F20003 		movt	r3, #:upper16:PWM_1_backup
  61 0026 5A70     		strb	r2, [r3, #1]
  74:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if (PWM_1_UseStatus)
  75:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.InterruptMaskValue = PWM_1_STATUS_MASK;
  62              		.loc 1 75 0
  63 0028 46F28843 		movw	r3, #:lower16:1073767560
  64 002c C4F20003 		movt	r3, #:upper16:1073767560
  65 0030 1B78     		ldrb	r3, [r3, #0]
  66 0032 DAB2     		uxtb	r2, r3
  67 0034 40F20003 		movw	r3, #:lower16:PWM_1_backup
  68 0038 C0F20003 		movt	r3, #:upper16:PWM_1_backup
  69 003c DA70     		strb	r2, [r3, #3]
  76:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (PWM_1_UseStatus) */
  77:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
  78:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if(PWM_1_DeadBandMode == PWM_1__B_PWM__DBM_256_CLOCKS || \
  79:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_DeadBandMode == PWM_1__B_PWM__DBM_2_4_CLOCKS)
  80:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_backup.PWMdeadBandValue = PWM_1_ReadDeadTime();
  81:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /*  deadband count is either 2-4 clocks or 256 clocks */
  82:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
  83:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if(PWM_1_KillModeMinTime)
  84:.\Generated_Source\PSoC5/PWM_1_PM.c ****                  PWM_1_backup.PWMKillCounterPeriod = PWM_1_ReadKillTime();
  85:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (PWM_1_KillModeMinTime) */
  86:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #endif /* (CY_UDB_V1) */
  87:.\Generated_Source\PSoC5/PWM_1_PM.c ****         
  88:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #if(PWM_1_UseControl)
  89:.\Generated_Source\PSoC5/PWM_1_PM.c ****             PWM_1_backup.PWMControlRegister = PWM_1_ReadControlRegister();
  70              		.loc 1 89 0
  71 003e FFF7FEFF 		bl	PWM_1_ReadControlRegister
  72 0042 0346     		mov	r3, r0
  73 0044 1A46     		mov	r2, r3
  74 0046 40F20003 		movw	r3, #:lower16:PWM_1_backup
  75 004a C0F20003 		movt	r3, #:upper16:PWM_1_backup
  76 004e 1A71     		strb	r2, [r3, #4]
  90:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #endif /* (PWM_1_UseControl) */
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 4


  91:.\Generated_Source\PSoC5/PWM_1_PM.c ****     #endif  /* (!PWM_1_UsingFixedFunction) */
  92:.\Generated_Source\PSoC5/PWM_1_PM.c **** }
  77              		.loc 1 92 0
  78 0050 80BD     		pop	{r7, pc}
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	PWM_1_SaveConfig, .-PWM_1_SaveConfig
  82 0052 00BF     		.section	.text.PWM_1_RestoreConfig,"ax",%progbits
  83              		.align	2
  84              		.global	PWM_1_RestoreConfig
  85              		.thumb
  86              		.thumb_func
  87              		.type	PWM_1_RestoreConfig, %function
  88              	PWM_1_RestoreConfig:
  89              	.LFB1:
  93:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
  94:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
  95:.\Generated_Source\PSoC5/PWM_1_PM.c **** /*******************************************************************************
  96:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Function Name: PWM_1_RestoreConfig
  97:.\Generated_Source\PSoC5/PWM_1_PM.c **** ********************************************************************************
  98:.\Generated_Source\PSoC5/PWM_1_PM.c **** * 
  99:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Summary:
 100:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  Restores the current user configuration of the component.
 101:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 102:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Parameters:  
 103:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
 104:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 105:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Return: 
 106:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
 107:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 108:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Global variables:
 109:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  PWM_1_backup:  Variables of this global structure are used to  
 110:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  restore the values of non retention registers on wakeup from sleep mode.
 111:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 112:.\Generated_Source\PSoC5/PWM_1_PM.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC5/PWM_1_PM.c **** void PWM_1_RestoreConfig(void) 
 114:.\Generated_Source\PSoC5/PWM_1_PM.c **** {
  90              		.loc 1 114 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97 0002 00AF     		add	r7, sp, #0
  98              		.cfi_offset 14, -4
  99              		.cfi_offset 7, -8
 100              	.LCFI3:
 101              		.cfi_def_cfa_register 7
 115:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #if(!PWM_1_UsingFixedFunction)
 116:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if (CY_UDB_V0)
 117:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 /* Interrupt State Backup for Critical Region*/
 118:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 uint8 PWM_1_interruptState;
 119:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 /* Enter Critical Region*/
 120:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_interruptState = CyEnterCriticalSection();
 121:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if (PWM_1_UseStatus)
 122:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 5


 123:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 124:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     
 125:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_STATUS_MASK = PWM_1_backup.InterruptMaskValue;
 126:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* (PWM_1_UseStatus) */
 127:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 
 128:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if (PWM_1_Resolution == 8)
 129:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     /* Set FIFO 0 to 1 byte register for period*/
 130:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #else /* (PWM_1_Resolution == 16)*/
 132:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     /* Set FIFO 0 to 1 byte register for period */
 133:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 134:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 135:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* (PWM_1_Resolution == 8) */
 136:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 /* Exit Critical Region*/
 137:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 CyExitCriticalSection(PWM_1_interruptState);
 138:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 
 139:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_WriteCounter(PWM_1_backup.PWMUdb);
 140:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_WritePeriod(PWM_1_backup.PWMPeriod);
 141:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 
 142:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if(PWM_1_UseOneCompareMode)
 143:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteCompare(PWM_1_backup.PWMCompareValue);
 144:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #else
 145:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteCompare1(PWM_1_backup.PWMCompareValue1);
 146:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteCompare2(PWM_1_backup.PWMCompareValue2);
 147:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* (PWM_1_UseOneCompareMode) */
 148:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 
 149:.\Generated_Source\PSoC5/PWM_1_PM.c ****                #if(PWM_1_DeadBandMode == PWM_1__B_PWM__DBM_256_CLOCKS || \
 150:.\Generated_Source\PSoC5/PWM_1_PM.c ****                    PWM_1_DeadBandMode == PWM_1__B_PWM__DBM_2_4_CLOCKS)
 151:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteDeadTime(PWM_1_backup.PWMdeadBandValue);
 152:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 153:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
 154:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if ( PWM_1_KillModeMinTime)
 155:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteKillTime(PWM_1_backup.PWMKillCounterPeriod);
 156:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* ( PWM_1_KillModeMinTime) */
 157:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (CY_UDB_V0) */
 158:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
 159:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if (CY_UDB_V1)
 160:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if(!PWM_1_PWMModeIsCenterAligned)
 161:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WritePeriod(PWM_1_backup.PWMPeriod);
 102              		.loc 1 161 0
 103 0004 40F20003 		movw	r3, #:lower16:PWM_1_backup
 104 0008 C0F20003 		movt	r3, #:upper16:PWM_1_backup
 105 000c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 106 000e 1846     		mov	r0, r3
 107 0010 FFF7FEFF 		bl	PWM_1_WritePeriod
 162:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* (!PWM_1_PWMModeIsCenterAligned) */
 163:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_WriteCounter(PWM_1_backup.PWMUdb);
 108              		.loc 1 163 0
 109 0014 40F20003 		movw	r3, #:lower16:PWM_1_backup
 110 0018 C0F20003 		movt	r3, #:upper16:PWM_1_backup
 111 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 112 001e 1846     		mov	r0, r3
 113 0020 FFF7FEFF 		bl	PWM_1_WriteCounter
 164:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if (PWM_1_UseStatus)
 165:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_STATUS_MASK = PWM_1_backup.InterruptMaskValue;
 114              		.loc 1 165 0
 115 0024 46F28843 		movw	r3, #:lower16:1073767560
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 6


 116 0028 C4F20003 		movt	r3, #:upper16:1073767560
 117 002c 40F20002 		movw	r2, #:lower16:PWM_1_backup
 118 0030 C0F20002 		movt	r2, #:upper16:PWM_1_backup
 119 0034 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 120 0036 1A70     		strb	r2, [r3, #0]
 166:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* (PWM_1_UseStatus) */
 167:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 
 168:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if(PWM_1_DeadBandMode == PWM_1__B_PWM__DBM_256_CLOCKS || \
 169:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_DeadBandMode == PWM_1__B_PWM__DBM_2_4_CLOCKS)
 170:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteDeadTime(PWM_1_backup.PWMdeadBandValue);
 171:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 172:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 
 173:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #if(PWM_1_KillModeMinTime)
 174:.\Generated_Source\PSoC5/PWM_1_PM.c ****                     PWM_1_WriteKillTime(PWM_1_backup.PWMKillCounterPeriod);
 175:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 #endif /* (PWM_1_KillModeMinTime) */
 176:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (CY_UDB_V1) */
 177:.\Generated_Source\PSoC5/PWM_1_PM.c ****             
 178:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #if(PWM_1_UseControl)
 179:.\Generated_Source\PSoC5/PWM_1_PM.c ****                 PWM_1_WriteControlRegister(PWM_1_backup.PWMControlRegister); 
 121              		.loc 1 179 0
 122 0038 40F20003 		movw	r3, #:lower16:PWM_1_backup
 123 003c C0F20003 		movt	r3, #:upper16:PWM_1_backup
 124 0040 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 125 0042 1846     		mov	r0, r3
 126 0044 FFF7FEFF 		bl	PWM_1_WriteControlRegister
 180:.\Generated_Source\PSoC5/PWM_1_PM.c ****             #endif /* (PWM_1_UseControl) */
 181:.\Generated_Source\PSoC5/PWM_1_PM.c ****         #endif  /* (!PWM_1_UsingFixedFunction) */
 182:.\Generated_Source\PSoC5/PWM_1_PM.c ****     }
 127              		.loc 1 182 0
 128 0048 80BD     		pop	{r7, pc}
 129              		.cfi_endproc
 130              	.LFE1:
 131              		.size	PWM_1_RestoreConfig, .-PWM_1_RestoreConfig
 132 004a 00BF     		.section	.text.PWM_1_Sleep,"ax",%progbits
 133              		.align	2
 134              		.global	PWM_1_Sleep
 135              		.thumb
 136              		.thumb_func
 137              		.type	PWM_1_Sleep, %function
 138              	PWM_1_Sleep:
 139              	.LFB2:
 183:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
 184:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
 185:.\Generated_Source\PSoC5/PWM_1_PM.c **** /*******************************************************************************
 186:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Function Name: PWM_1_Sleep
 187:.\Generated_Source\PSoC5/PWM_1_PM.c **** ********************************************************************************
 188:.\Generated_Source\PSoC5/PWM_1_PM.c **** * 
 189:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Summary:
 190:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  Disables block's operation and saves the user configuration. Should be called 
 191:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  just prior to entering sleep.
 192:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  
 193:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Parameters:  
 194:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
 195:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 196:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Return: 
 197:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
 198:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 7


 199:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Global variables:
 200:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  PWM_1_backup.PWMEnableState:  Is modified depending on the enable 
 201:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  state of the block before entering sleep mode.
 202:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 203:.\Generated_Source\PSoC5/PWM_1_PM.c **** *******************************************************************************/
 204:.\Generated_Source\PSoC5/PWM_1_PM.c **** void PWM_1_Sleep(void) 
 205:.\Generated_Source\PSoC5/PWM_1_PM.c **** {
 140              		.loc 1 205 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 0000 80B5     		push	{r7, lr}
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 8
 147 0002 00AF     		add	r7, sp, #0
 148              		.cfi_offset 14, -4
 149              		.cfi_offset 7, -8
 150              	.LCFI5:
 151              		.cfi_def_cfa_register 7
 206:.\Generated_Source\PSoC5/PWM_1_PM.c ****     #if(PWM_1_UseControl)
 207:.\Generated_Source\PSoC5/PWM_1_PM.c ****         if(PWM_1_CTRL_ENABLE == (PWM_1_CONTROL & PWM_1_CTRL_ENABLE))
 152              		.loc 1 207 0
 153 0004 46F27A43 		movw	r3, #:lower16:1073767546
 154 0008 C4F20003 		movt	r3, #:upper16:1073767546
 155 000c 1B78     		ldrb	r3, [r3, #0]
 156 000e DBB2     		uxtb	r3, r3
 157 0010 5BB2     		sxtb	r3, r3
 158 0012 002B     		cmp	r3, #0
 159 0014 07DA     		bge	.L6
 208:.\Generated_Source\PSoC5/PWM_1_PM.c ****         {
 209:.\Generated_Source\PSoC5/PWM_1_PM.c ****             /*Component is enabled */
 210:.\Generated_Source\PSoC5/PWM_1_PM.c ****             PWM_1_backup.PWMEnableState = 1u;
 160              		.loc 1 210 0
 161 0016 40F20003 		movw	r3, #:lower16:PWM_1_backup
 162 001a C0F20003 		movt	r3, #:upper16:PWM_1_backup
 163 001e 4FF00102 		mov	r2, #1
 164 0022 1A70     		strb	r2, [r3, #0]
 165 0024 06E0     		b	.L7
 166              	.L6:
 211:.\Generated_Source\PSoC5/PWM_1_PM.c ****         }
 212:.\Generated_Source\PSoC5/PWM_1_PM.c ****         else
 213:.\Generated_Source\PSoC5/PWM_1_PM.c ****         {
 214:.\Generated_Source\PSoC5/PWM_1_PM.c ****             /* Component is disabled */
 215:.\Generated_Source\PSoC5/PWM_1_PM.c ****             PWM_1_backup.PWMEnableState = 0u;
 167              		.loc 1 215 0
 168 0026 40F20003 		movw	r3, #:lower16:PWM_1_backup
 169 002a C0F20003 		movt	r3, #:upper16:PWM_1_backup
 170 002e 4FF00002 		mov	r2, #0
 171 0032 1A70     		strb	r2, [r3, #0]
 172              	.L7:
 216:.\Generated_Source\PSoC5/PWM_1_PM.c ****         }
 217:.\Generated_Source\PSoC5/PWM_1_PM.c ****     #endif /* (PWM_1_UseControl) */
 218:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
 219:.\Generated_Source\PSoC5/PWM_1_PM.c ****     /* Stop component */
 220:.\Generated_Source\PSoC5/PWM_1_PM.c ****     PWM_1_Stop();
 173              		.loc 1 220 0
 174 0034 FFF7FEFF 		bl	PWM_1_Stop
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 8


 221:.\Generated_Source\PSoC5/PWM_1_PM.c ****     
 222:.\Generated_Source\PSoC5/PWM_1_PM.c ****     /* Save registers configuration */
 223:.\Generated_Source\PSoC5/PWM_1_PM.c ****     PWM_1_SaveConfig();
 175              		.loc 1 223 0
 176 0038 FFF7FEFF 		bl	PWM_1_SaveConfig
 224:.\Generated_Source\PSoC5/PWM_1_PM.c **** }
 177              		.loc 1 224 0
 178 003c 80BD     		pop	{r7, pc}
 179              		.cfi_endproc
 180              	.LFE2:
 181              		.size	PWM_1_Sleep, .-PWM_1_Sleep
 182 003e 00BF     		.section	.text.PWM_1_Wakeup,"ax",%progbits
 183              		.align	2
 184              		.global	PWM_1_Wakeup
 185              		.thumb
 186              		.thumb_func
 187              		.type	PWM_1_Wakeup, %function
 188              	PWM_1_Wakeup:
 189              	.LFB3:
 225:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
 226:.\Generated_Source\PSoC5/PWM_1_PM.c **** 
 227:.\Generated_Source\PSoC5/PWM_1_PM.c **** /*******************************************************************************
 228:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Function Name: PWM_1_Wakeup
 229:.\Generated_Source\PSoC5/PWM_1_PM.c **** ********************************************************************************
 230:.\Generated_Source\PSoC5/PWM_1_PM.c **** * 
 231:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Summary:
 232:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  Restores and enables the user configuration. Should be called just after 
 233:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  awaking from sleep.
 234:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  
 235:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Parameters:  
 236:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
 237:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 238:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Return: 
 239:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  None
 240:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 241:.\Generated_Source\PSoC5/PWM_1_PM.c **** * Global variables:
 242:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  PWM_1_backup.pwmEnable:  Is used to restore the enable state of 
 243:.\Generated_Source\PSoC5/PWM_1_PM.c **** *  block on wakeup from sleep mode.
 244:.\Generated_Source\PSoC5/PWM_1_PM.c **** *
 245:.\Generated_Source\PSoC5/PWM_1_PM.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/PWM_1_PM.c **** void PWM_1_Wakeup(void) 
 247:.\Generated_Source\PSoC5/PWM_1_PM.c **** {
 190              		.loc 1 247 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              	.LCFI6:
 196              		.cfi_def_cfa_offset 8
 197 0002 00AF     		add	r7, sp, #0
 198              		.cfi_offset 14, -4
 199              		.cfi_offset 7, -8
 200              	.LCFI7:
 201              		.cfi_def_cfa_register 7
 248:.\Generated_Source\PSoC5/PWM_1_PM.c ****      /* Restore registers values */
 249:.\Generated_Source\PSoC5/PWM_1_PM.c ****     PWM_1_RestoreConfig();
 202              		.loc 1 249 0
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 9


 203 0004 FFF7FEFF 		bl	PWM_1_RestoreConfig
 250:.\Generated_Source\PSoC5/PWM_1_PM.c ****     
 251:.\Generated_Source\PSoC5/PWM_1_PM.c ****     if(PWM_1_backup.PWMEnableState != 0u)
 204              		.loc 1 251 0
 205 0008 40F20003 		movw	r3, #:lower16:PWM_1_backup
 206 000c C0F20003 		movt	r3, #:upper16:PWM_1_backup
 207 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 208 0012 002B     		cmp	r3, #0
 209 0014 01D0     		beq	.L11
 252:.\Generated_Source\PSoC5/PWM_1_PM.c ****     {
 253:.\Generated_Source\PSoC5/PWM_1_PM.c ****         /* Enable component's operation */
 254:.\Generated_Source\PSoC5/PWM_1_PM.c ****         PWM_1_Enable();
 210              		.loc 1 254 0
 211 0016 FFF7FEFF 		bl	PWM_1_Enable
 212              	.L11:
 255:.\Generated_Source\PSoC5/PWM_1_PM.c ****     } /* Do nothing if component's block was disabled before */
 256:.\Generated_Source\PSoC5/PWM_1_PM.c ****     
 257:.\Generated_Source\PSoC5/PWM_1_PM.c **** }
 213              		.loc 1 257 0
 214 001a 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE3:
 217              		.size	PWM_1_Wakeup, .-PWM_1_Wakeup
 218              		.text
 219              	.Letext0:
 220              		.section	.debug_loc,"",%progbits
 221              	.Ldebug_loc0:
 222              	.LLST0:
 223 0000 00000000 		.4byte	.LFB0
 224 0004 02000000 		.4byte	.LCFI0
 225 0008 0100     		.2byte	0x1
 226 000a 5D       		.byte	0x5d
 227 000b 02000000 		.4byte	.LCFI0
 228 000f 04000000 		.4byte	.LCFI1
 229 0013 0200     		.2byte	0x2
 230 0015 7D       		.byte	0x7d
 231 0016 08       		.sleb128 8
 232 0017 04000000 		.4byte	.LCFI1
 233 001b 52000000 		.4byte	.LFE0
 234 001f 0200     		.2byte	0x2
 235 0021 77       		.byte	0x77
 236 0022 08       		.sleb128 8
 237 0023 00000000 		.4byte	0x0
 238 0027 00000000 		.4byte	0x0
 239              	.LLST1:
 240 002b 00000000 		.4byte	.LFB1
 241 002f 02000000 		.4byte	.LCFI2
 242 0033 0100     		.2byte	0x1
 243 0035 5D       		.byte	0x5d
 244 0036 02000000 		.4byte	.LCFI2
 245 003a 04000000 		.4byte	.LCFI3
 246 003e 0200     		.2byte	0x2
 247 0040 7D       		.byte	0x7d
 248 0041 08       		.sleb128 8
 249 0042 04000000 		.4byte	.LCFI3
 250 0046 4A000000 		.4byte	.LFE1
 251 004a 0200     		.2byte	0x2
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 10


 252 004c 77       		.byte	0x77
 253 004d 08       		.sleb128 8
 254 004e 00000000 		.4byte	0x0
 255 0052 00000000 		.4byte	0x0
 256              	.LLST2:
 257 0056 00000000 		.4byte	.LFB2
 258 005a 02000000 		.4byte	.LCFI4
 259 005e 0100     		.2byte	0x1
 260 0060 5D       		.byte	0x5d
 261 0061 02000000 		.4byte	.LCFI4
 262 0065 04000000 		.4byte	.LCFI5
 263 0069 0200     		.2byte	0x2
 264 006b 7D       		.byte	0x7d
 265 006c 08       		.sleb128 8
 266 006d 04000000 		.4byte	.LCFI5
 267 0071 3E000000 		.4byte	.LFE2
 268 0075 0200     		.2byte	0x2
 269 0077 77       		.byte	0x77
 270 0078 08       		.sleb128 8
 271 0079 00000000 		.4byte	0x0
 272 007d 00000000 		.4byte	0x0
 273              	.LLST3:
 274 0081 00000000 		.4byte	.LFB3
 275 0085 02000000 		.4byte	.LCFI6
 276 0089 0100     		.2byte	0x1
 277 008b 5D       		.byte	0x5d
 278 008c 02000000 		.4byte	.LCFI6
 279 0090 04000000 		.4byte	.LCFI7
 280 0094 0200     		.2byte	0x2
 281 0096 7D       		.byte	0x7d
 282 0097 08       		.sleb128 8
 283 0098 04000000 		.4byte	.LCFI7
 284 009c 1C000000 		.4byte	.LFE3
 285 00a0 0200     		.2byte	0x2
 286 00a2 77       		.byte	0x77
 287 00a3 08       		.sleb128 8
 288 00a4 00000000 		.4byte	0x0
 289 00a8 00000000 		.4byte	0x0
 290              		.file 2 ".\\Generated_Source\\PSoC5\\/PWM_1.h"
 291              		.file 3 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 292              		.section	.debug_info
 293 0000 4E010000 		.4byte	0x14e
 294 0004 0200     		.2byte	0x2
 295 0006 00000000 		.4byte	.Ldebug_abbrev0
 296 000a 04       		.byte	0x4
 297 000b 01       		.uleb128 0x1
 298 000c EA000000 		.4byte	.LASF23
 299 0010 01       		.byte	0x1
 300 0011 C6000000 		.4byte	.LASF24
 301 0015 2A000000 		.4byte	.LASF25
 302 0019 00000000 		.4byte	0x0
 303 001d 00000000 		.4byte	0x0
 304 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 305 0025 00000000 		.4byte	.Ldebug_line0
 306 0029 02       		.uleb128 0x2
 307 002a 01       		.byte	0x1
 308 002b 06       		.byte	0x6
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 11


 309 002c 6D010000 		.4byte	.LASF0
 310 0030 02       		.uleb128 0x2
 311 0031 01       		.byte	0x1
 312 0032 08       		.byte	0x8
 313 0033 0A010000 		.4byte	.LASF1
 314 0037 02       		.uleb128 0x2
 315 0038 02       		.byte	0x2
 316 0039 05       		.byte	0x5
 317 003a 98010000 		.4byte	.LASF2
 318 003e 02       		.uleb128 0x2
 319 003f 02       		.byte	0x2
 320 0040 07       		.byte	0x7
 321 0041 5A010000 		.4byte	.LASF3
 322 0045 02       		.uleb128 0x2
 323 0046 04       		.byte	0x4
 324 0047 05       		.byte	0x5
 325 0048 4A010000 		.4byte	.LASF4
 326 004c 02       		.uleb128 0x2
 327 004d 04       		.byte	0x4
 328 004e 07       		.byte	0x7
 329 004f 90000000 		.4byte	.LASF5
 330 0053 02       		.uleb128 0x2
 331 0054 08       		.byte	0x8
 332 0055 05       		.byte	0x5
 333 0056 00000000 		.4byte	.LASF6
 334 005a 02       		.uleb128 0x2
 335 005b 08       		.byte	0x8
 336 005c 07       		.byte	0x7
 337 005d A2000000 		.4byte	.LASF7
 338 0061 03       		.uleb128 0x3
 339 0062 04       		.byte	0x4
 340 0063 05       		.byte	0x5
 341 0064 696E7400 		.ascii	"int\000"
 342 0068 02       		.uleb128 0x2
 343 0069 04       		.byte	0x4
 344 006a 07       		.byte	0x7
 345 006b 0E000000 		.4byte	.LASF8
 346 006f 04       		.uleb128 0x4
 347 0070 8A000000 		.4byte	.LASF17
 348 0074 03       		.byte	0x3
 349 0075 4C       		.byte	0x4c
 350 0076 30000000 		.4byte	0x30
 351 007a 02       		.uleb128 0x2
 352 007b 04       		.byte	0x4
 353 007c 04       		.byte	0x4
 354 007d 86010000 		.4byte	.LASF9
 355 0081 02       		.uleb128 0x2
 356 0082 08       		.byte	0x8
 357 0083 04       		.byte	0x4
 358 0084 43010000 		.4byte	.LASF10
 359 0088 02       		.uleb128 0x2
 360 0089 01       		.byte	0x1
 361 008a 08       		.byte	0x8
 362 008b 18010000 		.4byte	.LASF11
 363 008f 05       		.uleb128 0x5
 364 0090 04       		.byte	0x4
 365 0091 07       		.byte	0x7
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 12


 366 0092 06       		.uleb128 0x6
 367 0093 05       		.byte	0x5
 368 0094 02       		.byte	0x2
 369 0095 69       		.byte	0x69
 370 0096 E1000000 		.4byte	0xe1
 371 009a 07       		.uleb128 0x7
 372 009b 1B000000 		.4byte	.LASF12
 373 009f 02       		.byte	0x2
 374 00a0 6B       		.byte	0x6b
 375 00a1 6F000000 		.4byte	0x6f
 376 00a5 02       		.byte	0x2
 377 00a6 23       		.byte	0x23
 378 00a7 00       		.uleb128 0x0
 379 00a8 07       		.uleb128 0x7
 380 00a9 53010000 		.4byte	.LASF13
 381 00ad 02       		.byte	0x2
 382 00ae 89       		.byte	0x89
 383 00af 6F000000 		.4byte	0x6f
 384 00b3 02       		.byte	0x2
 385 00b4 23       		.byte	0x23
 386 00b5 01       		.uleb128 0x1
 387 00b6 07       		.uleb128 0x7
 388 00b7 B5010000 		.4byte	.LASF14
 389 00bb 02       		.byte	0x2
 390 00bc 8B       		.byte	0x8b
 391 00bd 6F000000 		.4byte	0x6f
 392 00c1 02       		.byte	0x2
 393 00c2 23       		.byte	0x23
 394 00c3 02       		.uleb128 0x2
 395 00c4 07       		.uleb128 0x7
 396 00c5 A2010000 		.4byte	.LASF15
 397 00c9 02       		.byte	0x2
 398 00ca 8E       		.byte	0x8e
 399 00cb 6F000000 		.4byte	0x6f
 400 00cf 02       		.byte	0x2
 401 00d0 23       		.byte	0x23
 402 00d1 03       		.uleb128 0x3
 403 00d2 07       		.uleb128 0x7
 404 00d3 1D010000 		.4byte	.LASF16
 405 00d7 02       		.byte	0x2
 406 00d8 9F       		.byte	0x9f
 407 00d9 6F000000 		.4byte	0x6f
 408 00dd 02       		.byte	0x2
 409 00de 23       		.byte	0x23
 410 00df 04       		.uleb128 0x4
 411 00e0 00       		.byte	0x0
 412 00e1 04       		.uleb128 0x4
 413 00e2 30010000 		.4byte	.LASF18
 414 00e6 02       		.byte	0x2
 415 00e7 A4       		.byte	0xa4
 416 00e8 92000000 		.4byte	0x92
 417 00ec 08       		.uleb128 0x8
 418 00ed 01       		.byte	0x1
 419 00ee 79000000 		.4byte	.LASF19
 420 00f2 01       		.byte	0x1
 421 00f3 2A       		.byte	0x2a
 422 00f4 01       		.byte	0x1
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 13


 423 00f5 00000000 		.4byte	.LFB0
 424 00f9 52000000 		.4byte	.LFE0
 425 00fd 00000000 		.4byte	.LLST0
 426 0101 08       		.uleb128 0x8
 427 0102 01       		.byte	0x1
 428 0103 F6000000 		.4byte	.LASF20
 429 0107 01       		.byte	0x1
 430 0108 71       		.byte	0x71
 431 0109 01       		.byte	0x1
 432 010a 00000000 		.4byte	.LFB1
 433 010e 4A000000 		.4byte	.LFE1
 434 0112 2B000000 		.4byte	.LLST1
 435 0116 08       		.uleb128 0x8
 436 0117 01       		.byte	0x1
 437 0118 8C010000 		.4byte	.LASF21
 438 011c 01       		.byte	0x1
 439 011d CC       		.byte	0xcc
 440 011e 01       		.byte	0x1
 441 011f 00000000 		.4byte	.LFB2
 442 0123 3E000000 		.4byte	.LFE2
 443 0127 56000000 		.4byte	.LLST2
 444 012b 08       		.uleb128 0x8
 445 012c 01       		.byte	0x1
 446 012d 79010000 		.4byte	.LASF22
 447 0131 01       		.byte	0x1
 448 0132 F6       		.byte	0xf6
 449 0133 01       		.byte	0x1
 450 0134 00000000 		.4byte	.LFB3
 451 0138 1C000000 		.4byte	.LFE3
 452 013c 81000000 		.4byte	.LLST3
 453 0140 09       		.uleb128 0x9
 454 0141 B9000000 		.4byte	.LASF26
 455 0145 01       		.byte	0x1
 456 0146 14       		.byte	0x14
 457 0147 E1000000 		.4byte	0xe1
 458 014b 05       		.byte	0x5
 459 014c 03       		.byte	0x3
 460 014d 00000000 		.4byte	PWM_1_backup
 461 0151 00       		.byte	0x0
 462              		.section	.debug_abbrev
 463 0000 01       		.uleb128 0x1
 464 0001 11       		.uleb128 0x11
 465 0002 01       		.byte	0x1
 466 0003 25       		.uleb128 0x25
 467 0004 0E       		.uleb128 0xe
 468 0005 13       		.uleb128 0x13
 469 0006 0B       		.uleb128 0xb
 470 0007 03       		.uleb128 0x3
 471 0008 0E       		.uleb128 0xe
 472 0009 1B       		.uleb128 0x1b
 473 000a 0E       		.uleb128 0xe
 474 000b 11       		.uleb128 0x11
 475 000c 01       		.uleb128 0x1
 476 000d 52       		.uleb128 0x52
 477 000e 01       		.uleb128 0x1
 478 000f 55       		.uleb128 0x55
 479 0010 06       		.uleb128 0x6
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 14


 480 0011 10       		.uleb128 0x10
 481 0012 06       		.uleb128 0x6
 482 0013 00       		.byte	0x0
 483 0014 00       		.byte	0x0
 484 0015 02       		.uleb128 0x2
 485 0016 24       		.uleb128 0x24
 486 0017 00       		.byte	0x0
 487 0018 0B       		.uleb128 0xb
 488 0019 0B       		.uleb128 0xb
 489 001a 3E       		.uleb128 0x3e
 490 001b 0B       		.uleb128 0xb
 491 001c 03       		.uleb128 0x3
 492 001d 0E       		.uleb128 0xe
 493 001e 00       		.byte	0x0
 494 001f 00       		.byte	0x0
 495 0020 03       		.uleb128 0x3
 496 0021 24       		.uleb128 0x24
 497 0022 00       		.byte	0x0
 498 0023 0B       		.uleb128 0xb
 499 0024 0B       		.uleb128 0xb
 500 0025 3E       		.uleb128 0x3e
 501 0026 0B       		.uleb128 0xb
 502 0027 03       		.uleb128 0x3
 503 0028 08       		.uleb128 0x8
 504 0029 00       		.byte	0x0
 505 002a 00       		.byte	0x0
 506 002b 04       		.uleb128 0x4
 507 002c 16       		.uleb128 0x16
 508 002d 00       		.byte	0x0
 509 002e 03       		.uleb128 0x3
 510 002f 0E       		.uleb128 0xe
 511 0030 3A       		.uleb128 0x3a
 512 0031 0B       		.uleb128 0xb
 513 0032 3B       		.uleb128 0x3b
 514 0033 0B       		.uleb128 0xb
 515 0034 49       		.uleb128 0x49
 516 0035 13       		.uleb128 0x13
 517 0036 00       		.byte	0x0
 518 0037 00       		.byte	0x0
 519 0038 05       		.uleb128 0x5
 520 0039 24       		.uleb128 0x24
 521 003a 00       		.byte	0x0
 522 003b 0B       		.uleb128 0xb
 523 003c 0B       		.uleb128 0xb
 524 003d 3E       		.uleb128 0x3e
 525 003e 0B       		.uleb128 0xb
 526 003f 00       		.byte	0x0
 527 0040 00       		.byte	0x0
 528 0041 06       		.uleb128 0x6
 529 0042 13       		.uleb128 0x13
 530 0043 01       		.byte	0x1
 531 0044 0B       		.uleb128 0xb
 532 0045 0B       		.uleb128 0xb
 533 0046 3A       		.uleb128 0x3a
 534 0047 0B       		.uleb128 0xb
 535 0048 3B       		.uleb128 0x3b
 536 0049 0B       		.uleb128 0xb
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 15


 537 004a 01       		.uleb128 0x1
 538 004b 13       		.uleb128 0x13
 539 004c 00       		.byte	0x0
 540 004d 00       		.byte	0x0
 541 004e 07       		.uleb128 0x7
 542 004f 0D       		.uleb128 0xd
 543 0050 00       		.byte	0x0
 544 0051 03       		.uleb128 0x3
 545 0052 0E       		.uleb128 0xe
 546 0053 3A       		.uleb128 0x3a
 547 0054 0B       		.uleb128 0xb
 548 0055 3B       		.uleb128 0x3b
 549 0056 0B       		.uleb128 0xb
 550 0057 49       		.uleb128 0x49
 551 0058 13       		.uleb128 0x13
 552 0059 38       		.uleb128 0x38
 553 005a 0A       		.uleb128 0xa
 554 005b 00       		.byte	0x0
 555 005c 00       		.byte	0x0
 556 005d 08       		.uleb128 0x8
 557 005e 2E       		.uleb128 0x2e
 558 005f 00       		.byte	0x0
 559 0060 3F       		.uleb128 0x3f
 560 0061 0C       		.uleb128 0xc
 561 0062 03       		.uleb128 0x3
 562 0063 0E       		.uleb128 0xe
 563 0064 3A       		.uleb128 0x3a
 564 0065 0B       		.uleb128 0xb
 565 0066 3B       		.uleb128 0x3b
 566 0067 0B       		.uleb128 0xb
 567 0068 27       		.uleb128 0x27
 568 0069 0C       		.uleb128 0xc
 569 006a 11       		.uleb128 0x11
 570 006b 01       		.uleb128 0x1
 571 006c 12       		.uleb128 0x12
 572 006d 01       		.uleb128 0x1
 573 006e 40       		.uleb128 0x40
 574 006f 06       		.uleb128 0x6
 575 0070 00       		.byte	0x0
 576 0071 00       		.byte	0x0
 577 0072 09       		.uleb128 0x9
 578 0073 34       		.uleb128 0x34
 579 0074 00       		.byte	0x0
 580 0075 03       		.uleb128 0x3
 581 0076 0E       		.uleb128 0xe
 582 0077 3A       		.uleb128 0x3a
 583 0078 0B       		.uleb128 0xb
 584 0079 3B       		.uleb128 0x3b
 585 007a 0B       		.uleb128 0xb
 586 007b 49       		.uleb128 0x49
 587 007c 13       		.uleb128 0x13
 588 007d 02       		.uleb128 0x2
 589 007e 0A       		.uleb128 0xa
 590 007f 00       		.byte	0x0
 591 0080 00       		.byte	0x0
 592 0081 00       		.byte	0x0
 593              		.section	.debug_pubnames,"",%progbits
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 16


 594 0000 5C000000 		.4byte	0x5c
 595 0004 0200     		.2byte	0x2
 596 0006 00000000 		.4byte	.Ldebug_info0
 597 000a 52010000 		.4byte	0x152
 598 000e EC000000 		.4byte	0xec
 599 0012 50574D5F 		.ascii	"PWM_1_SaveConfig\000"
 599      315F5361 
 599      7665436F 
 599      6E666967 
 599      00
 600 0023 01010000 		.4byte	0x101
 601 0027 50574D5F 		.ascii	"PWM_1_RestoreConfig\000"
 601      315F5265 
 601      73746F72 
 601      65436F6E 
 601      66696700 
 602 003b 16010000 		.4byte	0x116
 603 003f 50574D5F 		.ascii	"PWM_1_Sleep\000"
 603      315F536C 
 603      65657000 
 604 004b 2B010000 		.4byte	0x12b
 605 004f 50574D5F 		.ascii	"PWM_1_Wakeup\000"
 605      315F5761 
 605      6B657570 
 605      00
 606 005c 00000000 		.4byte	0x0
 607              		.section	.debug_aranges,"",%progbits
 608 0000 34000000 		.4byte	0x34
 609 0004 0200     		.2byte	0x2
 610 0006 00000000 		.4byte	.Ldebug_info0
 611 000a 04       		.byte	0x4
 612 000b 00       		.byte	0x0
 613 000c 0000     		.2byte	0x0
 614 000e 0000     		.2byte	0x0
 615 0010 00000000 		.4byte	.LFB0
 616 0014 52000000 		.4byte	.LFE0-.LFB0
 617 0018 00000000 		.4byte	.LFB1
 618 001c 4A000000 		.4byte	.LFE1-.LFB1
 619 0020 00000000 		.4byte	.LFB2
 620 0024 3E000000 		.4byte	.LFE2-.LFB2
 621 0028 00000000 		.4byte	.LFB3
 622 002c 1C000000 		.4byte	.LFE3-.LFB3
 623 0030 00000000 		.4byte	0x0
 624 0034 00000000 		.4byte	0x0
 625              		.section	.debug_ranges,"",%progbits
 626              	.Ldebug_ranges0:
 627 0000 00000000 		.4byte	.Ltext0
 628 0004 00000000 		.4byte	.Letext0
 629 0008 00000000 		.4byte	.LFB0
 630 000c 52000000 		.4byte	.LFE0
 631 0010 00000000 		.4byte	.LFB1
 632 0014 4A000000 		.4byte	.LFE1
 633 0018 00000000 		.4byte	.LFB2
 634 001c 3E000000 		.4byte	.LFE2
 635 0020 00000000 		.4byte	.LFB3
 636 0024 1C000000 		.4byte	.LFE3
 637 0028 00000000 		.4byte	0x0
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 17


 638 002c 00000000 		.4byte	0x0
 639              		.section	.debug_str,"MS",%progbits,1
 640              	.LASF6:
 641 0000 6C6F6E67 		.ascii	"long long int\000"
 641      206C6F6E 
 641      6720696E 
 641      7400
 642              	.LASF8:
 643 000e 756E7369 		.ascii	"unsigned int\000"
 643      676E6564 
 643      20696E74 
 643      00
 644              	.LASF12:
 645 001b 50574D45 		.ascii	"PWMEnableState\000"
 645      6E61626C 
 645      65537461 
 645      746500
 646              	.LASF25:
 647 002a 433A5C55 		.ascii	"C:\\Users\\karunmj\\Documents\\GitHub\\m2m\\hardwar"
 647      73657273 
 647      5C6B6172 
 647      756E6D6A 
 647      5C446F63 
 648 0057 655C7073 		.ascii	"e\\psoc5\\PSoC_Datalogger_SMS.cydsn\000"
 648      6F63355C 
 648      50536F43 
 648      5F446174 
 648      616C6F67 
 649              	.LASF19:
 650 0079 50574D5F 		.ascii	"PWM_1_SaveConfig\000"
 650      315F5361 
 650      7665436F 
 650      6E666967 
 650      00
 651              	.LASF17:
 652 008a 75696E74 		.ascii	"uint8\000"
 652      3800
 653              	.LASF5:
 654 0090 6C6F6E67 		.ascii	"long unsigned int\000"
 654      20756E73 
 654      69676E65 
 654      6420696E 
 654      7400
 655              	.LASF7:
 656 00a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 656      206C6F6E 
 656      6720756E 
 656      7369676E 
 656      65642069 
 657              	.LASF26:
 658 00b9 50574D5F 		.ascii	"PWM_1_backup\000"
 658      315F6261 
 658      636B7570 
 658      00
 659              	.LASF24:
 660 00c6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1_PM.c\000"
 660      6E657261 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 18


 660      7465645F 
 660      536F7572 
 660      63655C50 
 661              	.LASF23:
 662 00ea 474E5520 		.ascii	"GNU C 4.4.1\000"
 662      4320342E 
 662      342E3100 
 663              	.LASF20:
 664 00f6 50574D5F 		.ascii	"PWM_1_RestoreConfig\000"
 664      315F5265 
 664      73746F72 
 664      65436F6E 
 664      66696700 
 665              	.LASF1:
 666 010a 756E7369 		.ascii	"unsigned char\000"
 666      676E6564 
 666      20636861 
 666      7200
 667              	.LASF11:
 668 0118 63686172 		.ascii	"char\000"
 668      00
 669              	.LASF16:
 670 011d 50574D43 		.ascii	"PWMControlRegister\000"
 670      6F6E7472 
 670      6F6C5265 
 670      67697374 
 670      657200
 671              	.LASF18:
 672 0130 50574D5F 		.ascii	"PWM_1_backupStruct\000"
 672      315F6261 
 672      636B7570 
 672      53747275 
 672      637400
 673              	.LASF10:
 674 0143 646F7562 		.ascii	"double\000"
 674      6C6500
 675              	.LASF4:
 676 014a 6C6F6E67 		.ascii	"long int\000"
 676      20696E74 
 676      00
 677              	.LASF13:
 678 0153 50574D55 		.ascii	"PWMUdb\000"
 678      646200
 679              	.LASF3:
 680 015a 73686F72 		.ascii	"short unsigned int\000"
 680      7420756E 
 680      7369676E 
 680      65642069 
 680      6E7400
 681              	.LASF0:
 682 016d 7369676E 		.ascii	"signed char\000"
 682      65642063 
 682      68617200 
 683              	.LASF22:
 684 0179 50574D5F 		.ascii	"PWM_1_Wakeup\000"
 684      315F5761 
 684      6B657570 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\ccjUMsIp.s 			page 19


 684      00
 685              	.LASF9:
 686 0186 666C6F61 		.ascii	"float\000"
 686      7400
 687              	.LASF21:
 688 018c 50574D5F 		.ascii	"PWM_1_Sleep\000"
 688      315F536C 
 688      65657000 
 689              	.LASF2:
 690 0198 73686F72 		.ascii	"short int\000"
 690      7420696E 
 690      7400
 691              	.LASF15:
 692 01a2 496E7465 		.ascii	"InterruptMaskValue\000"
 692      72727570 
 692      744D6173 
 692      6B56616C 
 692      756500
 693              	.LASF14:
 694 01b5 50574D50 		.ascii	"PWMPeriod\000"
 694      6572696F 
 694      6400
 695              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
