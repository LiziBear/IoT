/* ========================================
 *
 * Copyright Metronome Systems 2013
 * All Rights Reserved
 *
 * CONFIDENTIAL AND PROPRIETARY INFORMATION
 * WHICH IS THE PROPERTY OF Metronome Systems 2013
 *
 * ========================================
*/

//this is the main API file that must be inclued to work with the wireless API
// DO NOT EDIT THIS FILE TO ENSURE API FUNCTIONALITY
//==========================RTC API========================================//
#define RTC_SECOND_ALARM 0
#define RTC_MINUTE_ALARM 1
 
uint8 RTC_Process_Tasks();//golbal fn to be called by API
void  NeoRTC_Set_Repeating_Minute_Alarm(uint8 interval);    //set repeating minute alarm
void  NeoRTC_Enble_Second_Interrupt();                      //enable second interrupt
void  NeoRTC_Disable_Second_Interrupt();                    //disable second interrupt
void NeoRTC_Start(void(*RespCommand)(uint8 event));
void  NeoRTC_Sleep();
void  NeoRTC_Wakeup();

typedef struct
{
  uint8 second;
  uint8 minute;
  uint8 hour;
  uint8 day;
  uint8 weekday;
  uint8 month;
  uint16 year;
} NeoRtcTimeStruct;

NeoRtcTimeStruct NeoRTC_Read_Time();
void NeoRTC_WriteTime(NeoRtcTimeStruct neoTime);
extern uint8 moteID;

//==========================MOTE API========================================//

//TYPE defintiions
#define TYPE_MOTE_EVENT         0x0
#define TYPE_MOTE_DATA          0x1

//status defintiions
#define EVENT_HARDWARE_ERROR   0x00
#define EVENT_MOTE_OPERATIONAL 0x01

//mote states
#define STATE_MOTE_IDLE        0x0
#define STATE_MOTE_SEARCHING   0x1
#define STATE_MOTE_OPERATIONAL 0x2

//notification struct
typedef struct
{
  uint8 type;
  uint8 payload[80];
} NeoMoteNotification;


//public prototypes
uint8 Mote_Process_Tasks();//global fn to be called by API
void  Mote_Start(void(*callBack(NeoMoteNotification notif)));
uint8 Mote_Send_Packet(uint8 *packetData, uint8 len);
uint8 Mote_Hardware_Busy();
uint8 Mote_Get_State();
void Mote_Reset();
void Mote_Sleep();
void Mote_Wakeup();
void RTC_WriteTime(NeoRtcTimeStruct neoTime);
void RTC_WriteTimeUtc(uint32 utcSec);





