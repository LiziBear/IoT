ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"PWM_2.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 5F010000 		.text
  20      02005E00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	PWM_2_initVar
  24              		.bss
  25              		.type	PWM_2_initVar, %object
  26              		.size	PWM_2_initVar, 1
  27              	PWM_2_initVar:
  28 0000 00       		.space	1
  29              		.section	.text.PWM_2_Start,"ax",%progbits
  30              		.align	2
  31              		.global	PWM_2_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	PWM_2_Start, %function
  35              	PWM_2_Start:
  36              	.LFB0:
  37              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_2.c"
   1:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_2.c **** * File Name: PWM_2.c  
   3:.\Generated_Source\PSoC5/PWM_2.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/PWM_2.c **** *
   5:.\Generated_Source\PSoC5/PWM_2.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks. 
  10:.\Generated_Source\PSoC5/PWM_2.c **** *  The compare value output may be configured to be active when the present 
  11:.\Generated_Source\PSoC5/PWM_2.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_2.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_2.c **** *
  15:.\Generated_Source\PSoC5/PWM_2.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_2.c **** *
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 2


  17:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_2.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_2.c **** * You may use this file only in accordance with the license, terms, conditions, 
  20:.\Generated_Source\PSoC5/PWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  21:.\Generated_Source\PSoC5/PWM_2.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_2.c **** 
  24:.\Generated_Source\PSoC5/PWM_2.c **** #include "cytypes.h"
  25:.\Generated_Source\PSoC5/PWM_2.c **** #include "PWM_2.h"
  26:.\Generated_Source\PSoC5/PWM_2.c **** 
  27:.\Generated_Source\PSoC5/PWM_2.c **** uint8 PWM_2_initVar = 0u;
  28:.\Generated_Source\PSoC5/PWM_2.c **** 
  29:.\Generated_Source\PSoC5/PWM_2.c **** 
  30:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Start
  32:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/PWM_2.c **** *
  34:.\Generated_Source\PSoC5/PWM_2.c **** * Summary:
  35:.\Generated_Source\PSoC5/PWM_2.c **** *  The start function initializes the pwm with the default values, the 
  36:.\Generated_Source\PSoC5/PWM_2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  37:.\Generated_Source\PSoC5/PWM_2.c **** *  the EnableInt command should be called if interrupt generation is required.
  38:.\Generated_Source\PSoC5/PWM_2.c **** *
  39:.\Generated_Source\PSoC5/PWM_2.c **** * Parameters:  
  40:.\Generated_Source\PSoC5/PWM_2.c **** *  None  
  41:.\Generated_Source\PSoC5/PWM_2.c **** *
  42:.\Generated_Source\PSoC5/PWM_2.c **** * Return: 
  43:.\Generated_Source\PSoC5/PWM_2.c **** *  None
  44:.\Generated_Source\PSoC5/PWM_2.c **** *
  45:.\Generated_Source\PSoC5/PWM_2.c **** * Global variables:
  46:.\Generated_Source\PSoC5/PWM_2.c **** *  PWM_2_initVar: Is modified when this function is called for the 
  47:.\Generated_Source\PSoC5/PWM_2.c **** *   first time. Is used to ensure that initialization happens only once.
  48:.\Generated_Source\PSoC5/PWM_2.c **** *
  49:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Start(void) 
  51:.\Generated_Source\PSoC5/PWM_2.c **** {
  38              		.loc 1 51 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_offset 14, -4
  47              		.cfi_offset 7, -8
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
  52:.\Generated_Source\PSoC5/PWM_2.c ****     /* If not Initialized then initialize all required hardware and software */
  53:.\Generated_Source\PSoC5/PWM_2.c ****     if(PWM_2_initVar == 0u)
  50              		.loc 1 53 0
  51 0004 40F20003 		movw	r3, #:lower16:PWM_2_initVar
  52 0008 C0F20003 		movt	r3, #:upper16:PWM_2_initVar
  53 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  54 000e 002B     		cmp	r3, #0
  55 0010 08D1     		bne	.L2
  54:.\Generated_Source\PSoC5/PWM_2.c ****     {
  55:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_Init();
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 3


  56              		.loc 1 55 0
  57 0012 FFF7FEFF 		bl	PWM_2_Init
  56:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_initVar = 1u;
  58              		.loc 1 56 0
  59 0016 40F20003 		movw	r3, #:lower16:PWM_2_initVar
  60 001a C0F20003 		movt	r3, #:upper16:PWM_2_initVar
  61 001e 4FF00102 		mov	r2, #1
  62 0022 1A70     		strb	r2, [r3, #0]
  63              	.L2:
  57:.\Generated_Source\PSoC5/PWM_2.c ****     }
  58:.\Generated_Source\PSoC5/PWM_2.c ****     PWM_2_Enable();
  64              		.loc 1 58 0
  65 0024 FFF7FEFF 		bl	PWM_2_Enable
  59:.\Generated_Source\PSoC5/PWM_2.c **** 
  60:.\Generated_Source\PSoC5/PWM_2.c **** }
  66              		.loc 1 60 0
  67 0028 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	PWM_2_Start, .-PWM_2_Start
  71 002a 00BF     		.section	.text.PWM_2_Init,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_2_Init
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_2_Init, %function
  77              	PWM_2_Init:
  78              	.LFB1:
  61:.\Generated_Source\PSoC5/PWM_2.c **** 
  62:.\Generated_Source\PSoC5/PWM_2.c **** 
  63:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
  64:.\Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Init
  65:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
  66:.\Generated_Source\PSoC5/PWM_2.c **** *
  67:.\Generated_Source\PSoC5/PWM_2.c **** * Summary:
  68:.\Generated_Source\PSoC5/PWM_2.c **** *  Initialize component's parameters to the parameters set by user in the 
  69:.\Generated_Source\PSoC5/PWM_2.c **** *  customizer of the component placed onto schematic. Usually called in 
  70:.\Generated_Source\PSoC5/PWM_2.c **** *  PWM_2_Start().
  71:.\Generated_Source\PSoC5/PWM_2.c **** *
  72:.\Generated_Source\PSoC5/PWM_2.c **** * Parameters:  
  73:.\Generated_Source\PSoC5/PWM_2.c **** *  None
  74:.\Generated_Source\PSoC5/PWM_2.c **** *
  75:.\Generated_Source\PSoC5/PWM_2.c **** * Return: 
  76:.\Generated_Source\PSoC5/PWM_2.c **** *  None
  77:.\Generated_Source\PSoC5/PWM_2.c **** *
  78:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
  79:.\Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Init(void) 
  80:.\Generated_Source\PSoC5/PWM_2.c **** {
  79              		.loc 1 80 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 8
  86 0002 82B0     		sub	sp, sp, #8
  87              	.LCFI3:
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 4


  88              		.cfi_def_cfa_offset 16
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_offset 14, -4
  91              		.cfi_offset 7, -8
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 7
  81:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction || PWM_2_UseControl)
  82:.\Generated_Source\PSoC5/PWM_2.c ****         uint8 ctrl;
  83:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction || PWM_2_UseControl) */
  84:.\Generated_Source\PSoC5/PWM_2.c ****     
  85:.\Generated_Source\PSoC5/PWM_2.c ****     #if(!PWM_2_UsingFixedFunction) 
  86:.\Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UseStatus)
  87:.\Generated_Source\PSoC5/PWM_2.c ****             /* Interrupt State Backup for Critical Region*/
  88:.\Generated_Source\PSoC5/PWM_2.c ****             uint8 PWM_2_interruptState;
  89:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
  90:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
  91:.\Generated_Source\PSoC5/PWM_2.c ****     
  92:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
  93:.\Generated_Source\PSoC5/PWM_2.c ****         /* You are allowed to write the compare value (FF only) */
  94:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CFG0_MODE;
  95:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_DeadBand2_4)
  96:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL |= PWM_2_CFG0_DB;
  97:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_DeadBand2_4) */
  98:.\Generated_Source\PSoC5/PWM_2.c ****                 
  99:.\Generated_Source\PSoC5/PWM_2.c ****         /* Set the default Compare Mode */
 100:.\Generated_Source\PSoC5/PWM_2.c ****         #if(CY_PSOC5A)
 101:.\Generated_Source\PSoC5/PWM_2.c ****                 ctrl = PWM_2_CONTROL2 & ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK));
 102:.\Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL2 = ctrl | PWM_2_DEFAULT_COMPARE1_MODE;
 103:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (CY_PSOC5A) */
 104:.\Generated_Source\PSoC5/PWM_2.c ****         #if(CY_PSOC3 || CY_PSOC5LP)
 105:.\Generated_Source\PSoC5/PWM_2.c ****                 ctrl = PWM_2_CONTROL3 & ((uint8 )(~PWM_2_CTRL_CMPMODE1_MASK));
 106:.\Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL3 = ctrl | PWM_2_DEFAULT_COMPARE1_MODE;
 107:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 108:.\Generated_Source\PSoC5/PWM_2.c ****         
 109:.\Generated_Source\PSoC5/PWM_2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 110:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_RT1_MASK));
 111:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNC;     
 112:.\Generated_Source\PSoC5/PWM_2.c ****                 
 113:.\Generated_Source\PSoC5/PWM_2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 114:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_SYNCDSI_MASK));
 115:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNCDSI_EN;
 116:.\Generated_Source\PSoC5/PWM_2.c ****        
 117:.\Generated_Source\PSoC5/PWM_2.c ****     #elif (PWM_2_UseControl)
 118:.\Generated_Source\PSoC5/PWM_2.c ****         /* Set the default compare mode defined in the parameter */
 119:.\Generated_Source\PSoC5/PWM_2.c ****         ctrl = PWM_2_CONTROL & ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)) & ((uint8)(~PWM_2_CTRL_CMPMODE1
  94              		.loc 1 119 0
  95 0006 46F27243 		movw	r3, #:lower16:1073767538
  96 000a C4F20003 		movt	r3, #:upper16:1073767538
  97 000e 1B78     		ldrb	r3, [r3, #0]
  98 0010 DBB2     		uxtb	r3, r3
  99 0012 23F03F03 		bic	r3, r3, #63
 100 0016 FB71     		strb	r3, [r7, #7]
 120:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL = ctrl | PWM_2_DEFAULT_COMPARE2_MODE | 
 101              		.loc 1 120 0
 102 0018 46F27243 		movw	r3, #:lower16:1073767538
 103 001c C4F20003 		movt	r3, #:upper16:1073767538
 104 0020 FA79     		ldrb	r2, [r7, #7]
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 5


 105 0022 42F00902 		orr	r2, r2, #9
 106 0026 D2B2     		uxtb	r2, r2
 107 0028 1A70     		strb	r2, [r3, #0]
 121:.\Generated_Source\PSoC5/PWM_2.c ****                                    PWM_2_DEFAULT_COMPARE1_MODE;
 122:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 123:.\Generated_Source\PSoC5/PWM_2.c ****         
 124:.\Generated_Source\PSoC5/PWM_2.c ****     #if (!PWM_2_UsingFixedFunction)
 125:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_Resolution == 8)
 126:.\Generated_Source\PSoC5/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 127:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 108              		.loc 1 127 0
 109 002a 46F29243 		movw	r3, #:lower16:1073767570
 110 002e C4F20003 		movt	r3, #:upper16:1073767570
 111 0032 46F29242 		movw	r2, #:lower16:1073767570
 112 0036 C4F20002 		movt	r2, #:upper16:1073767570
 113 003a 1278     		ldrb	r2, [r2, #0]
 114 003c D2B2     		uxtb	r2, r2
 115 003e 42F00102 		orr	r2, r2, #1
 116 0042 D2B2     		uxtb	r2, r2
 117 0044 1A70     		strb	r2, [r3, #0]
 128:.\Generated_Source\PSoC5/PWM_2.c ****         #else /* (PWM_2_Resolution == 16)*/
 129:.\Generated_Source\PSoC5/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period */
 130:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP1 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 132:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_Resolution == 8) */
 133:.\Generated_Source\PSoC5/PWM_2.c **** 
 134:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_WriteCounter(PWM_2_INIT_PERIOD_VALUE);
 118              		.loc 1 134 0
 119 0046 4FF00A00 		mov	r0, #10
 120 004a FFF7FEFF 		bl	PWM_2_WriteCounter
 135:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
 136:.\Generated_Source\PSoC5/PWM_2.c ****         
 137:.\Generated_Source\PSoC5/PWM_2.c ****     PWM_2_WritePeriod(PWM_2_INIT_PERIOD_VALUE);
 121              		.loc 1 137 0
 122 004e 4FF00A00 		mov	r0, #10
 123 0052 FFF7FEFF 		bl	PWM_2_WritePeriod
 138:.\Generated_Source\PSoC5/PWM_2.c **** 
 139:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseOneCompareMode)
 140:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare(PWM_2_INIT_COMPARE_VALUE1);
 124              		.loc 1 140 0
 125 0056 4FF00500 		mov	r0, #5
 126 005a FFF7FEFF 		bl	PWM_2_WriteCompare
 141:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 142:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare1(PWM_2_INIT_COMPARE_VALUE1);
 143:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare2(PWM_2_INIT_COMPARE_VALUE2);
 144:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseOneCompareMode) */
 145:.\Generated_Source\PSoC5/PWM_2.c ****         
 146:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_KillModeMinTime)
 147:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteKillTime(PWM_2_MinimumKillTime);
 148:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_KillModeMinTime) */
 149:.\Generated_Source\PSoC5/PWM_2.c ****         
 150:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_DeadBandUsed)
 151:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteDeadTime(PWM_2_INIT_DEAD_TIME);
 152:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_DeadBandUsed) */
 153:.\Generated_Source\PSoC5/PWM_2.c **** 
 154:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 155:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_INIT_INTERRUPTS_MODE);
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 6


 156:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 157:.\Generated_Source\PSoC5/PWM_2.c ****         
 158:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 159:.\Generated_Source\PSoC5/PWM_2.c ****         /* Globally Enable the Fixed Function Block chosen */
 160:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 161:.\Generated_Source\PSoC5/PWM_2.c ****         /* Set the Interrupt source to come from the status register */
 162:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL2 |= PWM_2_CTRL2_IRQ_SEL;
 163:.\Generated_Source\PSoC5/PWM_2.c ****     #else
 164:.\Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UseStatus)
 165:.\Generated_Source\PSoC5/PWM_2.c ****             
 166:.\Generated_Source\PSoC5/PWM_2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 167:.\Generated_Source\PSoC5/PWM_2.c ****             /* Enter Critical Region*/
 168:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_interruptState = CyEnterCriticalSection();
 169:.\Generated_Source\PSoC5/PWM_2.c ****             /* Use the interrupt output of the status register for IRQ output */
 170:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_STATUS_AUX_CTRL |= PWM_2_STATUS_ACTL_INT_EN_MASK;
 171:.\Generated_Source\PSoC5/PWM_2.c ****             
 172:.\Generated_Source\PSoC5/PWM_2.c ****              /* Exit Critical Region*/
 173:.\Generated_Source\PSoC5/PWM_2.c ****             CyExitCriticalSection(PWM_2_interruptState);
 174:.\Generated_Source\PSoC5/PWM_2.c ****             
 175:.\Generated_Source\PSoC5/PWM_2.c ****             /* Clear the FIFO to enable the PWM_2_STATUS_FIFOFULL
 176:.\Generated_Source\PSoC5/PWM_2.c ****                    bit to be set on FIFO full. */
 177:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_ClearFIFO();
 178:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
 179:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 180:.\Generated_Source\PSoC5/PWM_2.c **** }
 127              		.loc 1 180 0
 128 005e 07F10807 		add	r7, r7, #8
 129 0062 BD46     		mov	sp, r7
 130 0064 80BD     		pop	{r7, pc}
 131              		.cfi_endproc
 132              	.LFE1:
 133              		.size	PWM_2_Init, .-PWM_2_Init
 134 0066 00BF     		.section	.text.PWM_2_Enable,"ax",%progbits
 135              		.align	2
 136              		.global	PWM_2_Enable
 137              		.thumb
 138              		.thumb_func
 139              		.type	PWM_2_Enable, %function
 140              	PWM_2_Enable:
 141              	.LFB2:
 181:.\Generated_Source\PSoC5/PWM_2.c **** 
 182:.\Generated_Source\PSoC5/PWM_2.c **** 
 183:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Enable
 185:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 186:.\Generated_Source\PSoC5/PWM_2.c **** *
 187:.\Generated_Source\PSoC5/PWM_2.c **** * Summary: 
 188:.\Generated_Source\PSoC5/PWM_2.c **** *  Enables the PWM block operation
 189:.\Generated_Source\PSoC5/PWM_2.c **** *
 190:.\Generated_Source\PSoC5/PWM_2.c **** * Parameters:  
 191:.\Generated_Source\PSoC5/PWM_2.c **** *  None
 192:.\Generated_Source\PSoC5/PWM_2.c **** *
 193:.\Generated_Source\PSoC5/PWM_2.c **** * Return: 
 194:.\Generated_Source\PSoC5/PWM_2.c **** *  None
 195:.\Generated_Source\PSoC5/PWM_2.c **** *
 196:.\Generated_Source\PSoC5/PWM_2.c **** * Side Effects: 
 197:.\Generated_Source\PSoC5/PWM_2.c **** *  This works only if software enable mode is chosen
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 7


 198:.\Generated_Source\PSoC5/PWM_2.c **** *
 199:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Enable(void) 
 201:.\Generated_Source\PSoC5/PWM_2.c **** {
 142              		.loc 1 201 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI5:
 149              		.cfi_def_cfa_offset 4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_offset 7, -4
 152              	.LCFI6:
 153              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC5/PWM_2.c ****     /* Globally Enable the Fixed Function Block chosen */
 203:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 204:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE |= PWM_2_BLOCK_STBY_EN_MASK;
 206:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 207:.\Generated_Source\PSoC5/PWM_2.c ****     
 208:.\Generated_Source\PSoC5/PWM_2.c ****     /* Enable the PWM from the control register  */
 209:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 210:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CTRL_ENABLE;
 154              		.loc 1 210 0
 155 0004 46F27243 		movw	r3, #:lower16:1073767538
 156 0008 C4F20003 		movt	r3, #:upper16:1073767538
 157 000c 46F27242 		movw	r2, #:lower16:1073767538
 158 0010 C4F20002 		movt	r2, #:upper16:1073767538
 159 0014 1278     		ldrb	r2, [r2, #0]
 160 0016 D2B2     		uxtb	r2, r2
 161 0018 6FEA4262 		mvn	r2, r2, lsl #25
 162 001c 6FEA5262 		mvn	r2, r2, lsr #25
 163 0020 D2B2     		uxtb	r2, r2
 164 0022 1A70     		strb	r2, [r3, #0]
 211:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 212:.\Generated_Source\PSoC5/PWM_2.c **** }
 165              		.loc 1 212 0
 166 0024 BD46     		mov	sp, r7
 167 0026 80BC     		pop	{r7}
 168 0028 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE2:
 171              		.size	PWM_2_Enable, .-PWM_2_Enable
 172 002a 00BF     		.section	.text.PWM_2_Stop,"ax",%progbits
 173              		.align	2
 174              		.global	PWM_2_Stop
 175              		.thumb
 176              		.thumb_func
 177              		.type	PWM_2_Stop, %function
 178              	PWM_2_Stop:
 179              	.LFB3:
 213:.\Generated_Source\PSoC5/PWM_2.c **** 
 214:.\Generated_Source\PSoC5/PWM_2.c **** 
 215:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 216:.\Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Stop
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 8


 217:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 218:.\Generated_Source\PSoC5/PWM_2.c **** *
 219:.\Generated_Source\PSoC5/PWM_2.c **** * Summary:
 220:.\Generated_Source\PSoC5/PWM_2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 221:.\Generated_Source\PSoC5/PWM_2.c **** *  interrupts.
 222:.\Generated_Source\PSoC5/PWM_2.c **** *
 223:.\Generated_Source\PSoC5/PWM_2.c **** * Parameters:  
 224:.\Generated_Source\PSoC5/PWM_2.c **** *  None  
 225:.\Generated_Source\PSoC5/PWM_2.c **** *
 226:.\Generated_Source\PSoC5/PWM_2.c **** * Return: 
 227:.\Generated_Source\PSoC5/PWM_2.c **** *  None
 228:.\Generated_Source\PSoC5/PWM_2.c **** *
 229:.\Generated_Source\PSoC5/PWM_2.c **** * Side Effects:
 230:.\Generated_Source\PSoC5/PWM_2.c **** *  If the Enable mode is set to Hardware only then this function
 231:.\Generated_Source\PSoC5/PWM_2.c **** *  has no effect on the operation of the PWM
 232:.\Generated_Source\PSoC5/PWM_2.c **** *
 233:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 234:.\Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Stop(void) 
 235:.\Generated_Source\PSoC5/PWM_2.c **** {
 180              		.loc 1 235 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 80B4     		push	{r7}
 186              	.LCFI7:
 187              		.cfi_def_cfa_offset 4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_offset 7, -4
 190              	.LCFI8:
 191              		.cfi_def_cfa_register 7
 236:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 237:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_ENABLE));
 192              		.loc 1 237 0
 193 0004 46F27243 		movw	r3, #:lower16:1073767538
 194 0008 C4F20003 		movt	r3, #:upper16:1073767538
 195 000c 46F27242 		movw	r2, #:lower16:1073767538
 196 0010 C4F20002 		movt	r2, #:upper16:1073767538
 197 0014 1278     		ldrb	r2, [r2, #0]
 198 0016 D2B2     		uxtb	r2, r2
 199 0018 02F07F02 		and	r2, r2, #127
 200 001c 1A70     		strb	r2, [r3, #0]
 238:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 239:.\Generated_Source\PSoC5/PWM_2.c ****     
 240:.\Generated_Source\PSoC5/PWM_2.c ****     /* Globally disable the Fixed Function Block chosen */
 241:.\Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 242:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE &= ((uint8)(~PWM_2_BLOCK_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_2_BLOCK_STBY_EN_MASK));
 244:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 245:.\Generated_Source\PSoC5/PWM_2.c **** }
 201              		.loc 1 245 0
 202 001e BD46     		mov	sp, r7
 203 0020 80BC     		pop	{r7}
 204 0022 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE3:
 207              		.size	PWM_2_Stop, .-PWM_2_Stop
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 9


 208              		.section	.text.PWM_2_WriteCounter,"ax",%progbits
 209              		.align	2
 210              		.global	PWM_2_WriteCounter
 211              		.thumb
 212              		.thumb_func
 213              		.type	PWM_2_WriteCounter, %function
 214              	PWM_2_WriteCounter:
 215              	.LFB4:
 246:.\Generated_Source\PSoC5/PWM_2.c **** 
 247:.\Generated_Source\PSoC5/PWM_2.c **** 
 248:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 249:.\Generated_Source\PSoC5/PWM_2.c **** 	#if (PWM_2_CompareMode1SW)
 250:.\Generated_Source\PSoC5/PWM_2.c **** 
 251:.\Generated_Source\PSoC5/PWM_2.c **** 
 252:.\Generated_Source\PSoC5/PWM_2.c **** 		/*******************************************************************************
 253:.\Generated_Source\PSoC5/PWM_2.c **** 		* Function Name: PWM_2_SetCompareMode
 254:.\Generated_Source\PSoC5/PWM_2.c **** 		********************************************************************************
 255:.\Generated_Source\PSoC5/PWM_2.c **** 		* 
 256:.\Generated_Source\PSoC5/PWM_2.c **** 		* Summary:
 257:.\Generated_Source\PSoC5/PWM_2.c **** 		*  This function writes the Compare Mode for the pwm output when in Dither mode,
 258:.\Generated_Source\PSoC5/PWM_2.c **** 		*  Center Align Mode or One Output Mode.
 259:.\Generated_Source\PSoC5/PWM_2.c **** 		*
 260:.\Generated_Source\PSoC5/PWM_2.c **** 		* Parameters:
 261:.\Generated_Source\PSoC5/PWM_2.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 262:.\Generated_Source\PSoC5/PWM_2.c **** 		*                defined in the H file as input arguments.
 263:.\Generated_Source\PSoC5/PWM_2.c **** 		*
 264:.\Generated_Source\PSoC5/PWM_2.c **** 		* Return:
 265:.\Generated_Source\PSoC5/PWM_2.c **** 		*  None
 266:.\Generated_Source\PSoC5/PWM_2.c **** 		*
 267:.\Generated_Source\PSoC5/PWM_2.c **** 		*******************************************************************************/
 268:.\Generated_Source\PSoC5/PWM_2.c **** 		void PWM_2_SetCompareMode(uint8 comparemode) 
 269:.\Generated_Source\PSoC5/PWM_2.c **** 		{
 270:.\Generated_Source\PSoC5/PWM_2.c **** 		    #if(PWM_2_UsingFixedFunction)
 271:.\Generated_Source\PSoC5/PWM_2.c ****             
 272:.\Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 273:.\Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SH
 274:.\Generated_Source\PSoC5/PWM_2.c ****                 #else
 275:.\Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemodemasked = comparemode;
 276:.\Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 277:.\Generated_Source\PSoC5/PWM_2.c ****             
 278:.\Generated_Source\PSoC5/PWM_2.c **** 		        #if(CY_PSOC5A)
 279:.\Generated_Source\PSoC5/PWM_2.c **** 		            PWM_2_CONTROL2 &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 280:.\Generated_Source\PSoC5/PWM_2.c **** 		            PWM_2_CONTROL2 |= comparemodemasked;  
 281:.\Generated_Source\PSoC5/PWM_2.c **** 		        #endif /* (CY_PSOC5A) */
 282:.\Generated_Source\PSoC5/PWM_2.c **** 		                
 283:.\Generated_Source\PSoC5/PWM_2.c **** 		        #if(CY_PSOC3 || CY_PSOC5LP)
 284:.\Generated_Source\PSoC5/PWM_2.c **** 		            PWM_2_CONTROL3 &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 285:.\Generated_Source\PSoC5/PWM_2.c **** 		            PWM_2_CONTROL3 |= comparemodemasked;     
 286:.\Generated_Source\PSoC5/PWM_2.c **** 		        #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 287:.\Generated_Source\PSoC5/PWM_2.c **** 		                
 288:.\Generated_Source\PSoC5/PWM_2.c **** 		    #elif (PWM_2_UseControl)
 289:.\Generated_Source\PSoC5/PWM_2.c **** 		        
 290:.\Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 291:.\Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_S
 292:.\Generated_Source\PSoC5/PWM_2.c ****     		                                    PWM_2_CTRL_CMPMODE1_MASK;
 293:.\Generated_Source\PSoC5/PWM_2.c ****                 #else
 294:.\Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode1masked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;             
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 10


 295:.\Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 296:.\Generated_Source\PSoC5/PWM_2.c ****                 
 297:.\Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)                            
 298:.\Generated_Source\PSoC5/PWM_2.c ****     		        uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_SHIFT))
 299:.\Generated_Source\PSoC5/PWM_2.c ****     		                                   PWM_2_CTRL_CMPMODE2_MASK;
 300:.\Generated_Source\PSoC5/PWM_2.c ****                 #else
 301:.\Generated_Source\PSoC5/PWM_2.c ****     		        uint8 comparemode2masked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;                
 302:.\Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 303:.\Generated_Source\PSoC5/PWM_2.c ****                 
 304:.\Generated_Source\PSoC5/PWM_2.c **** 		        /*Clear existing mode */
 305:.\Generated_Source\PSoC5/PWM_2.c **** 		        PWM_2_CONTROL &= ((uint8)(~(PWM_2_CTRL_CMPMODE1_MASK | PWM_2_CTRL_CMPMODE2_MASK))); 
 306:.\Generated_Source\PSoC5/PWM_2.c **** 		        PWM_2_CONTROL |= (comparemode1masked | comparemode2masked);
 307:.\Generated_Source\PSoC5/PWM_2.c **** 		        
 308:.\Generated_Source\PSoC5/PWM_2.c **** 		    #else
 309:.\Generated_Source\PSoC5/PWM_2.c **** 		        uint8 temp = comparemode;
 310:.\Generated_Source\PSoC5/PWM_2.c **** 		    #endif /* (PWM_2_UsingFixedFunction) */
 311:.\Generated_Source\PSoC5/PWM_2.c **** 		}
 312:.\Generated_Source\PSoC5/PWM_2.c **** 	#endif /* PWM_2_CompareMode1SW */
 313:.\Generated_Source\PSoC5/PWM_2.c **** 
 314:.\Generated_Source\PSoC5/PWM_2.c **** #else /* UseOneCompareMode */
 315:.\Generated_Source\PSoC5/PWM_2.c **** 
 316:.\Generated_Source\PSoC5/PWM_2.c **** 	#if (PWM_2_CompareMode1SW)
 317:.\Generated_Source\PSoC5/PWM_2.c **** 
 318:.\Generated_Source\PSoC5/PWM_2.c **** 
 319:.\Generated_Source\PSoC5/PWM_2.c **** 		/*******************************************************************************
 320:.\Generated_Source\PSoC5/PWM_2.c **** 		* Function Name: PWM_2_SetCompareMode1
 321:.\Generated_Source\PSoC5/PWM_2.c **** 		********************************************************************************
 322:.\Generated_Source\PSoC5/PWM_2.c **** 		* 
 323:.\Generated_Source\PSoC5/PWM_2.c **** 		* Summary:
 324:.\Generated_Source\PSoC5/PWM_2.c **** 		*  This function writes the Compare Mode for the pwm or pwm1 output
 325:.\Generated_Source\PSoC5/PWM_2.c **** 		*
 326:.\Generated_Source\PSoC5/PWM_2.c **** 		* Parameters:  
 327:.\Generated_Source\PSoC5/PWM_2.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 328:.\Generated_Source\PSoC5/PWM_2.c **** 		*                defined in the H file as input arguments.
 329:.\Generated_Source\PSoC5/PWM_2.c **** 		*
 330:.\Generated_Source\PSoC5/PWM_2.c **** 		* Return: 
 331:.\Generated_Source\PSoC5/PWM_2.c **** 		*  None
 332:.\Generated_Source\PSoC5/PWM_2.c **** 		*
 333:.\Generated_Source\PSoC5/PWM_2.c **** 		*******************************************************************************/
 334:.\Generated_Source\PSoC5/PWM_2.c **** 		void PWM_2_SetCompareMode1(uint8 comparemode) 
 335:.\Generated_Source\PSoC5/PWM_2.c **** 		{
 336:.\Generated_Source\PSoC5/PWM_2.c **** 		    #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 337:.\Generated_Source\PSoC5/PWM_2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SHIFT)
 338:.\Generated_Source\PSoC5/PWM_2.c ****     		                               PWM_2_CTRL_CMPMODE1_MASK;
 339:.\Generated_Source\PSoC5/PWM_2.c **** 		    #else
 340:.\Generated_Source\PSoC5/PWM_2.c ****                 uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;                
 341:.\Generated_Source\PSoC5/PWM_2.c ****             #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 342:.\Generated_Source\PSoC5/PWM_2.c ****                    
 343:.\Generated_Source\PSoC5/PWM_2.c **** 		    #if (PWM_2_UseControl)
 344:.\Generated_Source\PSoC5/PWM_2.c **** 		        PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 345:.\Generated_Source\PSoC5/PWM_2.c **** 		        PWM_2_CONTROL |= comparemodemasked;
 346:.\Generated_Source\PSoC5/PWM_2.c **** 		    #endif /* (PWM_2_UseControl) */
 347:.\Generated_Source\PSoC5/PWM_2.c **** 		}
 348:.\Generated_Source\PSoC5/PWM_2.c **** 	#endif /* PWM_2_CompareMode1SW */
 349:.\Generated_Source\PSoC5/PWM_2.c **** 
 350:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_CompareMode2SW)
 351:.\Generated_Source\PSoC5/PWM_2.c **** 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 11


 352:.\Generated_Source\PSoC5/PWM_2.c **** 
 353:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 354:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_SetCompareMode2
 355:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 356:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 357:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 358:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 359:.\Generated_Source\PSoC5/PWM_2.c ****     *
 360:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 361:.\Generated_Source\PSoC5/PWM_2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 362:.\Generated_Source\PSoC5/PWM_2.c ****     *                defined in the H file as input arguments.
 363:.\Generated_Source\PSoC5/PWM_2.c ****     *
 364:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 365:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 366:.\Generated_Source\PSoC5/PWM_2.c ****     *
 367:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 368:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_SetCompareMode2(uint8 comparemode) 
 369:.\Generated_Source\PSoC5/PWM_2.c ****     {
 370:.\Generated_Source\PSoC5/PWM_2.c **** 
 371:.\Generated_Source\PSoC5/PWM_2.c ****         #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 372:.\Generated_Source\PSoC5/PWM_2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_SHIFT)) & 
 373:.\Generated_Source\PSoC5/PWM_2.c ****                                                  PWM_2_CTRL_CMPMODE2_MASK;
 374:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 375:.\Generated_Source\PSoC5/PWM_2.c ****             uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;            
 376:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 377:.\Generated_Source\PSoC5/PWM_2.c ****         
 378:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseControl)
 379:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 380:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL |= comparemodemasked;
 381:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseControl) */
 382:.\Generated_Source\PSoC5/PWM_2.c ****     }
 383:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /*PWM_2_CompareMode2SW */
 384:.\Generated_Source\PSoC5/PWM_2.c **** 
 385:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* UseOneCompareMode */
 386:.\Generated_Source\PSoC5/PWM_2.c **** 
 387:.\Generated_Source\PSoC5/PWM_2.c **** 
 388:.\Generated_Source\PSoC5/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 389:.\Generated_Source\PSoC5/PWM_2.c **** 
 390:.\Generated_Source\PSoC5/PWM_2.c **** 
 391:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCounter
 393:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 395:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 396:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function is used to change the counter value.
 397:.\Generated_Source\PSoC5/PWM_2.c ****     *
 398:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 399:.\Generated_Source\PSoC5/PWM_2.c ****     *  counter:  This value may be between 1 and (2^Resolution)-1.   
 400:.\Generated_Source\PSoC5/PWM_2.c ****     *
 401:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 402:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 403:.\Generated_Source\PSoC5/PWM_2.c ****     *
 404:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 405:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCounter(uint8 counter) \
 406:.\Generated_Source\PSoC5/PWM_2.c ****                                        
 407:.\Generated_Source\PSoC5/PWM_2.c ****     {
 216              		.loc 1 407 0
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 12


 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0000 80B4     		push	{r7}
 222              	.LCFI9:
 223              		.cfi_def_cfa_offset 4
 224 0002 83B0     		sub	sp, sp, #12
 225              	.LCFI10:
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_offset 7, -4
 229              	.LCFI11:
 230              		.cfi_def_cfa_register 7
 231 0006 0346     		mov	r3, r0
 232 0008 FB71     		strb	r3, [r7, #7]
 408:.\Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG8(PWM_2_COUNTER_LSB_PTR, counter);
 233              		.loc 1 408 0
 234 000a 46F20243 		movw	r3, #:lower16:1073767426
 235 000e C4F20003 		movt	r3, #:upper16:1073767426
 236 0012 FA79     		ldrb	r2, [r7, #7]
 237 0014 1A70     		strb	r2, [r3, #0]
 409:.\Generated_Source\PSoC5/PWM_2.c ****     }
 238              		.loc 1 409 0
 239 0016 07F10C07 		add	r7, r7, #12
 240 001a BD46     		mov	sp, r7
 241 001c 80BC     		pop	{r7}
 242 001e 7047     		bx	lr
 243              		.cfi_endproc
 244              	.LFE4:
 245              		.size	PWM_2_WriteCounter, .-PWM_2_WriteCounter
 246              		.section	.text.PWM_2_ReadCounter,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_2_ReadCounter
 249              		.thumb
 250              		.thumb_func
 251              		.type	PWM_2_ReadCounter, %function
 252              	PWM_2_ReadCounter:
 253              	.LFB5:
 410:.\Generated_Source\PSoC5/PWM_2.c **** 
 411:.\Generated_Source\PSoC5/PWM_2.c **** 
 412:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCounter
 414:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 416:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 417:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 418:.\Generated_Source\PSoC5/PWM_2.c ****     *  if the counter is enabled or running.
 419:.\Generated_Source\PSoC5/PWM_2.c ****     *
 420:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 421:.\Generated_Source\PSoC5/PWM_2.c ****     *  None  
 422:.\Generated_Source\PSoC5/PWM_2.c ****     *
 423:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 424:.\Generated_Source\PSoC5/PWM_2.c ****     *  The current value of the counter.
 425:.\Generated_Source\PSoC5/PWM_2.c ****     *
 426:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 427:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadCounter(void) 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 13


 428:.\Generated_Source\PSoC5/PWM_2.c ****     {
 254              		.loc 1 428 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              	.LCFI12:
 261              		.cfi_def_cfa_offset 4
 262 0002 00AF     		add	r7, sp, #0
 263              		.cfi_offset 7, -4
 264              	.LCFI13:
 265              		.cfi_def_cfa_register 7
 429:.\Generated_Source\PSoC5/PWM_2.c ****         /* Force capture by reading Accumulator */
 430:.\Generated_Source\PSoC5/PWM_2.c ****         /* Must first do a software capture to be able to read the counter */
 431:.\Generated_Source\PSoC5/PWM_2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 432:.\Generated_Source\PSoC5/PWM_2.c ****         (void)PWM_2_COUNTERCAP_LSB;
 266              		.loc 1 432 0
 267 0004 46F21243 		movw	r3, #:lower16:1073767442
 268 0008 C4F20003 		movt	r3, #:upper16:1073767442
 269 000c 1B78     		ldrb	r3, [r3, #0]
 433:.\Generated_Source\PSoC5/PWM_2.c ****         
 434:.\Generated_Source\PSoC5/PWM_2.c ****         /* Read the data from the FIFO (or capture register for Fixed Function)*/
 435:.\Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG8(PWM_2_CAPTURE_LSB_PTR));
 270              		.loc 1 435 0
 271 000e 46F25243 		movw	r3, #:lower16:1073767506
 272 0012 C4F20003 		movt	r3, #:upper16:1073767506
 273 0016 1B78     		ldrb	r3, [r3, #0]
 274 0018 DBB2     		uxtb	r3, r3
 436:.\Generated_Source\PSoC5/PWM_2.c ****     }
 275              		.loc 1 436 0
 276 001a 1846     		mov	r0, r3
 277 001c BD46     		mov	sp, r7
 278 001e 80BC     		pop	{r7}
 279 0020 7047     		bx	lr
 280              		.cfi_endproc
 281              	.LFE5:
 282              		.size	PWM_2_ReadCounter, .-PWM_2_ReadCounter
 283 0022 00BF     		.section	.text.PWM_2_WritePeriod,"ax",%progbits
 284              		.align	2
 285              		.global	PWM_2_WritePeriod
 286              		.thumb
 287              		.thumb_func
 288              		.type	PWM_2_WritePeriod, %function
 289              	PWM_2_WritePeriod:
 290              	.LFB6:
 437:.\Generated_Source\PSoC5/PWM_2.c **** 
 438:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseStatus)
 439:.\Generated_Source\PSoC5/PWM_2.c **** 
 440:.\Generated_Source\PSoC5/PWM_2.c **** 
 441:.\Generated_Source\PSoC5/PWM_2.c ****             /*******************************************************************************
 442:.\Generated_Source\PSoC5/PWM_2.c ****             * Function Name: PWM_2_ClearFIFO
 443:.\Generated_Source\PSoC5/PWM_2.c ****             ********************************************************************************
 444:.\Generated_Source\PSoC5/PWM_2.c ****             * 
 445:.\Generated_Source\PSoC5/PWM_2.c ****             * Summary:
 446:.\Generated_Source\PSoC5/PWM_2.c ****             *  This function clears all capture data from the capture FIFO
 447:.\Generated_Source\PSoC5/PWM_2.c ****             *
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 14


 448:.\Generated_Source\PSoC5/PWM_2.c ****             * Parameters:  
 449:.\Generated_Source\PSoC5/PWM_2.c ****             *  None
 450:.\Generated_Source\PSoC5/PWM_2.c ****             *
 451:.\Generated_Source\PSoC5/PWM_2.c ****             * Return: 
 452:.\Generated_Source\PSoC5/PWM_2.c ****             *  None
 453:.\Generated_Source\PSoC5/PWM_2.c ****             *
 454:.\Generated_Source\PSoC5/PWM_2.c ****             *******************************************************************************/
 455:.\Generated_Source\PSoC5/PWM_2.c ****             void PWM_2_ClearFIFO(void) 
 456:.\Generated_Source\PSoC5/PWM_2.c ****             {
 457:.\Generated_Source\PSoC5/PWM_2.c ****                 while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 458:.\Generated_Source\PSoC5/PWM_2.c ****                 {
 459:.\Generated_Source\PSoC5/PWM_2.c ****                     (void)PWM_2_ReadCapture();
 460:.\Generated_Source\PSoC5/PWM_2.c ****                 }
 461:.\Generated_Source\PSoC5/PWM_2.c ****             }
 462:.\Generated_Source\PSoC5/PWM_2.c **** 
 463:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* PWM_2_UseStatus */
 464:.\Generated_Source\PSoC5/PWM_2.c **** 
 465:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* !PWM_2_UsingFixedFunction */
 466:.\Generated_Source\PSoC5/PWM_2.c **** 
 467:.\Generated_Source\PSoC5/PWM_2.c **** 
 468:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 469:.\Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_WritePeriod
 470:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 471:.\Generated_Source\PSoC5/PWM_2.c **** * 
 472:.\Generated_Source\PSoC5/PWM_2.c **** * Summary:
 473:.\Generated_Source\PSoC5/PWM_2.c **** *  This function is used to change the period of the counter.  The new period 
 474:.\Generated_Source\PSoC5/PWM_2.c **** *  will be loaded the next time terminal count is detected.
 475:.\Generated_Source\PSoC5/PWM_2.c **** *
 476:.\Generated_Source\PSoC5/PWM_2.c **** * Parameters:  
 477:.\Generated_Source\PSoC5/PWM_2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0 
 478:.\Generated_Source\PSoC5/PWM_2.c **** *           will result in the counter remaining at zero.
 479:.\Generated_Source\PSoC5/PWM_2.c **** *
 480:.\Generated_Source\PSoC5/PWM_2.c **** * Return: 
 481:.\Generated_Source\PSoC5/PWM_2.c **** *  None
 482:.\Generated_Source\PSoC5/PWM_2.c **** *
 483:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC5/PWM_2.c **** void PWM_2_WritePeriod(uint8 period) 
 485:.\Generated_Source\PSoC5/PWM_2.c **** {
 291              		.loc 1 485 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 80B4     		push	{r7}
 297              	.LCFI14:
 298              		.cfi_def_cfa_offset 4
 299 0002 83B0     		sub	sp, sp, #12
 300              	.LCFI15:
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_offset 7, -4
 304              	.LCFI16:
 305              		.cfi_def_cfa_register 7
 306 0006 0346     		mov	r3, r0
 307 0008 FB71     		strb	r3, [r7, #7]
 486:.\Generated_Source\PSoC5/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 487:.\Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, (uint16)period);
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 15


 488:.\Generated_Source\PSoC5/PWM_2.c ****     #else
 489:.\Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG8(PWM_2_PERIOD_LSB_PTR, period);
 308              		.loc 1 489 0
 309 000a 46F23243 		movw	r3, #:lower16:1073767474
 310 000e C4F20003 		movt	r3, #:upper16:1073767474
 311 0012 FA79     		ldrb	r2, [r7, #7]
 312 0014 1A70     		strb	r2, [r3, #0]
 490:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 491:.\Generated_Source\PSoC5/PWM_2.c **** }
 313              		.loc 1 491 0
 314 0016 07F10C07 		add	r7, r7, #12
 315 001a BD46     		mov	sp, r7
 316 001c 80BC     		pop	{r7}
 317 001e 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE6:
 320              		.size	PWM_2_WritePeriod, .-PWM_2_WritePeriod
 321              		.section	.text.PWM_2_WriteCompare,"ax",%progbits
 322              		.align	2
 323              		.global	PWM_2_WriteCompare
 324              		.thumb
 325              		.thumb_func
 326              		.type	PWM_2_WriteCompare, %function
 327              	PWM_2_WriteCompare:
 328              	.LFB7:
 492:.\Generated_Source\PSoC5/PWM_2.c **** 
 493:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 494:.\Generated_Source\PSoC5/PWM_2.c **** 
 495:.\Generated_Source\PSoC5/PWM_2.c **** 
 496:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 497:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare
 498:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 499:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 500:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 501:.\Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 502:.\Generated_Source\PSoC5/PWM_2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock. 
 503:.\Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will be driven high when the present counter value is 
 504:.\Generated_Source\PSoC5/PWM_2.c ****     *  compared to the compare value based on the compare mode defined in 
 505:.\Generated_Source\PSoC5/PWM_2.c ****     *  Dither Mode.
 506:.\Generated_Source\PSoC5/PWM_2.c ****     *
 507:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 508:.\Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.  
 509:.\Generated_Source\PSoC5/PWM_2.c ****     *
 510:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 511:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 512:.\Generated_Source\PSoC5/PWM_2.c ****     *
 513:.\Generated_Source\PSoC5/PWM_2.c ****     * Side Effects:
 514:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function is only available if the PWM mode parameter is set to
 515:.\Generated_Source\PSoC5/PWM_2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 516:.\Generated_Source\PSoC5/PWM_2.c ****     *
 517:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 518:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare(uint8 compare) \
 519:.\Generated_Source\PSoC5/PWM_2.c ****                                        
 520:.\Generated_Source\PSoC5/PWM_2.c ****     {	
 329              		.loc 1 520 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 16


 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0000 80B4     		push	{r7}
 335              	.LCFI17:
 336              		.cfi_def_cfa_offset 4
 337 0002 83B0     		sub	sp, sp, #12
 338              	.LCFI18:
 339              		.cfi_def_cfa_offset 16
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_offset 7, -4
 342              	.LCFI19:
 343              		.cfi_def_cfa_register 7
 344 0006 0346     		mov	r3, r0
 345 0008 FB71     		strb	r3, [r7, #7]
 521:.\Generated_Source\PSoC5/PWM_2.c **** 		#if(PWM_2_UsingFixedFunction)
 522:.\Generated_Source\PSoC5/PWM_2.c **** 			CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 523:.\Generated_Source\PSoC5/PWM_2.c **** 		#else
 524:.\Generated_Source\PSoC5/PWM_2.c **** 	        CY_SET_REG8(PWM_2_COMPARE1_LSB_PTR, compare);	
 346              		.loc 1 524 0
 347 000a 46F22243 		movw	r3, #:lower16:1073767458
 348 000e C4F20003 		movt	r3, #:upper16:1073767458
 349 0012 FA79     		ldrb	r2, [r7, #7]
 350 0014 1A70     		strb	r2, [r3, #0]
 525:.\Generated_Source\PSoC5/PWM_2.c **** 		#endif /* (PWM_2_UsingFixedFunction) */
 526:.\Generated_Source\PSoC5/PWM_2.c ****         
 527:.\Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_PWMMode == PWM_2__B_PWM__DITHER)
 528:.\Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 529:.\Generated_Source\PSoC5/PWM_2.c ****     			CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_2.c ****     		#else
 531:.\Generated_Source\PSoC5/PWM_2.c ****     	        CY_SET_REG8(PWM_2_COMPARE2_LSB_PTR, (compare + 1u));	
 532:.\Generated_Source\PSoC5/PWM_2.c ****     		#endif /* (PWM_2_UsingFixedFunction) */
 533:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_PWMMode == PWM_2__B_PWM__DITHER) */
 534:.\Generated_Source\PSoC5/PWM_2.c ****     }
 351              		.loc 1 534 0
 352 0016 07F10C07 		add	r7, r7, #12
 353 001a BD46     		mov	sp, r7
 354 001c 80BC     		pop	{r7}
 355 001e 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE7:
 358              		.size	PWM_2_WriteCompare, .-PWM_2_WriteCompare
 359              		.section	.text.PWM_2_ReadControlRegister,"ax",%progbits
 360              		.align	2
 361              		.global	PWM_2_ReadControlRegister
 362              		.thumb
 363              		.thumb_func
 364              		.type	PWM_2_ReadControlRegister, %function
 365              	PWM_2_ReadControlRegister:
 366              	.LFB8:
 535:.\Generated_Source\PSoC5/PWM_2.c **** 
 536:.\Generated_Source\PSoC5/PWM_2.c **** 
 537:.\Generated_Source\PSoC5/PWM_2.c **** #else
 538:.\Generated_Source\PSoC5/PWM_2.c **** 
 539:.\Generated_Source\PSoC5/PWM_2.c **** 
 540:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 541:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare1
 542:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 17


 543:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 544:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 545:.\Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare1 value.  The compare output will 
 546:.\Generated_Source\PSoC5/PWM_2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be 
 547:.\Generated_Source\PSoC5/PWM_2.c ****     *  driven high when the present counter value is less than or less than or 
 548:.\Generated_Source\PSoC5/PWM_2.c ****     *  equal to the compare register, depending on the mode.
 549:.\Generated_Source\PSoC5/PWM_2.c ****     *
 550:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 551:.\Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.  
 552:.\Generated_Source\PSoC5/PWM_2.c ****     *
 553:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 554:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 555:.\Generated_Source\PSoC5/PWM_2.c ****     *
 556:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 557:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare1(uint8 compare) \
 558:.\Generated_Source\PSoC5/PWM_2.c ****                                         
 559:.\Generated_Source\PSoC5/PWM_2.c ****     {
 560:.\Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 561:.\Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 562:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 563:.\Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE1_LSB_PTR, compare);
 564:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 565:.\Generated_Source\PSoC5/PWM_2.c ****     }
 566:.\Generated_Source\PSoC5/PWM_2.c **** 
 567:.\Generated_Source\PSoC5/PWM_2.c **** 
 568:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 569:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare2
 570:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 571:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 572:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 573:.\Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare value, for compare1 output.  
 574:.\Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will reflect the new value on the next UDB clock.  
 575:.\Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will be driven high when the present counter value is 
 576:.\Generated_Source\PSoC5/PWM_2.c ****     *  less than or less than or equal to the compare register, depending on the 
 577:.\Generated_Source\PSoC5/PWM_2.c ****     *  mode.
 578:.\Generated_Source\PSoC5/PWM_2.c ****     *
 579:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 580:.\Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.  
 581:.\Generated_Source\PSoC5/PWM_2.c ****     *
 582:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 583:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 584:.\Generated_Source\PSoC5/PWM_2.c ****     *
 585:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 586:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare2(uint8 compare) \
 587:.\Generated_Source\PSoC5/PWM_2.c ****                                         
 588:.\Generated_Source\PSoC5/PWM_2.c ****     {
 589:.\Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 590:.\Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 592:.\Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE2_LSB_PTR, compare);
 593:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 594:.\Generated_Source\PSoC5/PWM_2.c ****     }
 595:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* UseOneCompareMode */
 596:.\Generated_Source\PSoC5/PWM_2.c **** 
 597:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_DeadBandUsed)
 598:.\Generated_Source\PSoC5/PWM_2.c **** 
 599:.\Generated_Source\PSoC5/PWM_2.c **** 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 18


 600:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 601:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteDeadTime
 602:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 603:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 604:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 605:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function writes the dead-band counts to the corresponding register
 606:.\Generated_Source\PSoC5/PWM_2.c ****     *
 607:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 608:.\Generated_Source\PSoC5/PWM_2.c ****     *  deadtime:  Number of counts for dead time 
 609:.\Generated_Source\PSoC5/PWM_2.c ****     *
 610:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 611:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 612:.\Generated_Source\PSoC5/PWM_2.c ****     *
 613:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 614:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteDeadTime(uint8 deadtime) 
 615:.\Generated_Source\PSoC5/PWM_2.c ****     {
 616:.\Generated_Source\PSoC5/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 617:.\Generated_Source\PSoC5/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 618:.\Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG8(PWM_2_DEADBAND_COUNT_PTR, deadtime);
 619:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 620:.\Generated_Source\PSoC5/PWM_2.c ****             /* Otherwise the data has to be masked and offset */        
 621:.\Generated_Source\PSoC5/PWM_2.c ****             /* Clear existing data */
 622:.\Generated_Source\PSoC5/PWM_2.c ****             PWM_2_DEADBAND_COUNT &= ((uint8)(~PWM_2_DEADBAND_COUNT_MASK));
 623:.\Generated_Source\PSoC5/PWM_2.c ****             
 624:.\Generated_Source\PSoC5/PWM_2.c ****             /* Set new dead time */
 625:.\Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)        
 626:.\Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_2_DEADBAND_COUNT_SHIFT)) & 
 627:.\Generated_Source\PSoC5/PWM_2.c ****                                                     PWM_2_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_2.c ****             #else
 629:.\Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= deadtime & PWM_2_DEADBAND_COUNT_MASK;        
 630:.\Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 631:.\Generated_Source\PSoC5/PWM_2.c ****         
 632:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 633:.\Generated_Source\PSoC5/PWM_2.c ****     }
 634:.\Generated_Source\PSoC5/PWM_2.c **** 
 635:.\Generated_Source\PSoC5/PWM_2.c **** 
 636:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 637:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadDeadTime
 638:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 639:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 640:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 641:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function reads the dead-band counts from the corresponding register
 642:.\Generated_Source\PSoC5/PWM_2.c ****     *
 643:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 644:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 645:.\Generated_Source\PSoC5/PWM_2.c ****     *
 646:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 647:.\Generated_Source\PSoC5/PWM_2.c ****     *  Dead Band Counts
 648:.\Generated_Source\PSoC5/PWM_2.c ****     *
 649:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 650:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadDeadTime(void) 
 651:.\Generated_Source\PSoC5/PWM_2.c ****     {
 652:.\Generated_Source\PSoC5/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 653:.\Generated_Source\PSoC5/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 654:.\Generated_Source\PSoC5/PWM_2.c ****             return (CY_GET_REG8(PWM_2_DEADBAND_COUNT_PTR));
 655:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 656:.\Generated_Source\PSoC5/PWM_2.c ****         
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 19


 657:.\Generated_Source\PSoC5/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 658:.\Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)      
 659:.\Generated_Source\PSoC5/PWM_2.c ****                 return ((uint8)(((uint8)(PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK)) >> 
 660:.\Generated_Source\PSoC5/PWM_2.c ****                                                                            PWM_2_DEADBAND_COUNT_SHI
 661:.\Generated_Source\PSoC5/PWM_2.c ****             #else
 662:.\Generated_Source\PSoC5/PWM_2.c ****                 return (PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK);
 663:.\Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 664:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 665:.\Generated_Source\PSoC5/PWM_2.c ****     }
 666:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* DeadBandUsed */
 667:.\Generated_Source\PSoC5/PWM_2.c **** 
 668:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 669:.\Generated_Source\PSoC5/PWM_2.c **** 
 670:.\Generated_Source\PSoC5/PWM_2.c **** 
 671:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 672:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_SetInterruptMode
 673:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 674:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 675:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 676:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function configures the interrupts mask control of theinterrupt 
 677:.\Generated_Source\PSoC5/PWM_2.c ****     *  source status register.
 678:.\Generated_Source\PSoC5/PWM_2.c ****     *
 679:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 680:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled 
 681:.\Generated_Source\PSoC5/PWM_2.c ****     *
 682:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 683:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 684:.\Generated_Source\PSoC5/PWM_2.c ****     *
 685:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 686:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_SetInterruptMode(uint8 interruptMode)  
 687:.\Generated_Source\PSoC5/PWM_2.c ****     {
 688:.\Generated_Source\PSoC5/PWM_2.c ****     	CY_SET_REG8(PWM_2_STATUS_MASK_PTR, interruptMode);
 689:.\Generated_Source\PSoC5/PWM_2.c ****     }
 690:.\Generated_Source\PSoC5/PWM_2.c **** 
 691:.\Generated_Source\PSoC5/PWM_2.c **** 
 692:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 693:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadStatusRegister
 694:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 695:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 696:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 697:.\Generated_Source\PSoC5/PWM_2.c ****     *  This function returns the current state of the status register. 
 698:.\Generated_Source\PSoC5/PWM_2.c ****     *
 699:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 700:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 701:.\Generated_Source\PSoC5/PWM_2.c ****     *
 702:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 703:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8 : Current status register value. The status register bits are:
 704:.\Generated_Source\PSoC5/PWM_2.c ****     *  [7:6] : Unused(0)
 705:.\Generated_Source\PSoC5/PWM_2.c ****     *  [5]   : Kill event output
 706:.\Generated_Source\PSoC5/PWM_2.c ****     *  [4]   : FIFO not empty
 707:.\Generated_Source\PSoC5/PWM_2.c ****     *  [3]   : FIFO full
 708:.\Generated_Source\PSoC5/PWM_2.c ****     *  [2]   : Terminal count
 709:.\Generated_Source\PSoC5/PWM_2.c ****     *  [1]   : Compare output 2
 710:.\Generated_Source\PSoC5/PWM_2.c ****     *  [0]   : Compare output 1
 711:.\Generated_Source\PSoC5/PWM_2.c ****     *
 712:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 713:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadStatusRegister(void)   
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 20


 714:.\Generated_Source\PSoC5/PWM_2.c ****     {
 715:.\Generated_Source\PSoC5/PWM_2.c ****     	uint8 result;
 716:.\Generated_Source\PSoC5/PWM_2.c ****     	
 717:.\Generated_Source\PSoC5/PWM_2.c ****     	result = CY_GET_REG8(PWM_2_STATUS_PTR);
 718:.\Generated_Source\PSoC5/PWM_2.c ****     	return (result);
 719:.\Generated_Source\PSoC5/PWM_2.c ****     }
 720:.\Generated_Source\PSoC5/PWM_2.c **** 
 721:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 722:.\Generated_Source\PSoC5/PWM_2.c **** 
 723:.\Generated_Source\PSoC5/PWM_2.c **** 
 724:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseControl)
 725:.\Generated_Source\PSoC5/PWM_2.c **** 
 726:.\Generated_Source\PSoC5/PWM_2.c **** 
 727:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 728:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadControlRegister
 729:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 730:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 731:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 732:.\Generated_Source\PSoC5/PWM_2.c ****     *  Returns the current state of the control register. This API is available 
 733:.\Generated_Source\PSoC5/PWM_2.c ****     *  only if the control register is not removed.
 734:.\Generated_Source\PSoC5/PWM_2.c ****     *
 735:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 736:.\Generated_Source\PSoC5/PWM_2.c ****     *  None 
 737:.\Generated_Source\PSoC5/PWM_2.c ****     *
 738:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 739:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8 : Current control register value
 740:.\Generated_Source\PSoC5/PWM_2.c ****     *
 741:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/    
 742:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadControlRegister(void) 
 743:.\Generated_Source\PSoC5/PWM_2.c ****     {
 367              		.loc 1 743 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372 0000 80B4     		push	{r7}
 373              	.LCFI20:
 374              		.cfi_def_cfa_offset 4
 375 0002 83B0     		sub	sp, sp, #12
 376              	.LCFI21:
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_offset 7, -4
 380              	.LCFI22:
 381              		.cfi_def_cfa_register 7
 744:.\Generated_Source\PSoC5/PWM_2.c ****     	uint8 result;
 745:.\Generated_Source\PSoC5/PWM_2.c ****     	
 746:.\Generated_Source\PSoC5/PWM_2.c ****     	result = CY_GET_REG8(PWM_2_CONTROL_PTR);
 382              		.loc 1 746 0
 383 0006 46F27243 		movw	r3, #:lower16:1073767538
 384 000a C4F20003 		movt	r3, #:upper16:1073767538
 385 000e 1B78     		ldrb	r3, [r3, #0]
 386 0010 FB71     		strb	r3, [r7, #7]
 747:.\Generated_Source\PSoC5/PWM_2.c ****     	return (result);
 387              		.loc 1 747 0
 388 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 748:.\Generated_Source\PSoC5/PWM_2.c ****     }
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 21


 389              		.loc 1 748 0
 390 0014 1846     		mov	r0, r3
 391 0016 07F10C07 		add	r7, r7, #12
 392 001a BD46     		mov	sp, r7
 393 001c 80BC     		pop	{r7}
 394 001e 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE8:
 397              		.size	PWM_2_ReadControlRegister, .-PWM_2_ReadControlRegister
 398              		.section	.text.PWM_2_WriteControlRegister,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_2_WriteControlRegister
 401              		.thumb
 402              		.thumb_func
 403              		.type	PWM_2_WriteControlRegister, %function
 404              	PWM_2_WriteControlRegister:
 405              	.LFB9:
 749:.\Generated_Source\PSoC5/PWM_2.c **** 
 750:.\Generated_Source\PSoC5/PWM_2.c **** 
 751:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 752:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteControlRegister
 753:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 754:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 755:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 756:.\Generated_Source\PSoC5/PWM_2.c ****     *  Sets the bit field of the control register. This API is available only if 
 757:.\Generated_Source\PSoC5/PWM_2.c ****     *  the control register is not removed.
 758:.\Generated_Source\PSoC5/PWM_2.c ****     *
 759:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 760:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 761:.\Generated_Source\PSoC5/PWM_2.c ****     *  [7]   : PWM Enable
 762:.\Generated_Source\PSoC5/PWM_2.c ****     *  [6]   : Reset
 763:.\Generated_Source\PSoC5/PWM_2.c ****     *  [5:3] : Compare Mode2
 764:.\Generated_Source\PSoC5/PWM_2.c ****     *  [2:0] : Compare Mode2
 765:.\Generated_Source\PSoC5/PWM_2.c ****     *
 766:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 767:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 768:.\Generated_Source\PSoC5/PWM_2.c ****     *
 769:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/  
 770:.\Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteControlRegister(uint8 control) 
 771:.\Generated_Source\PSoC5/PWM_2.c ****     {
 406              		.loc 1 771 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              	.LCFI23:
 413              		.cfi_def_cfa_offset 4
 414 0002 83B0     		sub	sp, sp, #12
 415              	.LCFI24:
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_offset 7, -4
 419              	.LCFI25:
 420              		.cfi_def_cfa_register 7
 421 0006 0346     		mov	r3, r0
 422 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 22


 772:.\Generated_Source\PSoC5/PWM_2.c ****     	CY_SET_REG8(PWM_2_CONTROL_PTR, control);
 423              		.loc 1 772 0
 424 000a 46F27243 		movw	r3, #:lower16:1073767538
 425 000e C4F20003 		movt	r3, #:upper16:1073767538
 426 0012 FA79     		ldrb	r2, [r7, #7]
 427 0014 1A70     		strb	r2, [r3, #0]
 773:.\Generated_Source\PSoC5/PWM_2.c ****     }
 428              		.loc 1 773 0
 429 0016 07F10C07 		add	r7, r7, #12
 430 001a BD46     		mov	sp, r7
 431 001c 80BC     		pop	{r7}
 432 001e 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE9:
 435              		.size	PWM_2_WriteControlRegister, .-PWM_2_WriteControlRegister
 436              		.section	.text.PWM_2_ReadCapture,"ax",%progbits
 437              		.align	2
 438              		.global	PWM_2_ReadCapture
 439              		.thumb
 440              		.thumb_func
 441              		.type	PWM_2_ReadCapture, %function
 442              	PWM_2_ReadCapture:
 443              	.LFB10:
 774:.\Generated_Source\PSoC5/PWM_2.c **** 	
 775:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseControl) */
 776:.\Generated_Source\PSoC5/PWM_2.c **** 
 777:.\Generated_Source\PSoC5/PWM_2.c **** 
 778:.\Generated_Source\PSoC5/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 779:.\Generated_Source\PSoC5/PWM_2.c **** 
 780:.\Generated_Source\PSoC5/PWM_2.c **** 
 781:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 782:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCapture
 783:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 784:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 785:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 786:.\Generated_Source\PSoC5/PWM_2.c ****     *  Reads the capture value from the capture FIFO.
 787:.\Generated_Source\PSoC5/PWM_2.c ****     *
 788:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 789:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 790:.\Generated_Source\PSoC5/PWM_2.c ****     *
 791:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 792:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: The current capture value
 793:.\Generated_Source\PSoC5/PWM_2.c ****     *
 794:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/  
 795:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadCapture(void)  
 796:.\Generated_Source\PSoC5/PWM_2.c ****     {
 444              		.loc 1 796 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 0000 80B4     		push	{r7}
 450              	.LCFI26:
 451              		.cfi_def_cfa_offset 4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_offset 7, -4
 454              	.LCFI27:
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 23


 455              		.cfi_def_cfa_register 7
 797:.\Generated_Source\PSoC5/PWM_2.c ****     	return (CY_GET_REG8(PWM_2_CAPTURE_LSB_PTR));
 456              		.loc 1 797 0
 457 0004 46F25243 		movw	r3, #:lower16:1073767506
 458 0008 C4F20003 		movt	r3, #:upper16:1073767506
 459 000c 1B78     		ldrb	r3, [r3, #0]
 460 000e DBB2     		uxtb	r3, r3
 798:.\Generated_Source\PSoC5/PWM_2.c ****     }
 461              		.loc 1 798 0
 462 0010 1846     		mov	r0, r3
 463 0012 BD46     		mov	sp, r7
 464 0014 80BC     		pop	{r7}
 465 0016 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE10:
 468              		.size	PWM_2_ReadCapture, .-PWM_2_ReadCapture
 469              		.section	.text.PWM_2_ReadCompare,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_2_ReadCompare
 472              		.thumb
 473              		.thumb_func
 474              		.type	PWM_2_ReadCompare, %function
 475              	PWM_2_ReadCompare:
 476              	.LFB11:
 799:.\Generated_Source\PSoC5/PWM_2.c **** 	
 800:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* (!PWM_2_UsingFixedFunction) */
 801:.\Generated_Source\PSoC5/PWM_2.c **** 
 802:.\Generated_Source\PSoC5/PWM_2.c **** 
 803:.\Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 804:.\Generated_Source\PSoC5/PWM_2.c **** 
 805:.\Generated_Source\PSoC5/PWM_2.c **** 
 806:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 807:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare
 808:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 809:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 810:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 811:.\Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is 
 812:.\Generated_Source\PSoC5/PWM_2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 813:.\Generated_Source\PSoC5/PWM_2.c ****     *
 814:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 815:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 816:.\Generated_Source\PSoC5/PWM_2.c ****     *
 817:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 818:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value
 819:.\Generated_Source\PSoC5/PWM_2.c ****     *
 820:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/  
 821:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadCompare(void)  
 822:.\Generated_Source\PSoC5/PWM_2.c ****     {
 477              		.loc 1 822 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 0000 80B4     		push	{r7}
 483              	.LCFI28:
 484              		.cfi_def_cfa_offset 4
 485 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 24


 486              		.cfi_offset 7, -4
 487              	.LCFI29:
 488              		.cfi_def_cfa_register 7
 823:.\Generated_Source\PSoC5/PWM_2.c **** 		#if(PWM_2_UsingFixedFunction)
 824:.\Generated_Source\PSoC5/PWM_2.c ****             return ((uint8)CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 825:.\Generated_Source\PSoC5/PWM_2.c ****         #else
 826:.\Generated_Source\PSoC5/PWM_2.c ****             return (CY_GET_REG8(PWM_2_COMPARE1_LSB_PTR));
 489              		.loc 1 826 0
 490 0004 46F22243 		movw	r3, #:lower16:1073767458
 491 0008 C4F20003 		movt	r3, #:upper16:1073767458
 492 000c 1B78     		ldrb	r3, [r3, #0]
 493 000e DBB2     		uxtb	r3, r3
 827:.\Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 828:.\Generated_Source\PSoC5/PWM_2.c ****     }
 494              		.loc 1 828 0
 495 0010 1846     		mov	r0, r3
 496 0012 BD46     		mov	sp, r7
 497 0014 80BC     		pop	{r7}
 498 0016 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE11:
 501              		.size	PWM_2_ReadCompare, .-PWM_2_ReadCompare
 502              		.section	.text.PWM_2_ReadPeriod,"ax",%progbits
 503              		.align	2
 504              		.global	PWM_2_ReadPeriod
 505              		.thumb
 506              		.thumb_func
 507              		.type	PWM_2_ReadPeriod, %function
 508              	PWM_2_ReadPeriod:
 509              	.LFB12:
 829:.\Generated_Source\PSoC5/PWM_2.c **** 
 830:.\Generated_Source\PSoC5/PWM_2.c **** #else
 831:.\Generated_Source\PSoC5/PWM_2.c **** 
 832:.\Generated_Source\PSoC5/PWM_2.c **** 
 833:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 834:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare1
 835:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 836:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 837:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 838:.\Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare1 output.
 839:.\Generated_Source\PSoC5/PWM_2.c ****     *
 840:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 841:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 842:.\Generated_Source\PSoC5/PWM_2.c ****     *
 843:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 844:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value.
 845:.\Generated_Source\PSoC5/PWM_2.c ****     *
 846:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/  
 847:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadCompare1(void) 
 848:.\Generated_Source\PSoC5/PWM_2.c ****     {
 849:.\Generated_Source\PSoC5/PWM_2.c **** 		return (CY_GET_REG8(PWM_2_COMPARE1_LSB_PTR));
 850:.\Generated_Source\PSoC5/PWM_2.c ****     }
 851:.\Generated_Source\PSoC5/PWM_2.c **** 
 852:.\Generated_Source\PSoC5/PWM_2.c **** 
 853:.\Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 854:.\Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare2
 855:.\Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 25


 856:.\Generated_Source\PSoC5/PWM_2.c ****     * 
 857:.\Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 858:.\Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare2 output.
 859:.\Generated_Source\PSoC5/PWM_2.c ****     *
 860:.\Generated_Source\PSoC5/PWM_2.c ****     * Parameters:  
 861:.\Generated_Source\PSoC5/PWM_2.c ****     *  None
 862:.\Generated_Source\PSoC5/PWM_2.c ****     *
 863:.\Generated_Source\PSoC5/PWM_2.c ****     * Return: 
 864:.\Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value.
 865:.\Generated_Source\PSoC5/PWM_2.c ****     *
 866:.\Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/  
 867:.\Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadCompare2(void)  
 868:.\Generated_Source\PSoC5/PWM_2.c ****     {
 869:.\Generated_Source\PSoC5/PWM_2.c **** 		return (CY_GET_REG8(PWM_2_COMPARE2_LSB_PTR));
 870:.\Generated_Source\PSoC5/PWM_2.c ****     }
 871:.\Generated_Source\PSoC5/PWM_2.c **** 
 872:.\Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseOneCompareMode) */
 873:.\Generated_Source\PSoC5/PWM_2.c **** 
 874:.\Generated_Source\PSoC5/PWM_2.c **** 
 875:.\Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 876:.\Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_ReadPeriod
 877:.\Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 878:.\Generated_Source\PSoC5/PWM_2.c **** * 
 879:.\Generated_Source\PSoC5/PWM_2.c **** * Summary:
 880:.\Generated_Source\PSoC5/PWM_2.c **** *  Reads the period value used by the PWM hardware.
 881:.\Generated_Source\PSoC5/PWM_2.c **** *
 882:.\Generated_Source\PSoC5/PWM_2.c **** * Parameters:  
 883:.\Generated_Source\PSoC5/PWM_2.c **** *  None
 884:.\Generated_Source\PSoC5/PWM_2.c **** *
 885:.\Generated_Source\PSoC5/PWM_2.c **** * Return: 
 886:.\Generated_Source\PSoC5/PWM_2.c **** *  uint8/16: Period value
 887:.\Generated_Source\PSoC5/PWM_2.c **** *
 888:.\Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/ 
 889:.\Generated_Source\PSoC5/PWM_2.c **** uint8 PWM_2_ReadPeriod(void) 
 890:.\Generated_Source\PSoC5/PWM_2.c **** {
 510              		.loc 1 890 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515 0000 80B4     		push	{r7}
 516              	.LCFI30:
 517              		.cfi_def_cfa_offset 4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_offset 7, -4
 520              	.LCFI31:
 521              		.cfi_def_cfa_register 7
 891:.\Generated_Source\PSoC5/PWM_2.c **** 	#if(PWM_2_UsingFixedFunction)
 892:.\Generated_Source\PSoC5/PWM_2.c ****         return ((uint8)CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 893:.\Generated_Source\PSoC5/PWM_2.c ****     #else
 894:.\Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG8(PWM_2_PERIOD_LSB_PTR));
 522              		.loc 1 894 0
 523 0004 46F23243 		movw	r3, #:lower16:1073767474
 524 0008 C4F20003 		movt	r3, #:upper16:1073767474
 525 000c 1B78     		ldrb	r3, [r3, #0]
 526 000e DBB2     		uxtb	r3, r3
 895:.\Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 26


 896:.\Generated_Source\PSoC5/PWM_2.c **** }
 527              		.loc 1 896 0
 528 0010 1846     		mov	r0, r3
 529 0012 BD46     		mov	sp, r7
 530 0014 80BC     		pop	{r7}
 531 0016 7047     		bx	lr
 532              		.cfi_endproc
 533              	.LFE12:
 534              		.size	PWM_2_ReadPeriod, .-PWM_2_ReadPeriod
 535              		.text
 536              	.Letext0:
 537              		.section	.debug_loc,"",%progbits
 538              	.Ldebug_loc0:
 539              	.LLST0:
 540 0000 00000000 		.4byte	.LFB0
 541 0004 02000000 		.4byte	.LCFI0
 542 0008 0100     		.2byte	0x1
 543 000a 5D       		.byte	0x5d
 544 000b 02000000 		.4byte	.LCFI0
 545 000f 04000000 		.4byte	.LCFI1
 546 0013 0200     		.2byte	0x2
 547 0015 7D       		.byte	0x7d
 548 0016 08       		.sleb128 8
 549 0017 04000000 		.4byte	.LCFI1
 550 001b 2A000000 		.4byte	.LFE0
 551 001f 0200     		.2byte	0x2
 552 0021 77       		.byte	0x77
 553 0022 08       		.sleb128 8
 554 0023 00000000 		.4byte	0x0
 555 0027 00000000 		.4byte	0x0
 556              	.LLST1:
 557 002b 00000000 		.4byte	.LFB1
 558 002f 02000000 		.4byte	.LCFI2
 559 0033 0100     		.2byte	0x1
 560 0035 5D       		.byte	0x5d
 561 0036 02000000 		.4byte	.LCFI2
 562 003a 04000000 		.4byte	.LCFI3
 563 003e 0200     		.2byte	0x2
 564 0040 7D       		.byte	0x7d
 565 0041 08       		.sleb128 8
 566 0042 04000000 		.4byte	.LCFI3
 567 0046 06000000 		.4byte	.LCFI4
 568 004a 0200     		.2byte	0x2
 569 004c 7D       		.byte	0x7d
 570 004d 10       		.sleb128 16
 571 004e 06000000 		.4byte	.LCFI4
 572 0052 66000000 		.4byte	.LFE1
 573 0056 0200     		.2byte	0x2
 574 0058 77       		.byte	0x77
 575 0059 10       		.sleb128 16
 576 005a 00000000 		.4byte	0x0
 577 005e 00000000 		.4byte	0x0
 578              	.LLST2:
 579 0062 00000000 		.4byte	.LFB2
 580 0066 02000000 		.4byte	.LCFI5
 581 006a 0100     		.2byte	0x1
 582 006c 5D       		.byte	0x5d
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 27


 583 006d 02000000 		.4byte	.LCFI5
 584 0071 04000000 		.4byte	.LCFI6
 585 0075 0200     		.2byte	0x2
 586 0077 7D       		.byte	0x7d
 587 0078 04       		.sleb128 4
 588 0079 04000000 		.4byte	.LCFI6
 589 007d 2A000000 		.4byte	.LFE2
 590 0081 0200     		.2byte	0x2
 591 0083 77       		.byte	0x77
 592 0084 04       		.sleb128 4
 593 0085 00000000 		.4byte	0x0
 594 0089 00000000 		.4byte	0x0
 595              	.LLST3:
 596 008d 00000000 		.4byte	.LFB3
 597 0091 02000000 		.4byte	.LCFI7
 598 0095 0100     		.2byte	0x1
 599 0097 5D       		.byte	0x5d
 600 0098 02000000 		.4byte	.LCFI7
 601 009c 04000000 		.4byte	.LCFI8
 602 00a0 0200     		.2byte	0x2
 603 00a2 7D       		.byte	0x7d
 604 00a3 04       		.sleb128 4
 605 00a4 04000000 		.4byte	.LCFI8
 606 00a8 24000000 		.4byte	.LFE3
 607 00ac 0200     		.2byte	0x2
 608 00ae 77       		.byte	0x77
 609 00af 04       		.sleb128 4
 610 00b0 00000000 		.4byte	0x0
 611 00b4 00000000 		.4byte	0x0
 612              	.LLST4:
 613 00b8 00000000 		.4byte	.LFB4
 614 00bc 02000000 		.4byte	.LCFI9
 615 00c0 0100     		.2byte	0x1
 616 00c2 5D       		.byte	0x5d
 617 00c3 02000000 		.4byte	.LCFI9
 618 00c7 04000000 		.4byte	.LCFI10
 619 00cb 0200     		.2byte	0x2
 620 00cd 7D       		.byte	0x7d
 621 00ce 04       		.sleb128 4
 622 00cf 04000000 		.4byte	.LCFI10
 623 00d3 06000000 		.4byte	.LCFI11
 624 00d7 0200     		.2byte	0x2
 625 00d9 7D       		.byte	0x7d
 626 00da 10       		.sleb128 16
 627 00db 06000000 		.4byte	.LCFI11
 628 00df 20000000 		.4byte	.LFE4
 629 00e3 0200     		.2byte	0x2
 630 00e5 77       		.byte	0x77
 631 00e6 10       		.sleb128 16
 632 00e7 00000000 		.4byte	0x0
 633 00eb 00000000 		.4byte	0x0
 634              	.LLST5:
 635 00ef 00000000 		.4byte	.LFB5
 636 00f3 02000000 		.4byte	.LCFI12
 637 00f7 0100     		.2byte	0x1
 638 00f9 5D       		.byte	0x5d
 639 00fa 02000000 		.4byte	.LCFI12
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 28


 640 00fe 04000000 		.4byte	.LCFI13
 641 0102 0200     		.2byte	0x2
 642 0104 7D       		.byte	0x7d
 643 0105 04       		.sleb128 4
 644 0106 04000000 		.4byte	.LCFI13
 645 010a 22000000 		.4byte	.LFE5
 646 010e 0200     		.2byte	0x2
 647 0110 77       		.byte	0x77
 648 0111 04       		.sleb128 4
 649 0112 00000000 		.4byte	0x0
 650 0116 00000000 		.4byte	0x0
 651              	.LLST6:
 652 011a 00000000 		.4byte	.LFB6
 653 011e 02000000 		.4byte	.LCFI14
 654 0122 0100     		.2byte	0x1
 655 0124 5D       		.byte	0x5d
 656 0125 02000000 		.4byte	.LCFI14
 657 0129 04000000 		.4byte	.LCFI15
 658 012d 0200     		.2byte	0x2
 659 012f 7D       		.byte	0x7d
 660 0130 04       		.sleb128 4
 661 0131 04000000 		.4byte	.LCFI15
 662 0135 06000000 		.4byte	.LCFI16
 663 0139 0200     		.2byte	0x2
 664 013b 7D       		.byte	0x7d
 665 013c 10       		.sleb128 16
 666 013d 06000000 		.4byte	.LCFI16
 667 0141 20000000 		.4byte	.LFE6
 668 0145 0200     		.2byte	0x2
 669 0147 77       		.byte	0x77
 670 0148 10       		.sleb128 16
 671 0149 00000000 		.4byte	0x0
 672 014d 00000000 		.4byte	0x0
 673              	.LLST7:
 674 0151 00000000 		.4byte	.LFB7
 675 0155 02000000 		.4byte	.LCFI17
 676 0159 0100     		.2byte	0x1
 677 015b 5D       		.byte	0x5d
 678 015c 02000000 		.4byte	.LCFI17
 679 0160 04000000 		.4byte	.LCFI18
 680 0164 0200     		.2byte	0x2
 681 0166 7D       		.byte	0x7d
 682 0167 04       		.sleb128 4
 683 0168 04000000 		.4byte	.LCFI18
 684 016c 06000000 		.4byte	.LCFI19
 685 0170 0200     		.2byte	0x2
 686 0172 7D       		.byte	0x7d
 687 0173 10       		.sleb128 16
 688 0174 06000000 		.4byte	.LCFI19
 689 0178 20000000 		.4byte	.LFE7
 690 017c 0200     		.2byte	0x2
 691 017e 77       		.byte	0x77
 692 017f 10       		.sleb128 16
 693 0180 00000000 		.4byte	0x0
 694 0184 00000000 		.4byte	0x0
 695              	.LLST8:
 696 0188 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 29


 697 018c 02000000 		.4byte	.LCFI20
 698 0190 0100     		.2byte	0x1
 699 0192 5D       		.byte	0x5d
 700 0193 02000000 		.4byte	.LCFI20
 701 0197 04000000 		.4byte	.LCFI21
 702 019b 0200     		.2byte	0x2
 703 019d 7D       		.byte	0x7d
 704 019e 04       		.sleb128 4
 705 019f 04000000 		.4byte	.LCFI21
 706 01a3 06000000 		.4byte	.LCFI22
 707 01a7 0200     		.2byte	0x2
 708 01a9 7D       		.byte	0x7d
 709 01aa 10       		.sleb128 16
 710 01ab 06000000 		.4byte	.LCFI22
 711 01af 20000000 		.4byte	.LFE8
 712 01b3 0200     		.2byte	0x2
 713 01b5 77       		.byte	0x77
 714 01b6 10       		.sleb128 16
 715 01b7 00000000 		.4byte	0x0
 716 01bb 00000000 		.4byte	0x0
 717              	.LLST9:
 718 01bf 00000000 		.4byte	.LFB9
 719 01c3 02000000 		.4byte	.LCFI23
 720 01c7 0100     		.2byte	0x1
 721 01c9 5D       		.byte	0x5d
 722 01ca 02000000 		.4byte	.LCFI23
 723 01ce 04000000 		.4byte	.LCFI24
 724 01d2 0200     		.2byte	0x2
 725 01d4 7D       		.byte	0x7d
 726 01d5 04       		.sleb128 4
 727 01d6 04000000 		.4byte	.LCFI24
 728 01da 06000000 		.4byte	.LCFI25
 729 01de 0200     		.2byte	0x2
 730 01e0 7D       		.byte	0x7d
 731 01e1 10       		.sleb128 16
 732 01e2 06000000 		.4byte	.LCFI25
 733 01e6 20000000 		.4byte	.LFE9
 734 01ea 0200     		.2byte	0x2
 735 01ec 77       		.byte	0x77
 736 01ed 10       		.sleb128 16
 737 01ee 00000000 		.4byte	0x0
 738 01f2 00000000 		.4byte	0x0
 739              	.LLST10:
 740 01f6 00000000 		.4byte	.LFB10
 741 01fa 02000000 		.4byte	.LCFI26
 742 01fe 0100     		.2byte	0x1
 743 0200 5D       		.byte	0x5d
 744 0201 02000000 		.4byte	.LCFI26
 745 0205 04000000 		.4byte	.LCFI27
 746 0209 0200     		.2byte	0x2
 747 020b 7D       		.byte	0x7d
 748 020c 04       		.sleb128 4
 749 020d 04000000 		.4byte	.LCFI27
 750 0211 18000000 		.4byte	.LFE10
 751 0215 0200     		.2byte	0x2
 752 0217 77       		.byte	0x77
 753 0218 04       		.sleb128 4
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 30


 754 0219 00000000 		.4byte	0x0
 755 021d 00000000 		.4byte	0x0
 756              	.LLST11:
 757 0221 00000000 		.4byte	.LFB11
 758 0225 02000000 		.4byte	.LCFI28
 759 0229 0100     		.2byte	0x1
 760 022b 5D       		.byte	0x5d
 761 022c 02000000 		.4byte	.LCFI28
 762 0230 04000000 		.4byte	.LCFI29
 763 0234 0200     		.2byte	0x2
 764 0236 7D       		.byte	0x7d
 765 0237 04       		.sleb128 4
 766 0238 04000000 		.4byte	.LCFI29
 767 023c 18000000 		.4byte	.LFE11
 768 0240 0200     		.2byte	0x2
 769 0242 77       		.byte	0x77
 770 0243 04       		.sleb128 4
 771 0244 00000000 		.4byte	0x0
 772 0248 00000000 		.4byte	0x0
 773              	.LLST12:
 774 024c 00000000 		.4byte	.LFB12
 775 0250 02000000 		.4byte	.LCFI30
 776 0254 0100     		.2byte	0x1
 777 0256 5D       		.byte	0x5d
 778 0257 02000000 		.4byte	.LCFI30
 779 025b 04000000 		.4byte	.LCFI31
 780 025f 0200     		.2byte	0x2
 781 0261 7D       		.byte	0x7d
 782 0262 04       		.sleb128 4
 783 0263 04000000 		.4byte	.LCFI31
 784 0267 18000000 		.4byte	.LFE12
 785 026b 0200     		.2byte	0x2
 786 026d 77       		.byte	0x77
 787 026e 04       		.sleb128 4
 788 026f 00000000 		.4byte	0x0
 789 0273 00000000 		.4byte	0x0
 790              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 791              		.section	.debug_info
 792 0000 46020000 		.4byte	0x246
 793 0004 0200     		.2byte	0x2
 794 0006 00000000 		.4byte	.Ldebug_abbrev0
 795 000a 04       		.byte	0x4
 796 000b 01       		.uleb128 0x1
 797 000c C7010000 		.4byte	.LASF30
 798 0010 01       		.byte	0x1
 799 0011 FF000000 		.4byte	.LASF31
 800 0015 71010000 		.4byte	.LASF32
 801 0019 00000000 		.4byte	0x0
 802 001d 00000000 		.4byte	0x0
 803 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 804 0025 00000000 		.4byte	.Ldebug_line0
 805 0029 02       		.uleb128 0x2
 806 002a 01       		.byte	0x1
 807 002b 06       		.byte	0x6
 808 002c 14020000 		.4byte	.LASF0
 809 0030 02       		.uleb128 0x2
 810 0031 01       		.byte	0x1
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 31


 811 0032 08       		.byte	0x8
 812 0033 7F000000 		.4byte	.LASF1
 813 0037 02       		.uleb128 0x2
 814 0038 02       		.byte	0x2
 815 0039 05       		.byte	0x5
 816 003a D8010000 		.4byte	.LASF2
 817 003e 02       		.uleb128 0x2
 818 003f 02       		.byte	0x2
 819 0040 07       		.byte	0x7
 820 0041 41000000 		.4byte	.LASF3
 821 0045 02       		.uleb128 0x2
 822 0046 04       		.byte	0x4
 823 0047 05       		.byte	0x5
 824 0048 EF010000 		.4byte	.LASF4
 825 004c 02       		.uleb128 0x2
 826 004d 04       		.byte	0x4
 827 004e 07       		.byte	0x7
 828 004f 8D000000 		.4byte	.LASF5
 829 0053 02       		.uleb128 0x2
 830 0054 08       		.byte	0x8
 831 0055 05       		.byte	0x5
 832 0056 00000000 		.4byte	.LASF6
 833 005a 02       		.uleb128 0x2
 834 005b 08       		.byte	0x8
 835 005c 07       		.byte	0x7
 836 005d 53010000 		.4byte	.LASF7
 837 0061 03       		.uleb128 0x3
 838 0062 04       		.byte	0x4
 839 0063 05       		.byte	0x5
 840 0064 696E7400 		.ascii	"int\000"
 841 0068 02       		.uleb128 0x2
 842 0069 04       		.byte	0x4
 843 006a 07       		.byte	0x7
 844 006b 33010000 		.4byte	.LASF8
 845 006f 04       		.uleb128 0x4
 846 0070 9F000000 		.4byte	.LASF33
 847 0074 02       		.byte	0x2
 848 0075 4C       		.byte	0x4c
 849 0076 30000000 		.4byte	0x30
 850 007a 02       		.uleb128 0x2
 851 007b 04       		.byte	0x4
 852 007c 04       		.byte	0x4
 853 007d 71000000 		.4byte	.LASF9
 854 0081 02       		.uleb128 0x2
 855 0082 08       		.byte	0x8
 856 0083 04       		.byte	0x4
 857 0084 EC000000 		.4byte	.LASF10
 858 0088 02       		.uleb128 0x2
 859 0089 01       		.byte	0x1
 860 008a 08       		.byte	0x8
 861 008b D3010000 		.4byte	.LASF11
 862 008f 05       		.uleb128 0x5
 863 0090 04       		.byte	0x4
 864 0091 07       		.byte	0x7
 865 0092 06       		.uleb128 0x6
 866 0093 01       		.byte	0x1
 867 0094 F3000000 		.4byte	.LASF12
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 32


 868 0098 01       		.byte	0x1
 869 0099 32       		.byte	0x32
 870 009a 01       		.byte	0x1
 871 009b 00000000 		.4byte	.LFB0
 872 009f 2A000000 		.4byte	.LFE0
 873 00a3 00000000 		.4byte	.LLST0
 874 00a7 07       		.uleb128 0x7
 875 00a8 01       		.byte	0x1
 876 00a9 09020000 		.4byte	.LASF15
 877 00ad 01       		.byte	0x1
 878 00ae 4F       		.byte	0x4f
 879 00af 01       		.byte	0x1
 880 00b0 00000000 		.4byte	.LFB1
 881 00b4 66000000 		.4byte	.LFE1
 882 00b8 2B000000 		.4byte	.LLST1
 883 00bc CF000000 		.4byte	0xcf
 884 00c0 08       		.uleb128 0x8
 885 00c1 C2010000 		.4byte	.LASF22
 886 00c5 01       		.byte	0x1
 887 00c6 52       		.byte	0x52
 888 00c7 6F000000 		.4byte	0x6f
 889 00cb 02       		.byte	0x2
 890 00cc 91       		.byte	0x91
 891 00cd 77       		.sleb128 -9
 892 00ce 00       		.byte	0x0
 893 00cf 06       		.uleb128 0x6
 894 00d0 01       		.byte	0x1
 895 00d1 E2010000 		.4byte	.LASF13
 896 00d5 01       		.byte	0x1
 897 00d6 C8       		.byte	0xc8
 898 00d7 01       		.byte	0x1
 899 00d8 00000000 		.4byte	.LFB2
 900 00dc 2A000000 		.4byte	.LFE2
 901 00e0 62000000 		.4byte	.LLST2
 902 00e4 06       		.uleb128 0x6
 903 00e5 01       		.byte	0x1
 904 00e6 54000000 		.4byte	.LASF14
 905 00ea 01       		.byte	0x1
 906 00eb EA       		.byte	0xea
 907 00ec 01       		.byte	0x1
 908 00ed 00000000 		.4byte	.LFB3
 909 00f1 24000000 		.4byte	.LFE3
 910 00f5 8D000000 		.4byte	.LLST3
 911 00f9 09       		.uleb128 0x9
 912 00fa 01       		.byte	0x1
 913 00fb 40010000 		.4byte	.LASF16
 914 00ff 01       		.byte	0x1
 915 0100 9501     		.2byte	0x195
 916 0102 01       		.byte	0x1
 917 0103 00000000 		.4byte	.LFB4
 918 0107 20000000 		.4byte	.LFE4
 919 010b B8000000 		.4byte	.LLST4
 920 010f 23010000 		.4byte	0x123
 921 0113 0A       		.uleb128 0xa
 922 0114 77000000 		.4byte	.LASF18
 923 0118 01       		.byte	0x1
 924 0119 9501     		.2byte	0x195
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 33


 925 011b 6F000000 		.4byte	0x6f
 926 011f 02       		.byte	0x2
 927 0120 91       		.byte	0x91
 928 0121 77       		.sleb128 -9
 929 0122 00       		.byte	0x0
 930 0123 0B       		.uleb128 0xb
 931 0124 01       		.byte	0x1
 932 0125 C8000000 		.4byte	.LASF26
 933 0129 01       		.byte	0x1
 934 012a AB01     		.2byte	0x1ab
 935 012c 01       		.byte	0x1
 936 012d 6F000000 		.4byte	0x6f
 937 0131 00000000 		.4byte	.LFB5
 938 0135 22000000 		.4byte	.LFE5
 939 0139 EF000000 		.4byte	.LLST5
 940 013d 09       		.uleb128 0x9
 941 013e 01       		.byte	0x1
 942 013f DA000000 		.4byte	.LASF17
 943 0143 01       		.byte	0x1
 944 0144 E401     		.2byte	0x1e4
 945 0146 01       		.byte	0x1
 946 0147 00000000 		.4byte	.LFB6
 947 014b 20000000 		.4byte	.LFE6
 948 014f 1A010000 		.4byte	.LLST6
 949 0153 67010000 		.4byte	0x167
 950 0157 0A       		.uleb128 0xa
 951 0158 3A000000 		.4byte	.LASF19
 952 015c 01       		.byte	0x1
 953 015d E401     		.2byte	0x1e4
 954 015f 6F000000 		.4byte	0x6f
 955 0163 02       		.byte	0x2
 956 0164 91       		.byte	0x91
 957 0165 77       		.sleb128 -9
 958 0166 00       		.byte	0x0
 959 0167 09       		.uleb128 0x9
 960 0168 01       		.byte	0x1
 961 0169 20010000 		.4byte	.LASF20
 962 016d 01       		.byte	0x1
 963 016e 0602     		.2byte	0x206
 964 0170 01       		.byte	0x1
 965 0171 00000000 		.4byte	.LFB7
 966 0175 20000000 		.4byte	.LFE7
 967 0179 51010000 		.4byte	.LLST7
 968 017d 91010000 		.4byte	0x191
 969 0181 0A       		.uleb128 0xa
 970 0182 20020000 		.4byte	.LASF21
 971 0186 01       		.byte	0x1
 972 0187 0602     		.2byte	0x206
 973 0189 6F000000 		.4byte	0x6f
 974 018d 02       		.byte	0x2
 975 018e 91       		.byte	0x91
 976 018f 77       		.sleb128 -9
 977 0190 00       		.byte	0x0
 978 0191 0C       		.uleb128 0xc
 979 0192 01       		.byte	0x1
 980 0193 0E000000 		.4byte	.LASF34
 981 0197 01       		.byte	0x1
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 34


 982 0198 E602     		.2byte	0x2e6
 983 019a 01       		.byte	0x1
 984 019b 6F000000 		.4byte	0x6f
 985 019f 00000000 		.4byte	.LFB8
 986 01a3 20000000 		.4byte	.LFE8
 987 01a7 88010000 		.4byte	.LLST8
 988 01ab BF010000 		.4byte	0x1bf
 989 01af 0D       		.uleb128 0xd
 990 01b0 6A010000 		.4byte	.LASF23
 991 01b4 01       		.byte	0x1
 992 01b5 E802     		.2byte	0x2e8
 993 01b7 6F000000 		.4byte	0x6f
 994 01bb 02       		.byte	0x2
 995 01bc 91       		.byte	0x91
 996 01bd 77       		.sleb128 -9
 997 01be 00       		.byte	0x0
 998 01bf 09       		.uleb128 0x9
 999 01c0 01       		.byte	0x1
 1000 01c1 AD000000 		.4byte	.LASF24
 1001 01c5 01       		.byte	0x1
 1002 01c6 0203     		.2byte	0x302
 1003 01c8 01       		.byte	0x1
 1004 01c9 00000000 		.4byte	.LFB9
 1005 01cd 20000000 		.4byte	.LFE9
 1006 01d1 BF010000 		.4byte	.LLST9
 1007 01d5 E9010000 		.4byte	0x1e9
 1008 01d9 0A       		.uleb128 0xa
 1009 01da A5000000 		.4byte	.LASF25
 1010 01de 01       		.byte	0x1
 1011 01df 0203     		.2byte	0x302
 1012 01e1 6F000000 		.4byte	0x6f
 1013 01e5 02       		.byte	0x2
 1014 01e6 91       		.byte	0x91
 1015 01e7 77       		.sleb128 -9
 1016 01e8 00       		.byte	0x0
 1017 01e9 0B       		.uleb128 0xb
 1018 01ea 01       		.byte	0x1
 1019 01eb 5F000000 		.4byte	.LASF27
 1020 01ef 01       		.byte	0x1
 1021 01f0 1B03     		.2byte	0x31b
 1022 01f2 01       		.byte	0x1
 1023 01f3 6F000000 		.4byte	0x6f
 1024 01f7 00000000 		.4byte	.LFB10
 1025 01fb 18000000 		.4byte	.LFE10
 1026 01ff F6010000 		.4byte	.LLST10
 1027 0203 0B       		.uleb128 0xb
 1028 0204 01       		.byte	0x1
 1029 0205 28000000 		.4byte	.LASF28
 1030 0209 01       		.byte	0x1
 1031 020a 3503     		.2byte	0x335
 1032 020c 01       		.byte	0x1
 1033 020d 6F000000 		.4byte	0x6f
 1034 0211 00000000 		.4byte	.LFB11
 1035 0215 18000000 		.4byte	.LFE11
 1036 0219 21020000 		.4byte	.LLST11
 1037 021d 0B       		.uleb128 0xb
 1038 021e 01       		.byte	0x1
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 35


 1039 021f F8010000 		.4byte	.LASF29
 1040 0223 01       		.byte	0x1
 1041 0224 7903     		.2byte	0x379
 1042 0226 01       		.byte	0x1
 1043 0227 6F000000 		.4byte	0x6f
 1044 022b 00000000 		.4byte	.LFB12
 1045 022f 18000000 		.4byte	.LFE12
 1046 0233 4C020000 		.4byte	.LLST12
 1047 0237 0E       		.uleb128 0xe
 1048 0238 28020000 		.4byte	.LASF35
 1049 023c 01       		.byte	0x1
 1050 023d 1B       		.byte	0x1b
 1051 023e 6F000000 		.4byte	0x6f
 1052 0242 01       		.byte	0x1
 1053 0243 05       		.byte	0x5
 1054 0244 03       		.byte	0x3
 1055 0245 00000000 		.4byte	PWM_2_initVar
 1056 0249 00       		.byte	0x0
 1057              		.section	.debug_abbrev
 1058 0000 01       		.uleb128 0x1
 1059 0001 11       		.uleb128 0x11
 1060 0002 01       		.byte	0x1
 1061 0003 25       		.uleb128 0x25
 1062 0004 0E       		.uleb128 0xe
 1063 0005 13       		.uleb128 0x13
 1064 0006 0B       		.uleb128 0xb
 1065 0007 03       		.uleb128 0x3
 1066 0008 0E       		.uleb128 0xe
 1067 0009 1B       		.uleb128 0x1b
 1068 000a 0E       		.uleb128 0xe
 1069 000b 11       		.uleb128 0x11
 1070 000c 01       		.uleb128 0x1
 1071 000d 52       		.uleb128 0x52
 1072 000e 01       		.uleb128 0x1
 1073 000f 55       		.uleb128 0x55
 1074 0010 06       		.uleb128 0x6
 1075 0011 10       		.uleb128 0x10
 1076 0012 06       		.uleb128 0x6
 1077 0013 00       		.byte	0x0
 1078 0014 00       		.byte	0x0
 1079 0015 02       		.uleb128 0x2
 1080 0016 24       		.uleb128 0x24
 1081 0017 00       		.byte	0x0
 1082 0018 0B       		.uleb128 0xb
 1083 0019 0B       		.uleb128 0xb
 1084 001a 3E       		.uleb128 0x3e
 1085 001b 0B       		.uleb128 0xb
 1086 001c 03       		.uleb128 0x3
 1087 001d 0E       		.uleb128 0xe
 1088 001e 00       		.byte	0x0
 1089 001f 00       		.byte	0x0
 1090 0020 03       		.uleb128 0x3
 1091 0021 24       		.uleb128 0x24
 1092 0022 00       		.byte	0x0
 1093 0023 0B       		.uleb128 0xb
 1094 0024 0B       		.uleb128 0xb
 1095 0025 3E       		.uleb128 0x3e
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 36


 1096 0026 0B       		.uleb128 0xb
 1097 0027 03       		.uleb128 0x3
 1098 0028 08       		.uleb128 0x8
 1099 0029 00       		.byte	0x0
 1100 002a 00       		.byte	0x0
 1101 002b 04       		.uleb128 0x4
 1102 002c 16       		.uleb128 0x16
 1103 002d 00       		.byte	0x0
 1104 002e 03       		.uleb128 0x3
 1105 002f 0E       		.uleb128 0xe
 1106 0030 3A       		.uleb128 0x3a
 1107 0031 0B       		.uleb128 0xb
 1108 0032 3B       		.uleb128 0x3b
 1109 0033 0B       		.uleb128 0xb
 1110 0034 49       		.uleb128 0x49
 1111 0035 13       		.uleb128 0x13
 1112 0036 00       		.byte	0x0
 1113 0037 00       		.byte	0x0
 1114 0038 05       		.uleb128 0x5
 1115 0039 24       		.uleb128 0x24
 1116 003a 00       		.byte	0x0
 1117 003b 0B       		.uleb128 0xb
 1118 003c 0B       		.uleb128 0xb
 1119 003d 3E       		.uleb128 0x3e
 1120 003e 0B       		.uleb128 0xb
 1121 003f 00       		.byte	0x0
 1122 0040 00       		.byte	0x0
 1123 0041 06       		.uleb128 0x6
 1124 0042 2E       		.uleb128 0x2e
 1125 0043 00       		.byte	0x0
 1126 0044 3F       		.uleb128 0x3f
 1127 0045 0C       		.uleb128 0xc
 1128 0046 03       		.uleb128 0x3
 1129 0047 0E       		.uleb128 0xe
 1130 0048 3A       		.uleb128 0x3a
 1131 0049 0B       		.uleb128 0xb
 1132 004a 3B       		.uleb128 0x3b
 1133 004b 0B       		.uleb128 0xb
 1134 004c 27       		.uleb128 0x27
 1135 004d 0C       		.uleb128 0xc
 1136 004e 11       		.uleb128 0x11
 1137 004f 01       		.uleb128 0x1
 1138 0050 12       		.uleb128 0x12
 1139 0051 01       		.uleb128 0x1
 1140 0052 40       		.uleb128 0x40
 1141 0053 06       		.uleb128 0x6
 1142 0054 00       		.byte	0x0
 1143 0055 00       		.byte	0x0
 1144 0056 07       		.uleb128 0x7
 1145 0057 2E       		.uleb128 0x2e
 1146 0058 01       		.byte	0x1
 1147 0059 3F       		.uleb128 0x3f
 1148 005a 0C       		.uleb128 0xc
 1149 005b 03       		.uleb128 0x3
 1150 005c 0E       		.uleb128 0xe
 1151 005d 3A       		.uleb128 0x3a
 1152 005e 0B       		.uleb128 0xb
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 37


 1153 005f 3B       		.uleb128 0x3b
 1154 0060 0B       		.uleb128 0xb
 1155 0061 27       		.uleb128 0x27
 1156 0062 0C       		.uleb128 0xc
 1157 0063 11       		.uleb128 0x11
 1158 0064 01       		.uleb128 0x1
 1159 0065 12       		.uleb128 0x12
 1160 0066 01       		.uleb128 0x1
 1161 0067 40       		.uleb128 0x40
 1162 0068 06       		.uleb128 0x6
 1163 0069 01       		.uleb128 0x1
 1164 006a 13       		.uleb128 0x13
 1165 006b 00       		.byte	0x0
 1166 006c 00       		.byte	0x0
 1167 006d 08       		.uleb128 0x8
 1168 006e 34       		.uleb128 0x34
 1169 006f 00       		.byte	0x0
 1170 0070 03       		.uleb128 0x3
 1171 0071 0E       		.uleb128 0xe
 1172 0072 3A       		.uleb128 0x3a
 1173 0073 0B       		.uleb128 0xb
 1174 0074 3B       		.uleb128 0x3b
 1175 0075 0B       		.uleb128 0xb
 1176 0076 49       		.uleb128 0x49
 1177 0077 13       		.uleb128 0x13
 1178 0078 02       		.uleb128 0x2
 1179 0079 0A       		.uleb128 0xa
 1180 007a 00       		.byte	0x0
 1181 007b 00       		.byte	0x0
 1182 007c 09       		.uleb128 0x9
 1183 007d 2E       		.uleb128 0x2e
 1184 007e 01       		.byte	0x1
 1185 007f 3F       		.uleb128 0x3f
 1186 0080 0C       		.uleb128 0xc
 1187 0081 03       		.uleb128 0x3
 1188 0082 0E       		.uleb128 0xe
 1189 0083 3A       		.uleb128 0x3a
 1190 0084 0B       		.uleb128 0xb
 1191 0085 3B       		.uleb128 0x3b
 1192 0086 05       		.uleb128 0x5
 1193 0087 27       		.uleb128 0x27
 1194 0088 0C       		.uleb128 0xc
 1195 0089 11       		.uleb128 0x11
 1196 008a 01       		.uleb128 0x1
 1197 008b 12       		.uleb128 0x12
 1198 008c 01       		.uleb128 0x1
 1199 008d 40       		.uleb128 0x40
 1200 008e 06       		.uleb128 0x6
 1201 008f 01       		.uleb128 0x1
 1202 0090 13       		.uleb128 0x13
 1203 0091 00       		.byte	0x0
 1204 0092 00       		.byte	0x0
 1205 0093 0A       		.uleb128 0xa
 1206 0094 05       		.uleb128 0x5
 1207 0095 00       		.byte	0x0
 1208 0096 03       		.uleb128 0x3
 1209 0097 0E       		.uleb128 0xe
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 38


 1210 0098 3A       		.uleb128 0x3a
 1211 0099 0B       		.uleb128 0xb
 1212 009a 3B       		.uleb128 0x3b
 1213 009b 05       		.uleb128 0x5
 1214 009c 49       		.uleb128 0x49
 1215 009d 13       		.uleb128 0x13
 1216 009e 02       		.uleb128 0x2
 1217 009f 0A       		.uleb128 0xa
 1218 00a0 00       		.byte	0x0
 1219 00a1 00       		.byte	0x0
 1220 00a2 0B       		.uleb128 0xb
 1221 00a3 2E       		.uleb128 0x2e
 1222 00a4 00       		.byte	0x0
 1223 00a5 3F       		.uleb128 0x3f
 1224 00a6 0C       		.uleb128 0xc
 1225 00a7 03       		.uleb128 0x3
 1226 00a8 0E       		.uleb128 0xe
 1227 00a9 3A       		.uleb128 0x3a
 1228 00aa 0B       		.uleb128 0xb
 1229 00ab 3B       		.uleb128 0x3b
 1230 00ac 05       		.uleb128 0x5
 1231 00ad 27       		.uleb128 0x27
 1232 00ae 0C       		.uleb128 0xc
 1233 00af 49       		.uleb128 0x49
 1234 00b0 13       		.uleb128 0x13
 1235 00b1 11       		.uleb128 0x11
 1236 00b2 01       		.uleb128 0x1
 1237 00b3 12       		.uleb128 0x12
 1238 00b4 01       		.uleb128 0x1
 1239 00b5 40       		.uleb128 0x40
 1240 00b6 06       		.uleb128 0x6
 1241 00b7 00       		.byte	0x0
 1242 00b8 00       		.byte	0x0
 1243 00b9 0C       		.uleb128 0xc
 1244 00ba 2E       		.uleb128 0x2e
 1245 00bb 01       		.byte	0x1
 1246 00bc 3F       		.uleb128 0x3f
 1247 00bd 0C       		.uleb128 0xc
 1248 00be 03       		.uleb128 0x3
 1249 00bf 0E       		.uleb128 0xe
 1250 00c0 3A       		.uleb128 0x3a
 1251 00c1 0B       		.uleb128 0xb
 1252 00c2 3B       		.uleb128 0x3b
 1253 00c3 05       		.uleb128 0x5
 1254 00c4 27       		.uleb128 0x27
 1255 00c5 0C       		.uleb128 0xc
 1256 00c6 49       		.uleb128 0x49
 1257 00c7 13       		.uleb128 0x13
 1258 00c8 11       		.uleb128 0x11
 1259 00c9 01       		.uleb128 0x1
 1260 00ca 12       		.uleb128 0x12
 1261 00cb 01       		.uleb128 0x1
 1262 00cc 40       		.uleb128 0x40
 1263 00cd 06       		.uleb128 0x6
 1264 00ce 01       		.uleb128 0x1
 1265 00cf 13       		.uleb128 0x13
 1266 00d0 00       		.byte	0x0
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 39


 1267 00d1 00       		.byte	0x0
 1268 00d2 0D       		.uleb128 0xd
 1269 00d3 34       		.uleb128 0x34
 1270 00d4 00       		.byte	0x0
 1271 00d5 03       		.uleb128 0x3
 1272 00d6 0E       		.uleb128 0xe
 1273 00d7 3A       		.uleb128 0x3a
 1274 00d8 0B       		.uleb128 0xb
 1275 00d9 3B       		.uleb128 0x3b
 1276 00da 05       		.uleb128 0x5
 1277 00db 49       		.uleb128 0x49
 1278 00dc 13       		.uleb128 0x13
 1279 00dd 02       		.uleb128 0x2
 1280 00de 0A       		.uleb128 0xa
 1281 00df 00       		.byte	0x0
 1282 00e0 00       		.byte	0x0
 1283 00e1 0E       		.uleb128 0xe
 1284 00e2 34       		.uleb128 0x34
 1285 00e3 00       		.byte	0x0
 1286 00e4 03       		.uleb128 0x3
 1287 00e5 0E       		.uleb128 0xe
 1288 00e6 3A       		.uleb128 0x3a
 1289 00e7 0B       		.uleb128 0xb
 1290 00e8 3B       		.uleb128 0x3b
 1291 00e9 0B       		.uleb128 0xb
 1292 00ea 49       		.uleb128 0x49
 1293 00eb 13       		.uleb128 0x13
 1294 00ec 3F       		.uleb128 0x3f
 1295 00ed 0C       		.uleb128 0xc
 1296 00ee 02       		.uleb128 0x2
 1297 00ef 0A       		.uleb128 0xa
 1298 00f0 00       		.byte	0x0
 1299 00f1 00       		.byte	0x0
 1300 00f2 00       		.byte	0x0
 1301              		.section	.debug_pubnames,"",%progbits
 1302 0000 37010000 		.4byte	0x137
 1303 0004 0200     		.2byte	0x2
 1304 0006 00000000 		.4byte	.Ldebug_info0
 1305 000a 4A020000 		.4byte	0x24a
 1306 000e 92000000 		.4byte	0x92
 1307 0012 50574D5F 		.ascii	"PWM_2_Start\000"
 1307      325F5374 
 1307      61727400 
 1308 001e A7000000 		.4byte	0xa7
 1309 0022 50574D5F 		.ascii	"PWM_2_Init\000"
 1309      325F496E 
 1309      697400
 1310 002d CF000000 		.4byte	0xcf
 1311 0031 50574D5F 		.ascii	"PWM_2_Enable\000"
 1311      325F456E 
 1311      61626C65 
 1311      00
 1312 003e E4000000 		.4byte	0xe4
 1313 0042 50574D5F 		.ascii	"PWM_2_Stop\000"
 1313      325F5374 
 1313      6F7000
 1314 004d F9000000 		.4byte	0xf9
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 40


 1315 0051 50574D5F 		.ascii	"PWM_2_WriteCounter\000"
 1315      325F5772 
 1315      69746543 
 1315      6F756E74 
 1315      657200
 1316 0064 23010000 		.4byte	0x123
 1317 0068 50574D5F 		.ascii	"PWM_2_ReadCounter\000"
 1317      325F5265 
 1317      6164436F 
 1317      756E7465 
 1317      7200
 1318 007a 3D010000 		.4byte	0x13d
 1319 007e 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 1319      325F5772 
 1319      69746550 
 1319      6572696F 
 1319      6400
 1320 0090 67010000 		.4byte	0x167
 1321 0094 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 1321      325F5772 
 1321      69746543 
 1321      6F6D7061 
 1321      726500
 1322 00a7 91010000 		.4byte	0x191
 1323 00ab 50574D5F 		.ascii	"PWM_2_ReadControlRegister\000"
 1323      325F5265 
 1323      6164436F 
 1323      6E74726F 
 1323      6C526567 
 1324 00c5 BF010000 		.4byte	0x1bf
 1325 00c9 50574D5F 		.ascii	"PWM_2_WriteControlRegister\000"
 1325      325F5772 
 1325      69746543 
 1325      6F6E7472 
 1325      6F6C5265 
 1326 00e4 E9010000 		.4byte	0x1e9
 1327 00e8 50574D5F 		.ascii	"PWM_2_ReadCapture\000"
 1327      325F5265 
 1327      61644361 
 1327      70747572 
 1327      6500
 1328 00fa 03020000 		.4byte	0x203
 1329 00fe 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 1329      325F5265 
 1329      6164436F 
 1329      6D706172 
 1329      6500
 1330 0110 1D020000 		.4byte	0x21d
 1331 0114 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 1331      325F5265 
 1331      61645065 
 1331      72696F64 
 1331      00
 1332 0125 37020000 		.4byte	0x237
 1333 0129 50574D5F 		.ascii	"PWM_2_initVar\000"
 1333      325F696E 
 1333      69745661 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 41


 1333      7200
 1334 0137 00000000 		.4byte	0x0
 1335              		.section	.debug_aranges,"",%progbits
 1336 0000 7C000000 		.4byte	0x7c
 1337 0004 0200     		.2byte	0x2
 1338 0006 00000000 		.4byte	.Ldebug_info0
 1339 000a 04       		.byte	0x4
 1340 000b 00       		.byte	0x0
 1341 000c 0000     		.2byte	0x0
 1342 000e 0000     		.2byte	0x0
 1343 0010 00000000 		.4byte	.LFB0
 1344 0014 2A000000 		.4byte	.LFE0-.LFB0
 1345 0018 00000000 		.4byte	.LFB1
 1346 001c 66000000 		.4byte	.LFE1-.LFB1
 1347 0020 00000000 		.4byte	.LFB2
 1348 0024 2A000000 		.4byte	.LFE2-.LFB2
 1349 0028 00000000 		.4byte	.LFB3
 1350 002c 24000000 		.4byte	.LFE3-.LFB3
 1351 0030 00000000 		.4byte	.LFB4
 1352 0034 20000000 		.4byte	.LFE4-.LFB4
 1353 0038 00000000 		.4byte	.LFB5
 1354 003c 22000000 		.4byte	.LFE5-.LFB5
 1355 0040 00000000 		.4byte	.LFB6
 1356 0044 20000000 		.4byte	.LFE6-.LFB6
 1357 0048 00000000 		.4byte	.LFB7
 1358 004c 20000000 		.4byte	.LFE7-.LFB7
 1359 0050 00000000 		.4byte	.LFB8
 1360 0054 20000000 		.4byte	.LFE8-.LFB8
 1361 0058 00000000 		.4byte	.LFB9
 1362 005c 20000000 		.4byte	.LFE9-.LFB9
 1363 0060 00000000 		.4byte	.LFB10
 1364 0064 18000000 		.4byte	.LFE10-.LFB10
 1365 0068 00000000 		.4byte	.LFB11
 1366 006c 18000000 		.4byte	.LFE11-.LFB11
 1367 0070 00000000 		.4byte	.LFB12
 1368 0074 18000000 		.4byte	.LFE12-.LFB12
 1369 0078 00000000 		.4byte	0x0
 1370 007c 00000000 		.4byte	0x0
 1371              		.section	.debug_ranges,"",%progbits
 1372              	.Ldebug_ranges0:
 1373 0000 00000000 		.4byte	.Ltext0
 1374 0004 00000000 		.4byte	.Letext0
 1375 0008 00000000 		.4byte	.LFB0
 1376 000c 2A000000 		.4byte	.LFE0
 1377 0010 00000000 		.4byte	.LFB1
 1378 0014 66000000 		.4byte	.LFE1
 1379 0018 00000000 		.4byte	.LFB2
 1380 001c 2A000000 		.4byte	.LFE2
 1381 0020 00000000 		.4byte	.LFB3
 1382 0024 24000000 		.4byte	.LFE3
 1383 0028 00000000 		.4byte	.LFB4
 1384 002c 20000000 		.4byte	.LFE4
 1385 0030 00000000 		.4byte	.LFB5
 1386 0034 22000000 		.4byte	.LFE5
 1387 0038 00000000 		.4byte	.LFB6
 1388 003c 20000000 		.4byte	.LFE6
 1389 0040 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 42


 1390 0044 20000000 		.4byte	.LFE7
 1391 0048 00000000 		.4byte	.LFB8
 1392 004c 20000000 		.4byte	.LFE8
 1393 0050 00000000 		.4byte	.LFB9
 1394 0054 20000000 		.4byte	.LFE9
 1395 0058 00000000 		.4byte	.LFB10
 1396 005c 18000000 		.4byte	.LFE10
 1397 0060 00000000 		.4byte	.LFB11
 1398 0064 18000000 		.4byte	.LFE11
 1399 0068 00000000 		.4byte	.LFB12
 1400 006c 18000000 		.4byte	.LFE12
 1401 0070 00000000 		.4byte	0x0
 1402 0074 00000000 		.4byte	0x0
 1403              		.section	.debug_str,"MS",%progbits,1
 1404              	.LASF6:
 1405 0000 6C6F6E67 		.ascii	"long long int\000"
 1405      206C6F6E 
 1405      6720696E 
 1405      7400
 1406              	.LASF34:
 1407 000e 50574D5F 		.ascii	"PWM_2_ReadControlRegister\000"
 1407      325F5265 
 1407      6164436F 
 1407      6E74726F 
 1407      6C526567 
 1408              	.LASF28:
 1409 0028 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 1409      325F5265 
 1409      6164436F 
 1409      6D706172 
 1409      6500
 1410              	.LASF19:
 1411 003a 70657269 		.ascii	"period\000"
 1411      6F6400
 1412              	.LASF3:
 1413 0041 73686F72 		.ascii	"short unsigned int\000"
 1413      7420756E 
 1413      7369676E 
 1413      65642069 
 1413      6E7400
 1414              	.LASF14:
 1415 0054 50574D5F 		.ascii	"PWM_2_Stop\000"
 1415      325F5374 
 1415      6F7000
 1416              	.LASF27:
 1417 005f 50574D5F 		.ascii	"PWM_2_ReadCapture\000"
 1417      325F5265 
 1417      61644361 
 1417      70747572 
 1417      6500
 1418              	.LASF9:
 1419 0071 666C6F61 		.ascii	"float\000"
 1419      7400
 1420              	.LASF18:
 1421 0077 636F756E 		.ascii	"counter\000"
 1421      74657200 
 1422              	.LASF1:
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 43


 1423 007f 756E7369 		.ascii	"unsigned char\000"
 1423      676E6564 
 1423      20636861 
 1423      7200
 1424              	.LASF5:
 1425 008d 6C6F6E67 		.ascii	"long unsigned int\000"
 1425      20756E73 
 1425      69676E65 
 1425      6420696E 
 1425      7400
 1426              	.LASF33:
 1427 009f 75696E74 		.ascii	"uint8\000"
 1427      3800
 1428              	.LASF25:
 1429 00a5 636F6E74 		.ascii	"control\000"
 1429      726F6C00 
 1430              	.LASF24:
 1431 00ad 50574D5F 		.ascii	"PWM_2_WriteControlRegister\000"
 1431      325F5772 
 1431      69746543 
 1431      6F6E7472 
 1431      6F6C5265 
 1432              	.LASF26:
 1433 00c8 50574D5F 		.ascii	"PWM_2_ReadCounter\000"
 1433      325F5265 
 1433      6164436F 
 1433      756E7465 
 1433      7200
 1434              	.LASF17:
 1435 00da 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 1435      325F5772 
 1435      69746550 
 1435      6572696F 
 1435      6400
 1436              	.LASF10:
 1437 00ec 646F7562 		.ascii	"double\000"
 1437      6C6500
 1438              	.LASF12:
 1439 00f3 50574D5F 		.ascii	"PWM_2_Start\000"
 1439      325F5374 
 1439      61727400 
 1440              	.LASF31:
 1441 00ff 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_2.c\000"
 1441      6E657261 
 1441      7465645F 
 1441      536F7572 
 1441      63655C50 
 1442              	.LASF20:
 1443 0120 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 1443      325F5772 
 1443      69746543 
 1443      6F6D7061 
 1443      726500
 1444              	.LASF8:
 1445 0133 756E7369 		.ascii	"unsigned int\000"
 1445      676E6564 
 1445      20696E74 
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 44


 1445      00
 1446              	.LASF16:
 1447 0140 50574D5F 		.ascii	"PWM_2_WriteCounter\000"
 1447      325F5772 
 1447      69746543 
 1447      6F756E74 
 1447      657200
 1448              	.LASF7:
 1449 0153 6C6F6E67 		.ascii	"long long unsigned int\000"
 1449      206C6F6E 
 1449      6720756E 
 1449      7369676E 
 1449      65642069 
 1450              	.LASF23:
 1451 016a 72657375 		.ascii	"result\000"
 1451      6C7400
 1452              	.LASF32:
 1453 0171 433A5C55 		.ascii	"C:\\Users\\karunmj\\Documents\\GitHub\\m2m\\hardwar"
 1453      73657273 
 1453      5C6B6172 
 1453      756E6D6A 
 1453      5C446F63 
 1454 019e 655C7073 		.ascii	"e\\psoc5\\Campbell_Conductivity.cydsn\000"
 1454      6F63355C 
 1454      43616D70 
 1454      62656C6C 
 1454      5F436F6E 
 1455              	.LASF22:
 1456 01c2 6374726C 		.ascii	"ctrl\000"
 1456      00
 1457              	.LASF30:
 1458 01c7 474E5520 		.ascii	"GNU C 4.4.1\000"
 1458      4320342E 
 1458      342E3100 
 1459              	.LASF11:
 1460 01d3 63686172 		.ascii	"char\000"
 1460      00
 1461              	.LASF2:
 1462 01d8 73686F72 		.ascii	"short int\000"
 1462      7420696E 
 1462      7400
 1463              	.LASF13:
 1464 01e2 50574D5F 		.ascii	"PWM_2_Enable\000"
 1464      325F456E 
 1464      61626C65 
 1464      00
 1465              	.LASF4:
 1466 01ef 6C6F6E67 		.ascii	"long int\000"
 1466      20696E74 
 1466      00
 1467              	.LASF29:
 1468 01f8 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 1468      325F5265 
 1468      61645065 
 1468      72696F64 
 1468      00
 1469              	.LASF15:
ARM GAS  C:\Users\karunmj\AppData\Local\Temp\cc6o0j1y.s 			page 45


 1470 0209 50574D5F 		.ascii	"PWM_2_Init\000"
 1470      325F496E 
 1470      697400
 1471              	.LASF0:
 1472 0214 7369676E 		.ascii	"signed char\000"
 1472      65642063 
 1472      68617200 
 1473              	.LASF21:
 1474 0220 636F6D70 		.ascii	"compare\000"
 1474      61726500 
 1475              	.LASF35:
 1476 0228 50574D5F 		.ascii	"PWM_2_initVar\000"
 1476      325F696E 
 1476      69745661 
 1476      7200
 1477              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
